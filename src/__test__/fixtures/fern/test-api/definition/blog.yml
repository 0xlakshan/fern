imports:
  folder: folder/__package__.yml

types:
  AliasOfNestedType: folder.NestedType
  PostId: string
  BlogPost:
    docs: A blog post
    properties:
      id: PostId
      type: PostType
      title: string
      author: Author
      content: string
    examples:
      - value:
          id: 12301sdsd2
          type: SHORT
          title: "My blog post"
          author:
            type: anonymous
          content: "This is my short post!"
  PostType:
    enum:
      - LONG
      - SHORT
  Author:
    union:
      anonymous: {}
      name: string
      type: PostType
  PostNotFoundErrorBody:
    properties:
      id: PostId
  CreatePostRequest:
    properties:
      title: string
      author:
        type: Author
        docs: Author is the writer.
      content: string
      postType: PostType
errors:
  PostNotFoundError:
    status-code: 400
    type: PostNotFoundErrorBody
service:
  auth: false
  headers:
    x-service-header: string
  base-path: ""
  endpoints:
    createPost:
      docs: Creates a blog post and returns blog post id.
      method: POST
      path: /create
      request:
        name: CreatePostRequestWrapper
        body: CreatePostRequest
        headers:
          x-endpoint-header:
            docs: I'm a header!
            type: string
      response: PostId
      examples:
        - request:
            title: My Blog
            author:
              type: anonymous
            content: I'm a post
            postType: LONG
          headers:
            x-service-header: abc
            x-endpoint-header: abc
          response:
            body: post-id-123
    getPost:
      docs: Gets a blog post.
      method: GET
      auth: false
      path: /{postId}
      path-parameters:
        postId: PostId
      request:
        name: GetPostRequest
        query-parameters:
          some-query-param: integer
      response: BlogPost
      errors:
        - PostNotFoundError
      examples:
        - path-parameters:
            postId: post-id-123
          query-parameters:
            some-query-param: 123
          headers:
            x-service-header: abc
          response:
            error: PostNotFoundError
            body:
              id: post-id-123
    updatePost:
      docs: Updates a blog post.
      method: POST
      auth: false
      path: /{postId}
      path-parameters:
        postId: PostId
      request:
        name: UpdatePostRequest
        body:
          type: CreatePostRequest
      response: PostId
      errors:
        - PostNotFoundError
