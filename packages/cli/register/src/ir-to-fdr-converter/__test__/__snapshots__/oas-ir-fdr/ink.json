{
  "types": {
    "e_t_h___b_l_o_c_k_N_u_m_b_e_r_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "MethodsParamsOneOfZero": {
      "name": "MethodsParamsOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "MethodsParamsOneOfOne": {
      "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "name": "MethodsParamsOneOfOne",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "earliest"
          },
          {
            "value": "finalized"
          },
          {
            "value": "safe"
          },
          {
            "value": "latest"
          },
          {
            "value": "pending"
          }
        ]
      }
    },
    "MethodsParamsOneOfTwo": {
      "name": "MethodsParamsOneOfTwo",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "MethodsParams": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "MethodsParamsAccessListItems": {
      "name": "MethodsParamsAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "e_t_h___c_a_l_l_Request_Transaction": {
      "name": "MethodsParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([0-9a-fA-F]?){1,2}$"
                }
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "from",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]*$"
                }
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in wei",
            "key": "gasPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "key": "maxPriorityFeePerGas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "key": "maxFeePerGas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "key": "maxFeePerBlobGas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "EIP-2930 access list",
            "key": "accessList",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "MethodsParamsAccessListItems"
                }
              }
            }
          },
          {
            "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "key": "blobVersionedHashes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          },
          {
            "description": "Raw blob data.",
            "key": "blobs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]*$"
                  }
                }
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          }
        ]
      }
    },
    "e_t_h___c_a_l_l_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "e_t_h___c_a_l_l_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]*$"
          }
        }
      }
    },
    "e_t_h___c_h_a_i_n_I_d_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "e_t_h___e_s_t_i_m_a_t_e_G_a_s_Request_Transaction": {
      "name": "MethodsParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([0-9a-fA-F]?){1,2}$"
                }
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "from",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]*$"
                }
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in wei",
            "key": "gasPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "key": "maxPriorityFeePerGas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "key": "maxFeePerGas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "key": "maxFeePerBlobGas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "description": "EIP-2930 access list",
            "key": "accessList",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "MethodsParamsAccessListItems"
                }
              }
            }
          },
          {
            "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "key": "blobVersionedHashes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          },
          {
            "description": "Raw blob data.",
            "key": "blobs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]*$"
                  }
                }
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          }
        ]
      }
    },
    "e_t_h___e_s_t_i_m_a_t_e_G_a_s_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___e_s_t_i_m_a_t_e_G_a_s_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "e_t_h___g_a_s_P_r_i_c_e_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_a_l_a_n_c_e_Request_Address": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-fA-F]{40}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_a_l_a_n_c_e_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_a_l_a_n_c_e_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "MethodsResultTransactionsOneOfZero": {
      "name": "MethodsResultTransactionsOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^0x[0-9a-f]{64}$"
            }
          }
        }
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfZeroAccessListItems": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfZeroAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfZero": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfZero",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([0-9a-fA-F]?){1,2}$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-fA-F]{40}$"
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          {
            "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "key": "maxPriorityFeePerGas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "key": "maxFeePerGas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "key": "maxFeePerBlobGas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "EIP-2930 access list",
            "key": "accessList",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "MethodsResultTransactionsOneOfOneItemsOneOfZeroAccessListItems"
              }
            }
          },
          {
            "description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "key": "blobVersionedHashes",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]{64}$"
                }
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "key": "yParity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "r",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "s",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfOneAccessListItems": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfOneAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfOne": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfOne",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x2$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          {
            "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "key": "maxPriorityFeePerGas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "key": "maxFeePerGas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
            "key": "gasPrice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "EIP-2930 access list",
            "key": "accessList",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "MethodsResultTransactionsOneOfOneItemsOneOfOneAccessListItems"
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "key": "yParity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "key": "v",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "r",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "s",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfTwoAccessListItems": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfTwoAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfTwo": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfTwo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x1$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in wei",
            "key": "gasPrice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "EIP-2930 access list",
            "key": "accessList",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "MethodsResultTransactionsOneOfOneItemsOneOfTwoAccessListItems"
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "key": "yParity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "key": "v",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "r",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "s",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItemsOneOfThree": {
      "name": "MethodsResultTransactionsOneOfOneItemsOneOfThree",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x0$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in wei",
            "key": "gasPrice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "v",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "r",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "s",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOneItems": {
      "name": "MethodsResultTransactionsOneOfOneItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsResultTransactionsOneOfOneItemsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsResultTransactionsOneOfOneItemsOneOfZero"
            }
          },
          {
            "typeName": "MethodsResultTransactionsOneOfOneItemsOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsResultTransactionsOneOfOneItemsOneOfOne"
            }
          },
          {
            "typeName": "MethodsResultTransactionsOneOfOneItemsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsResultTransactionsOneOfOneItemsOneOfTwo"
            }
          },
          {
            "typeName": "MethodsResultTransactionsOneOfOneItemsOneOfThree",
            "type": {
              "type": "id",
              "value": "MethodsResultTransactionsOneOfOneItemsOneOfThree"
            }
          }
        ]
      }
    },
    "MethodsResultTransactionsOneOfOne": {
      "name": "MethodsResultTransactionsOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "MethodsResultTransactionsOneOfOneItems"
          }
        }
      }
    },
    "MethodsResultTransactions": {
      "name": "MethodsResultTransactions",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsResultTransactionsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsResultTransactionsOneOfZero"
            }
          },
          {
            "typeName": "MethodsResultTransactionsOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsResultTransactionsOneOfOne"
            }
          }
        ]
      }
    },
    "MethodsResultWithdrawalsItems": {
      "name": "MethodsResultWithdrawalsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "index",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
              }
            }
          },
          {
            "key": "validatorIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-fA-F]{40}$"
              }
            }
          },
          {
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
              }
            }
          }
        ]
      }
    },
    "MethodsResult": {
      "name": "MethodsResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsResultOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfZero"
            }
          },
          {
            "typeName": "MethodsResultOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_H_a_s_h_Request_Block hash": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_H_a_s_h_Request_Hydrated transactions": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_H_a_s_h_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "id",
            "value": "MethodsResult"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_N_u_m_b_e_r_Request_Block number or tag": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_N_u_m_b_e_r_Request_Hydrated transactions": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_N_u_m_b_e_r_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "id",
            "value": "MethodsResult"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_B_y_H_a_s_h_Request_Block hash": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_B_y_H_a_s_h_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
            }
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_B_y_N_u_m_b_e_r_Request_Block number or tag": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_B_y_N_u_m_b_e_r_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
            }
          }
        }
      }
    },
    "e_t_h___g_e_t_C_o_d_e_Request_Address": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-fA-F]{40}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_C_o_d_e_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_C_o_d_e_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]*$"
          }
        }
      }
    },
    "MethodsResultOneOfZero": {
      "name": "MethodsResultOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "MethodsResultOneOfOneItems": {
      "name": "MethodsResultOneOfOneItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "removed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "logIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "transactionIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "transactionHash",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{64}$"
              }
            }
          },
          {
            "key": "blockHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]{64}$"
                }
              }
            }
          },
          {
            "key": "blockNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]*$"
                }
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultOneOfOne": {
      "name": "MethodsResultOneOfOne",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsResultOneOfOneOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfOneOneOfZero"
            }
          },
          {
            "typeName": "MethodsResultOneOfOneOneOfOne",
            "description": "Should always return false if not syncing.",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfOneOneOfOne"
            }
          }
        ]
      }
    },
    "MethodsParamsAddressOneOfZero": {
      "name": "MethodsParamsAddressOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-fA-F]{40}$"
          }
        }
      }
    },
    "MethodsParamsAddressOneOfOne": {
      "name": "MethodsParamsAddressOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^0x[0-9a-fA-F]{40}$"
            }
          }
        }
      }
    },
    "MethodsParamsAddress": {
      "name": "MethodsParamsAddress",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsAddressOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsAddressOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsAddressOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsParamsAddressOneOfOne"
            }
          }
        ]
      }
    },
    "MethodsParamsTopicsItemsOneOfZero": {
      "name": "MethodsParamsTopicsItemsOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "MethodsParamsTopicsItemsOneOfOne": {
      "name": "MethodsParamsTopicsItemsOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^0x[0-9a-f]{64}$"
            }
          }
        }
      }
    },
    "MethodsParamsTopicsItems": {
      "name": "MethodsParamsTopicsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsTopicsItemsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsTopicsItemsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsTopicsItemsOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsParamsTopicsItemsOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_L_o_g_s_Request_Filter": {
      "name": "MethodsParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fromBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "toBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "MethodsParamsAddress"
                }
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "MethodsParamsTopicsItems"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_L_o_g_s_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsResultOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfZero"
            }
          },
          {
            "typeName": "MethodsResultOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfOne"
            }
          }
        ]
      }
    },
    "MethodsResultStorageProofItems": {
      "name": "MethodsResultStorageProofItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{0,64}$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
              }
            }
          },
          {
            "key": "proof",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]*$"
                }
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_P_r_o_o_f_Request_Address": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-fA-F]{40}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_P_r_o_o_f_Request_StorageKeys": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "regex": "^0x[0-9a-f]{0,64}$"
            }
          }
        }
      }
    },
    "e_t_h___g_e_t_P_r_o_o_f_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_P_r_o_o_f_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-fA-F]{40}$"
              }
            }
          },
          {
            "key": "accountProof",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]*$"
                }
              }
            }
          },
          {
            "key": "balance",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
              }
            }
          },
          {
            "key": "codeHash",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{64}$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
              }
            }
          },
          {
            "key": "storageHash",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{64}$"
              }
            }
          },
          {
            "key": "storageProof",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "MethodsResultStorageProofItems"
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_S_t_o_r_a_g_e_A_t_Request_Address": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-fA-F]{40}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_S_t_o_r_a_g_e_A_t_Request_Storage slot": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
          }
        }
      }
    },
    "e_t_h___g_e_t_S_t_o_r_a_g_e_A_t_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_S_t_o_r_a_g_e_A_t_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]*$"
          }
        }
      }
    },
    "MethodsResultOneOfZeroAccessListItems": {
      "name": "MethodsResultOneOfZeroAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultOneOfOneAccessListItems": {
      "name": "MethodsResultOneOfOneAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultOneOfTwoAccessListItems": {
      "name": "MethodsResultOneOfTwoAccessListItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "storageKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultOneOfTwo": {
      "name": "MethodsResultOneOfTwo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x1$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in wei",
            "key": "gasPrice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "EIP-2930 access list",
            "key": "accessList",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "MethodsResultOneOfTwoAccessListItems"
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "key": "yParity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "key": "v",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "r",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "s",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          }
        ]
      }
    },
    "MethodsResultOneOfThree": {
      "name": "MethodsResultOneOfThree",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x0$"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-fA-F]{40}$"
                  }
                }
              }
            }
          },
          {
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in wei",
            "key": "gasPrice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "description": "Chain ID that this transaction is valid on.",
            "key": "chainId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "v",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "r",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          {
            "key": "s",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_H_a_s_h_A_n_d_I_n_d_e_x_Request_Block hash": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_H_a_s_h_A_n_d_I_n_d_e_x_Request_Transaction index": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_H_a_s_h_A_n_d_I_n_d_e_x_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "id",
            "value": "MethodsResult"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_N_u_m_b_e_r_A_n_d_I_n_d_e_x_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_N_u_m_b_e_r_A_n_d_I_n_d_e_x_Request_Transaction index": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_N_u_m_b_e_r_A_n_d_I_n_d_e_x_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "id",
            "value": "MethodsResult"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_H_a_s_h_Request_Transaction hash": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_H_a_s_h_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "id",
            "value": "MethodsResult"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_Request_Address": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-fA-F]{40}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_Request_Block": {
      "name": "MethodsParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsParamsOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfZero"
            }
          },
          {
            "typeName": "MethodsParamsOneOfOne",
            "description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfOne"
            }
          },
          {
            "typeName": "MethodsParamsOneOfTwo",
            "type": {
              "type": "id",
              "value": "MethodsParamsOneOfTwo"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
          }
        }
      }
    },
    "MethodsResultLogsItems": {
      "name": "MethodsResultLogsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "removed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "logIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "transactionIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "transactionHash",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{64}$"
              }
            }
          },
          {
            "key": "blockHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]{64}$"
                }
              }
            }
          },
          {
            "key": "blockNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-fA-F]{40}$"
                }
              }
            }
          },
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[0-9a-f]*$"
                }
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_R_e_c_e_i_p_t_Request_Transaction hash": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_R_e_c_e_i_p_t_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "optional",
          "itemType": {
            "type": "id",
            "value": "MethodsResult"
          }
        }
      }
    },
    "e_t_h___s_e_n_d_R_a_w_T_r_a_n_s_a_c_t_i_o_n_Request_Transaction": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]*$"
          }
        }
      }
    },
    "e_t_h___s_e_n_d_R_a_w_T_r_a_n_s_a_c_t_i_o_n_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    },
    "MethodsResultOneOfOneOneOfZero": {
      "name": "MethodsResultOneOfOneOneOfZero",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "startingBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "currentBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          {
            "key": "highestBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          }
        ]
      }
    },
    "MethodsResultOneOfOneOneOfOne": {
      "description": "Should always return false if not syncing.",
      "name": "MethodsResultOneOfOneOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "e_t_h___s_y_n_c_i_n_g_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MethodsResultOneOfZero",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfZero"
            }
          },
          {
            "typeName": "MethodsResultOneOfOne",
            "type": {
              "type": "id",
              "value": "MethodsResultOneOfOne"
            }
          }
        ]
      }
    },
    "n_e_t___v_e_r_s_i_o_n_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "w_e_b_3___c_l_i_e_n_t_V_e_r_s_i_o_n_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "w_e_b_3___s_h_a_3_Request_Data": {
      "name": "MethodsParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]*$"
          }
        }
      }
    },
    "w_e_b_3___s_h_a_3_Result": {
      "name": "MethodsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[0-9a-f]{64}$"
          }
        }
      }
    }
  },
  "subpackages": {},
  "rootPackage": {
    "endpoints": [
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_blockNumber",
        "originalEndpointId": "eth_blockNumber",
        "name": "eth_blockNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          "description": "The block number of the most recently mined block as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x2377"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x2377"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_blockNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_call",
        "originalEndpointId": "eth_call",
        "name": "eth_call",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The transaction call object containing the details of the message call.",
                  "key": "Transaction",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                },
                {
                  "description": "The block number, tag, or hash at which to execute the call. Defaults to `'latest'` if not provided.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          "description": "The return value of the executed contract function, encoded as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              {
                "to": "0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13",
                "value": "0x1"
              },
              "latest"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                {
                  "to": "0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13",
                  "value": "0x1"
                },
                "latest"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_call"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_chainId",
        "originalEndpointId": "eth_chainId",
        "name": "eth_chainId",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          "description": "The chain ID of the current network in hexadecimal format."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x1"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x1"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_chainId"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_estimateGas",
        "originalEndpointId": "eth_estimateGas",
        "name": "eth_estimateGas",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The transaction object for which to estimate gas usage.",
                  "key": "Transaction",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                },
                {
                  "description": "The block number or tag at which to estimate gas usage. Defaults to `'latest'` if not provided.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          "description": "The estimated amount of gas required for the transaction, as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              {
                "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                "to": "0x44aa93095d6749a706051658b970b941c72c1d53",
                "value": "0x1"
              }
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                {
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "to": "0x44aa93095d6749a706051658b970b941c72c1d53",
                  "value": "0x1"
                }
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x5208"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x5208"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_estimateGas"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_gasPrice",
        "originalEndpointId": "eth_gasPrice",
        "name": "eth_gasPrice",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          "description": "The current gas price in wei, as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x3e8"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x3e8"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_gasPrice"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getBalance",
        "originalEndpointId": "eth_getBalance",
        "name": "eth_getBalance",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the account to query the balance for.",
                  "key": "Address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-fA-F]{40}$"
                    }
                  }
                },
                {
                  "description": "The block number, tag, or hash at which to retrieve the balance. Can be a block number, 'latest', 'earliest', 'pending', or a block hash.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          "description": "The balance of the account in wei, encoded as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
              "latest"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                "latest"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x1cfe56f3795885980000"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x1cfe56f3795885980000"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBalance"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getBlockByHash",
        "originalEndpointId": "eth_getBlockByHash",
        "name": "eth_getBlockByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The hash of the block to retrieve.",
                  "key": "Block hash",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]{64}$"
                    }
                  }
                },
                {
                  "description": "If true, returns full transaction objects; if false, returns only transaction hashes.",
                  "key": "Hydrated transactions",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MethodsResult"
              }
            }
          },
          "description": "The block object containing various properties of the block."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
              false
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                false
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "number": "0x68b3",
                  "hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                  "mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
                  "parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
                  "nonce": "0x378da40ff335b070",
                  "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                  "logsBloom": "0x
                  "transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
                  "stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
                  "receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
                  "miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
                  "difficulty": "0x66e619a",
                  "totalDifficulty": "0x1e875d746ae",
                  "extraData": "0xd583010502846765746885676f312e37856c696e7578",
                  "size": "0x334",
                  "gasLimit": "0x47e7c4",
                  "gasUsed": "0x37993",
                  "timestamp": "0x5835c54d",
                  "uncles": [],
                  "transactions": [
                    "0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
                    "0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
                  ],
                  "baseFeePerGas": "0x7",
                  "withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
                  "withdrawals": [
                    {
                      "index": "0x0",
                      "validatorIndex": "0x9d8c0",
                      "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
                      "amount": "0x11a33e3760"
                    }
                  ],
                  "blobGasUsed": "0x0",
                  "excessBlobGas": "0x0",
                  "parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "number": "0x68b3",
                  "hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                  "mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
                  "parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
                  "nonce": "0x378da40ff335b070",
                  "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                  "logsBloom": "0x
                  "transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
                  "stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
                  "receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
                  "miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
                  "difficulty": "0x66e619a",
                  "totalDifficulty": "0x1e875d746ae",
                  "extraData": "0xd583010502846765746885676f312e37856c696e7578",
                  "size": "0x334",
                  "gasLimit": "0x47e7c4",
                  "gasUsed": "0x37993",
                  "timestamp": "0x5835c54d",
                  "uncles": [],
                  "transactions": [
                    "0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
                    "0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
                  ],
                  "baseFeePerGas": "0x7",
                  "withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
                  "withdrawals": [
                    {
                      "index": "0x0",
                      "validatorIndex": "0x9d8c0",
                      "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
                      "amount": "0x11a33e3760"
                    }
                  ],
                  "blobGasUsed": "0x0",
                  "excessBlobGas": "0x0",
                  "parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getBlockByNumber",
        "originalEndpointId": "eth_getBlockByNumber",
        "name": "eth_getBlockByNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
                  "key": "Block number or tag",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                },
                {
                  "description": "If true, returns full transaction objects; if false, returns only transaction hashes.",
                  "key": "Hydrated transactions",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MethodsResult"
              }
            }
          },
          "description": "The block object containing various properties of the block."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x68b3",
              false
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x68b3",
                false
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "number": "0x68b3",
                  "hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                  "mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
                  "parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
                  "nonce": "0x378da40ff335b070",
                  "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                  "logsBloom": "0x
                  "transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
                  "stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
                  "receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
                  "miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
                  "difficulty": "0x66e619a",
                  "totalDifficulty": "0x1e875d746ae",
                  "extraData": "0xd583010502846765746885676f312e37856c696e7578",
                  "size": "0x334",
                  "gasLimit": "0x47e7c4",
                  "gasUsed": "0x37993",
                  "timestamp": "0x5835c54d",
                  "uncles": [],
                  "transactions": [
                    "0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
                    "0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
                  ],
                  "baseFeePerGas": "0x7",
                  "withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
                  "withdrawals": [
                    {
                      "index": "0x0",
                      "validatorIndex": "0x9d8c0",
                      "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
                      "amount": "0x11a33e3760"
                    }
                  ],
                  "blobGasUsed": "0x0",
                  "excessBlobGas": "0x0",
                  "parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "number": "0x68b3",
                  "hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                  "mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
                  "parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
                  "nonce": "0x378da40ff335b070",
                  "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                  "logsBloom": "0x
                  "transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
                  "stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
                  "receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
                  "miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
                  "difficulty": "0x66e619a",
                  "totalDifficulty": "0x1e875d746ae",
                  "extraData": "0xd583010502846765746885676f312e37856c696e7578",
                  "size": "0x334",
                  "gasLimit": "0x47e7c4",
                  "gasUsed": "0x37993",
                  "timestamp": "0x5835c54d",
                  "uncles": [],
                  "transactions": [
                    "0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
                    "0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
                  ],
                  "baseFeePerGas": "0x7",
                  "withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
                  "withdrawals": [
                    {
                      "index": "0x0",
                      "validatorIndex": "0x9d8c0",
                      "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
                      "amount": "0x11a33e3760"
                    }
                  ],
                  "blobGasUsed": "0x0",
                  "excessBlobGas": "0x0",
                  "parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockByNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getBlockTransactionCountByHash",
        "originalEndpointId": "eth_getBlockTransactionCountByHash",
        "name": "eth_getBlockTransactionCountByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The hash of the block.",
                  "key": "Block hash",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]{64}$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          "description": "The number of transactions in the block as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x8"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x8"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockTransactionCountByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getBlockTransactionCountByNumber",
        "originalEndpointId": "eth_getBlockTransactionCountByNumber",
        "name": "eth_getBlockTransactionCountByNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
                  "key": "Block number or tag",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                }
              }
            }
          },
          "description": "The number of transactions in the block as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xe8"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xe8"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x8"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x8"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockTransactionCountByNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getCode",
        "originalEndpointId": "eth_getCode",
        "name": "eth_getCode",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the contract to get code from.",
                  "key": "Address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-fA-F]{40}$"
                    }
                  }
                },
                {
                  "description": "The block number, tag, or hash at which to retrieve the code.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          "description": "The code from the specified address, as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xa50a51c09a5c451c52bb714527e1974b686d8e77",
              "latest"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xa50a51c09a5c451c52bb714527e1974b686d8e77",
                "latest"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getCode"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getLogs",
        "originalEndpointId": "eth_getLogs",
        "name": "eth_getLogs",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The filter options object to specify the criteria for logs retrieval.",
                  "key": "Filter",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "MethodsResult"
            }
          },
          "description": "An array of log objects matching the filter criteria."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              {
                "fromBlock": "0x137d3c2",
                "toBlock": "0x137d3c3",
                "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                "topics": []
              }
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                {
                  "fromBlock": "0x137d3c2",
                  "toBlock": "0x137d3c3",
                  "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                  "topics": []
                }
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": [
                  {
                    "logIndex": "0x0",
                    "removed": false,
                    "blockNumber": "0x233",
                    "blockHash": "0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",
                    "transactionHash": "0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",
                    "transactionIndex": "0x0",
                    "address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000004",
                    "topics": [
                      "0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
                    ]
                  },
                  {
                    "logIndex": "0x0",
                    "removed": false,
                    "blockNumber": "0x238",
                    "blockHash": "0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",
                    "transactionHash": "0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",
                    "transactionIndex": "0x0",
                    "address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000007",
                    "topics": [
                      "0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
                    ]
                  }
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": [
                  {
                    "logIndex": "0x0",
                    "removed": false,
                    "blockNumber": "0x233",
                    "blockHash": "0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",
                    "transactionHash": "0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",
                    "transactionIndex": "0x0",
                    "address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000004",
                    "topics": [
                      "0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
                    ]
                  },
                  {
                    "logIndex": "0x0",
                    "removed": false,
                    "blockNumber": "0x238",
                    "blockHash": "0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",
                    "transactionHash": "0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",
                    "transactionIndex": "0x0",
                    "address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000007",
                    "topics": [
                      "0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
                    ]
                  }
                ]
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getLogs"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getProof",
        "originalEndpointId": "eth_getProof",
        "name": "eth_getProof",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the account to generate the proof for.",
                  "key": "Address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-fA-F]{40}$"
                    }
                  }
                },
                {
                  "description": "An array of storage keys (slots) to generate proofs for.",
                  "key": "StorageKeys",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "regex": "^0x[0-9a-f]{0,64}$"
                      }
                    }
                  }
                },
                {
                  "description": "The block number, tag, or hash at which to generate the proof.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "MethodsResult"
            }
          },
          "description": "An object containing the account proof and storage proofs."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8",
              [
                "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                "0x283s34c8e2b1456f09832c71e5d6a0b4f8c9e1d3a2b5c7f0e6d4a8b2c1f3e5d7"
              ],
              "latest"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8",
                [
                  "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                  "0x283s34c8e2b1456f09832c71e5d6a0b4f8c9e1d3a2b5c7f0e6d4a8b2c1f3e5d7"
                ],
                "latest"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "accountProof": [
                    "0xf90211a06a718c2c9da77c253b12d7b2569657901e37bb691718f5dda1b86157ab1dd5eda0e7f19ed5e21bccc8d3260236b24f80ad88b3634f5d005f37b838881f0e12f1bda0abb301291704e4d92686c0f5f8ebb1734185321559b8d717ffdca95c99591976a0d0c2026bfab65c3b95276bfa82af9dec860b485f8857f293c148d63a2182128fa0c98044ec9a1273a218bed58b478277dd39173ad7b8edb95c200423a6bc8fc25fa056e5a55d9ddccdbf49362857200bbb1f042d61187c9f5f9ddcff5d2f1fc984a2a02a5b7200af424114f99a4b5f0a21c19aac82209e431ed80bfde177adb1004bdfa0026e4374f0518ff44a80fa374838ecb86cc64ac93bb710fea6dff4198f947b27a03fea341d87984673ad523177ed52f278bf4d8f97e6531c8ece932aeede4802f4a0bfe2f4a7fcb78f7e9f080dea7b6977fb1d88c441696e4456dad92b9d34ff0f43a02a3eb5c0edb14626c9c629601027bd60178bb2b688a67cea4d179fc432436615a0747355b8e02f3b884b4ffe5cea1619e32515fea064cca98208591af8c744e894a0874253737bae37f020ad3bb7e3292c7c4a63cdc158af6b33aaa4deaef016dccba03d8192bc1fc6aa1548912e763a0b5013a94399cefad7b47cf388873b2b794068a09b67f9737c6028d796bfd1c5da57a6f45824dc891f848ea0e1f8019d1fb5fba8a0aa871f9de8da85960fcd8a22cdf21c27f11e3966c14a6737ffd414b98dda00b280"
                  ],
                  "balance": "0x0",
                  "codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "nonce": "0x0",
                  "storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                  "storageProof": [
                    {
                      "key": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                      "proof": [
                        "0xf90211a0c87222cccea2bf32759fcee9dbaacbe3ea4165dd6184af6773651c5e00e34a8ba0be90e6e5d1a67ab5587779c60ac136d6a96db62b84c04998a5f03a367346abd6a05344aa1c9ca2e3e56bf98fd718ec43728578d148e1967fbaf8bf17a2a073a0bda011a2f9312c3308640a0d6ceeae218747290f23806067456da1d444c65abae437a0b3097a108bfce79af6699da4ae3003cd4929f0b4576aad655c31cb725bde84c7a0c133d3c637e174f36a73c22b1039eb003da6374bc0929321241badb3efa3c4a9a0f13059f2301ad9862ce02e3f7f3f2c9ab78eb30583764d73654f7f1f8b1e86fda06544e3915748b18204e09df75ff20d2fa6bd8121e2e669699012d54590383d6fa070e3a8e093691581d58fadb560b510262a758037632cd8670d3a36df828976b7a062a88a2900544dc76a32255a6b2b2a2eef8fa68279700c00adc7508286702552a0a474aeebd5603dfce46a6ecd1ecd519068dc034a544fde03ac42d4018e60a334a0b7d528fc41c8fdc8ea18c6e7d0099270c777ec1403cf879d1f5134bdc12a6c6ca04440f1242e42c5bfa7c536591ab89c8e84bea417435871c32eef1e25295b20daa06a5dcfe3cc84cff9d3e3c3ae868cfba8f0dd111a90c3f85869dab5b893f96643a026b2fb9dd7d08b0ed2f1c44fbf875011412a384f86f751c92e1013248d4aa371a0c75597b2b789fc4e939b71937390ce9d7d53159431328ac52180eef08ef200f280"
                      ],
                      "value": "0x1"
                    }
                  ]
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "accountProof": [
                    "0xf90211a06a718c2c9da77c253b12d7b2569657901e37bb691718f5dda1b86157ab1dd5eda0e7f19ed5e21bccc8d3260236b24f80ad88b3634f5d005f37b838881f0e12f1bda0abb301291704e4d92686c0f5f8ebb1734185321559b8d717ffdca95c99591976a0d0c2026bfab65c3b95276bfa82af9dec860b485f8857f293c148d63a2182128fa0c98044ec9a1273a218bed58b478277dd39173ad7b8edb95c200423a6bc8fc25fa056e5a55d9ddccdbf49362857200bbb1f042d61187c9f5f9ddcff5d2f1fc984a2a02a5b7200af424114f99a4b5f0a21c19aac82209e431ed80bfde177adb1004bdfa0026e4374f0518ff44a80fa374838ecb86cc64ac93bb710fea6dff4198f947b27a03fea341d87984673ad523177ed52f278bf4d8f97e6531c8ece932aeede4802f4a0bfe2f4a7fcb78f7e9f080dea7b6977fb1d88c441696e4456dad92b9d34ff0f43a02a3eb5c0edb14626c9c629601027bd60178bb2b688a67cea4d179fc432436615a0747355b8e02f3b884b4ffe5cea1619e32515fea064cca98208591af8c744e894a0874253737bae37f020ad3bb7e3292c7c4a63cdc158af6b33aaa4deaef016dccba03d8192bc1fc6aa1548912e763a0b5013a94399cefad7b47cf388873b2b794068a09b67f9737c6028d796bfd1c5da57a6f45824dc891f848ea0e1f8019d1fb5fba8a0aa871f9de8da85960fcd8a22cdf21c27f11e3966c14a6737ffd414b98dda00b280"
                  ],
                  "balance": "0x0",
                  "codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "nonce": "0x0",
                  "storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                  "storageProof": [
                    {
                      "key": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                      "proof": [
                        "0xf90211a0c87222cccea2bf32759fcee9dbaacbe3ea4165dd6184af6773651c5e00e34a8ba0be90e6e5d1a67ab5587779c60ac136d6a96db62b84c04998a5f03a367346abd6a05344aa1c9ca2e3e56bf98fd718ec43728578d148e1967fbaf8bf17a2a073a0bda011a2f9312c3308640a0d6ceeae218747290f23806067456da1d444c65abae437a0b3097a108bfce79af6699da4ae3003cd4929f0b4576aad655c31cb725bde84c7a0c133d3c637e174f36a73c22b1039eb003da6374bc0929321241badb3efa3c4a9a0f13059f2301ad9862ce02e3f7f3f2c9ab78eb30583764d73654f7f1f8b1e86fda06544e3915748b18204e09df75ff20d2fa6bd8121e2e669699012d54590383d6fa070e3a8e093691581d58fadb560b510262a758037632cd8670d3a36df828976b7a062a88a2900544dc76a32255a6b2b2a2eef8fa68279700c00adc7508286702552a0a474aeebd5603dfce46a6ecd1ecd519068dc034a544fde03ac42d4018e60a334a0b7d528fc41c8fdc8ea18c6e7d0099270c777ec1403cf879d1f5134bdc12a6c6ca04440f1242e42c5bfa7c536591ab89c8e84bea417435871c32eef1e25295b20daa06a5dcfe3cc84cff9d3e3c3ae868cfba8f0dd111a90c3f85869dab5b893f96643a026b2fb9dd7d08b0ed2f1c44fbf875011412a384f86f751c92e1013248d4aa371a0c75597b2b789fc4e939b71937390ce9d7d53159431328ac52180eef08ef200f280"
                      ],
                      "value": "0x1"
                    }
                  ]
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getProof"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getStorageAt",
        "originalEndpointId": "eth_getStorageAt",
        "name": "eth_getStorageAt",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the contract to read storage from.",
                  "key": "Address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-fA-F]{40}$"
                    }
                  }
                },
                {
                  "description": "The index position of the storage slot to retrieve, as a hexadecimal string.",
                  "key": "Storage slot",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                    }
                  }
                },
                {
                  "description": "The block number, tag, or hash at which to retrieve the storage value.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]*$"
              }
            }
          },
          "description": "The value stored at the given storage slot, encoded as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
              "0x0",
              "latest"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                "0x0",
                "latest"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x0000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x0000000000000000000000000000000000000000000000000000000000000000"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getStorageAt"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getTransactionByBlockHashAndIndex",
        "originalEndpointId": "eth_getTransactionByBlockHashAndIndex",
        "name": "eth_getTransactionByBlockHashAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The hash of the block containing the transaction.",
                  "key": "Block hash",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]{64}$"
                    }
                  }
                },
                {
                  "description": "The index position of the transaction in the block's transaction list, as a hexadecimal string.",
                  "key": "Transaction index",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MethodsResult"
              }
            }
          },
          "description": "The transaction object containing various properties of the transaction."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7",
              "0x2"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7",
                "0x2"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                  "blockNumber": "0x422",
                  "chainId": "0x7e2",
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "gas": "0x5208",
                  "gasPrice": "0x3b9aca00",
                  "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                  "input": "0x",
                  "nonce": "0x1",
                  "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "transactionIndex": "0x2",
                  "value": "0x4e1003b28d9280000",
                  "v": "0x1c",
                  "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                  "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                  "blockNumber": "0x422",
                  "chainId": "0x7e2",
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "gas": "0x5208",
                  "gasPrice": "0x3b9aca00",
                  "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                  "input": "0x",
                  "nonce": "0x1",
                  "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "transactionIndex": "0x2",
                  "value": "0x4e1003b28d9280000",
                  "v": "0x1c",
                  "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                  "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionByBlockHashAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getTransactionByBlockNumberAndIndex",
        "originalEndpointId": "eth_getTransactionByBlockNumberAndIndex",
        "name": "eth_getTransactionByBlockNumberAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The block number or tag ('latest', 'earliest', 'pending') containing the transaction.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                },
                {
                  "description": "The index position of the transaction in the block's transaction list, as a hexadecimal string.",
                  "key": "Transaction index",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MethodsResult"
              }
            }
          },
          "description": "The transaction object containing various properties of the transaction."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x1442e",
              "0x2"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x1442e",
                "0x2"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                  "blockNumber": "0x1442e",
                  "chainId": "0x7e2",
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "gas": "0x5208",
                  "gasPrice": "0x3b9aca00",
                  "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                  "input": "0x",
                  "nonce": "0x1",
                  "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "transactionIndex": "0x2",
                  "value": "0x4e1003b28d9280000",
                  "v": "0x1c",
                  "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                  "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                  "blockNumber": "0x1442e",
                  "chainId": "0x7e2",
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "gas": "0x5208",
                  "gasPrice": "0x3b9aca00",
                  "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                  "input": "0x",
                  "nonce": "0x1",
                  "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "transactionIndex": "0x2",
                  "value": "0x4e1003b28d9280000",
                  "v": "0x1c",
                  "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                  "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionByBlockNumberAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getTransactionByHash",
        "originalEndpointId": "eth_getTransactionByHash",
        "name": "eth_getTransactionByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The hash of the transaction to retrieve.",
                  "key": "Transaction hash",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]{64}$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MethodsResult"
              }
            }
          },
          "description": "The transaction object containing various properties of the transaction."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                  "blockNumber": "0x422",
                  "chainId": "0x7e2",
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "gas": "0x5208",
                  "gasPrice": "0x3b9aca00",
                  "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                  "input": "0x",
                  "nonce": "0x1",
                  "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "transactionIndex": "0x0",
                  "value": "0x4e1003b28d9280000",
                  "v": "0x1c",
                  "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                  "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                  "blockNumber": "0x422",
                  "chainId": "0x7e2",
                  "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                  "gas": "0x5208",
                  "gasPrice": "0x3b9aca00",
                  "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                  "input": "0x",
                  "nonce": "0x1",
                  "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "transactionIndex": "0x0",
                  "value": "0x4e1003b28d9280000",
                  "v": "0x1c",
                  "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                  "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getTransactionCount",
        "originalEndpointId": "eth_getTransactionCount",
        "name": "eth_getTransactionCount",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the account to get the transaction count for.",
                  "key": "Address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-fA-F]{40}$"
                    }
                  }
                },
                {
                  "description": "The block number, tag, or hash at which to retrieve the transaction count.",
                  "key": "Block",
                  "valueType": {
                    "type": "id",
                    "value": "MethodsParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              }
            }
          },
          "description": "The number of transactions sent from the address, as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xc94770007dda54cF92009BFF0dE90c06F603a09f",
              "latest"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xc94770007dda54cF92009BFF0dE90c06F603a09f",
                "latest"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x1"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x1"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionCount"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_getTransactionReceipt",
        "originalEndpointId": "eth_getTransactionReceipt",
        "name": "eth_getTransactionReceipt",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The hash of the transaction for which to get the receipt.",
                  "key": "Transaction hash",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]{64}$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MethodsResult"
              }
            }
          },
          "description": "The transaction receipt object containing various properties of the transaction receipt."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a",
                  "blockNumber": "0x50",
                  "contractAddress": null,
                  "cumulativeGasUsed": "0x5208",
                  "from": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "gasUsed": "0x5208",
                  "effectiveGasPrice": "0x1",
                  "logs": [],
                  "logsBloom": "0x
                  "status": "0x1",
                  "to": "0xf17f52151ebef6c7334fad080c5704d77216b732",
                  "transactionHash": "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f",
                  "transactionIndex": "0x0",
                  "type": "0x0"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "blockHash": "0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a",
                  "blockNumber": "0x50",
                  "contractAddress": null,
                  "cumulativeGasUsed": "0x5208",
                  "from": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                  "gasUsed": "0x5208",
                  "effectiveGasPrice": "0x1",
                  "logs": [],
                  "logsBloom": "0x
                  "status": "0x1",
                  "to": "0xf17f52151ebef6c7334fad080c5704d77216b732",
                  "transactionHash": "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f",
                  "transactionIndex": "0x0",
                  "type": "0x0"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionReceipt"
        }
      },
      {
        "auth": false,
        "description": "Submits a raw transaction (serialized and signed) for broadcasting to the network. The transaction data should be encoded as a hexadecimal string starting with `0x`. You can create and sign a transaction externally using libraries like [web3.js](https://web3js.readthedocs.io/) or [ethers.js](https://docs.ethers.org/). \n\n**Note:** For [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) transactions, the raw form must be in the network format, which includes blobs, KZG commitments, and KZG proofs.\n",
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_sendRawTransaction",
        "originalEndpointId": "eth_sendRawTransaction",
        "name": "eth_sendRawTransaction",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The raw transaction data to submit, encoded as a hexadecimal string.",
                  "key": "Transaction",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]*$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{64}$"
              }
            }
          },
          "description": "The hash of the submitted transaction, as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_sendRawTransaction"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "eth_syncing",
        "originalEndpointId": "eth_syncing",
        "name": "eth_syncing",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "MethodsResult"
            }
          },
          "description": "An object with synchronization status data when syncing, or `false` when not syncing."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "startingBlock": "0x0",
                  "currentBlock": "0x1518",
                  "highestBlock": "0x9567a3"
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": {
                  "startingBlock": "0x0",
                  "currentBlock": "0x1518",
                  "highestBlock": "0x9567a3"
                }
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_syncing"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "net_version",
        "originalEndpointId": "net_version",
        "name": "net_version",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The network ID as a string. Common IDs are `\"1\"` for mainnet, `\"3\"` for Ropsten, etc."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "1"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "1"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "net_version"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "web3_clientVersion",
        "originalEndpointId": "web3_clientVersion",
        "name": "web3_clientVersion",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "A string identifying the client software name, version, and platform."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "Geth/v1.10.8-stable-26675454/linux-amd64/go1.16.6"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "Geth/v1.10.8-stable-26675454/linux-amd64/go1.16.6"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "web3_clientVersion"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "defaultEnvironment": "https://ink-mainnet.g.alchemy.com/v2/",
        "environments": [
          {
            "id": "https://ink-mainnet.g.alchemy.com/v2/",
            "baseUrl": "https://ink-mainnet.g.alchemy.com/v2/"
          },
          {
            "id": "https://ink-sepolia.g.alchemy.com/v2/",
            "baseUrl": "https://ink-sepolia.g.alchemy.com/v2/"
          }
        ],
        "id": "web3_sha3",
        "originalEndpointId": "web3_sha3",
        "name": "web3_sha3",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The data to hash, encoded as a hexadecimal string.",
                  "key": "Data",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[0-9a-f]*$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[0-9a-f]{64}$"
              }
            }
          },
          "description": "The Keccak-256 hash of the input data, as a hexadecimal string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x68656c6c6f20776f726c64"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x68656c6c6f20776f726c64"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x47173285a8d734ad4162d1b2ca3c6f0d0fabc60b8d702d31fd8e5c98569c36f9"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x47173285a8d734ad4162d1b2ca3c6f0d0fabc60b8d702d31fd8e5c98569c36f9"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "web3_sha3"
        }
      }
    ],
    "webhooks": [],
    "websockets": [],
    "types": [],
    "subpackages": []
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}