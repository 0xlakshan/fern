// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runGenerator fern-ir 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "name: ci

on: [push]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: yarn && yarn build
  
  publish:
    needs: [ compile ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken \${NPM_TOKEN}
          npm publish --access public
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}",
            "name": "ci.yml",
            "type": "file",
          },
        ],
        "name": "workflows",
        "type": "directory",
      },
    ],
    "name": ".github",
    "type": "directory",
  },
  Object {
    "contents": "node_modules
.DS_Store
/dist
/index.d.ts
/index.js
/api
/core
/errors
/serialization",
    "name": ".gitignore",
    "type": "file",
  },
  Object {
    "contents": "node_modules
src
.gitignore
.github
.fernignore
.prettierrc.yml
tsconfig.json
yarn.lock",
    "name": ".npmignore",
    "type": "file",
  },
  Object {
    "contents": "tabWidth: 4
printWidth: 120
",
    "name": ".prettierrc.yml",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ApiAuth extends FernApi.WithDocs {
    requirement: FernApi.AuthSchemesRequirement;
    schemes: FernApi.AuthScheme[];
}
",
                        "name": "ApiAuth.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ApiAuth.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type AuthScheme = FernApi.AuthScheme.Bearer | FernApi.AuthScheme.Basic | FernApi.AuthScheme.Header;
export declare namespace AuthScheme {
    interface Bearer extends FernApi.BearerAuthScheme, _Utils {
        type: \\"bearer\\";
    }
    interface Basic extends FernApi.BasicAuthScheme, _Utils {
        type: \\"basic\\";
    }
    interface Header extends FernApi.HeaderAuthScheme, _Utils {
        type: \\"header\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.AuthScheme._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        bearer: (value: FernApi.BearerAuthScheme) => _Result;
        basic: (value: FernApi.BasicAuthScheme) => _Result;
        header: (value: FernApi.HeaderAuthScheme) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const AuthScheme: {
    readonly bearer: (value: FernApi.BearerAuthScheme) => FernApi.AuthScheme.Bearer;
    readonly basic: (value: FernApi.BasicAuthScheme) => FernApi.AuthScheme.Basic;
    readonly header: (value: FernApi.HeaderAuthScheme) => FernApi.AuthScheme.Header;
    readonly _visit: <_Result>(value: FernApi.AuthScheme, visitor: FernApi.AuthScheme._Visitor<_Result>) => _Result;
};
",
                        "name": "AuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AuthScheme = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.AuthScheme = {
    bearer: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"bearer\\", _visit: function (visitor) {
                return FernApi.AuthScheme._visit(this, visitor);
            } });
    },
    basic: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"basic\\", _visit: function (visitor) {
                return FernApi.AuthScheme._visit(this, visitor);
            } });
    },
    header: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"header\\", _visit: function (visitor) {
                return FernApi.AuthScheme._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"bearer\\":
                return visitor.bearer(value);
            case \\"basic\\":
                return visitor.basic(value);
            case \\"header\\":
                return visitor.header(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "AuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type AuthSchemesRequirement = \\"ALL\\" | \\"ANY\\";
export declare const AuthSchemesRequirement: {
    readonly All: \\"ALL\\";
    readonly Any: \\"ANY\\";
};
",
                        "name": "AuthSchemesRequirement.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AuthSchemesRequirement = void 0;
exports.AuthSchemesRequirement = {
    All: \\"ALL\\",
    Any: \\"ANY\\",
};
",
                        "name": "AuthSchemesRequirement.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface BasicAuthScheme extends FernApi.WithDocs {
    username: FernApi.Name;
    password: FernApi.Name;
}
",
                        "name": "BasicAuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BasicAuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface BearerAuthScheme extends FernApi.WithDocs {
    token: FernApi.Name;
}
",
                        "name": "BearerAuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BearerAuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface HeaderAuthScheme extends FernApi.WithDocs {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
    prefix: string | undefined;
}
",
                        "name": "HeaderAuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HeaderAuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ApiAuth\\";
export * from \\"./AuthSchemesRequirement\\";
export * from \\"./AuthScheme\\";
export * from \\"./BearerAuthScheme\\";
export * from \\"./BasicAuthScheme\\";
export * from \\"./HeaderAuthScheme\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ApiAuth\\"), exports);
__exportStar(require(\\"./AuthSchemesRequirement\\"), exports);
__exportStar(require(\\"./AuthScheme\\"), exports);
__exportStar(require(\\"./BearerAuthScheme\\"), exports);
__exportStar(require(\\"./BasicAuthScheme\\"), exports);
__exportStar(require(\\"./HeaderAuthScheme\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "auth",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Availability {
    status: FernApi.AvailabilityStatus;
    message: string | undefined;
}
",
                        "name": "Availability.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Availability.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type AvailabilityStatus = \\"IN_DEVELOPMENT\\" | \\"PRE_RELEASE\\" | \\"GENERAL_AVAILABILITY\\" | \\"DEPRECATED\\";
export declare const AvailabilityStatus: {
    readonly InDevelopment: \\"IN_DEVELOPMENT\\";
    readonly PreRelease: \\"PRE_RELEASE\\";
    readonly GeneralAvailability: \\"GENERAL_AVAILABILITY\\";
    readonly Deprecated: \\"DEPRECATED\\";
};
",
                        "name": "AvailabilityStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AvailabilityStatus = void 0;
exports.AvailabilityStatus = {
    InDevelopment: \\"IN_DEVELOPMENT\\",
    PreRelease: \\"PRE_RELEASE\\",
    GeneralAvailability: \\"GENERAL_AVAILABILITY\\",
    Deprecated: \\"DEPRECATED\\",
};
",
                        "name": "AvailabilityStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Declaration extends FernApi.WithDocs {
    availability: FernApi.Availability;
}
",
                        "name": "Declaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Declaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ErrorId = string;
",
                        "name": "ErrorId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ErrorId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface FernFilepath {
    allParts: FernApi.Name[];
    packagePath: FernApi.Name[];
    file: FernApi.Name | undefined;
}
",
                        "name": "FernFilepath.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FernFilepath.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Name {
    originalName: string;
    camelCase: FernApi.SafeAndUnsafeString;
    pascalCase: FernApi.SafeAndUnsafeString;
    snakeCase: FernApi.SafeAndUnsafeString;
    screamingSnakeCase: FernApi.SafeAndUnsafeString;
}
",
                        "name": "Name.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Name.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface NameAndWireValue {
    wireValue: string;
    name: FernApi.Name;
}
",
                        "name": "NameAndWireValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "NameAndWireValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface SafeAndUnsafeString {
    /** this name might overlap with reserved keywords of the language being generated */
    unsafeName: string;
    /** this name will NOT overlap with reserved keywords of the language being generated */
    safeName: string;
}
",
                        "name": "SafeAndUnsafeString.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SafeAndUnsafeString.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ServiceId = string;
",
                        "name": "ServiceId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ServiceId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type SubpackageId = string;
",
                        "name": "SubpackageId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubpackageId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type TypeId = string;
",
                        "name": "TypeId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TypeId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface WithDocs {
    docs: string | undefined;
}
",
                        "name": "WithDocs.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WithDocs.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface WithJsonExample {
    jsonExample: unknown;
}
",
                        "name": "WithJsonExample.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WithJsonExample.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./WithDocs\\";
export * from \\"./FernFilepath\\";
export * from \\"./Name\\";
export * from \\"./NameAndWireValue\\";
export * from \\"./SafeAndUnsafeString\\";
export * from \\"./WithJsonExample\\";
export * from \\"./SubpackageId\\";
export * from \\"./ServiceId\\";
export * from \\"./TypeId\\";
export * from \\"./ErrorId\\";
export * from \\"./Declaration\\";
export * from \\"./Availability\\";
export * from \\"./AvailabilityStatus\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./WithDocs\\"), exports);
__exportStar(require(\\"./FernFilepath\\"), exports);
__exportStar(require(\\"./Name\\"), exports);
__exportStar(require(\\"./NameAndWireValue\\"), exports);
__exportStar(require(\\"./SafeAndUnsafeString\\"), exports);
__exportStar(require(\\"./WithJsonExample\\"), exports);
__exportStar(require(\\"./SubpackageId\\"), exports);
__exportStar(require(\\"./ServiceId\\"), exports);
__exportStar(require(\\"./TypeId\\"), exports);
__exportStar(require(\\"./ErrorId\\"), exports);
__exportStar(require(\\"./Declaration\\"), exports);
__exportStar(require(\\"./Availability\\"), exports);
__exportStar(require(\\"./AvailabilityStatus\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Constants {
    errorInstanceIdKey: FernApi.NameAndWireValue;
}
",
                        "name": "Constants.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Constants.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./Constants\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./Constants\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "constants",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type EnvironmentBaseUrlId = string;
",
                        "name": "EnvironmentBaseUrlId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnvironmentBaseUrlId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface EnvironmentBaseUrlWithId {
    id: FernApi.EnvironmentBaseUrlId;
    name: FernApi.Name;
}
",
                        "name": "EnvironmentBaseUrlWithId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnvironmentBaseUrlWithId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type EnvironmentId = string;
",
                        "name": "EnvironmentId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnvironmentId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type EnvironmentUrl = string;
",
                        "name": "EnvironmentUrl.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnvironmentUrl.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type Environments = FernApi.Environments.SingleBaseUrl | FernApi.Environments.MultipleBaseUrls;
export declare namespace Environments {
    interface SingleBaseUrl extends FernApi.SingleBaseUrlEnvironments, _Utils {
        type: \\"singleBaseUrl\\";
    }
    interface MultipleBaseUrls extends FernApi.MultipleBaseUrlsEnvironments, _Utils {
        type: \\"multipleBaseUrls\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.Environments._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        singleBaseUrl: (value: FernApi.SingleBaseUrlEnvironments) => _Result;
        multipleBaseUrls: (value: FernApi.MultipleBaseUrlsEnvironments) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const Environments: {
    readonly singleBaseUrl: (value: FernApi.SingleBaseUrlEnvironments) => FernApi.Environments.SingleBaseUrl;
    readonly multipleBaseUrls: (value: FernApi.MultipleBaseUrlsEnvironments) => FernApi.Environments.MultipleBaseUrls;
    readonly _visit: <_Result>(value: FernApi.Environments, visitor: FernApi.Environments._Visitor<_Result>) => _Result;
};
",
                        "name": "Environments.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Environments = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.Environments = {
    singleBaseUrl: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"singleBaseUrl\\", _visit: function (visitor) {
                return FernApi.Environments._visit(this, visitor);
            } });
    },
    multipleBaseUrls: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"multipleBaseUrls\\", _visit: function (visitor) {
                return FernApi.Environments._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"singleBaseUrl\\":
                return visitor.singleBaseUrl(value);
            case \\"multipleBaseUrls\\":
                return visitor.multipleBaseUrls(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "Environments.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface EnvironmentsConfig {
    defaultEnvironment: FernApi.EnvironmentId | undefined;
    environments: FernApi.Environments;
}
",
                        "name": "EnvironmentsConfig.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnvironmentsConfig.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface MultipleBaseUrlsEnvironment extends FernApi.WithDocs {
    id: FernApi.EnvironmentId;
    name: FernApi.Name;
    urls: Record<FernApi.EnvironmentBaseUrlId, FernApi.EnvironmentUrl>;
}
",
                        "name": "MultipleBaseUrlsEnvironment.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MultipleBaseUrlsEnvironment.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface MultipleBaseUrlsEnvironments {
    baseUrls: FernApi.EnvironmentBaseUrlWithId[];
    environments: FernApi.MultipleBaseUrlsEnvironment[];
}
",
                        "name": "MultipleBaseUrlsEnvironments.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MultipleBaseUrlsEnvironments.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SingleBaseUrlEnvironment extends FernApi.WithDocs {
    id: FernApi.EnvironmentId;
    name: FernApi.Name;
    url: FernApi.EnvironmentUrl;
}
",
                        "name": "SingleBaseUrlEnvironment.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SingleBaseUrlEnvironment.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SingleBaseUrlEnvironments {
    environments: FernApi.SingleBaseUrlEnvironment[];
}
",
                        "name": "SingleBaseUrlEnvironments.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SingleBaseUrlEnvironments.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./EnvironmentId\\";
export * from \\"./EnvironmentBaseUrlId\\";
export * from \\"./EnvironmentUrl\\";
export * from \\"./EnvironmentsConfig\\";
export * from \\"./Environments\\";
export * from \\"./SingleBaseUrlEnvironments\\";
export * from \\"./SingleBaseUrlEnvironment\\";
export * from \\"./MultipleBaseUrlsEnvironments\\";
export * from \\"./MultipleBaseUrlsEnvironment\\";
export * from \\"./EnvironmentBaseUrlWithId\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./EnvironmentId\\"), exports);
__exportStar(require(\\"./EnvironmentBaseUrlId\\"), exports);
__exportStar(require(\\"./EnvironmentUrl\\"), exports);
__exportStar(require(\\"./EnvironmentsConfig\\"), exports);
__exportStar(require(\\"./Environments\\"), exports);
__exportStar(require(\\"./SingleBaseUrlEnvironments\\"), exports);
__exportStar(require(\\"./SingleBaseUrlEnvironment\\"), exports);
__exportStar(require(\\"./MultipleBaseUrlsEnvironments\\"), exports);
__exportStar(require(\\"./MultipleBaseUrlsEnvironment\\"), exports);
__exportStar(require(\\"./EnvironmentBaseUrlWithId\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "environment",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DeclaredErrorName {
    errorId: FernApi.ErrorId;
    fernFilepath: FernApi.FernFilepath;
    name: FernApi.Name;
}
",
                        "name": "DeclaredErrorName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DeclaredErrorName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ErrorDeclaration extends FernApi.WithDocs {
    name: FernApi.DeclaredErrorName;
    discriminantValue: FernApi.NameAndWireValue;
    type_: FernApi.TypeReference | undefined;
    statusCode: number;
}
",
                        "name": "ErrorDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ErrorDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ErrorDeclarationDiscriminantValue = FernApi.ErrorDeclarationDiscriminantValue.Property | FernApi.ErrorDeclarationDiscriminantValue.StatusCode;
export declare namespace ErrorDeclarationDiscriminantValue {
    interface Property extends FernApi.NameAndWireValue, _Utils {
        type: \\"property\\";
    }
    interface StatusCode extends _Utils {
        type: \\"statusCode\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ErrorDeclarationDiscriminantValue._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        property: (value: FernApi.NameAndWireValue) => _Result;
        statusCode: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ErrorDeclarationDiscriminantValue: {
    readonly property: (value: FernApi.NameAndWireValue) => FernApi.ErrorDeclarationDiscriminantValue.Property;
    readonly statusCode: () => FernApi.ErrorDeclarationDiscriminantValue.StatusCode;
    readonly _visit: <_Result>(value: FernApi.ErrorDeclarationDiscriminantValue, visitor: FernApi.ErrorDeclarationDiscriminantValue._Visitor<_Result>) => _Result;
};
",
                        "name": "ErrorDeclarationDiscriminantValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorDeclarationDiscriminantValue = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ErrorDeclarationDiscriminantValue = {
    property: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"property\\", _visit: function (visitor) {
                return FernApi.ErrorDeclarationDiscriminantValue._visit(this, visitor);
            } });
    },
    statusCode: () => {
        return {
            type: \\"statusCode\\",
            _visit: function (visitor) {
                return FernApi.ErrorDeclarationDiscriminantValue._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"property\\":
                return visitor.property(value);
            case \\"statusCode\\":
                return visitor.statusCode();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ErrorDeclarationDiscriminantValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ErrorDeclaration\\";
export * from \\"./ErrorDeclarationDiscriminantValue\\";
export * from \\"./DeclaredErrorName\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ErrorDeclaration\\"), exports);
__exportStar(require(\\"./ErrorDeclarationDiscriminantValue\\"), exports);
__exportStar(require(\\"./DeclaredErrorName\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "errors",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DeclaredServiceName {
    fernFilepath: FernApi.FernFilepath;
}
",
                        "name": "DeclaredServiceName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DeclaredServiceName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type EndpointName = FernApi.Name;
",
                        "name": "EndpointName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EndpointName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleEndpointCall extends FernApi.WithDocs {
    name: FernApi.Name | undefined;
    url: string;
    rootPathParameters: FernApi.ExamplePathParameter[];
    servicePathParameters: FernApi.ExamplePathParameter[];
    endpointPathParameters: FernApi.ExamplePathParameter[];
    serviceHeaders: FernApi.ExampleHeader[];
    endpointHeaders: FernApi.ExampleHeader[];
    queryParameters: FernApi.ExampleQueryParameter[];
    request: FernApi.ExampleRequestBody | undefined;
    response: FernApi.ExampleResponse;
}
",
                        "name": "ExampleEndpointCall.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleEndpointCall.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleEndpointErrorResponse {
    error: FernApi.DeclaredErrorName;
    body: FernApi.ExampleTypeReference | undefined;
}
",
                        "name": "ExampleEndpointErrorResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleEndpointErrorResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleEndpointSuccessResponse {
    body: FernApi.ExampleTypeReference | undefined;
}
",
                        "name": "ExampleEndpointSuccessResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleEndpointSuccessResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleHeader {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleHeader.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleHeader.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleInlinedRequestBody extends FernApi.WithJsonExample {
    properties: FernApi.ExampleInlinedRequestBodyProperty[];
}
",
                        "name": "ExampleInlinedRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleInlinedRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleInlinedRequestBodyProperty {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
    /**
     * this property may have been brought in via extension. originalTypeDeclaration
     * is the name of the type that contains this property
     *
     */
    originalTypeDeclaration: FernApi.DeclaredTypeName | undefined;
}
",
                        "name": "ExampleInlinedRequestBodyProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleInlinedRequestBodyProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExamplePathParameter {
    key: string;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExamplePathParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExamplePathParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleQueryParameter {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleQueryParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleQueryParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExampleRequestBody = FernApi.ExampleRequestBody.InlinedRequestBody | FernApi.ExampleRequestBody.Reference;
export declare namespace ExampleRequestBody {
    interface InlinedRequestBody extends FernApi.ExampleInlinedRequestBody, _Utils {
        type: \\"inlinedRequestBody\\";
    }
    interface Reference extends FernApi.ExampleTypeReference, _Utils {
        type: \\"reference\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleRequestBody._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        inlinedRequestBody: (value: FernApi.ExampleInlinedRequestBody) => _Result;
        reference: (value: FernApi.ExampleTypeReference) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExampleRequestBody: {
    readonly inlinedRequestBody: (value: FernApi.ExampleInlinedRequestBody) => FernApi.ExampleRequestBody.InlinedRequestBody;
    readonly reference: (value: FernApi.ExampleTypeReference) => FernApi.ExampleRequestBody.Reference;
    readonly _visit: <_Result>(value: FernApi.ExampleRequestBody, visitor: FernApi.ExampleRequestBody._Visitor<_Result>) => _Result;
};
",
                        "name": "ExampleRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleRequestBody = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExampleRequestBody = {
    inlinedRequestBody: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"inlinedRequestBody\\", _visit: function (visitor) {
                return FernApi.ExampleRequestBody._visit(this, visitor);
            } });
    },
    reference: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"reference\\", _visit: function (visitor) {
                return FernApi.ExampleRequestBody._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"inlinedRequestBody\\":
                return visitor.inlinedRequestBody(value);
            case \\"reference\\":
                return visitor.reference(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExampleRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExampleResponse = FernApi.ExampleResponse.Ok | FernApi.ExampleResponse.Error_;
export declare namespace ExampleResponse {
    interface Ok extends FernApi.ExampleEndpointSuccessResponse, _Utils {
        type: \\"ok\\";
    }
    interface Error_ extends FernApi.ExampleEndpointErrorResponse, _Utils {
        type: \\"error\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleResponse._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        ok: (value: FernApi.ExampleEndpointSuccessResponse) => _Result;
        error: (value: FernApi.ExampleEndpointErrorResponse) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExampleResponse: {
    readonly ok: (value: FernApi.ExampleEndpointSuccessResponse) => FernApi.ExampleResponse.Ok;
    readonly error: (value: FernApi.ExampleEndpointErrorResponse) => FernApi.ExampleResponse.Error_;
    readonly _visit: <_Result>(value: FernApi.ExampleResponse, visitor: FernApi.ExampleResponse._Visitor<_Result>) => _Result;
};
",
                        "name": "ExampleResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleResponse = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExampleResponse = {
    ok: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"ok\\", _visit: function (visitor) {
                return FernApi.ExampleResponse._visit(this, visitor);
            } });
    },
    error: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"error\\", _visit: function (visitor) {
                return FernApi.ExampleResponse._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"ok\\":
                return visitor.ok(value);
            case \\"error\\":
                return visitor.error(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExampleResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface FileDownloadResponse extends FernApi.WithDocs {
}
",
                        "name": "FileDownloadResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FileDownloadResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface FileProperty {
    key: FernApi.NameAndWireValue;
    isOptional: boolean;
}
",
                        "name": "FileProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FileProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface FileUploadRequest {
    name: FernApi.Name;
    properties: FernApi.FileUploadRequestProperty[];
}
",
                        "name": "FileUploadRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FileUploadRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type FileUploadRequestProperty = FernApi.FileUploadRequestProperty.File_ | FernApi.FileUploadRequestProperty.BodyProperty;
export declare namespace FileUploadRequestProperty {
    interface File_ extends FernApi.FileProperty, _Utils {
        type: \\"file\\";
    }
    interface BodyProperty extends FernApi.InlinedRequestBodyProperty, _Utils {
        type: \\"bodyProperty\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.FileUploadRequestProperty._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        file: (value: FernApi.FileProperty) => _Result;
        bodyProperty: (value: FernApi.InlinedRequestBodyProperty) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const FileUploadRequestProperty: {
    readonly file: (value: FernApi.FileProperty) => FernApi.FileUploadRequestProperty.File_;
    readonly bodyProperty: (value: FernApi.InlinedRequestBodyProperty) => FernApi.FileUploadRequestProperty.BodyProperty;
    readonly _visit: <_Result>(value: FernApi.FileUploadRequestProperty, visitor: FernApi.FileUploadRequestProperty._Visitor<_Result>) => _Result;
};
",
                        "name": "FileUploadRequestProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileUploadRequestProperty = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.FileUploadRequestProperty = {
    file: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"file\\", _visit: function (visitor) {
                return FernApi.FileUploadRequestProperty._visit(this, visitor);
            } });
    },
    bodyProperty: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"bodyProperty\\", _visit: function (visitor) {
                return FernApi.FileUploadRequestProperty._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"file\\":
                return visitor.file(value);
            case \\"bodyProperty\\":
                return visitor.bodyProperty(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "FileUploadRequestProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface HttpEndpoint extends FernApi.Declaration {
    name: FernApi.EndpointName;
    displayName: string | undefined;
    method: FernApi.HttpMethod;
    headers: FernApi.HttpHeader[];
    baseUrl: FernApi.EnvironmentBaseUrlId | undefined;
    path: FernApi.HttpPath;
    fullPath: FernApi.HttpPath;
    pathParameters: FernApi.PathParameter[];
    allPathParameters: FernApi.PathParameter[];
    queryParameters: FernApi.QueryParameter[];
    requestBody: FernApi.HttpRequestBody | undefined;
    sdkRequest: FernApi.SdkRequest | undefined;
    response: FernApi.HttpResponse | undefined;
    errors: FernApi.ResponseErrors;
    auth: boolean;
    examples: FernApi.ExampleEndpointCall[];
}
",
                        "name": "HttpEndpoint.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HttpEndpoint.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface HttpHeader extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
}
",
                        "name": "HttpHeader.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HttpHeader.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type HttpMethod = \\"GET\\" | \\"POST\\" | \\"PUT\\" | \\"PATCH\\" | \\"DELETE\\";
export declare const HttpMethod: {
    readonly Get: \\"GET\\";
    readonly Post: \\"POST\\";
    readonly Put: \\"PUT\\";
    readonly Patch: \\"PATCH\\";
    readonly Delete: \\"DELETE\\";
};
",
                        "name": "HttpMethod.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpMethod = void 0;
exports.HttpMethod = {
    Get: \\"GET\\",
    Post: \\"POST\\",
    Put: \\"PUT\\",
    Patch: \\"PATCH\\",
    Delete: \\"DELETE\\",
};
",
                        "name": "HttpMethod.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface HttpPath {
    head: string;
    parts: FernApi.HttpPathPart[];
}
",
                        "name": "HttpPath.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HttpPath.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface HttpPathPart {
    pathParameter: string;
    tail: string;
}
",
                        "name": "HttpPathPart.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HttpPathPart.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type HttpRequestBody = FernApi.HttpRequestBody.InlinedRequestBody | FernApi.HttpRequestBody.Reference | FernApi.HttpRequestBody.FileUpload;
export declare namespace HttpRequestBody {
    interface InlinedRequestBody extends FernApi.InlinedRequestBody, _Utils {
        type: \\"inlinedRequestBody\\";
    }
    interface Reference extends FernApi.HttpRequestBodyReference, _Utils {
        type: \\"reference\\";
    }
    interface FileUpload extends FernApi.FileUploadRequest, _Utils {
        type: \\"fileUpload\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.HttpRequestBody._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        inlinedRequestBody: (value: FernApi.InlinedRequestBody) => _Result;
        reference: (value: FernApi.HttpRequestBodyReference) => _Result;
        fileUpload: (value: FernApi.FileUploadRequest) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const HttpRequestBody: {
    readonly inlinedRequestBody: (value: FernApi.InlinedRequestBody) => FernApi.HttpRequestBody.InlinedRequestBody;
    readonly reference: (value: FernApi.HttpRequestBodyReference) => FernApi.HttpRequestBody.Reference;
    readonly fileUpload: (value: FernApi.FileUploadRequest) => FernApi.HttpRequestBody.FileUpload;
    readonly _visit: <_Result>(value: FernApi.HttpRequestBody, visitor: FernApi.HttpRequestBody._Visitor<_Result>) => _Result;
};
",
                        "name": "HttpRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpRequestBody = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.HttpRequestBody = {
    inlinedRequestBody: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"inlinedRequestBody\\", _visit: function (visitor) {
                return FernApi.HttpRequestBody._visit(this, visitor);
            } });
    },
    reference: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"reference\\", _visit: function (visitor) {
                return FernApi.HttpRequestBody._visit(this, visitor);
            } });
    },
    fileUpload: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"fileUpload\\", _visit: function (visitor) {
                return FernApi.HttpRequestBody._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"inlinedRequestBody\\":
                return visitor.inlinedRequestBody(value);
            case \\"reference\\":
                return visitor.reference(value);
            case \\"fileUpload\\":
                return visitor.fileUpload(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "HttpRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface HttpRequestBodyReference extends FernApi.WithDocs {
    requestBodyType: FernApi.TypeReference;
    contentType: string | undefined;
}
",
                        "name": "HttpRequestBodyReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HttpRequestBodyReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type HttpResponse = FernApi.HttpResponse.Json | FernApi.HttpResponse.FileDownload | FernApi.HttpResponse.Streaming;
export declare namespace HttpResponse {
    interface Json extends FernApi.JsonResponse, _Utils {
        type: \\"json\\";
    }
    interface FileDownload extends FernApi.FileDownloadResponse, _Utils {
        type: \\"fileDownload\\";
    }
    interface Streaming extends FernApi.StreamingResponse, _Utils {
        type: \\"streaming\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.HttpResponse._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        json: (value: FernApi.JsonResponse) => _Result;
        fileDownload: (value: FernApi.FileDownloadResponse) => _Result;
        streaming: (value: FernApi.StreamingResponse) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const HttpResponse: {
    readonly json: (value: FernApi.JsonResponse) => FernApi.HttpResponse.Json;
    readonly fileDownload: (value: FernApi.FileDownloadResponse) => FernApi.HttpResponse.FileDownload;
    readonly streaming: (value: FernApi.StreamingResponse) => FernApi.HttpResponse.Streaming;
    readonly _visit: <_Result>(value: FernApi.HttpResponse, visitor: FernApi.HttpResponse._Visitor<_Result>) => _Result;
};
",
                        "name": "HttpResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpResponse = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.HttpResponse = {
    json: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"json\\", _visit: function (visitor) {
                return FernApi.HttpResponse._visit(this, visitor);
            } });
    },
    fileDownload: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"fileDownload\\", _visit: function (visitor) {
                return FernApi.HttpResponse._visit(this, visitor);
            } });
    },
    streaming: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"streaming\\", _visit: function (visitor) {
                return FernApi.HttpResponse._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"json\\":
                return visitor.json(value);
            case \\"fileDownload\\":
                return visitor.fileDownload(value);
            case \\"streaming\\":
                return visitor.streaming(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "HttpResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface HttpService {
    availability: FernApi.Availability;
    name: FernApi.DeclaredServiceName;
    displayName: string | undefined;
    basePath: FernApi.HttpPath;
    endpoints: FernApi.HttpEndpoint[];
    headers: FernApi.HttpHeader[];
    pathParameters: FernApi.PathParameter[];
}
",
                        "name": "HttpService.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "HttpService.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface InlinedRequestBody {
    name: FernApi.Name;
    extends_: FernApi.DeclaredTypeName[];
    properties: FernApi.InlinedRequestBodyProperty[];
    contentType: string | undefined;
}
",
                        "name": "InlinedRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InlinedRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface InlinedRequestBodyProperty extends FernApi.WithDocs {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
}
",
                        "name": "InlinedRequestBodyProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InlinedRequestBodyProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface JsonResponse extends FernApi.WithDocs {
    responseBodyType: FernApi.TypeReference;
}
",
                        "name": "JsonResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "JsonResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface MaybeStreamingResponse {
    condition: FernApi.StreamCondition;
    nonStreaming: FernApi.HttpResponse;
    streaming: FernApi.StreamingResponse;
}
",
                        "name": "MaybeStreamingResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MaybeStreamingResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface PathParameter extends FernApi.WithDocs {
    name: FernApi.Name;
    valueType: FernApi.TypeReference;
    location: FernApi.PathParameterLocation;
    variable: FernApi.VariableId | undefined;
}
",
                        "name": "PathParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PathParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type PathParameterLocation = \\"ROOT\\" | \\"SERVICE\\" | \\"ENDPOINT\\";
export declare const PathParameterLocation: {
    readonly Root: \\"ROOT\\";
    readonly Service: \\"SERVICE\\";
    readonly Endpoint: \\"ENDPOINT\\";
};
",
                        "name": "PathParameterLocation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PathParameterLocation = void 0;
exports.PathParameterLocation = {
    Root: \\"ROOT\\",
    Service: \\"SERVICE\\",
    Endpoint: \\"ENDPOINT\\",
};
",
                        "name": "PathParameterLocation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface QueryParameter extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
    allowMultiple: boolean;
}
",
                        "name": "QueryParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "QueryParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ResponseError extends FernApi.WithDocs {
    error: FernApi.DeclaredErrorName;
}
",
                        "name": "ResponseError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ResponseError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ResponseErrors = FernApi.ResponseError[];
",
                        "name": "ResponseErrors.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ResponseErrors.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SdkRequest {
    requestParameterName: FernApi.Name;
    shape: FernApi.SdkRequestShape;
}
",
                        "name": "SdkRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SdkRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SdkRequestShape = FernApi.SdkRequestShape.JustRequestBody | FernApi.SdkRequestShape.Wrapper;
export declare namespace SdkRequestShape {
    interface JustRequestBody extends FernApi.HttpRequestBodyReference, _Utils {
        type: \\"justRequestBody\\";
    }
    interface Wrapper extends FernApi.SdkRequestWrapper, _Utils {
        type: \\"wrapper\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.SdkRequestShape._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        justRequestBody: (value: FernApi.HttpRequestBodyReference) => _Result;
        wrapper: (value: FernApi.SdkRequestWrapper) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const SdkRequestShape: {
    readonly justRequestBody: (value: FernApi.HttpRequestBodyReference) => FernApi.SdkRequestShape.JustRequestBody;
    readonly wrapper: (value: FernApi.SdkRequestWrapper) => FernApi.SdkRequestShape.Wrapper;
    readonly _visit: <_Result>(value: FernApi.SdkRequestShape, visitor: FernApi.SdkRequestShape._Visitor<_Result>) => _Result;
};
",
                        "name": "SdkRequestShape.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SdkRequestShape = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.SdkRequestShape = {
    justRequestBody: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"justRequestBody\\", _visit: function (visitor) {
                return FernApi.SdkRequestShape._visit(this, visitor);
            } });
    },
    wrapper: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"wrapper\\", _visit: function (visitor) {
                return FernApi.SdkRequestShape._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"justRequestBody\\":
                return visitor.justRequestBody(value);
            case \\"wrapper\\":
                return visitor.wrapper(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SdkRequestShape.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SdkRequestWrapper {
    wrapperName: FernApi.Name;
    bodyKey: FernApi.Name;
}
",
                        "name": "SdkRequestWrapper.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SdkRequestWrapper.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type StreamCondition = 
/**
 * The name of a boolean query parameter. If it is true, the response
 * should be streamed. Otherwise, it should not be streamed.
 *  */
FernApi.StreamCondition.QueryParameterKey
/**
 * The name of a boolean property on the request. If it is true, the response
 * should be streamed. Otherwise, it should not be streamed.
 *  */
 | FernApi.StreamCondition.RequestPropertyKey;
export declare namespace StreamCondition {
    interface QueryParameterKey extends _Utils {
        type: \\"queryParameterKey\\";
        value: string;
    }
    interface RequestPropertyKey extends _Utils {
        type: \\"requestPropertyKey\\";
        value: string;
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.StreamCondition._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        queryParameterKey: (value: string) => _Result;
        requestPropertyKey: (value: string) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const StreamCondition: {
    readonly queryParameterKey: (value: string) => FernApi.StreamCondition.QueryParameterKey;
    readonly requestPropertyKey: (value: string) => FernApi.StreamCondition.RequestPropertyKey;
    readonly _visit: <_Result>(value: FernApi.StreamCondition, visitor: FernApi.StreamCondition._Visitor<_Result>) => _Result;
};
",
                        "name": "StreamCondition.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StreamCondition = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.StreamCondition = {
    queryParameterKey: (value) => {
        return {
            value: value,
            type: \\"queryParameterKey\\",
            _visit: function (visitor) {
                return FernApi.StreamCondition._visit(this, visitor);
            },
        };
    },
    requestPropertyKey: (value) => {
        return {
            value: value,
            type: \\"requestPropertyKey\\",
            _visit: function (visitor) {
                return FernApi.StreamCondition._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"queryParameterKey\\":
                return visitor.queryParameterKey(value.value);
            case \\"requestPropertyKey\\":
                return visitor.requestPropertyKey(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "StreamCondition.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StreamingResponse extends FernApi.WithDocs {
    dataEventType: FernApi.StreamingResponseChunkType;
    terminator: string | undefined;
}
",
                        "name": "StreamingResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StreamingResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type StreamingResponseChunkType = FernApi.StreamingResponseChunkType.Json | FernApi.StreamingResponseChunkType.Text;
export declare namespace StreamingResponseChunkType {
    interface Json extends _Utils {
        type: \\"json\\";
        value: FernApi.TypeReference;
    }
    interface Text extends _Utils {
        type: \\"text\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.StreamingResponseChunkType._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        json: (value: FernApi.TypeReference) => _Result;
        text: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const StreamingResponseChunkType: {
    readonly json: (value: FernApi.TypeReference) => FernApi.StreamingResponseChunkType.Json;
    readonly text: () => FernApi.StreamingResponseChunkType.Text;
    readonly _visit: <_Result>(value: FernApi.StreamingResponseChunkType, visitor: FernApi.StreamingResponseChunkType._Visitor<_Result>) => _Result;
};
",
                        "name": "StreamingResponseChunkType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StreamingResponseChunkType = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.StreamingResponseChunkType = {
    json: (value) => {
        return {
            value: value,
            type: \\"json\\",
            _visit: function (visitor) {
                return FernApi.StreamingResponseChunkType._visit(this, visitor);
            },
        };
    },
    text: () => {
        return {
            type: \\"text\\",
            _visit: function (visitor) {
                return FernApi.StreamingResponseChunkType._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"json\\":
                return visitor.json(value.value);
            case \\"text\\":
                return visitor.text();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "StreamingResponseChunkType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./HttpService\\";
export * from \\"./DeclaredServiceName\\";
export * from \\"./HttpEndpoint\\";
export * from \\"./EndpointName\\";
export * from \\"./HttpPath\\";
export * from \\"./HttpPathPart\\";
export * from \\"./HttpMethod\\";
export * from \\"./HttpHeader\\";
export * from \\"./PathParameter\\";
export * from \\"./PathParameterLocation\\";
export * from \\"./QueryParameter\\";
export * from \\"./HttpRequestBody\\";
export * from \\"./InlinedRequestBody\\";
export * from \\"./InlinedRequestBodyProperty\\";
export * from \\"./FileUploadRequest\\";
export * from \\"./FileUploadRequestProperty\\";
export * from \\"./FileProperty\\";
export * from \\"./HttpRequestBodyReference\\";
export * from \\"./SdkRequest\\";
export * from \\"./SdkRequestShape\\";
export * from \\"./SdkRequestWrapper\\";
export * from \\"./HttpResponse\\";
export * from \\"./JsonResponse\\";
export * from \\"./FileDownloadResponse\\";
export * from \\"./StreamingResponse\\";
export * from \\"./StreamingResponseChunkType\\";
export * from \\"./MaybeStreamingResponse\\";
export * from \\"./StreamCondition\\";
export * from \\"./ResponseErrors\\";
export * from \\"./ResponseError\\";
export * from \\"./ExampleEndpointCall\\";
export * from \\"./ExamplePathParameter\\";
export * from \\"./ExampleQueryParameter\\";
export * from \\"./ExampleHeader\\";
export * from \\"./ExampleRequestBody\\";
export * from \\"./ExampleInlinedRequestBody\\";
export * from \\"./ExampleInlinedRequestBodyProperty\\";
export * from \\"./ExampleResponse\\";
export * from \\"./ExampleEndpointSuccessResponse\\";
export * from \\"./ExampleEndpointErrorResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./HttpService\\"), exports);
__exportStar(require(\\"./DeclaredServiceName\\"), exports);
__exportStar(require(\\"./HttpEndpoint\\"), exports);
__exportStar(require(\\"./EndpointName\\"), exports);
__exportStar(require(\\"./HttpPath\\"), exports);
__exportStar(require(\\"./HttpPathPart\\"), exports);
__exportStar(require(\\"./HttpMethod\\"), exports);
__exportStar(require(\\"./HttpHeader\\"), exports);
__exportStar(require(\\"./PathParameter\\"), exports);
__exportStar(require(\\"./PathParameterLocation\\"), exports);
__exportStar(require(\\"./QueryParameter\\"), exports);
__exportStar(require(\\"./HttpRequestBody\\"), exports);
__exportStar(require(\\"./InlinedRequestBody\\"), exports);
__exportStar(require(\\"./InlinedRequestBodyProperty\\"), exports);
__exportStar(require(\\"./FileUploadRequest\\"), exports);
__exportStar(require(\\"./FileUploadRequestProperty\\"), exports);
__exportStar(require(\\"./FileProperty\\"), exports);
__exportStar(require(\\"./HttpRequestBodyReference\\"), exports);
__exportStar(require(\\"./SdkRequest\\"), exports);
__exportStar(require(\\"./SdkRequestShape\\"), exports);
__exportStar(require(\\"./SdkRequestWrapper\\"), exports);
__exportStar(require(\\"./HttpResponse\\"), exports);
__exportStar(require(\\"./JsonResponse\\"), exports);
__exportStar(require(\\"./FileDownloadResponse\\"), exports);
__exportStar(require(\\"./StreamingResponse\\"), exports);
__exportStar(require(\\"./StreamingResponseChunkType\\"), exports);
__exportStar(require(\\"./MaybeStreamingResponse\\"), exports);
__exportStar(require(\\"./StreamCondition\\"), exports);
__exportStar(require(\\"./ResponseErrors\\"), exports);
__exportStar(require(\\"./ResponseError\\"), exports);
__exportStar(require(\\"./ExampleEndpointCall\\"), exports);
__exportStar(require(\\"./ExamplePathParameter\\"), exports);
__exportStar(require(\\"./ExampleQueryParameter\\"), exports);
__exportStar(require(\\"./ExampleHeader\\"), exports);
__exportStar(require(\\"./ExampleRequestBody\\"), exports);
__exportStar(require(\\"./ExampleInlinedRequestBody\\"), exports);
__exportStar(require(\\"./ExampleInlinedRequestBodyProperty\\"), exports);
__exportStar(require(\\"./ExampleResponse\\"), exports);
__exportStar(require(\\"./ExampleEndpointSuccessResponse\\"), exports);
__exportStar(require(\\"./ExampleEndpointErrorResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "http",
                "type": "directory",
              },
              Object {
                "contents": "export * as auth from \\"./auth\\";
export * from \\"./auth/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as constants from \\"./constants\\";
export * from \\"./constants/types\\";
export * as environment from \\"./environment\\";
export * from \\"./environment/types\\";
export * as errors from \\"./errors\\";
export * from \\"./errors/types\\";
export * as http from \\"./http\\";
export * from \\"./http/types\\";
export * as ir from \\"./ir\\";
export * from \\"./ir/types\\";
export * as types from \\"./types\\";
export * from \\"./types/types\\";
export * as variables from \\"./variables\\";
export * from \\"./variables/types\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.variables = exports.types = exports.ir = exports.http = exports.errors = exports.environment = exports.constants = exports.commons = exports.auth = void 0;
exports.auth = __importStar(require(\\"./auth\\"));
__exportStar(require(\\"./auth/types\\"), exports);
exports.commons = __importStar(require(\\"./commons\\"));
__exportStar(require(\\"./commons/types\\"), exports);
exports.constants = __importStar(require(\\"./constants\\"));
__exportStar(require(\\"./constants/types\\"), exports);
exports.environment = __importStar(require(\\"./environment\\"));
__exportStar(require(\\"./environment/types\\"), exports);
exports.errors = __importStar(require(\\"./errors\\"));
__exportStar(require(\\"./errors/types\\"), exports);
exports.http = __importStar(require(\\"./http\\"));
__exportStar(require(\\"./http/types\\"), exports);
exports.ir = __importStar(require(\\"./ir\\"));
__exportStar(require(\\"./ir/types\\"), exports);
exports.types = __importStar(require(\\"./types\\"));
__exportStar(require(\\"./types/types\\"), exports);
exports.variables = __importStar(require(\\"./variables\\"));
__exportStar(require(\\"./variables/types\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ErrorDiscriminationByPropertyStrategy {
    discriminant: FernApi.NameAndWireValue;
    contentProperty: FernApi.NameAndWireValue;
}
",
                        "name": "ErrorDiscriminationByPropertyStrategy.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ErrorDiscriminationByPropertyStrategy.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ErrorDiscriminationStrategy = FernApi.ErrorDiscriminationStrategy.StatusCode | FernApi.ErrorDiscriminationStrategy.Property;
export declare namespace ErrorDiscriminationStrategy {
    interface StatusCode extends _Utils {
        type: \\"statusCode\\";
    }
    interface Property extends FernApi.ErrorDiscriminationByPropertyStrategy, _Utils {
        type: \\"property\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ErrorDiscriminationStrategy._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        statusCode: () => _Result;
        property: (value: FernApi.ErrorDiscriminationByPropertyStrategy) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ErrorDiscriminationStrategy: {
    readonly statusCode: () => FernApi.ErrorDiscriminationStrategy.StatusCode;
    readonly property: (value: FernApi.ErrorDiscriminationByPropertyStrategy) => FernApi.ErrorDiscriminationStrategy.Property;
    readonly _visit: <_Result>(value: FernApi.ErrorDiscriminationStrategy, visitor: FernApi.ErrorDiscriminationStrategy._Visitor<_Result>) => _Result;
};
",
                        "name": "ErrorDiscriminationStrategy.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorDiscriminationStrategy = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ErrorDiscriminationStrategy = {
    statusCode: () => {
        return {
            type: \\"statusCode\\",
            _visit: function (visitor) {
                return FernApi.ErrorDiscriminationStrategy._visit(this, visitor);
            },
        };
    },
    property: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"property\\", _visit: function (visitor) {
                return FernApi.ErrorDiscriminationStrategy._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"statusCode\\":
                return visitor.statusCode();
            case \\"property\\":
                return visitor.property(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ErrorDiscriminationStrategy.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
/**
 * Complete representation of the API schema
 */
export interface IntermediateRepresentation {
    /** This is the human readable unique id for the API. */
    apiName: FernApi.Name;
    apiDisplayName: string | undefined;
    apiDocs: string | undefined;
    auth: FernApi.ApiAuth;
    /** API Wide headers that are sent on every request */
    headers: FernApi.HttpHeader[];
    /** The types described by this API */
    types: Record<FernApi.TypeId, FernApi.TypeDeclaration>;
    /** The services exposed by this API */
    services: Record<FernApi.ServiceId, FernApi.HttpService>;
    errors: Record<FernApi.ErrorId, FernApi.ErrorDeclaration>;
    subpackages: Record<FernApi.SubpackageId, FernApi.Subpackage>;
    rootPackage: FernApi.Package;
    constants: FernApi.Constants;
    environments: FernApi.EnvironmentsConfig | undefined;
    basePath: FernApi.HttpPath | undefined;
    pathParameters: FernApi.PathParameter[];
    errorDiscriminationStrategy: FernApi.ErrorDiscriminationStrategy;
    sdkConfig: FernApi.SdkConfig;
    variables: FernApi.VariableDeclaration[];
    serviceTypeReferenceInfo: FernApi.ServiceTypeReferenceInfo | undefined;
}
",
                        "name": "IntermediateRepresentation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "IntermediateRepresentation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Package extends FernApi.WithDocs {
    fernFilepath: FernApi.FernFilepath;
    service: FernApi.ServiceId | undefined;
    types: FernApi.TypeId[];
    errors: FernApi.ErrorId[];
    subpackages: FernApi.SubpackageId[];
    hasEndpointsInTree: boolean;
    navigationConfig: FernApi.PackageNavigationConfig | undefined;
}
",
                        "name": "Package.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Package.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface PackageNavigationConfig {
    pointsTo: FernApi.SubpackageId;
}
",
                        "name": "PackageNavigationConfig.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PackageNavigationConfig.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface PlatformHeaders {
    language: string;
    sdkName: string;
    sdkVersion: string;
}
",
                        "name": "PlatformHeaders.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlatformHeaders.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SdkConfig {
    isAuthMandatory: boolean;
    hasStreamingEndpoints: boolean;
    hasFileDownloadEndpoints: boolean;
    platformHeaders: FernApi.PlatformHeaders;
}
",
                        "name": "SdkConfig.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SdkConfig.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ServiceTypeReferenceInfo {
    /** Types referenced by exactly one service. */
    typesReferencedOnlyByService: Record<FernApi.ServiceId, FernApi.TypeId[]>;
    /** Types referenced by either zero or multiple services. */
    sharedTypes: FernApi.TypeId[];
}
",
                        "name": "ServiceTypeReferenceInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ServiceTypeReferenceInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Subpackage extends FernApi.Package {
    name: FernApi.Name;
}
",
                        "name": "Subpackage.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Subpackage.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./IntermediateRepresentation\\";
export * from \\"./SdkConfig\\";
export * from \\"./PlatformHeaders\\";
export * from \\"./ErrorDiscriminationStrategy\\";
export * from \\"./ErrorDiscriminationByPropertyStrategy\\";
export * from \\"./Package\\";
export * from \\"./Subpackage\\";
export * from \\"./PackageNavigationConfig\\";
export * from \\"./ServiceTypeReferenceInfo\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./IntermediateRepresentation\\"), exports);
__exportStar(require(\\"./SdkConfig\\"), exports);
__exportStar(require(\\"./PlatformHeaders\\"), exports);
__exportStar(require(\\"./ErrorDiscriminationStrategy\\"), exports);
__exportStar(require(\\"./ErrorDiscriminationByPropertyStrategy\\"), exports);
__exportStar(require(\\"./Package\\"), exports);
__exportStar(require(\\"./Subpackage\\"), exports);
__exportStar(require(\\"./PackageNavigationConfig\\"), exports);
__exportStar(require(\\"./ServiceTypeReferenceInfo\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "ir",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface AliasTypeDeclaration {
    aliasOf: FernApi.TypeReference;
    resolvedType: FernApi.ResolvedTypeReference;
}
",
                        "name": "AliasTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "AliasTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ContainerType = FernApi.ContainerType.List | FernApi.ContainerType.Map | FernApi.ContainerType.Optional | FernApi.ContainerType.Set | FernApi.ContainerType.Literal;
export declare namespace ContainerType {
    interface List extends _Utils {
        type: \\"list\\";
        list: FernApi.TypeReference;
    }
    interface Map extends FernApi.MapType, _Utils {
        type: \\"map\\";
    }
    interface Optional extends _Utils {
        type: \\"optional\\";
        optional: FernApi.TypeReference;
    }
    interface Set extends _Utils {
        type: \\"set\\";
        set: FernApi.TypeReference;
    }
    interface Literal extends _Utils {
        type: \\"literal\\";
        literal: FernApi.Literal;
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ContainerType._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        list: (value: FernApi.TypeReference) => _Result;
        map: (value: FernApi.MapType) => _Result;
        optional: (value: FernApi.TypeReference) => _Result;
        set: (value: FernApi.TypeReference) => _Result;
        literal: (value: FernApi.Literal) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ContainerType: {
    readonly list: (value: FernApi.TypeReference) => FernApi.ContainerType.List;
    readonly map: (value: FernApi.MapType) => FernApi.ContainerType.Map;
    readonly optional: (value: FernApi.TypeReference) => FernApi.ContainerType.Optional;
    readonly set: (value: FernApi.TypeReference) => FernApi.ContainerType.Set;
    readonly literal: (value: FernApi.Literal) => FernApi.ContainerType.Literal;
    readonly _visit: <_Result>(value: FernApi.ContainerType, visitor: FernApi.ContainerType._Visitor<_Result>) => _Result;
};
",
                        "name": "ContainerType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ContainerType = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ContainerType = {
    list: (value) => {
        return {
            list: value,
            type: \\"list\\",
            _visit: function (visitor) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },
    map: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"map\\", _visit: function (visitor) {
                return FernApi.ContainerType._visit(this, visitor);
            } });
    },
    optional: (value) => {
        return {
            optional: value,
            type: \\"optional\\",
            _visit: function (visitor) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },
    set: (value) => {
        return {
            set: value,
            type: \\"set\\",
            _visit: function (visitor) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },
    literal: (value) => {
        return {
            literal: value,
            type: \\"literal\\",
            _visit: function (visitor) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"list\\":
                return visitor.list(value.list);
            case \\"map\\":
                return visitor.map(value);
            case \\"optional\\":
                return visitor.optional(value.optional);
            case \\"set\\":
                return visitor.set(value.set);
            case \\"literal\\":
                return visitor.literal(value.literal);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ContainerType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DeclaredTypeName {
    typeId: FernApi.TypeId;
    fernFilepath: FernApi.FernFilepath;
    name: FernApi.Name;
}
",
                        "name": "DeclaredTypeName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DeclaredTypeName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface EnumTypeDeclaration {
    values: FernApi.EnumValue[];
}
",
                        "name": "EnumTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnumTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface EnumValue extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
}
",
                        "name": "EnumValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "EnumValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleAliasType {
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleAliasType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleAliasType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExampleContainer = FernApi.ExampleContainer.List | FernApi.ExampleContainer.Set | FernApi.ExampleContainer.Optional | FernApi.ExampleContainer.Map;
export declare namespace ExampleContainer {
    interface List extends _Utils {
        type: \\"list\\";
        list: FernApi.ExampleTypeReference[];
    }
    interface Set extends _Utils {
        type: \\"set\\";
        set: FernApi.ExampleTypeReference[];
    }
    interface Optional extends _Utils {
        type: \\"optional\\";
        optional: FernApi.ExampleTypeReference | undefined;
    }
    interface Map extends _Utils {
        type: \\"map\\";
        map: FernApi.ExampleKeyValuePair[];
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleContainer._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        list: (value: FernApi.ExampleTypeReference[]) => _Result;
        set: (value: FernApi.ExampleTypeReference[]) => _Result;
        optional: (value: FernApi.ExampleTypeReference | undefined) => _Result;
        map: (value: FernApi.ExampleKeyValuePair[]) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExampleContainer: {
    readonly list: (value: FernApi.ExampleTypeReference[]) => FernApi.ExampleContainer.List;
    readonly set: (value: FernApi.ExampleTypeReference[]) => FernApi.ExampleContainer.Set;
    readonly optional: (value?: FernApi.ExampleTypeReference | undefined) => FernApi.ExampleContainer.Optional;
    readonly map: (value: FernApi.ExampleKeyValuePair[]) => FernApi.ExampleContainer.Map;
    readonly _visit: <_Result>(value: FernApi.ExampleContainer, visitor: FernApi.ExampleContainer._Visitor<_Result>) => _Result;
};
",
                        "name": "ExampleContainer.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleContainer = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExampleContainer = {
    list: (value) => {
        return {
            list: value,
            type: \\"list\\",
            _visit: function (visitor) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },
    set: (value) => {
        return {
            set: value,
            type: \\"set\\",
            _visit: function (visitor) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },
    optional: (value) => {
        return {
            optional: value,
            type: \\"optional\\",
            _visit: function (visitor) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },
    map: (value) => {
        return {
            map: value,
            type: \\"map\\",
            _visit: function (visitor) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"list\\":
                return visitor.list(value.list);
            case \\"set\\":
                return visitor.set(value.set);
            case \\"optional\\":
                return visitor.optional(value.optional);
            case \\"map\\":
                return visitor.map(value.map);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExampleContainer.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface ExampleEnumType {
    wireValue: string;
}
",
                        "name": "ExampleEnumType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleEnumType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleKeyValuePair {
    key: FernApi.ExampleTypeReference;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleKeyValuePair.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleKeyValuePair.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleNamedType {
    typeName: FernApi.DeclaredTypeName;
    shape: FernApi.ExampleTypeShape;
}
",
                        "name": "ExampleNamedType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleNamedType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleObjectProperty {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
    /**
     * this property may have been brought in via extension. originalTypeDeclaration
     * is the name of the type that contains this property
     *
     */
    originalTypeDeclaration: FernApi.DeclaredTypeName;
}
",
                        "name": "ExampleObjectProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleObjectProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleObjectType {
    properties: FernApi.ExampleObjectProperty[];
}
",
                        "name": "ExampleObjectType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleObjectType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExamplePrimitive = FernApi.ExamplePrimitive.Integer | FernApi.ExamplePrimitive.Double | FernApi.ExamplePrimitive.String | FernApi.ExamplePrimitive.Boolean | FernApi.ExamplePrimitive.Long | FernApi.ExamplePrimitive.Datetime | FernApi.ExamplePrimitive.Date_ | FernApi.ExamplePrimitive.Uuid;
export declare namespace ExamplePrimitive {
    interface Integer extends _Utils {
        type: \\"integer\\";
        integer: number;
    }
    interface Double extends _Utils {
        type: \\"double\\";
        double: number;
    }
    interface String extends _Utils {
        type: \\"string\\";
        string: string;
    }
    interface Boolean extends _Utils {
        type: \\"boolean\\";
        boolean: boolean;
    }
    interface Long extends _Utils {
        type: \\"long\\";
        long: number;
    }
    interface Datetime extends _Utils {
        type: \\"datetime\\";
        datetime: Date;
    }
    interface Date_ extends _Utils {
        type: \\"date\\";
        date: string;
    }
    interface Uuid extends _Utils {
        type: \\"uuid\\";
        uuid: string;
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExamplePrimitive._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        integer: (value: number) => _Result;
        double: (value: number) => _Result;
        string: (value: string) => _Result;
        boolean: (value: boolean) => _Result;
        long: (value: number) => _Result;
        datetime: (value: Date) => _Result;
        date: (value: string) => _Result;
        uuid: (value: string) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExamplePrimitive: {
    readonly integer: (value: number) => FernApi.ExamplePrimitive.Integer;
    readonly double: (value: number) => FernApi.ExamplePrimitive.Double;
    readonly string: (value: string) => FernApi.ExamplePrimitive.String;
    readonly boolean: (value: boolean) => FernApi.ExamplePrimitive.Boolean;
    readonly long: (value: number) => FernApi.ExamplePrimitive.Long;
    readonly datetime: (value: Date) => FernApi.ExamplePrimitive.Datetime;
    readonly date: (value: string) => FernApi.ExamplePrimitive.Date_;
    readonly uuid: (value: string) => FernApi.ExamplePrimitive.Uuid;
    readonly _visit: <_Result>(value: FernApi.ExamplePrimitive, visitor: FernApi.ExamplePrimitive._Visitor<_Result>) => _Result;
};
",
                        "name": "ExamplePrimitive.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExamplePrimitive = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExamplePrimitive = {
    integer: (value) => {
        return {
            integer: value,
            type: \\"integer\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    double: (value) => {
        return {
            double: value,
            type: \\"double\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    string: (value) => {
        return {
            string: value,
            type: \\"string\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    boolean: (value) => {
        return {
            boolean: value,
            type: \\"boolean\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    long: (value) => {
        return {
            long: value,
            type: \\"long\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    datetime: (value) => {
        return {
            datetime: value,
            type: \\"datetime\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    date: (value) => {
        return {
            date: value,
            type: \\"date\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    uuid: (value) => {
        return {
            uuid: value,
            type: \\"uuid\\",
            _visit: function (visitor) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"integer\\":
                return visitor.integer(value.integer);
            case \\"double\\":
                return visitor.double(value.double);
            case \\"string\\":
                return visitor.string(value.string);
            case \\"boolean\\":
                return visitor.boolean(value.boolean);
            case \\"long\\":
                return visitor.long(value.long);
            case \\"datetime\\":
                return visitor.datetime(value.datetime);
            case \\"date\\":
                return visitor.date(value.date);
            case \\"uuid\\":
                return visitor.uuid(value.uuid);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExamplePrimitive.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleSingleUnionType {
    wireDiscriminantValue: string;
    properties: FernApi.ExampleSingleUnionTypeProperties;
}
",
                        "name": "ExampleSingleUnionType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleSingleUnionType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExampleSingleUnionTypeProperties = FernApi.ExampleSingleUnionTypeProperties.SamePropertiesAsObject | FernApi.ExampleSingleUnionTypeProperties.SingleProperty | FernApi.ExampleSingleUnionTypeProperties.NoProperties;
export declare namespace ExampleSingleUnionTypeProperties {
    interface SamePropertiesAsObject extends FernApi.ExampleNamedType, _Utils {
        type: \\"samePropertiesAsObject\\";
    }
    interface SingleProperty extends FernApi.ExampleTypeReference, _Utils {
        type: \\"singleProperty\\";
    }
    interface NoProperties extends _Utils {
        type: \\"noProperties\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        samePropertiesAsObject: (value: FernApi.ExampleNamedType) => _Result;
        singleProperty: (value: FernApi.ExampleTypeReference) => _Result;
        noProperties: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExampleSingleUnionTypeProperties: {
    readonly samePropertiesAsObject: (value: FernApi.ExampleNamedType) => FernApi.ExampleSingleUnionTypeProperties.SamePropertiesAsObject;
    readonly singleProperty: (value: FernApi.ExampleTypeReference) => FernApi.ExampleSingleUnionTypeProperties.SingleProperty;
    readonly noProperties: () => FernApi.ExampleSingleUnionTypeProperties.NoProperties;
    readonly _visit: <_Result>(value: FernApi.ExampleSingleUnionTypeProperties, visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>) => _Result;
};
",
                        "name": "ExampleSingleUnionTypeProperties.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleSingleUnionTypeProperties = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExampleSingleUnionTypeProperties = {
    samePropertiesAsObject: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"samePropertiesAsObject\\", _visit: function (visitor) {
                return FernApi.ExampleSingleUnionTypeProperties._visit(this, visitor);
            } });
    },
    singleProperty: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"singleProperty\\", _visit: function (visitor) {
                return FernApi.ExampleSingleUnionTypeProperties._visit(this, visitor);
            } });
    },
    noProperties: () => {
        return {
            type: \\"noProperties\\",
            _visit: function (visitor) {
                return FernApi.ExampleSingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"samePropertiesAsObject\\":
                return visitor.samePropertiesAsObject(value);
            case \\"singleProperty\\":
                return visitor.singleProperty(value);
            case \\"noProperties\\":
                return visitor.noProperties();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExampleSingleUnionTypeProperties.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleType extends FernApi.WithJsonExample, FernApi.WithDocs {
    name: FernApi.Name | undefined;
    shape: FernApi.ExampleTypeShape;
}
",
                        "name": "ExampleType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExampleTypeReference extends FernApi.WithJsonExample {
    shape: FernApi.ExampleTypeReferenceShape;
}
",
                        "name": "ExampleTypeReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExampleTypeReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExampleTypeReferenceShape = FernApi.ExampleTypeReferenceShape.Primitive | FernApi.ExampleTypeReferenceShape.Container | FernApi.ExampleTypeReferenceShape.Unknown | FernApi.ExampleTypeReferenceShape.Named;
export declare namespace ExampleTypeReferenceShape {
    interface Primitive extends _Utils {
        type: \\"primitive\\";
        primitive: FernApi.ExamplePrimitive;
    }
    interface Container extends _Utils {
        type: \\"container\\";
        container: FernApi.ExampleContainer;
    }
    interface Unknown extends _Utils {
        type: \\"unknown\\";
        unknown: unknown;
    }
    interface Named extends FernApi.ExampleNamedType, _Utils {
        type: \\"named\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        primitive: (value: FernApi.ExamplePrimitive) => _Result;
        container: (value: FernApi.ExampleContainer) => _Result;
        unknown: (value: unknown) => _Result;
        named: (value: FernApi.ExampleNamedType) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExampleTypeReferenceShape: {
    readonly primitive: (value: FernApi.ExamplePrimitive) => FernApi.ExampleTypeReferenceShape.Primitive;
    readonly container: (value: FernApi.ExampleContainer) => FernApi.ExampleTypeReferenceShape.Container;
    readonly unknown: (value?: unknown) => FernApi.ExampleTypeReferenceShape.Unknown;
    readonly named: (value: FernApi.ExampleNamedType) => FernApi.ExampleTypeReferenceShape.Named;
    readonly _visit: <_Result>(value: FernApi.ExampleTypeReferenceShape, visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>) => _Result;
};
",
                        "name": "ExampleTypeReferenceShape.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleTypeReferenceShape = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExampleTypeReferenceShape = {
    primitive: (value) => {
        return {
            primitive: value,
            type: \\"primitive\\",
            _visit: function (visitor) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },
    container: (value) => {
        return {
            container: value,
            type: \\"container\\",
            _visit: function (visitor) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },
    unknown: (value) => {
        return {
            unknown: value,
            type: \\"unknown\\",
            _visit: function (visitor) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },
    named: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"named\\", _visit: function (visitor) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"primitive\\":
                return visitor.primitive(value.primitive);
            case \\"container\\":
                return visitor.container(value.container);
            case \\"unknown\\":
                return visitor.unknown(value.unknown);
            case \\"named\\":
                return visitor.named(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExampleTypeReferenceShape.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExampleTypeShape = FernApi.ExampleTypeShape.Alias | FernApi.ExampleTypeShape.Enum | FernApi.ExampleTypeShape.Object_ | FernApi.ExampleTypeShape.Union;
export declare namespace ExampleTypeShape {
    interface Alias extends FernApi.ExampleAliasType, _Utils {
        type: \\"alias\\";
    }
    interface Enum extends FernApi.ExampleEnumType, _Utils {
        type: \\"enum\\";
    }
    interface Object_ extends FernApi.ExampleObjectType, _Utils {
        type: \\"object\\";
    }
    interface Union extends FernApi.ExampleSingleUnionType, _Utils {
        type: \\"union\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleTypeShape._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        alias: (value: FernApi.ExampleAliasType) => _Result;
        enum: (value: FernApi.ExampleEnumType) => _Result;
        object: (value: FernApi.ExampleObjectType) => _Result;
        union: (value: FernApi.ExampleSingleUnionType) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExampleTypeShape: {
    readonly alias: (value: FernApi.ExampleAliasType) => FernApi.ExampleTypeShape.Alias;
    readonly enum: (value: FernApi.ExampleEnumType) => FernApi.ExampleTypeShape.Enum;
    readonly object: (value: FernApi.ExampleObjectType) => FernApi.ExampleTypeShape.Object_;
    readonly union: (value: FernApi.ExampleSingleUnionType) => FernApi.ExampleTypeShape.Union;
    readonly _visit: <_Result>(value: FernApi.ExampleTypeShape, visitor: FernApi.ExampleTypeShape._Visitor<_Result>) => _Result;
};
",
                        "name": "ExampleTypeShape.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleTypeShape = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ExampleTypeShape = {
    alias: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"alias\\", _visit: function (visitor) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            } });
    },
    enum: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"enum\\", _visit: function (visitor) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            } });
    },
    object: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"object\\", _visit: function (visitor) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            } });
    },
    union: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"union\\", _visit: function (visitor) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"alias\\":
                return visitor.alias(value);
            case \\"enum\\":
                return visitor.enum(value);
            case \\"object\\":
                return visitor.object(value);
            case \\"union\\":
                return visitor.union(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExampleTypeShape.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type Literal = FernApi.Literal.String;
export declare namespace Literal {
    interface String extends _Utils {
        type: \\"string\\";
        string: string;
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.Literal._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        string: (value: string) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const Literal: {
    readonly string: (value: string) => FernApi.Literal.String;
    readonly _visit: <_Result>(value: FernApi.Literal, visitor: FernApi.Literal._Visitor<_Result>) => _Result;
};
",
                        "name": "Literal.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Literal = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.Literal = {
    string: (value) => {
        return {
            string: value,
            type: \\"string\\",
            _visit: function (visitor) {
                return FernApi.Literal._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"string\\":
                return visitor.string(value.string);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "Literal.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface MapType {
    keyType: FernApi.TypeReference;
    valueType: FernApi.TypeReference;
}
",
                        "name": "MapType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ObjectProperty extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
}
",
                        "name": "ObjectProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ObjectProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ObjectTypeDeclaration {
    /** A list of other types to inherit from */
    extends_: FernApi.DeclaredTypeName[];
    properties: FernApi.ObjectProperty[];
}
",
                        "name": "ObjectTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ObjectTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type PrimitiveType = \\"INTEGER\\" | \\"DOUBLE\\" | \\"STRING\\" | \\"BOOLEAN\\"
/**
 * Within the range -2^53 to 2^53 */
 | \\"LONG\\" | \\"DATE_TIME\\" | \\"DATE\\" | \\"UUID\\" | \\"BASE_64\\";
export declare const PrimitiveType: {
    readonly Integer: \\"INTEGER\\";
    readonly Double: \\"DOUBLE\\";
    readonly String: \\"STRING\\";
    readonly Boolean: \\"BOOLEAN\\";
    readonly Long: \\"LONG\\";
    readonly DateTime: \\"DATE_TIME\\";
    readonly Date: \\"DATE\\";
    readonly Uuid: \\"UUID\\";
    readonly Base64: \\"BASE_64\\";
};
",
                        "name": "PrimitiveType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PrimitiveType = void 0;
exports.PrimitiveType = {
    Integer: \\"INTEGER\\",
    Double: \\"DOUBLE\\",
    String: \\"STRING\\",
    Boolean: \\"BOOLEAN\\",
    Long: \\"LONG\\",
    DateTime: \\"DATE_TIME\\",
    Date: \\"DATE\\",
    Uuid: \\"UUID\\",
    Base64: \\"BASE_64\\",
};
",
                        "name": "PrimitiveType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ResolvedNamedType {
    name: FernApi.DeclaredTypeName;
    shape: FernApi.ShapeType;
}
",
                        "name": "ResolvedNamedType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ResolvedNamedType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ResolvedTypeReference = FernApi.ResolvedTypeReference.Container | FernApi.ResolvedTypeReference.Named | FernApi.ResolvedTypeReference.Primitive | FernApi.ResolvedTypeReference.Unknown;
export declare namespace ResolvedTypeReference {
    interface Container extends _Utils {
        type: \\"container\\";
        container: FernApi.ContainerType;
    }
    interface Named extends FernApi.ResolvedNamedType, _Utils {
        type: \\"named\\";
    }
    interface Primitive extends _Utils {
        type: \\"primitive\\";
        primitive: FernApi.PrimitiveType;
    }
    interface Unknown extends _Utils {
        type: \\"unknown\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ResolvedTypeReference._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        container: (value: FernApi.ContainerType) => _Result;
        named: (value: FernApi.ResolvedNamedType) => _Result;
        primitive: (value: FernApi.PrimitiveType) => _Result;
        unknown: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ResolvedTypeReference: {
    readonly container: (value: FernApi.ContainerType) => FernApi.ResolvedTypeReference.Container;
    readonly named: (value: FernApi.ResolvedNamedType) => FernApi.ResolvedTypeReference.Named;
    readonly primitive: (value: FernApi.PrimitiveType) => FernApi.ResolvedTypeReference.Primitive;
    readonly unknown: () => FernApi.ResolvedTypeReference.Unknown;
    readonly _visit: <_Result>(value: FernApi.ResolvedTypeReference, visitor: FernApi.ResolvedTypeReference._Visitor<_Result>) => _Result;
};
",
                        "name": "ResolvedTypeReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ResolvedTypeReference = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.ResolvedTypeReference = {
    container: (value) => {
        return {
            container: value,
            type: \\"container\\",
            _visit: function (visitor) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },
    named: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"named\\", _visit: function (visitor) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            } });
    },
    primitive: (value) => {
        return {
            primitive: value,
            type: \\"primitive\\",
            _visit: function (visitor) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },
    unknown: () => {
        return {
            type: \\"unknown\\",
            _visit: function (visitor) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"container\\":
                return visitor.container(value.container);
            case \\"named\\":
                return visitor.named(value);
            case \\"primitive\\":
                return visitor.primitive(value.primitive);
            case \\"unknown\\":
                return visitor.unknown();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ResolvedTypeReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ShapeType = \\"ENUM\\" | \\"OBJECT\\" | \\"UNION\\" | \\"UNDISCRIMINATED_UNION\\";
export declare const ShapeType: {
    readonly Enum: \\"ENUM\\";
    readonly Object: \\"OBJECT\\";
    readonly Union: \\"UNION\\";
    readonly UndiscriminatedUnion: \\"UNDISCRIMINATED_UNION\\";
};
",
                        "name": "ShapeType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ShapeType = void 0;
exports.ShapeType = {
    Enum: \\"ENUM\\",
    Object: \\"OBJECT\\",
    Union: \\"UNION\\",
    UndiscriminatedUnion: \\"UNDISCRIMINATED_UNION\\",
};
",
                        "name": "ShapeType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SingleUnionType extends FernApi.WithDocs {
    discriminantValue: FernApi.NameAndWireValue;
    shape: FernApi.SingleUnionTypeProperties;
}
",
                        "name": "SingleUnionType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SingleUnionType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SingleUnionTypeProperties = FernApi.SingleUnionTypeProperties.SamePropertiesAsObject | FernApi.SingleUnionTypeProperties.SingleProperty | FernApi.SingleUnionTypeProperties.NoProperties;
export declare namespace SingleUnionTypeProperties {
    interface SamePropertiesAsObject extends FernApi.DeclaredTypeName, _Utils {
        propertiesType: \\"samePropertiesAsObject\\";
    }
    interface SingleProperty extends FernApi.SingleUnionTypeProperty, _Utils {
        propertiesType: \\"singleProperty\\";
    }
    interface NoProperties extends _Utils {
        propertiesType: \\"noProperties\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        samePropertiesAsObject: (value: FernApi.DeclaredTypeName) => _Result;
        singleProperty: (value: FernApi.SingleUnionTypeProperty) => _Result;
        noProperties: () => _Result;
        _other: (value: {
            propertiesType: string;
        }) => _Result;
    }
}
export declare const SingleUnionTypeProperties: {
    readonly samePropertiesAsObject: (value: FernApi.DeclaredTypeName) => FernApi.SingleUnionTypeProperties.SamePropertiesAsObject;
    readonly singleProperty: (value: FernApi.SingleUnionTypeProperty) => FernApi.SingleUnionTypeProperties.SingleProperty;
    readonly noProperties: () => FernApi.SingleUnionTypeProperties.NoProperties;
    readonly _visit: <_Result>(value: FernApi.SingleUnionTypeProperties, visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>) => _Result;
};
",
                        "name": "SingleUnionTypeProperties.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SingleUnionTypeProperties = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.SingleUnionTypeProperties = {
    samePropertiesAsObject: (value) => {
        return Object.assign(Object.assign({}, value), { propertiesType: \\"samePropertiesAsObject\\", _visit: function (visitor) {
                return FernApi.SingleUnionTypeProperties._visit(this, visitor);
            } });
    },
    singleProperty: (value) => {
        return Object.assign(Object.assign({}, value), { propertiesType: \\"singleProperty\\", _visit: function (visitor) {
                return FernApi.SingleUnionTypeProperties._visit(this, visitor);
            } });
    },
    noProperties: () => {
        return {
            propertiesType: \\"noProperties\\",
            _visit: function (visitor) {
                return FernApi.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.propertiesType) {
            case \\"samePropertiesAsObject\\":
                return visitor.samePropertiesAsObject(value);
            case \\"singleProperty\\":
                return visitor.singleProperty(value);
            case \\"noProperties\\":
                return visitor.noProperties();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SingleUnionTypeProperties.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SingleUnionTypeProperty {
    name: FernApi.NameAndWireValue;
    type_: FernApi.TypeReference;
}
",
                        "name": "SingleUnionTypeProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SingleUnionTypeProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type Type = FernApi.Type.Alias | FernApi.Type.Enum | FernApi.Type.Object_ | FernApi.Type.Union | FernApi.Type.UndiscriminatedUnion;
export declare namespace Type {
    interface Alias extends FernApi.AliasTypeDeclaration, _Utils {
        type: \\"alias\\";
    }
    interface Enum extends FernApi.EnumTypeDeclaration, _Utils {
        type: \\"enum\\";
    }
    interface Object_ extends FernApi.ObjectTypeDeclaration, _Utils {
        type: \\"object\\";
    }
    interface Union extends FernApi.UnionTypeDeclaration, _Utils {
        type: \\"union\\";
    }
    interface UndiscriminatedUnion extends FernApi.UndiscriminatedUnionTypeDeclaration, _Utils {
        type: \\"undiscriminatedUnion\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.Type._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        alias: (value: FernApi.AliasTypeDeclaration) => _Result;
        enum: (value: FernApi.EnumTypeDeclaration) => _Result;
        object: (value: FernApi.ObjectTypeDeclaration) => _Result;
        union: (value: FernApi.UnionTypeDeclaration) => _Result;
        undiscriminatedUnion: (value: FernApi.UndiscriminatedUnionTypeDeclaration) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const Type: {
    readonly alias: (value: FernApi.AliasTypeDeclaration) => FernApi.Type.Alias;
    readonly enum: (value: FernApi.EnumTypeDeclaration) => FernApi.Type.Enum;
    readonly object: (value: FernApi.ObjectTypeDeclaration) => FernApi.Type.Object_;
    readonly union: (value: FernApi.UnionTypeDeclaration) => FernApi.Type.Union;
    readonly undiscriminatedUnion: (value: FernApi.UndiscriminatedUnionTypeDeclaration) => FernApi.Type.UndiscriminatedUnion;
    readonly _visit: <_Result>(value: FernApi.Type, visitor: FernApi.Type._Visitor<_Result>) => _Result;
};
",
                        "name": "Type.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Type = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.Type = {
    alias: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"alias\\", _visit: function (visitor) {
                return FernApi.Type._visit(this, visitor);
            } });
    },
    enum: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"enum\\", _visit: function (visitor) {
                return FernApi.Type._visit(this, visitor);
            } });
    },
    object: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"object\\", _visit: function (visitor) {
                return FernApi.Type._visit(this, visitor);
            } });
    },
    union: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"union\\", _visit: function (visitor) {
                return FernApi.Type._visit(this, visitor);
            } });
    },
    undiscriminatedUnion: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"undiscriminatedUnion\\", _visit: function (visitor) {
                return FernApi.Type._visit(this, visitor);
            } });
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"alias\\":
                return visitor.alias(value);
            case \\"enum\\":
                return visitor.enum(value);
            case \\"object\\":
                return visitor.object(value);
            case \\"union\\":
                return visitor.union(value);
            case \\"undiscriminatedUnion\\":
                return visitor.undiscriminatedUnion(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "Type.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
/**
 * A type, which is a name and a shape
 */
export interface TypeDeclaration extends FernApi.Declaration {
    name: FernApi.DeclaredTypeName;
    shape: FernApi.Type;
    examples: FernApi.ExampleType[];
    /** All other named types that this type references (directly or indirectly) */
    referencedTypes: FernApi.DeclaredTypeName[];
}
",
                        "name": "TypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type TypeReference = FernApi.TypeReference.Container | FernApi.TypeReference.Named | FernApi.TypeReference.Primitive | FernApi.TypeReference.Unknown;
export declare namespace TypeReference {
    interface Container extends _Utils {
        type: \\"container\\";
        container: FernApi.ContainerType;
    }
    interface Named extends FernApi.DeclaredTypeName, _Utils {
        type: \\"named\\";
    }
    interface Primitive extends _Utils {
        type: \\"primitive\\";
        primitive: FernApi.PrimitiveType;
    }
    interface Unknown extends _Utils {
        type: \\"unknown\\";
    }
    interface _Utils {
        _visit: <_Result>(visitor: FernApi.TypeReference._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        container: (value: FernApi.ContainerType) => _Result;
        named: (value: FernApi.DeclaredTypeName) => _Result;
        primitive: (value: FernApi.PrimitiveType) => _Result;
        unknown: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TypeReference: {
    readonly container: (value: FernApi.ContainerType) => FernApi.TypeReference.Container;
    readonly named: (value: FernApi.DeclaredTypeName) => FernApi.TypeReference.Named;
    readonly primitive: (value: FernApi.PrimitiveType) => FernApi.TypeReference.Primitive;
    readonly unknown: () => FernApi.TypeReference.Unknown;
    readonly _visit: <_Result>(value: FernApi.TypeReference, visitor: FernApi.TypeReference._Visitor<_Result>) => _Result;
};
",
                        "name": "TypeReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TypeReference = void 0;
const FernApi = __importStar(require(\\"../../..\\"));
exports.TypeReference = {
    container: (value) => {
        return {
            container: value,
            type: \\"container\\",
            _visit: function (visitor) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },
    named: (value) => {
        return Object.assign(Object.assign({}, value), { type: \\"named\\", _visit: function (visitor) {
                return FernApi.TypeReference._visit(this, visitor);
            } });
    },
    primitive: (value) => {
        return {
            primitive: value,
            type: \\"primitive\\",
            _visit: function (visitor) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },
    unknown: () => {
        return {
            type: \\"unknown\\",
            _visit: function (visitor) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"container\\":
                return visitor.container(value.container);
            case \\"named\\":
                return visitor.named(value);
            case \\"primitive\\":
                return visitor.primitive(value.primitive);
            case \\"unknown\\":
                return visitor.unknown();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "TypeReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface UndiscriminatedUnionMember extends FernApi.WithDocs {
    type_: FernApi.TypeReference;
}
",
                        "name": "UndiscriminatedUnionMember.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UndiscriminatedUnionMember.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface UndiscriminatedUnionTypeDeclaration {
    members: FernApi.UndiscriminatedUnionMember[];
}
",
                        "name": "UndiscriminatedUnionTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UndiscriminatedUnionTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface UnionTypeDeclaration {
    discriminant: FernApi.NameAndWireValue;
    /** A list of other types to inherit from */
    extends_: FernApi.DeclaredTypeName[];
    types: FernApi.SingleUnionType[];
    baseProperties: FernApi.ObjectProperty[];
}
",
                        "name": "UnionTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UnionTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TypeDeclaration\\";
export * from \\"./DeclaredTypeName\\";
export * from \\"./Type\\";
export * from \\"./AliasTypeDeclaration\\";
export * from \\"./ResolvedTypeReference\\";
export * from \\"./ResolvedNamedType\\";
export * from \\"./ShapeType\\";
export * from \\"./EnumTypeDeclaration\\";
export * from \\"./EnumValue\\";
export * from \\"./ObjectTypeDeclaration\\";
export * from \\"./ObjectProperty\\";
export * from \\"./UnionTypeDeclaration\\";
export * from \\"./SingleUnionType\\";
export * from \\"./SingleUnionTypeProperties\\";
export * from \\"./SingleUnionTypeProperty\\";
export * from \\"./UndiscriminatedUnionTypeDeclaration\\";
export * from \\"./UndiscriminatedUnionMember\\";
export * from \\"./TypeReference\\";
export * from \\"./ContainerType\\";
export * from \\"./MapType\\";
export * from \\"./PrimitiveType\\";
export * from \\"./Literal\\";
export * from \\"./ExampleType\\";
export * from \\"./ExampleTypeShape\\";
export * from \\"./ExampleAliasType\\";
export * from \\"./ExampleEnumType\\";
export * from \\"./ExampleObjectType\\";
export * from \\"./ExampleObjectProperty\\";
export * from \\"./ExampleSingleUnionType\\";
export * from \\"./ExampleSingleUnionTypeProperties\\";
export * from \\"./ExampleTypeReference\\";
export * from \\"./ExampleTypeReferenceShape\\";
export * from \\"./ExampleContainer\\";
export * from \\"./ExampleKeyValuePair\\";
export * from \\"./ExamplePrimitive\\";
export * from \\"./ExampleNamedType\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TypeDeclaration\\"), exports);
__exportStar(require(\\"./DeclaredTypeName\\"), exports);
__exportStar(require(\\"./Type\\"), exports);
__exportStar(require(\\"./AliasTypeDeclaration\\"), exports);
__exportStar(require(\\"./ResolvedTypeReference\\"), exports);
__exportStar(require(\\"./ResolvedNamedType\\"), exports);
__exportStar(require(\\"./ShapeType\\"), exports);
__exportStar(require(\\"./EnumTypeDeclaration\\"), exports);
__exportStar(require(\\"./EnumValue\\"), exports);
__exportStar(require(\\"./ObjectTypeDeclaration\\"), exports);
__exportStar(require(\\"./ObjectProperty\\"), exports);
__exportStar(require(\\"./UnionTypeDeclaration\\"), exports);
__exportStar(require(\\"./SingleUnionType\\"), exports);
__exportStar(require(\\"./SingleUnionTypeProperties\\"), exports);
__exportStar(require(\\"./SingleUnionTypeProperty\\"), exports);
__exportStar(require(\\"./UndiscriminatedUnionTypeDeclaration\\"), exports);
__exportStar(require(\\"./UndiscriminatedUnionMember\\"), exports);
__exportStar(require(\\"./TypeReference\\"), exports);
__exportStar(require(\\"./ContainerType\\"), exports);
__exportStar(require(\\"./MapType\\"), exports);
__exportStar(require(\\"./PrimitiveType\\"), exports);
__exportStar(require(\\"./Literal\\"), exports);
__exportStar(require(\\"./ExampleType\\"), exports);
__exportStar(require(\\"./ExampleTypeShape\\"), exports);
__exportStar(require(\\"./ExampleAliasType\\"), exports);
__exportStar(require(\\"./ExampleEnumType\\"), exports);
__exportStar(require(\\"./ExampleObjectType\\"), exports);
__exportStar(require(\\"./ExampleObjectProperty\\"), exports);
__exportStar(require(\\"./ExampleSingleUnionType\\"), exports);
__exportStar(require(\\"./ExampleSingleUnionTypeProperties\\"), exports);
__exportStar(require(\\"./ExampleTypeReference\\"), exports);
__exportStar(require(\\"./ExampleTypeReferenceShape\\"), exports);
__exportStar(require(\\"./ExampleContainer\\"), exports);
__exportStar(require(\\"./ExampleKeyValuePair\\"), exports);
__exportStar(require(\\"./ExamplePrimitive\\"), exports);
__exportStar(require(\\"./ExampleNamedType\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "types",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface VariableDeclaration extends FernApi.WithDocs {
    id: FernApi.VariableId;
    name: FernApi.Name;
    type_: FernApi.TypeReference;
}
",
                        "name": "VariableDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "VariableDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type VariableId = string;
",
                        "name": "VariableId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "VariableId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./VariableId\\";
export * from \\"./VariableDeclaration\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./VariableId\\"), exports);
__exportStar(require(\\"./VariableDeclaration\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "variables",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * as serialization from \\"./schemas\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.serialization = void 0;
exports.serialization = __importStar(require(\\"./schemas\\"));
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";
export declare type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export declare type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export declare type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;
export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}
export declare const SchemaType: {
    readonly DATE: \\"date\\";
    readonly ENUM: \\"enum\\";
    readonly LIST: \\"list\\";
    readonly STRING_LITERAL: \\"stringLiteral\\";
    readonly OBJECT: \\"object\\";
    readonly ANY: \\"any\\";
    readonly BOOLEAN: \\"boolean\\";
    readonly NUMBER: \\"number\\";
    readonly STRING: \\"string\\";
    readonly UNKNOWN: \\"unknown\\";
    readonly RECORD: \\"record\\";
    readonly SET: \\"set\\";
    readonly UNION: \\"union\\";
    readonly UNDISCRIMINATED_UNION: \\"undiscriminatedUnion\\";
    readonly OPTIONAL: \\"optional\\";
};
export declare type SchemaType = typeof SchemaType[keyof typeof SchemaType];
export declare type MaybeValid<T> = Valid<T> | Invalid;
export interface Valid<T> {
    ok: true;
    value: T;
}
export interface Invalid {
    ok: false;
    errors: ValidationError[];
}
export interface ValidationError {
    path: string[];
    message: string;
}
export interface SchemaOptions {
    /**
     * how to handle unrecognized keys in objects
     *
     * @default \\"fail\\"
     */
    unrecognizedObjectKeys?: \\"fail\\" | \\"passthrough\\" | \\"strip\\";
    /**
     * whether to fail when an unrecognized discriminant value is
     * encountered in a union
     *
     * @default false
     */
    allowUnrecognizedUnionMembers?: boolean;
    /**
     * whether to fail when an unrecognized enum value is encountered
     *
     * @default false
     */
    allowUnrecognizedEnumValues?: boolean;
    /**
     * whether to allow data that doesn't conform to the schema.
     * invalid data is passed through without transformation.
     *
     * when this is enabled, .parse() and .json() will always
     * return \`ok: true\`. \`.parseOrThrow()\` and \`.jsonOrThrow()\`
     * will never fail.
     *
     * @default false
     */
    skipValidation?: boolean;
    /**
     * each validation failure contains a \\"path\\" property, which is
     * the breadcrumbs to the offending node in the JSON. you can supply
     * a prefix that is prepended to all the errors' paths. this can be
     * helpful for zurg's internal debug logging.
     */
    breadcrumbsPrefix?: string[];
}
",
                "name": "Schema.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SchemaType = void 0;
exports.SchemaType = {
    DATE: \\"date\\",
    ENUM: \\"enum\\",
    LIST: \\"list\\",
    STRING_LITERAL: \\"stringLiteral\\",
    OBJECT: \\"object\\",
    ANY: \\"any\\",
    BOOLEAN: \\"boolean\\",
    NUMBER: \\"number\\",
    STRING: \\"string\\",
    UNKNOWN: \\"unknown\\",
    RECORD: \\"record\\",
    SET: \\"set\\",
    UNION: \\"union\\",
    UNDISCRIMINATED_UNION: \\"undiscriminatedUnion\\",
    OPTIONAL: \\"optional\\",
};
",
                "name": "Schema.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function date(): Schema<string, Date>;
",
                        "name": "date.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.date = void 0;
const Schema_1 = require(\\"../../Schema\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const schema_utils_1 = require(\\"../schema-utils\\");
// https://stackoverflow.com/questions/12756159/regex-and-iso8601-formatted-datetime
const ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
function date() {
    const baseSchema = {
        parse: (raw, { breadcrumbsPrefix = [] } = {}) => {
            if (typeof raw !== \\"string\\") {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(raw, \\"string\\"),
                        },
                    ],
                };
            }
            if (!ISO_8601_REGEX.test(raw)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(raw, \\"ISO 8601 date string\\"),
                        },
                    ],
                };
            }
            return {
                ok: true,
                value: new Date(raw),
            };
        },
        json: (date, { breadcrumbsPrefix = [] } = {}) => {
            if (date instanceof Date) {
                return {
                    ok: true,
                    value: date.toISOString(),
                };
            }
            else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(date, \\"Date object\\"),
                        },
                    ],
                };
            }
        },
        getType: () => Schema_1.SchemaType.DATE,
    };
    return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
}
exports.date = date;
",
                        "name": "date.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { date } from \\"./date\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.date = void 0;
var date_1 = require(\\"./date\\");
Object.defineProperty(exports, \\"date\\", { enumerable: true, get: function () { return date_1.date; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "date",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]>;
",
                        "name": "enum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.enum_ = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
function enum_(values) {
    const validValues = new Set(values);
    const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ENUM, (value, { allowUnrecognizedEnumValues, breadcrumbsPrefix = [] } = {}) => {
        if (typeof value !== \\"string\\") {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"string\\"),
                    },
                ],
            };
        }
        if (!validValues.has(value) && !allowUnrecognizedEnumValues) {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"enum\\"),
                    },
                ],
            };
        }
        return {
            ok: true,
            value: value,
        };
    });
    return schemaCreator();
}
exports.enum_ = enum_;
",
                        "name": "enum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { enum_ } from \\"./enum\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.enum_ = void 0;
var enum_1 = require(\\"./enum\\");
Object.defineProperty(exports, \\"enum_\\", { enumerable: true, get: function () { return enum_1.enum_; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "enum",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./undiscriminated-union\\";
export * from \\"./union\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./date\\"), exports);
__exportStar(require(\\"./enum\\"), exports);
__exportStar(require(\\"./lazy\\"), exports);
__exportStar(require(\\"./list\\"), exports);
__exportStar(require(\\"./literals\\"), exports);
__exportStar(require(\\"./object\\"), exports);
__exportStar(require(\\"./object-like\\"), exports);
__exportStar(require(\\"./primitives\\"), exports);
__exportStar(require(\\"./record\\"), exports);
__exportStar(require(\\"./schema-utils\\"), exports);
__exportStar(require(\\"./set\\"), exports);
__exportStar(require(\\"./undiscriminated-union\\"), exports);
__exportStar(require(\\"./union\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { lazy } from \\"./lazy\\";
export type { SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.lazyObject = exports.lazy = void 0;
var lazy_1 = require(\\"./lazy\\");
Object.defineProperty(exports, \\"lazy\\", { enumerable: true, get: function () { return lazy_1.lazy; } });
var lazyObject_1 = require(\\"./lazyObject\\");
Object.defineProperty(exports, \\"lazyObject\\", { enumerable: true, get: function () { return lazyObject_1.lazyObject; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;
export declare function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed>;
export declare function constructLazyBaseSchema<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): BaseSchema<Raw, Parsed>;
export declare function getMemoizedSchema<SchemaType extends Schema<any, any>>(getter: SchemaGetter<SchemaType>): Promise<SchemaType>;
",
                        "name": "lazy.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getMemoizedSchema = exports.constructLazyBaseSchema = exports.lazy = void 0;
const schema_utils_1 = require(\\"../schema-utils\\");
function lazy(getter) {
    const baseSchema = constructLazyBaseSchema(getter);
    return Object.assign(Object.assign({}, baseSchema), (0, schema_utils_1.getSchemaUtils)(baseSchema));
}
exports.lazy = lazy;
function constructLazyBaseSchema(getter) {
    return {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () { return (yield getMemoizedSchema(getter)).parse(raw, opts); }),
        json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () { return (yield getMemoizedSchema(getter)).json(parsed, opts); }),
        getType: () => __awaiter(this, void 0, void 0, function* () { return (yield getMemoizedSchema(getter)).getType(); }),
    };
}
exports.constructLazyBaseSchema = constructLazyBaseSchema;
function getMemoizedSchema(getter) {
    return __awaiter(this, void 0, void 0, function* () {
        const castedGetter = getter;
        if (castedGetter.__zurg_memoized == null) {
            castedGetter.__zurg_memoized = yield getter();
        }
        return castedGetter.__zurg_memoized;
    });
}
exports.getMemoizedSchema = getMemoizedSchema;
",
                        "name": "lazy.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ObjectSchema } from \\"../object/types\\";
import { SchemaGetter } from \\"./lazy\\";
export declare function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed>;
",
                        "name": "lazyObject.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.lazyObject = void 0;
const object_1 = require(\\"../object\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
const lazy_1 = require(\\"./lazy\\");
function lazyObject(getter) {
    const baseSchema = Object.assign(Object.assign({}, (0, lazy_1.constructLazyBaseSchema)(getter)), { _getRawProperties: () => __awaiter(this, void 0, void 0, function* () { return (yield (0, lazy_1.getMemoizedSchema)(getter))._getRawProperties(); }), _getParsedProperties: () => __awaiter(this, void 0, void 0, function* () { return (yield (0, lazy_1.getMemoizedSchema)(getter))._getParsedProperties(); }) });
    return Object.assign(Object.assign(Object.assign(Object.assign({}, baseSchema), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema)), (0, object_1.getObjectUtils)(baseSchema));
}
exports.lazyObject = lazyObject;
",
                        "name": "lazyObject.js",
                        "type": "file",
                      },
                    ],
                    "name": "lazy",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { list } from \\"./list\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.list = void 0;
var list_1 = require(\\"./list\\");
Object.defineProperty(exports, \\"list\\", { enumerable: true, get: function () { return list_1.list; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]>;
",
                        "name": "list.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.list = void 0;
const Schema_1 = require(\\"../../Schema\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function list(schema) {
    const baseSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            return validateAndTransformArray(raw, (item, index) => {
                var _a;
                return schema.parse(item, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), \`[\${index}]\`] }));
            });
        }),
        json: (parsed, opts) => validateAndTransformArray(parsed, (item, index) => {
            var _a;
            return schema.json(item, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), \`[\${index}]\`] }));
        }),
        getType: () => Schema_1.SchemaType.LIST,
    };
    return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
}
exports.list = list;
function validateAndTransformArray(value, transformItem) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!Array.isArray(value)) {
            return {
                ok: false,
                errors: [
                    {
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"list\\"),
                        path: [],
                    },
                ],
            };
        }
        const maybeValidItems = yield Promise.all(value.map((item, index) => transformItem(item, index)));
        return maybeValidItems.reduce((acc, item) => {
            if (acc.ok && item.ok) {
                return {
                    ok: true,
                    value: [...acc.value, item.value],
                };
            }
            const errors = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!item.ok) {
                errors.push(...item.errors);
            }
            return {
                ok: false,
                errors,
            };
        }, { ok: true, value: [] });
    });
}
",
                        "name": "list.js",
                        "type": "file",
                      },
                    ],
                    "name": "list",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringLiteral = void 0;
var stringLiteral_1 = require(\\"./stringLiteral\\");
Object.defineProperty(exports, \\"stringLiteral\\", { enumerable: true, get: function () { return stringLiteral_1.stringLiteral; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function stringLiteral<V extends string>(literal: V): Schema<V, V>;
",
                        "name": "stringLiteral.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringLiteral = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
function stringLiteral(literal) {
    const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING_LITERAL, (value, { breadcrumbsPrefix = [] } = {}) => {
        if (value === literal) {
            return {
                ok: true,
                value: literal,
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \`\\"\${literal}\\"\`),
                    },
                ],
            };
        }
    });
    return schemaCreator();
}
exports.stringLiteral = stringLiteral;
",
                        "name": "stringLiteral.js",
                        "type": "file",
                      },
                    ],
                    "name": "literals",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { getObjectUtils, object } from \\"./object\\";
export { objectWithoutOptionalProperties } from \\"./objectWithoutOptionalProperties\\";
export type { inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas, inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas, } from \\"./objectWithoutOptionalProperties\\";
export { isProperty, property } from \\"./property\\";
export type { Property } from \\"./property\\";
export type { BaseObjectSchema, inferObjectSchemaFromPropertySchemas, inferParsedObject, inferParsedObjectFromPropertySchemas, inferParsedPropertySchema, inferRawKey, inferRawObject, inferRawObjectFromPropertySchemas, inferRawPropertySchema, ObjectSchema, ObjectUtils, PropertySchemas, } from \\"./types\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.property = exports.isProperty = exports.objectWithoutOptionalProperties = exports.object = exports.getObjectUtils = void 0;
var object_1 = require(\\"./object\\");
Object.defineProperty(exports, \\"getObjectUtils\\", { enumerable: true, get: function () { return object_1.getObjectUtils; } });
Object.defineProperty(exports, \\"object\\", { enumerable: true, get: function () { return object_1.object; } });
var objectWithoutOptionalProperties_1 = require(\\"./objectWithoutOptionalProperties\\");
Object.defineProperty(exports, \\"objectWithoutOptionalProperties\\", { enumerable: true, get: function () { return objectWithoutOptionalProperties_1.objectWithoutOptionalProperties; } });
var property_1 = require(\\"./property\\");
Object.defineProperty(exports, \\"isProperty\\", { enumerable: true, get: function () { return property_1.isProperty; } });
Object.defineProperty(exports, \\"property\\", { enumerable: true, get: function () { return property_1.property; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseObjectSchema, inferObjectSchemaFromPropertySchemas, ObjectUtils, PropertySchemas } from \\"./types\\";
export declare function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(schemas: T): inferObjectSchemaFromPropertySchemas<T>;
export declare function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed>;
",
                        "name": "object.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getObjectUtils = exports.object = void 0;
const Schema_1 = require(\\"../../Schema\\");
const entries_1 = require(\\"../../utils/entries\\");
const filterObject_1 = require(\\"../../utils/filterObject\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const keys_1 = require(\\"../../utils/keys\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const partition_1 = require(\\"../../utils/partition\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
const property_1 = require(\\"./property\\");
function object(schemas) {
    const baseSchema = {
        _getRawProperties: () => Promise.resolve(Object.entries(schemas).map(([parsedKey, propertySchema]) => (0, property_1.isProperty)(propertySchema) ? propertySchema.rawKey : parsedKey)),
        _getParsedProperties: () => Promise.resolve((0, keys_1.keys)(schemas)),
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            const rawKeyToProperty = {};
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
                const rawKey = (0, property_1.isProperty)(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
                const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;
                const property = {
                    rawKey,
                    parsedKey: parsedKey,
                    valueSchema,
                };
                rawKeyToProperty[rawKey] = property;
                if (yield isSchemaRequired(valueSchema)) {
                    requiredKeys.push(rawKey);
                }
            }
            return validateAndTransformObject({
                value: raw,
                requiredKeys,
                getProperty: (rawKey) => {
                    const property = rawKeyToProperty[rawKey];
                    if (property == null) {
                        return undefined;
                    }
                    return {
                        transformedKey: property.parsedKey,
                        transform: (propertyValue) => {
                            var _a;
                            return property.valueSchema.parse(propertyValue, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), rawKey] }));
                        },
                    };
                },
                unrecognizedObjectKeys: opts === null || opts === void 0 ? void 0 : opts.unrecognizedObjectKeys,
                skipValidation: opts === null || opts === void 0 ? void 0 : opts.skipValidation,
                breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix,
            });
        }),
        json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
                const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;
                if (yield isSchemaRequired(valueSchema)) {
                    requiredKeys.push(parsedKey);
                }
            }
            return validateAndTransformObject({
                value: parsed,
                requiredKeys,
                getProperty: (parsedKey) => {
                    const property = schemas[parsedKey];
                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                    if (property == null) {
                        return undefined;
                    }
                    if ((0, property_1.isProperty)(property)) {
                        return {
                            transformedKey: property.rawKey,
                            transform: (propertyValue) => {
                                var _a;
                                return property.valueSchema.json(propertyValue, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), parsedKey] }));
                            },
                        };
                    }
                    else {
                        return {
                            transformedKey: parsedKey,
                            transform: (propertyValue) => {
                                var _a;
                                return property.json(propertyValue, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), parsedKey] }));
                            },
                        };
                    }
                },
                unrecognizedObjectKeys: opts === null || opts === void 0 ? void 0 : opts.unrecognizedObjectKeys,
                skipValidation: opts === null || opts === void 0 ? void 0 : opts.skipValidation,
                breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix,
            });
        }),
        getType: () => Schema_1.SchemaType.OBJECT,
    };
    return Object.assign(Object.assign(Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema)), getObjectUtils(baseSchema));
}
exports.object = object;
function validateAndTransformObject({ value, requiredKeys, getProperty, unrecognizedObjectKeys = \\"fail\\", skipValidation = false, breadcrumbsPrefix = [], }) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!(0, isPlainObject_1.isPlainObject)(value)) {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"object\\"),
                    },
                ],
            };
        }
        const missingRequiredKeys = new Set(requiredKeys);
        const errors = [];
        const transformed = {};
        for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
            const property = getProperty(preTransformedKey);
            if (property != null) {
                missingRequiredKeys.delete(preTransformedKey);
                const value = yield property.transform(preTransformedItemValue);
                if (value.ok) {
                    transformed[property.transformedKey] = value.value;
                }
                else {
                    transformed[preTransformedKey] = preTransformedItemValue;
                    errors.push(...value.errors);
                }
            }
            else {
                switch (unrecognizedObjectKeys) {
                    case \\"fail\\":
                        errors.push({
                            path: [...breadcrumbsPrefix, preTransformedKey],
                            message: \`Unexpected key \\"\${preTransformedKey}\\"\`,
                        });
                        break;
                    case \\"strip\\":
                        break;
                    case \\"passthrough\\":
                        transformed[preTransformedKey] = preTransformedItemValue;
                        break;
                }
            }
        }
        errors.push(...requiredKeys
            .filter((key) => missingRequiredKeys.has(key))
            .map((key) => ({
            path: breadcrumbsPrefix,
            message: \`Missing required key \\"\${key}\\"\`,
        })));
        if (errors.length === 0 || skipValidation) {
            return {
                ok: true,
                value: transformed,
            };
        }
        else {
            return {
                ok: false,
                errors,
            };
        }
    });
}
function getObjectUtils(schema) {
    return {
        extend: (extension) => {
            const baseSchema = {
                _getParsedProperties: () => __awaiter(this, void 0, void 0, function* () {
                    return [
                        ...(yield schema._getParsedProperties()),
                        ...(yield extension._getParsedProperties()),
                    ];
                }),
                _getRawProperties: () => __awaiter(this, void 0, void 0, function* () {
                    return [
                        ...(yield schema._getRawProperties()),
                        ...(yield extension._getRawProperties()),
                    ];
                }),
                parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
                    return validateAndTransformExtendedObject({
                        extensionKeys: yield extension._getRawProperties(),
                        value: raw,
                        transformBase: (rawBase) => schema.parse(rawBase, opts),
                        transformExtension: (rawExtension) => extension.parse(rawExtension, opts),
                    });
                }),
                json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
                    return validateAndTransformExtendedObject({
                        extensionKeys: yield extension._getParsedProperties(),
                        value: parsed,
                        transformBase: (parsedBase) => schema.json(parsedBase, opts),
                        transformExtension: (parsedExtension) => extension.json(parsedExtension, opts),
                    });
                }),
                getType: () => Schema_1.SchemaType.OBJECT,
            };
            return Object.assign(Object.assign(Object.assign(Object.assign({}, baseSchema), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema)), getObjectUtils(baseSchema));
        },
    };
}
exports.getObjectUtils = getObjectUtils;
function validateAndTransformExtendedObject({ extensionKeys, value, transformBase, transformExtension, }) {
    return __awaiter(this, void 0, void 0, function* () {
        const extensionPropertiesSet = new Set(extensionKeys);
        const [extensionProperties, baseProperties] = (0, partition_1.partition)((0, keys_1.keys)(value), (key) => extensionPropertiesSet.has(key));
        const transformedBase = yield transformBase((0, filterObject_1.filterObject)(value, baseProperties));
        const transformedExtension = yield transformExtension((0, filterObject_1.filterObject)(value, extensionProperties));
        if (transformedBase.ok && transformedExtension.ok) {
            return {
                ok: true,
                value: Object.assign(Object.assign({}, transformedBase.value), transformedExtension.value),
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    ...(transformedBase.ok ? [] : transformedBase.errors),
                    ...(transformedExtension.ok ? [] : transformedExtension.errors),
                ],
            };
        }
    });
}
function isSchemaRequired(schema) {
    return __awaiter(this, void 0, void 0, function* () {
        return !(yield isSchemaOptional(schema));
    });
}
function isSchemaOptional(schema) {
    return __awaiter(this, void 0, void 0, function* () {
        switch (yield schema.getType()) {
            case Schema_1.SchemaType.ANY:
            case Schema_1.SchemaType.UNKNOWN:
            case Schema_1.SchemaType.OPTIONAL:
                return true;
            default:
                return false;
        }
    });
}
",
                        "name": "object.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsedPropertySchema, inferRawObjectFromPropertySchemas, ObjectSchema, PropertySchemas } from \\"./types\\";
export declare function objectWithoutOptionalProperties<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(schemas: T): inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T>;
export declare type inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<inferRawObjectFromPropertySchemas<T>, inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas<T>>;
export declare type inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas<T extends PropertySchemas<keyof T>> = {
    [K in keyof T]: inferParsedPropertySchema<T[K]>;
};
",
                        "name": "objectWithoutOptionalProperties.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.objectWithoutOptionalProperties = void 0;
const object_1 = require(\\"./object\\");
function objectWithoutOptionalProperties(schemas) {
    return (0, object_1.object)(schemas);
}
exports.objectWithoutOptionalProperties = objectWithoutOptionalProperties;
",
                        "name": "objectWithoutOptionalProperties.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function property<RawKey extends string, RawValue, ParsedValue>(rawKey: RawKey, valueSchema: Schema<RawValue, ParsedValue>): Property<RawKey, RawValue, ParsedValue>;
export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}
export declare function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O;
",
                        "name": "property.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.isProperty = exports.property = void 0;
function property(rawKey, valueSchema) {
    return {
        rawKey,
        valueSchema,
        isProperty: true,
    };
}
exports.property = property;
function isProperty(maybeProperty) {
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    return maybeProperty.isProperty;
}
exports.isProperty = isProperty;
",
                        "name": "property.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";
export declare type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed> & ObjectUtils<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}
export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(schemas: ObjectSchema<RawExtension, ParsedExtension>) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}
export declare type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;
export declare type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed> ? Parsed : never;
export declare type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<inferRawObjectFromPropertySchemas<T>, inferParsedObjectFromPropertySchemas<T>>;
export declare type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
}>;
export declare type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [K in keyof T]: inferParsedPropertySchema<T[K]>;
}>;
export declare type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<ParsedKeys, Property<any, any, any> | Schema<any, any>>;
export declare type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, infer Raw, any> ? Raw : P extends Schema<any, any> ? inferRaw<P> : never;
export declare type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, any, infer Parsed> ? Parsed : P extends Schema<any, any> ? inferParsed<P> : never;
export declare type inferRawKey<ParsedKey extends string | number | symbol, P extends Property<any, any, any> | Schema<any, any>> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                    ],
                    "name": "object",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";
export declare function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed>;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
export declare function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>, properties: {
    [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]);
}): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties>;
",
                        "name": "getObjectLikeUtils.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
const filterObject_1 = require(\\"../../utils/filterObject\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function getObjectLikeUtils(schema) {
    return {
        withParsedProperties: (properties) => withParsedProperties(schema, properties),
    };
}
exports.getObjectLikeUtils = getObjectLikeUtils;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
function withParsedProperties(objectLike, properties) {
    const objectSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            const parsedObject = yield objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
                return parsedObject;
            }
            const additionalProperties = Object.entries(properties).reduce((processed, [key, value]) => {
                return Object.assign(Object.assign({}, processed), { [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value });
            }, {});
            return {
                ok: true,
                value: Object.assign(Object.assign({}, parsedObject.value), additionalProperties),
            };
        }),
        json: (parsed, opts) => {
            var _a;
            if (!(0, isPlainObject_1.isPlainObject)(parsed)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: (_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : [],
                            message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(parsed, \\"object\\"),
                        },
                    ],
                };
            }
            // strip out added properties
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = (0, filterObject_1.filterObject)(parsed, Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key)));
            return objectLike.json(parsedWithoutAddedProperties, opts);
        },
        getType: () => objectLike.getType(),
    };
    return Object.assign(Object.assign(Object.assign({}, objectSchema), (0, schema_utils_1.getSchemaUtils)(objectSchema)), getObjectLikeUtils(objectSchema));
}
exports.withParsedProperties = withParsedProperties;
",
                        "name": "getObjectLikeUtils.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export type { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
var getObjectLikeUtils_1 = require(\\"./getObjectLikeUtils\\");
Object.defineProperty(exports, \\"getObjectLikeUtils\\", { enumerable: true, get: function () { return getObjectLikeUtils_1.getObjectLikeUtils; } });
Object.defineProperty(exports, \\"withParsedProperties\\", { enumerable: true, get: function () { return getObjectLikeUtils_1.withParsedProperties; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> & BaseSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed>;
export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                    ],
                    "name": "object-like",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export declare const any: () => import(\\"../../Schema\\").Schema<any, any>;
",
                        "name": "any.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.any = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.any = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ANY, (value) => ({ ok: true, value }));
",
                        "name": "any.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const boolean: () => import(\\"../../Schema\\").Schema<boolean, boolean>;
",
                        "name": "boolean.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.boolean = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
exports.boolean = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.BOOLEAN, (value, { breadcrumbsPrefix = [] } = {}) => {
    if (typeof value === \\"boolean\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"boolean\\"),
                },
            ],
        };
    }
});
",
                        "name": "boolean.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.unknown = exports.string = exports.number = exports.boolean = exports.any = void 0;
var any_1 = require(\\"./any\\");
Object.defineProperty(exports, \\"any\\", { enumerable: true, get: function () { return any_1.any; } });
var boolean_1 = require(\\"./boolean\\");
Object.defineProperty(exports, \\"boolean\\", { enumerable: true, get: function () { return boolean_1.boolean; } });
var number_1 = require(\\"./number\\");
Object.defineProperty(exports, \\"number\\", { enumerable: true, get: function () { return number_1.number; } });
var string_1 = require(\\"./string\\");
Object.defineProperty(exports, \\"string\\", { enumerable: true, get: function () { return string_1.string; } });
var unknown_1 = require(\\"./unknown\\");
Object.defineProperty(exports, \\"unknown\\", { enumerable: true, get: function () { return unknown_1.unknown; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const number: () => import(\\"../../Schema\\").Schema<number, number>;
",
                        "name": "number.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.number = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
exports.number = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.NUMBER, (value, { breadcrumbsPrefix = [] } = {}) => {
    if (typeof value === \\"number\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"number\\"),
                },
            ],
        };
    }
});
",
                        "name": "number.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const string: () => import(\\"../../Schema\\").Schema<string, string>;
",
                        "name": "string.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.string = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
exports.string = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING, (value, { breadcrumbsPrefix = [] } = {}) => {
    if (typeof value === \\"string\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"string\\"),
                },
            ],
        };
    }
});
",
                        "name": "string.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const unknown: () => import(\\"../../Schema\\").Schema<unknown, unknown>;
",
                        "name": "unknown.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.unknown = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.unknown = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
",
                        "name": "unknown.js",
                        "type": "file",
                      },
                    ],
                    "name": "primitives",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { record } from \\"./record\\";
export type { BaseRecordSchema, RecordSchema } from \\"./types\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.record = void 0;
var record_1 = require(\\"./record\\");
Object.defineProperty(exports, \\"record\\", { enumerable: true, get: function () { return record_1.record; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
import { RecordSchema } from \\"./types\\";
export declare function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(keySchema: Schema<RawKey, ParsedKey>, valueSchema: Schema<RawValue, ParsedValue>): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue>;
",
                        "name": "record.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.record = void 0;
const Schema_1 = require(\\"../../Schema\\");
const entries_1 = require(\\"../../utils/entries\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function record(keySchema, valueSchema) {
    const baseSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            return validateAndTransformRecord({
                value: raw,
                isKeyNumeric: (yield keySchema.getType()) === Schema_1.SchemaType.NUMBER,
                transformKey: (key) => {
                    var _a;
                    return keySchema.parse(key, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), \`\${key} (key)\`] }));
                },
                transformValue: (value, key) => {
                    var _a;
                    return valueSchema.parse(value, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), \`\${key}\`] }));
                },
                breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix,
            });
        }),
        json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
            return validateAndTransformRecord({
                value: parsed,
                isKeyNumeric: (yield keySchema.getType()) === Schema_1.SchemaType.NUMBER,
                transformKey: (key) => {
                    var _a;
                    return keySchema.json(key, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), \`\${key} (key)\`] }));
                },
                transformValue: (value, key) => {
                    var _a;
                    return valueSchema.json(value, Object.assign(Object.assign({}, opts), { breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), \`\${key}\`] }));
                },
                breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix,
            });
        }),
        getType: () => Schema_1.SchemaType.RECORD,
    };
    return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
}
exports.record = record;
function validateAndTransformRecord({ value, isKeyNumeric, transformKey, transformValue, breadcrumbsPrefix = [], }) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!(0, isPlainObject_1.isPlainObject)(value)) {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"object\\"),
                    },
                ],
            };
        }
        return (0, entries_1.entries)(value).reduce((accPromise, [stringKey, value]) => __awaiter(this, void 0, void 0, function* () {
            // skip nullish keys
            if (value == null) {
                return accPromise;
            }
            const acc = yield accPromise;
            let key = stringKey;
            if (isKeyNumeric) {
                const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
                if (!isNaN(numberKey)) {
                    key = numberKey;
                }
            }
            const transformedKey = yield transformKey(key);
            const transformedValue = yield transformValue(value, key);
            if (acc.ok && transformedKey.ok && transformedValue.ok) {
                return {
                    ok: true,
                    value: Object.assign(Object.assign({}, acc.value), { [transformedKey.value]: transformedValue.value }),
                };
            }
            const errors = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!transformedKey.ok) {
                errors.push(...transformedKey.errors);
            }
            if (!transformedValue.ok) {
                errors.push(...transformedValue.errors);
            }
            return {
                ok: false,
                errors,
            };
        }), Promise.resolve({ ok: true, value: {} }));
    });
}
",
                        "name": "record.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { SchemaUtils } from \\"../schema-utils\\";
export declare type RecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> & SchemaUtils<Record<RawKey, RawValue>, Record<ParsedKey, ParsedValue>>;
export declare type BaseRecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseSchema<Record<RawKey, RawValue>, Record<ParsedKey, ParsedValue>>;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                    ],
                    "name": "record",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class JsonError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                        "name": "JsonError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.JsonError = void 0;
const stringifyValidationErrors_1 = require(\\"./stringifyValidationErrors\\");
class JsonError extends Error {
    constructor(errors) {
        super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
    }
}
exports.JsonError = JsonError;
",
                        "name": "JsonError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class ParseError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                        "name": "ParseError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParseError = void 0;
const stringifyValidationErrors_1 = require(\\"./stringifyValidationErrors\\");
class ParseError extends Error {
    constructor(errors) {
        super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
    }
}
exports.ParseError = ParseError;
",
                        "name": "ParseError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaOptions } from \\"../../Schema\\";
export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}
export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}
export declare function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed>;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
export declare function optional<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): Schema<Raw | null | undefined, Parsed | undefined>;
export declare function transform<Raw, Parsed, Transformed>(schema: BaseSchema<Raw, Parsed>, transformer: SchemaTransformer<Parsed, Transformed>): Schema<Raw, Transformed>;
",
                        "name": "getSchemaUtils.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.transform = exports.optional = exports.getSchemaUtils = void 0;
const Schema_1 = require(\\"../../Schema\\");
const JsonError_1 = require(\\"./JsonError\\");
const ParseError_1 = require(\\"./ParseError\\");
function getSchemaUtils(schema) {
    return {
        optional: () => optional(schema),
        transform: (transformer) => transform(schema, transformer),
        parseOrThrow: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            const parsed = yield schema.parse(raw, opts);
            if (parsed.ok) {
                return parsed.value;
            }
            throw new ParseError_1.ParseError(parsed.errors);
        }),
        jsonOrThrow: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
            const raw = yield schema.json(parsed, opts);
            if (raw.ok) {
                return raw.value;
            }
            throw new JsonError_1.JsonError(raw.errors);
        }),
    };
}
exports.getSchemaUtils = getSchemaUtils;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
function optional(schema) {
    const baseSchema = {
        parse: (raw, opts) => {
            if (raw == null) {
                return {
                    ok: true,
                    value: undefined,
                };
            }
            return schema.parse(raw, opts);
        },
        json: (parsed, opts) => {
            if (parsed == null) {
                return {
                    ok: true,
                    value: null,
                };
            }
            return schema.json(parsed, opts);
        },
        getType: () => Schema_1.SchemaType.OPTIONAL,
    };
    return Object.assign(Object.assign({}, baseSchema), getSchemaUtils(baseSchema));
}
exports.optional = optional;
function transform(schema, transformer) {
    const baseSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            const parsed = yield schema.parse(raw, opts);
            if (!parsed.ok) {
                return parsed;
            }
            return {
                ok: true,
                value: transformer.transform(parsed.value),
            };
        }),
        json: (transformed, opts) => __awaiter(this, void 0, void 0, function* () {
            const parsed = yield transformer.untransform(transformed);
            return schema.json(parsed, opts);
        }),
        getType: () => schema.getType(),
    };
    return Object.assign(Object.assign({}, baseSchema), getSchemaUtils(baseSchema));
}
exports.transform = transform;
",
                        "name": "getSchemaUtils.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getSchemaUtils, optional, transform } from \\"./getSchemaUtils\\";
export type { SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParseError = exports.JsonError = exports.transform = exports.optional = exports.getSchemaUtils = void 0;
var getSchemaUtils_1 = require(\\"./getSchemaUtils\\");
Object.defineProperty(exports, \\"getSchemaUtils\\", { enumerable: true, get: function () { return getSchemaUtils_1.getSchemaUtils; } });
Object.defineProperty(exports, \\"optional\\", { enumerable: true, get: function () { return getSchemaUtils_1.optional; } });
Object.defineProperty(exports, \\"transform\\", { enumerable: true, get: function () { return getSchemaUtils_1.transform; } });
var JsonError_1 = require(\\"./JsonError\\");
Object.defineProperty(exports, \\"JsonError\\", { enumerable: true, get: function () { return JsonError_1.JsonError; } });
var ParseError_1 = require(\\"./ParseError\\");
Object.defineProperty(exports, \\"ParseError\\", { enumerable: true, get: function () { return ParseError_1.ParseError; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
export declare function stringifyValidationError(error: ValidationError): string;
",
                        "name": "stringifyValidationErrors.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringifyValidationError = void 0;
function stringifyValidationError(error) {
    if (error.path.length === 0) {
        return error.message;
    }
    return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
exports.stringifyValidationError = stringifyValidationError;
",
                        "name": "stringifyValidationErrors.js",
                        "type": "file",
                      },
                    ],
                    "name": "schema-utils",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { set } from \\"./set\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.set = void 0;
var set_1 = require(\\"./set\\");
Object.defineProperty(exports, \\"set\\", { enumerable: true, get: function () { return set_1.set; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>>;
",
                        "name": "set.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.set = void 0;
const Schema_1 = require(\\"../../Schema\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const list_1 = require(\\"../list\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function set(schema) {
    const listSchema = (0, list_1.list)(schema);
    const baseSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            const parsedList = yield listSchema.parse(raw, opts);
            if (parsedList.ok) {
                return {
                    ok: true,
                    value: new Set(parsedList.value),
                };
            }
            else {
                return parsedList;
            }
        }),
        json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
            var _a;
            if (!(parsed instanceof Set)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: (_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : [],
                            message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(parsed, \\"Set\\"),
                        },
                    ],
                };
            }
            const jsonList = yield listSchema.json([...parsed], opts);
            return jsonList;
        }),
        getType: () => Schema_1.SchemaType.SET,
    };
    return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
}
exports.set = set;
",
                        "name": "set.js",
                        "type": "file",
                      },
                    ],
                    "name": "set",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export type { inferParsedUnidiscriminatedUnionSchema, inferRawUnidiscriminatedUnionSchema, UndiscriminatedUnionSchema, } from \\"./types\\";
export { undiscriminatedUnion } from \\"./undiscriminatedUnion\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.undiscriminatedUnion = void 0;
var undiscriminatedUnion_1 = require(\\"./undiscriminatedUnion\\");
Object.defineProperty(exports, \\"undiscriminatedUnion\\", { enumerable: true, get: function () { return undiscriminatedUnion_1.undiscriminatedUnion; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsed, inferRaw, Schema } from \\"../../Schema\\";
export declare type UndiscriminatedUnionSchema<Schemas extends [...Schema[]]> = Schema<inferRawUnidiscriminatedUnionSchema<Schemas>, inferParsedUnidiscriminatedUnionSchema<Schemas>>;
export declare type inferRawUnidiscriminatedUnionSchema<Schemas extends [...Schema[]]> = inferRaw<Schemas[number]>;
export declare type inferParsedUnidiscriminatedUnionSchema<Schemas extends [...Schema[]]> = inferParsed<Schemas[number]>;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
import { inferParsedUnidiscriminatedUnionSchema, inferRawUnidiscriminatedUnionSchema } from \\"./types\\";
export declare function undiscriminatedUnion<Schemas extends [Schema<any, any>, ...Schema<any, any>[]]>(schemas: Schemas): Schema<inferRawUnidiscriminatedUnionSchema<Schemas>, inferParsedUnidiscriminatedUnionSchema<Schemas>>;
",
                        "name": "undiscriminatedUnion.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.undiscriminatedUnion = void 0;
const Schema_1 = require(\\"../../Schema\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function undiscriminatedUnion(schemas) {
    const baseSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            return validateAndTransformUndiscriminatedUnion((schema, opts) => schema.parse(raw, opts), schemas, opts);
        }),
        json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
            return validateAndTransformUndiscriminatedUnion((schema, opts) => schema.json(parsed, opts), schemas, opts);
        }),
        getType: () => Schema_1.SchemaType.UNDISCRIMINATED_UNION,
    };
    return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
}
exports.undiscriminatedUnion = undiscriminatedUnion;
function validateAndTransformUndiscriminatedUnion(transform, schemas, opts) {
    return __awaiter(this, void 0, void 0, function* () {
        const errors = [];
        for (const [index, schema] of schemas.entries()) {
            const transformed = yield transform(schema, Object.assign(Object.assign({}, opts), { skipValidation: false }));
            if (transformed.ok) {
                return transformed;
            }
            else {
                for (const error of transformed.errors) {
                    errors.push({
                        path: error.path,
                        message: \`[Variant \${index}] \${error.message}\`,
                    });
                }
            }
        }
        return {
            ok: false,
            errors,
        };
    });
}
",
                        "name": "undiscriminatedUnion.js",
                        "type": "file",
                      },
                    ],
                    "name": "undiscriminated-union",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export declare function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(parsedDiscriminant: ParsedDiscriminant, rawDiscriminant: RawDiscriminant): Discriminant<RawDiscriminant, ParsedDiscriminant>;
export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                        "name": "discriminant.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.discriminant = void 0;
function discriminant(parsedDiscriminant, rawDiscriminant) {
    return {
        parsedDiscriminant,
        rawDiscriminant,
    };
}
exports.discriminant = discriminant;
",
                        "name": "discriminant.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { discriminant } from \\"./discriminant\\";
export type { Discriminant } from \\"./discriminant\\";
export type { inferParsedDiscriminant, inferParsedUnion, inferRawDiscriminant, inferRawUnion, UnionSubtypes, } from \\"./types\\";
export { union } from \\"./union\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.union = exports.discriminant = void 0;
var discriminant_1 = require(\\"./discriminant\\");
Object.defineProperty(exports, \\"discriminant\\", { enumerable: true, get: function () { return discriminant_1.discriminant; } });
var union_1 = require(\\"./union\\");
Object.defineProperty(exports, \\"union\\", { enumerable: true, get: function () { return union_1.union; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";
export declare type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};
export declare type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];
export declare type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];
export declare type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<infer Raw, any> ? Raw : never;
export declare type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<any, infer Parsed> ? Parsed : never;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ObjectLikeSchema } from \\"../object-like\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedUnion, inferRawUnion, UnionSubtypes } from \\"./types\\";
export declare function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(discriminant: D, union: U): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>>;
",
                        "name": "union.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.union = void 0;
const Schema_1 = require(\\"../../Schema\\");
const getErrorMessageForIncorrectType_1 = require(\\"../../utils/getErrorMessageForIncorrectType\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const keys_1 = require(\\"../../utils/keys\\");
const maybeSkipValidation_1 = require(\\"../../utils/maybeSkipValidation\\");
const enum_1 = require(\\"../enum\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function union(discriminant, union) {
    const rawDiscriminant = typeof discriminant === \\"string\\" ? discriminant : discriminant.rawDiscriminant;
    const parsedDiscriminant = typeof discriminant === \\"string\\"
        ? discriminant
        : discriminant.parsedDiscriminant;
    const discriminantValueSchema = (0, enum_1.enum_)((0, keys_1.keys)(union));
    const baseSchema = {
        parse: (raw, opts) => __awaiter(this, void 0, void 0, function* () {
            return transformAndValidateUnion({
                value: raw,
                discriminant: rawDiscriminant,
                transformedDiscriminant: parsedDiscriminant,
                transformDiscriminantValue: (discriminantValue) => {
                    var _a;
                    return discriminantValueSchema.parse(discriminantValue, {
                        allowUnrecognizedEnumValues: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
                        breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), rawDiscriminant],
                    });
                },
                getAdditionalPropertiesSchema: (discriminantValue) => union[discriminantValue],
                allowUnrecognizedUnionMembers: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
                transformAdditionalProperties: (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts),
                breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix,
            });
        }),
        json: (parsed, opts) => __awaiter(this, void 0, void 0, function* () {
            return transformAndValidateUnion({
                value: parsed,
                discriminant: parsedDiscriminant,
                transformedDiscriminant: rawDiscriminant,
                transformDiscriminantValue: (discriminantValue) => {
                    var _a;
                    return discriminantValueSchema.json(discriminantValue, {
                        allowUnrecognizedEnumValues: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
                        breadcrumbsPrefix: [...((_a = opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix) !== null && _a !== void 0 ? _a : []), parsedDiscriminant],
                    });
                },
                getAdditionalPropertiesSchema: (discriminantValue) => union[discriminantValue],
                allowUnrecognizedUnionMembers: opts === null || opts === void 0 ? void 0 : opts.allowUnrecognizedUnionMembers,
                transformAdditionalProperties: (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts),
                breadcrumbsPrefix: opts === null || opts === void 0 ? void 0 : opts.breadcrumbsPrefix,
            });
        }),
        getType: () => Schema_1.SchemaType.UNION,
    };
    return Object.assign(Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema)), (0, object_like_1.getObjectLikeUtils)(baseSchema));
}
exports.union = union;
function transformAndValidateUnion({ value, discriminant, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnrecognizedUnionMembers = false, transformAdditionalProperties, breadcrumbsPrefix = [], }) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!(0, isPlainObject_1.isPlainObject)(value)) {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: (0, getErrorMessageForIncorrectType_1.getErrorMessageForIncorrectType)(value, \\"object\\"),
                    },
                ],
            };
        }
        const _a = value, _b = discriminant, discriminantValue = _a[_b], additionalProperties = __rest(_a, [typeof _b === \\"symbol\\" ? _b : _b + \\"\\"]);
        if (discriminantValue == null) {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: \`Missing discriminant (\\"\${discriminant}\\")\`,
                    },
                ],
            };
        }
        const transformedDiscriminantValue = yield transformDiscriminantValue(discriminantValue);
        if (!transformedDiscriminantValue.ok) {
            return {
                ok: false,
                errors: transformedDiscriminantValue.errors,
            };
        }
        const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
        if (additionalPropertiesSchema == null) {
            if (allowUnrecognizedUnionMembers) {
                return {
                    ok: true,
                    value: Object.assign({ [transformedDiscriminant]: transformedDiscriminantValue.value }, additionalProperties),
                };
            }
            else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [...breadcrumbsPrefix, discriminant],
                            message: \\"Unexpected discriminant value\\",
                        },
                    ],
                };
            }
        }
        const transformedAdditionalProperties = yield transformAdditionalProperties(additionalProperties, additionalPropertiesSchema);
        if (!transformedAdditionalProperties.ok) {
            return transformedAdditionalProperties;
        }
        return {
            ok: true,
            value: Object.assign({ [transformedDiscriminant]: discriminantValue }, transformedAdditionalProperties.value),
        };
    });
}
",
                        "name": "union.js",
                        "type": "file",
                      },
                    ],
                    "name": "union",
                    "type": "directory",
                  },
                ],
                "name": "builders",
                "type": "directory",
              },
              Object {
                "contents": "export * from \\"./builders\\";
export type { inferParsed, inferRaw, Schema, SchemaOptions } from \\"./Schema\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./builders\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export declare type MaybePromise<T> = T | Promise<T>;
",
                    "name": "MaybePromise.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "MaybePromise.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;
export declare type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K] ? K : null extends T[K] ? K : 1 extends (any extends T[K] ? 0 : 1) ? never : K;
}[keyof T];
export declare type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                    "name": "addQuestionMarksToNullableProperties.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "addQuestionMarksToNullableProperties.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";
export declare function createIdentitySchemaCreator<T>(schemaType: SchemaType, validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>): () => Schema<T, T>;
",
                    "name": "createIdentitySchemaCreator.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.createIdentitySchemaCreator = void 0;
const schema_utils_1 = require(\\"../builders/schema-utils\\");
const maybeSkipValidation_1 = require(\\"./maybeSkipValidation\\");
function createIdentitySchemaCreator(schemaType, validate) {
    return () => {
        const baseSchema = {
            parse: validate,
            json: validate,
            getType: () => schemaType,
        };
        return Object.assign(Object.assign({}, (0, maybeSkipValidation_1.maybeSkipValidation)(baseSchema)), (0, schema_utils_1.getSchemaUtils)(baseSchema));
    };
}
exports.createIdentitySchemaCreator = createIdentitySchemaCreator;
",
                    "name": "createIdentitySchemaCreator.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function entries<T>(object: T): [keyof T, T[keyof T]][];
",
                    "name": "entries.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.entries = void 0;
function entries(object) {
    return Object.entries(object);
}
exports.entries = entries;
",
                    "name": "entries.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K>;
",
                    "name": "filterObject.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.filterObject = void 0;
function filterObject(obj, keysToInclude) {
    const keysToIncludeSet = new Set(keysToInclude);
    return Object.entries(obj).reduce((acc, [key, value]) => {
        if (keysToIncludeSet.has(key)) {
            acc[key] = value;
        }
        return acc;
        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
    }, {});
}
exports.filterObject = filterObject;
",
                    "name": "filterObject.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function getErrorMessageForIncorrectType(value: unknown, expectedType: string): string;
",
                    "name": "getErrorMessageForIncorrectType.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getErrorMessageForIncorrectType = void 0;
function getErrorMessageForIncorrectType(value, expectedType) {
    return \`Expected \${expectedType}. Received \${getTypeAsString(value)}.\`;
}
exports.getErrorMessageForIncorrectType = getErrorMessageForIncorrectType;
function getTypeAsString(value) {
    if (Array.isArray(value)) {
        return \\"list\\";
    }
    if (value === null) {
        return \\"null\\";
    }
    switch (typeof value) {
        case \\"string\\":
            return \`\\"\${value}\\"\`;
        case \\"number\\":
        case \\"boolean\\":
        case \\"undefined\\":
            return \`\${value}\`;
    }
    return typeof value;
}
",
                    "name": "getErrorMessageForIncorrectType.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function isPlainObject(value: unknown): value is Record<string, unknown>;
",
                    "name": "isPlainObject.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.isPlainObject = void 0;
// borrowed from https://github.com/lodash/lodash/blob/master/isPlainObject.js
function isPlainObject(value) {
    if (typeof value !== \\"object\\" || value === null) {
        return false;
    }
    if (Object.getPrototypeOf(value) === null) {
        return true;
    }
    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
}
exports.isPlainObject = isPlainObject;
",
                    "name": "isPlainObject.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function keys<T>(object: T): (keyof T)[];
",
                    "name": "keys.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.keys = void 0;
function keys(object) {
    return Object.keys(object);
}
exports.keys = keys;
",
                    "name": "keys.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema } from \\"../Schema\\";
export declare function maybeSkipValidation<S extends BaseSchema<Raw, Parsed>, Raw, Parsed>(schema: S): S;
",
                    "name": "maybeSkipValidation.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.maybeSkipValidation = void 0;
function maybeSkipValidation(schema) {
    return Object.assign(Object.assign({}, schema), { json: transformAndMaybeSkipValidation(schema.json), parse: transformAndMaybeSkipValidation(schema.parse) });
}
exports.maybeSkipValidation = maybeSkipValidation;
function transformAndMaybeSkipValidation(transform) {
    return (value, opts) => __awaiter(this, void 0, void 0, function* () {
        const transformed = yield transform(value, opts);
        const { skipValidation = false } = opts !== null && opts !== void 0 ? opts : {};
        if (!transformed.ok && skipValidation) {
            // eslint-disable-next-line no-console
            console.warn([
                \\"Failed to validate.\\",
                ...transformed.errors.map((error) => \\"  - \\" +
                    (error.path.length > 0 ? \`\${error.path.join(\\".\\")}: \${error.message}\` : error.message)),
            ].join(\\"\\\\n\\"));
            return {
                ok: true,
                value: value,
            };
        }
        else {
            return transformed;
        }
    });
}
",
                    "name": "maybeSkipValidation.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]];
",
                    "name": "partition.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.partition = void 0;
function partition(items, predicate) {
    const trueItems = [], falseItems = [];
    for (const item of items) {
        if (predicate(item)) {
            trueItems.push(item);
        }
        else {
            falseItems.push(item);
        }
    }
    return [trueItems, falseItems];
}
exports.partition = partition;
",
                    "name": "partition.js",
                    "type": "file",
                  },
                ],
                "name": "utils",
                "type": "directory",
              },
            ],
            "name": "schemas",
            "type": "directory",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;
    constructor({ message, statusCode, body }: {
        message?: string;
        statusCode?: number;
        body?: unknown;
    });
}
",
            "name": "FernApiError.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiError = void 0;
class FernApiError extends Error {
    constructor({ message, statusCode, body }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }
        if (body !== undefined) {
            this.body = body;
        }
    }
}
exports.FernApiError = FernApiError;
function buildMessage({ message, statusCode, body, }) {
    let lines = [];
    if (message != null) {
        lines.push(message);
    }
    if (statusCode != null) {
        lines.push(\`Status code: \${statusCode.toString()}\`);
    }
    if (body != null) {
        lines.push(\`Body: \${JSON.stringify(body, undefined, 2)}\`);
    }
    return lines.join(\\"\\\\n\\");
}
",
            "name": "FernApiError.js",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare class FernApiTimeoutError extends Error {
    constructor();
}
",
            "name": "FernApiTimeoutError.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = void 0;
class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
exports.FernApiTimeoutError = FernApiTimeoutError;
",
            "name": "FernApiTimeoutError.js",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = exports.FernApiError = void 0;
var FernApiError_1 = require(\\"./FernApiError\\");
Object.defineProperty(exports, \\"FernApiError\\", { enumerable: true, get: function () { return FernApiError_1.FernApiError; } });
var FernApiTimeoutError_1 = require(\\"./FernApiTimeoutError\\");
Object.defineProperty(exports, \\"FernApiTimeoutError\\", { enumerable: true, get: function () { return FernApiTimeoutError_1.FernApiTimeoutError; } });
",
            "name": "index.js",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export * as FernApi from \\"./api\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = exports.FernApiError = exports.FernApi = void 0;
exports.FernApi = __importStar(require(\\"./api\\"));
var errors_1 = require(\\"./errors\\");
Object.defineProperty(exports, \\"FernApiError\\", { enumerable: true, get: function () { return errors_1.FernApiError; } });
Object.defineProperty(exports, \\"FernApiTimeoutError\\", { enumerable: true, get: function () { return errors_1.FernApiTimeoutError; } });
",
        "name": "index.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ApiAuth: core.serialization.ObjectSchema<serializers.ApiAuth.Raw, FernApi.ApiAuth>;
export declare namespace ApiAuth {
    interface Raw extends serializers.WithDocs.Raw {
        requirement: serializers.AuthSchemesRequirement.Raw;
        schemes: serializers.AuthScheme.Raw[];
    }
}
",
                        "name": "ApiAuth.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ApiAuth = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ApiAuth = core.serialization
    .objectWithoutOptionalProperties({
    requirement: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).AuthSchemesRequirement; })),
    schemes: core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).AuthScheme; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "ApiAuth.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const AuthScheme: core.serialization.Schema<serializers.AuthScheme.Raw, FernApi.AuthScheme>;
export declare namespace AuthScheme {
    type Raw = AuthScheme.Bearer | AuthScheme.Basic | AuthScheme.Header;
    interface Bearer extends serializers.BearerAuthScheme.Raw {
        _type: \\"bearer\\";
    }
    interface Basic extends serializers.BasicAuthScheme.Raw {
        _type: \\"basic\\";
    }
    interface Header extends serializers.HeaderAuthScheme.Raw {
        _type: \\"header\\";
    }
}
",
                        "name": "AuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AuthScheme = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.AuthScheme = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
    bearer: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BearerAuthScheme; })),
    basic: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BasicAuthScheme; })),
    header: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HeaderAuthScheme; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"bearer\\":
                return FernApi.AuthScheme.bearer(value);
            case \\"basic\\":
                return FernApi.AuthScheme.basic(value);
            case \\"header\\":
                return FernApi.AuthScheme.header(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "AuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const AuthSchemesRequirement: core.serialization.Schema<serializers.AuthSchemesRequirement.Raw, FernApi.AuthSchemesRequirement>;
export declare namespace AuthSchemesRequirement {
    type Raw = \\"ALL\\" | \\"ANY\\";
}
",
                        "name": "AuthSchemesRequirement.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AuthSchemesRequirement = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.AuthSchemesRequirement = core.serialization.enum_([\\"ALL\\", \\"ANY\\"]);
",
                        "name": "AuthSchemesRequirement.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const BasicAuthScheme: core.serialization.ObjectSchema<serializers.BasicAuthScheme.Raw, FernApi.BasicAuthScheme>;
export declare namespace BasicAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        username: serializers.Name.Raw;
        password: serializers.Name.Raw;
    }
}
",
                        "name": "BasicAuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicAuthScheme = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.BasicAuthScheme = core.serialization
    .objectWithoutOptionalProperties({
    username: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    password: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "BasicAuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const BearerAuthScheme: core.serialization.ObjectSchema<serializers.BearerAuthScheme.Raw, FernApi.BearerAuthScheme>;
export declare namespace BearerAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        token: serializers.Name.Raw;
    }
}
",
                        "name": "BearerAuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BearerAuthScheme = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.BearerAuthScheme = core.serialization
    .objectWithoutOptionalProperties({
    token: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "BearerAuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HeaderAuthScheme: core.serialization.ObjectSchema<serializers.HeaderAuthScheme.Raw, FernApi.HeaderAuthScheme>;
export declare namespace HeaderAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
        prefix?: string | null;
    }
}
",
                        "name": "HeaderAuthScheme.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HeaderAuthScheme = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HeaderAuthScheme = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    prefix: core.serialization.string().optional(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "HeaderAuthScheme.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ApiAuth\\";
export * from \\"./AuthSchemesRequirement\\";
export * from \\"./AuthScheme\\";
export * from \\"./BearerAuthScheme\\";
export * from \\"./BasicAuthScheme\\";
export * from \\"./HeaderAuthScheme\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ApiAuth\\"), exports);
__exportStar(require(\\"./AuthSchemesRequirement\\"), exports);
__exportStar(require(\\"./AuthScheme\\"), exports);
__exportStar(require(\\"./BearerAuthScheme\\"), exports);
__exportStar(require(\\"./BasicAuthScheme\\"), exports);
__exportStar(require(\\"./HeaderAuthScheme\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "auth",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Availability: core.serialization.ObjectSchema<serializers.Availability.Raw, FernApi.Availability>;
export declare namespace Availability {
    interface Raw {
        status: serializers.AvailabilityStatus.Raw;
        message?: string | null;
    }
}
",
                        "name": "Availability.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Availability = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Availability = core.serialization.objectWithoutOptionalProperties({
    status: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).AvailabilityStatus; })),
    message: core.serialization.string().optional(),
});
",
                        "name": "Availability.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const AvailabilityStatus: core.serialization.Schema<serializers.AvailabilityStatus.Raw, FernApi.AvailabilityStatus>;
export declare namespace AvailabilityStatus {
    type Raw = \\"IN_DEVELOPMENT\\" | \\"PRE_RELEASE\\" | \\"GENERAL_AVAILABILITY\\" | \\"DEPRECATED\\";
}
",
                        "name": "AvailabilityStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AvailabilityStatus = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.AvailabilityStatus = core.serialization.enum_([\\"IN_DEVELOPMENT\\", \\"PRE_RELEASE\\", \\"GENERAL_AVAILABILITY\\", \\"DEPRECATED\\"]);
",
                        "name": "AvailabilityStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Declaration: core.serialization.ObjectSchema<serializers.Declaration.Raw, FernApi.Declaration>;
export declare namespace Declaration {
    interface Raw extends serializers.WithDocs.Raw {
        availability: serializers.Availability.Raw;
    }
}
",
                        "name": "Declaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Declaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Declaration = core.serialization
    .objectWithoutOptionalProperties({
    availability: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Availability; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "Declaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ErrorId: core.serialization.Schema<serializers.ErrorId.Raw, FernApi.ErrorId>;
export declare namespace ErrorId {
    type Raw = string;
}
",
                        "name": "ErrorId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ErrorId = core.serialization.string();
",
                        "name": "ErrorId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const FernFilepath: core.serialization.ObjectSchema<serializers.FernFilepath.Raw, FernApi.FernFilepath>;
export declare namespace FernFilepath {
    interface Raw {
        allParts: serializers.Name.Raw[];
        packagePath: serializers.Name.Raw[];
        file?: serializers.Name.Raw | null;
    }
}
",
                        "name": "FernFilepath.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernFilepath = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.FernFilepath = core.serialization.objectWithoutOptionalProperties({
    allParts: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; }))),
    packagePath: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; }))),
    file: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })).optional(),
});
",
                        "name": "FernFilepath.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Name: core.serialization.ObjectSchema<serializers.Name.Raw, FernApi.Name>;
export declare namespace Name {
    interface Raw {
        originalName: string;
        camelCase: serializers.SafeAndUnsafeString.Raw;
        pascalCase: serializers.SafeAndUnsafeString.Raw;
        snakeCase: serializers.SafeAndUnsafeString.Raw;
        screamingSnakeCase: serializers.SafeAndUnsafeString.Raw;
    }
}
",
                        "name": "Name.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Name = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Name = core.serialization.objectWithoutOptionalProperties({
    originalName: core.serialization.string(),
    camelCase: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SafeAndUnsafeString; })),
    pascalCase: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SafeAndUnsafeString; })),
    snakeCase: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SafeAndUnsafeString; })),
    screamingSnakeCase: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SafeAndUnsafeString; })),
});
",
                        "name": "Name.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const NameAndWireValue: core.serialization.ObjectSchema<serializers.NameAndWireValue.Raw, FernApi.NameAndWireValue>;
export declare namespace NameAndWireValue {
    interface Raw {
        wireValue: string;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "NameAndWireValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NameAndWireValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.NameAndWireValue = core.serialization.objectWithoutOptionalProperties({
    wireValue: core.serialization.string(),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
});
",
                        "name": "NameAndWireValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SafeAndUnsafeString: core.serialization.ObjectSchema<serializers.SafeAndUnsafeString.Raw, FernApi.SafeAndUnsafeString>;
export declare namespace SafeAndUnsafeString {
    interface Raw {
        unsafeName: string;
        safeName: string;
    }
}
",
                        "name": "SafeAndUnsafeString.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SafeAndUnsafeString = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SafeAndUnsafeString = core.serialization.objectWithoutOptionalProperties({
    unsafeName: core.serialization.string(),
    safeName: core.serialization.string(),
});
",
                        "name": "SafeAndUnsafeString.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ServiceId: core.serialization.Schema<serializers.ServiceId.Raw, FernApi.ServiceId>;
export declare namespace ServiceId {
    type Raw = string;
}
",
                        "name": "ServiceId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ServiceId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ServiceId = core.serialization.string();
",
                        "name": "ServiceId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SubpackageId: core.serialization.Schema<serializers.SubpackageId.Raw, FernApi.SubpackageId>;
export declare namespace SubpackageId {
    type Raw = string;
}
",
                        "name": "SubpackageId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubpackageId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SubpackageId = core.serialization.string();
",
                        "name": "SubpackageId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const TypeId: core.serialization.Schema<serializers.TypeId.Raw, FernApi.TypeId>;
export declare namespace TypeId {
    type Raw = string;
}
",
                        "name": "TypeId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TypeId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TypeId = core.serialization.string();
",
                        "name": "TypeId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const WithDocs: core.serialization.ObjectSchema<serializers.WithDocs.Raw, FernApi.WithDocs>;
export declare namespace WithDocs {
    interface Raw {
        docs?: string | null;
    }
}
",
                        "name": "WithDocs.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WithDocs = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WithDocs = core.serialization.objectWithoutOptionalProperties({
    docs: core.serialization.string().optional(),
});
",
                        "name": "WithDocs.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const WithJsonExample: core.serialization.ObjectSchema<serializers.WithJsonExample.Raw, FernApi.WithJsonExample>;
export declare namespace WithJsonExample {
    interface Raw {
        jsonExample?: unknown;
    }
}
",
                        "name": "WithJsonExample.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WithJsonExample = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WithJsonExample = core.serialization.objectWithoutOptionalProperties({
    jsonExample: core.serialization.unknown(),
});
",
                        "name": "WithJsonExample.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./WithDocs\\";
export * from \\"./FernFilepath\\";
export * from \\"./Name\\";
export * from \\"./NameAndWireValue\\";
export * from \\"./SafeAndUnsafeString\\";
export * from \\"./WithJsonExample\\";
export * from \\"./SubpackageId\\";
export * from \\"./ServiceId\\";
export * from \\"./TypeId\\";
export * from \\"./ErrorId\\";
export * from \\"./Declaration\\";
export * from \\"./Availability\\";
export * from \\"./AvailabilityStatus\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./WithDocs\\"), exports);
__exportStar(require(\\"./FernFilepath\\"), exports);
__exportStar(require(\\"./Name\\"), exports);
__exportStar(require(\\"./NameAndWireValue\\"), exports);
__exportStar(require(\\"./SafeAndUnsafeString\\"), exports);
__exportStar(require(\\"./WithJsonExample\\"), exports);
__exportStar(require(\\"./SubpackageId\\"), exports);
__exportStar(require(\\"./ServiceId\\"), exports);
__exportStar(require(\\"./TypeId\\"), exports);
__exportStar(require(\\"./ErrorId\\"), exports);
__exportStar(require(\\"./Declaration\\"), exports);
__exportStar(require(\\"./Availability\\"), exports);
__exportStar(require(\\"./AvailabilityStatus\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Constants: core.serialization.ObjectSchema<serializers.Constants.Raw, FernApi.Constants>;
export declare namespace Constants {
    interface Raw {
        errorInstanceIdKey: serializers.NameAndWireValue.Raw;
    }
}
",
                        "name": "Constants.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Constants = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Constants = core.serialization.objectWithoutOptionalProperties({
    errorInstanceIdKey: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
});
",
                        "name": "Constants.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./Constants\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./Constants\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "constants",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnvironmentBaseUrlId: core.serialization.Schema<serializers.EnvironmentBaseUrlId.Raw, FernApi.EnvironmentBaseUrlId>;
export declare namespace EnvironmentBaseUrlId {
    type Raw = string;
}
",
                        "name": "EnvironmentBaseUrlId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnvironmentBaseUrlId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnvironmentBaseUrlId = core.serialization.string();
",
                        "name": "EnvironmentBaseUrlId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnvironmentBaseUrlWithId: core.serialization.ObjectSchema<serializers.EnvironmentBaseUrlWithId.Raw, FernApi.EnvironmentBaseUrlWithId>;
export declare namespace EnvironmentBaseUrlWithId {
    interface Raw {
        id: serializers.EnvironmentBaseUrlId.Raw;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "EnvironmentBaseUrlWithId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnvironmentBaseUrlWithId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnvironmentBaseUrlWithId = core.serialization.objectWithoutOptionalProperties({
    id: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentBaseUrlId; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
});
",
                        "name": "EnvironmentBaseUrlWithId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnvironmentId: core.serialization.Schema<serializers.EnvironmentId.Raw, FernApi.EnvironmentId>;
export declare namespace EnvironmentId {
    type Raw = string;
}
",
                        "name": "EnvironmentId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnvironmentId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnvironmentId = core.serialization.string();
",
                        "name": "EnvironmentId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnvironmentUrl: core.serialization.Schema<serializers.EnvironmentUrl.Raw, FernApi.EnvironmentUrl>;
export declare namespace EnvironmentUrl {
    type Raw = string;
}
",
                        "name": "EnvironmentUrl.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnvironmentUrl = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnvironmentUrl = core.serialization.string();
",
                        "name": "EnvironmentUrl.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Environments: core.serialization.Schema<serializers.Environments.Raw, FernApi.Environments>;
export declare namespace Environments {
    type Raw = Environments.SingleBaseUrl | Environments.MultipleBaseUrls;
    interface SingleBaseUrl extends serializers.SingleBaseUrlEnvironments.Raw {
        type: \\"singleBaseUrl\\";
    }
    interface MultipleBaseUrls extends serializers.MultipleBaseUrlsEnvironments.Raw {
        type: \\"multipleBaseUrls\\";
    }
}
",
                        "name": "Environments.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Environments = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.Environments = core.serialization
    .union(\\"type\\", {
    singleBaseUrl: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SingleBaseUrlEnvironments; })),
    multipleBaseUrls: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).MultipleBaseUrlsEnvironments; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"singleBaseUrl\\":
                return FernApi.Environments.singleBaseUrl(value);
            case \\"multipleBaseUrls\\":
                return FernApi.Environments.multipleBaseUrls(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "Environments.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnvironmentsConfig: core.serialization.ObjectSchema<serializers.EnvironmentsConfig.Raw, FernApi.EnvironmentsConfig>;
export declare namespace EnvironmentsConfig {
    interface Raw {
        defaultEnvironment?: serializers.EnvironmentId.Raw | null;
        environments: serializers.Environments.Raw;
    }
}
",
                        "name": "EnvironmentsConfig.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnvironmentsConfig = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnvironmentsConfig = core.serialization.objectWithoutOptionalProperties({
    defaultEnvironment: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentId; })).optional(),
    environments: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Environments; })),
});
",
                        "name": "EnvironmentsConfig.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const MultipleBaseUrlsEnvironment: core.serialization.ObjectSchema<serializers.MultipleBaseUrlsEnvironment.Raw, FernApi.MultipleBaseUrlsEnvironment>;
export declare namespace MultipleBaseUrlsEnvironment {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.EnvironmentId.Raw;
        name: serializers.Name.Raw;
        urls: Record<serializers.EnvironmentBaseUrlId.Raw, serializers.EnvironmentUrl.Raw>;
    }
}
",
                        "name": "MultipleBaseUrlsEnvironment.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MultipleBaseUrlsEnvironment = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MultipleBaseUrlsEnvironment = core.serialization
    .objectWithoutOptionalProperties({
    id: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentId; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    urls: core.serialization.record(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentBaseUrlId; })), core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentUrl; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "MultipleBaseUrlsEnvironment.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const MultipleBaseUrlsEnvironments: core.serialization.ObjectSchema<serializers.MultipleBaseUrlsEnvironments.Raw, FernApi.MultipleBaseUrlsEnvironments>;
export declare namespace MultipleBaseUrlsEnvironments {
    interface Raw {
        baseUrls: serializers.EnvironmentBaseUrlWithId.Raw[];
        environments: serializers.MultipleBaseUrlsEnvironment.Raw[];
    }
}
",
                        "name": "MultipleBaseUrlsEnvironments.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MultipleBaseUrlsEnvironments = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MultipleBaseUrlsEnvironments = core.serialization.objectWithoutOptionalProperties({
    baseUrls: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentBaseUrlWithId; }))),
    environments: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).MultipleBaseUrlsEnvironment; }))),
});
",
                        "name": "MultipleBaseUrlsEnvironments.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SingleBaseUrlEnvironment: core.serialization.ObjectSchema<serializers.SingleBaseUrlEnvironment.Raw, FernApi.SingleBaseUrlEnvironment>;
export declare namespace SingleBaseUrlEnvironment {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.EnvironmentId.Raw;
        name: serializers.Name.Raw;
        url: serializers.EnvironmentUrl.Raw;
    }
}
",
                        "name": "SingleBaseUrlEnvironment.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SingleBaseUrlEnvironment = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SingleBaseUrlEnvironment = core.serialization
    .objectWithoutOptionalProperties({
    id: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentId; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    url: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentUrl; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "SingleBaseUrlEnvironment.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SingleBaseUrlEnvironments: core.serialization.ObjectSchema<serializers.SingleBaseUrlEnvironments.Raw, FernApi.SingleBaseUrlEnvironments>;
export declare namespace SingleBaseUrlEnvironments {
    interface Raw {
        environments: serializers.SingleBaseUrlEnvironment.Raw[];
    }
}
",
                        "name": "SingleBaseUrlEnvironments.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SingleBaseUrlEnvironments = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SingleBaseUrlEnvironments = core.serialization.objectWithoutOptionalProperties({
    environments: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SingleBaseUrlEnvironment; }))),
});
",
                        "name": "SingleBaseUrlEnvironments.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./EnvironmentId\\";
export * from \\"./EnvironmentBaseUrlId\\";
export * from \\"./EnvironmentUrl\\";
export * from \\"./EnvironmentsConfig\\";
export * from \\"./Environments\\";
export * from \\"./SingleBaseUrlEnvironments\\";
export * from \\"./SingleBaseUrlEnvironment\\";
export * from \\"./MultipleBaseUrlsEnvironments\\";
export * from \\"./MultipleBaseUrlsEnvironment\\";
export * from \\"./EnvironmentBaseUrlWithId\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./EnvironmentId\\"), exports);
__exportStar(require(\\"./EnvironmentBaseUrlId\\"), exports);
__exportStar(require(\\"./EnvironmentUrl\\"), exports);
__exportStar(require(\\"./EnvironmentsConfig\\"), exports);
__exportStar(require(\\"./Environments\\"), exports);
__exportStar(require(\\"./SingleBaseUrlEnvironments\\"), exports);
__exportStar(require(\\"./SingleBaseUrlEnvironment\\"), exports);
__exportStar(require(\\"./MultipleBaseUrlsEnvironments\\"), exports);
__exportStar(require(\\"./MultipleBaseUrlsEnvironment\\"), exports);
__exportStar(require(\\"./EnvironmentBaseUrlWithId\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "environment",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const DeclaredErrorName: core.serialization.ObjectSchema<serializers.DeclaredErrorName.Raw, FernApi.DeclaredErrorName>;
export declare namespace DeclaredErrorName {
    interface Raw {
        errorId: serializers.ErrorId.Raw;
        fernFilepath: serializers.FernFilepath.Raw;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "DeclaredErrorName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DeclaredErrorName = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DeclaredErrorName = core.serialization.objectWithoutOptionalProperties({
    errorId: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorId; })),
    fernFilepath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FernFilepath; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
});
",
                        "name": "DeclaredErrorName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ErrorDeclaration: core.serialization.ObjectSchema<serializers.ErrorDeclaration.Raw, FernApi.ErrorDeclaration>;
export declare namespace ErrorDeclaration {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.DeclaredErrorName.Raw;
        discriminantValue: serializers.NameAndWireValue.Raw;
        type?: serializers.TypeReference.Raw | null;
        statusCode: number;
    }
}
",
                        "name": "ErrorDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ErrorDeclaration = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredErrorName; })),
    discriminantValue: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    type_: core.serialization.property(\\"type\\", core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })).optional()),
    statusCode: core.serialization.number(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "ErrorDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ErrorDeclarationDiscriminantValue: core.serialization.Schema<serializers.ErrorDeclarationDiscriminantValue.Raw, FernApi.ErrorDeclarationDiscriminantValue>;
export declare namespace ErrorDeclarationDiscriminantValue {
    type Raw = ErrorDeclarationDiscriminantValue.Property | ErrorDeclarationDiscriminantValue.StatusCode;
    interface Property extends serializers.NameAndWireValue.Raw {
        type: \\"property\\";
    }
    interface StatusCode {
        type: \\"statusCode\\";
    }
}
",
                        "name": "ErrorDeclarationDiscriminantValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorDeclarationDiscriminantValue = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ErrorDeclarationDiscriminantValue = core.serialization
    .union(\\"type\\", {
    property: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    statusCode: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"property\\":
                return FernApi.ErrorDeclarationDiscriminantValue.property(value);
            case \\"statusCode\\":
                return FernApi.ErrorDeclarationDiscriminantValue.statusCode();
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ErrorDeclarationDiscriminantValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ErrorDeclaration\\";
export * from \\"./ErrorDeclarationDiscriminantValue\\";
export * from \\"./DeclaredErrorName\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ErrorDeclaration\\"), exports);
__exportStar(require(\\"./ErrorDeclarationDiscriminantValue\\"), exports);
__exportStar(require(\\"./DeclaredErrorName\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "errors",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const DeclaredServiceName: core.serialization.ObjectSchema<serializers.DeclaredServiceName.Raw, FernApi.DeclaredServiceName>;
export declare namespace DeclaredServiceName {
    interface Raw {
        fernFilepath: serializers.FernFilepath.Raw;
    }
}
",
                        "name": "DeclaredServiceName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DeclaredServiceName = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DeclaredServiceName = core.serialization.objectWithoutOptionalProperties({
    fernFilepath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FernFilepath; })),
});
",
                        "name": "DeclaredServiceName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EndpointName: core.serialization.ObjectSchema<serializers.EndpointName.Raw, FernApi.EndpointName>;
export declare namespace EndpointName {
    type Raw = serializers.Name.Raw;
}
",
                        "name": "EndpointName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EndpointName = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EndpointName = core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; }));
",
                        "name": "EndpointName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleEndpointCall: core.serialization.ObjectSchema<serializers.ExampleEndpointCall.Raw, FernApi.ExampleEndpointCall>;
export declare namespace ExampleEndpointCall {
    interface Raw extends serializers.WithDocs.Raw {
        name?: serializers.Name.Raw | null;
        url: string;
        rootPathParameters: serializers.ExamplePathParameter.Raw[];
        servicePathParameters: serializers.ExamplePathParameter.Raw[];
        endpointPathParameters: serializers.ExamplePathParameter.Raw[];
        serviceHeaders: serializers.ExampleHeader.Raw[];
        endpointHeaders: serializers.ExampleHeader.Raw[];
        queryParameters: serializers.ExampleQueryParameter.Raw[];
        request?: serializers.ExampleRequestBody.Raw | null;
        response: serializers.ExampleResponse.Raw;
    }
}
",
                        "name": "ExampleEndpointCall.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleEndpointCall = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleEndpointCall = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })).optional(),
    url: core.serialization.string(),
    rootPathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExamplePathParameter; }))),
    servicePathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExamplePathParameter; }))),
    endpointPathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExamplePathParameter; }))),
    serviceHeaders: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleHeader; }))),
    endpointHeaders: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleHeader; }))),
    queryParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleQueryParameter; }))),
    request: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleRequestBody; })).optional(),
    response: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleResponse; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "ExampleEndpointCall.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleEndpointErrorResponse: core.serialization.ObjectSchema<serializers.ExampleEndpointErrorResponse.Raw, FernApi.ExampleEndpointErrorResponse>;
export declare namespace ExampleEndpointErrorResponse {
    interface Raw {
        error: serializers.DeclaredErrorName.Raw;
        body?: serializers.ExampleTypeReference.Raw | null;
    }
}
",
                        "name": "ExampleEndpointErrorResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleEndpointErrorResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleEndpointErrorResponse = core.serialization.objectWithoutOptionalProperties({
    error: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredErrorName; })),
    body: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })).optional(),
});
",
                        "name": "ExampleEndpointErrorResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleEndpointSuccessResponse: core.serialization.ObjectSchema<serializers.ExampleEndpointSuccessResponse.Raw, FernApi.ExampleEndpointSuccessResponse>;
export declare namespace ExampleEndpointSuccessResponse {
    interface Raw {
        body?: serializers.ExampleTypeReference.Raw | null;
    }
}
",
                        "name": "ExampleEndpointSuccessResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleEndpointSuccessResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleEndpointSuccessResponse = core.serialization.objectWithoutOptionalProperties({
    body: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })).optional(),
});
",
                        "name": "ExampleEndpointSuccessResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleHeader: core.serialization.ObjectSchema<serializers.ExampleHeader.Raw, FernApi.ExampleHeader>;
export declare namespace ExampleHeader {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleHeader.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleHeader = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleHeader = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
});
",
                        "name": "ExampleHeader.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleInlinedRequestBody: core.serialization.ObjectSchema<serializers.ExampleInlinedRequestBody.Raw, FernApi.ExampleInlinedRequestBody>;
export declare namespace ExampleInlinedRequestBody {
    interface Raw extends serializers.WithJsonExample.Raw {
        properties: serializers.ExampleInlinedRequestBodyProperty.Raw[];
    }
}
",
                        "name": "ExampleInlinedRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleInlinedRequestBody = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleInlinedRequestBody = core.serialization
    .objectWithoutOptionalProperties({
    properties: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleInlinedRequestBodyProperty; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithJsonExample; })));
",
                        "name": "ExampleInlinedRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleInlinedRequestBodyProperty: core.serialization.ObjectSchema<serializers.ExampleInlinedRequestBodyProperty.Raw, FernApi.ExampleInlinedRequestBodyProperty>;
export declare namespace ExampleInlinedRequestBodyProperty {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
        originalTypeDeclaration?: serializers.DeclaredTypeName.Raw | null;
    }
}
",
                        "name": "ExampleInlinedRequestBodyProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleInlinedRequestBodyProperty = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleInlinedRequestBodyProperty = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
    originalTypeDeclaration: core.serialization
        .lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; }))
        .optional(),
});
",
                        "name": "ExampleInlinedRequestBodyProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExamplePathParameter: core.serialization.ObjectSchema<serializers.ExamplePathParameter.Raw, FernApi.ExamplePathParameter>;
export declare namespace ExamplePathParameter {
    interface Raw {
        key: string;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExamplePathParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExamplePathParameter = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExamplePathParameter = core.serialization.objectWithoutOptionalProperties({
    key: core.serialization.string(),
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
});
",
                        "name": "ExamplePathParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleQueryParameter: core.serialization.ObjectSchema<serializers.ExampleQueryParameter.Raw, FernApi.ExampleQueryParameter>;
export declare namespace ExampleQueryParameter {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleQueryParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleQueryParameter = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleQueryParameter = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
});
",
                        "name": "ExampleQueryParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleRequestBody: core.serialization.Schema<serializers.ExampleRequestBody.Raw, FernApi.ExampleRequestBody>;
export declare namespace ExampleRequestBody {
    type Raw = ExampleRequestBody.InlinedRequestBody | ExampleRequestBody.Reference;
    interface InlinedRequestBody extends serializers.ExampleInlinedRequestBody.Raw {
        type: \\"inlinedRequestBody\\";
    }
    interface Reference extends serializers.ExampleTypeReference.Raw {
        type: \\"reference\\";
    }
}
",
                        "name": "ExampleRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleRequestBody = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleRequestBody = core.serialization
    .union(\\"type\\", {
    inlinedRequestBody: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleInlinedRequestBody; })),
    reference: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"inlinedRequestBody\\":
                return FernApi.ExampleRequestBody.inlinedRequestBody(value);
            case \\"reference\\":
                return FernApi.ExampleRequestBody.reference(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExampleRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleResponse: core.serialization.Schema<serializers.ExampleResponse.Raw, FernApi.ExampleResponse>;
export declare namespace ExampleResponse {
    type Raw = ExampleResponse.Ok | ExampleResponse.Error;
    interface Ok extends serializers.ExampleEndpointSuccessResponse.Raw {
        type: \\"ok\\";
    }
    interface Error extends serializers.ExampleEndpointErrorResponse.Raw {
        type: \\"error\\";
    }
}
",
                        "name": "ExampleResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleResponse = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleResponse = core.serialization
    .union(\\"type\\", {
    ok: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleEndpointSuccessResponse; })),
    error: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleEndpointErrorResponse; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"ok\\":
                return FernApi.ExampleResponse.ok(value);
            case \\"error\\":
                return FernApi.ExampleResponse.error(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExampleResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const FileDownloadResponse: core.serialization.ObjectSchema<serializers.FileDownloadResponse.Raw, FernApi.FileDownloadResponse>;
export declare namespace FileDownloadResponse {
    interface Raw extends serializers.WithDocs.Raw {
    }
}
",
                        "name": "FileDownloadResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileDownloadResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.FileDownloadResponse = core.serialization
    .objectWithoutOptionalProperties({})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "FileDownloadResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const FileProperty: core.serialization.ObjectSchema<serializers.FileProperty.Raw, FernApi.FileProperty>;
export declare namespace FileProperty {
    interface Raw {
        key: serializers.NameAndWireValue.Raw;
        isOptional: boolean;
    }
}
",
                        "name": "FileProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileProperty = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.FileProperty = core.serialization.objectWithoutOptionalProperties({
    key: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    isOptional: core.serialization.boolean(),
});
",
                        "name": "FileProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const FileUploadRequest: core.serialization.ObjectSchema<serializers.FileUploadRequest.Raw, FernApi.FileUploadRequest>;
export declare namespace FileUploadRequest {
    interface Raw {
        name: serializers.Name.Raw;
        properties: serializers.FileUploadRequestProperty.Raw[];
    }
}
",
                        "name": "FileUploadRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileUploadRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.FileUploadRequest = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    properties: core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileUploadRequestProperty; }))),
});
",
                        "name": "FileUploadRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const FileUploadRequestProperty: core.serialization.Schema<serializers.FileUploadRequestProperty.Raw, FernApi.FileUploadRequestProperty>;
export declare namespace FileUploadRequestProperty {
    type Raw = FileUploadRequestProperty.File | FileUploadRequestProperty.BodyProperty;
    interface File extends serializers.FileProperty.Raw {
        type: \\"file\\";
    }
    interface BodyProperty extends serializers.InlinedRequestBodyProperty.Raw {
        type: \\"bodyProperty\\";
    }
}
",
                        "name": "FileUploadRequestProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileUploadRequestProperty = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.FileUploadRequestProperty = core.serialization
    .union(\\"type\\", {
    file: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileProperty; })),
    bodyProperty: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InlinedRequestBodyProperty; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"file\\":
                return FernApi.FileUploadRequestProperty.file(value);
            case \\"bodyProperty\\":
                return FernApi.FileUploadRequestProperty.bodyProperty(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "FileUploadRequestProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpEndpoint: core.serialization.ObjectSchema<serializers.HttpEndpoint.Raw, FernApi.HttpEndpoint>;
export declare namespace HttpEndpoint {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.EndpointName.Raw;
        displayName?: string | null;
        method: serializers.HttpMethod.Raw;
        headers: serializers.HttpHeader.Raw[];
        baseUrl?: serializers.EnvironmentBaseUrlId.Raw | null;
        path: serializers.HttpPath.Raw;
        fullPath: serializers.HttpPath.Raw;
        pathParameters: serializers.PathParameter.Raw[];
        allPathParameters: serializers.PathParameter.Raw[];
        queryParameters: serializers.QueryParameter.Raw[];
        requestBody?: serializers.HttpRequestBody.Raw | null;
        sdkRequest?: serializers.SdkRequest.Raw | null;
        response?: serializers.HttpResponse.Raw | null;
        errors: serializers.ResponseErrors.Raw;
        auth: boolean;
        examples: serializers.ExampleEndpointCall.Raw[];
    }
}
",
                        "name": "HttpEndpoint.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpEndpoint = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpEndpoint = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EndpointName; })),
    displayName: core.serialization.string().optional(),
    method: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpMethod; })),
    headers: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpHeader; }))),
    baseUrl: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentBaseUrlId; })).optional(),
    path: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpPath; })),
    fullPath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpPath; })),
    pathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PathParameter; }))),
    allPathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PathParameter; }))),
    queryParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).QueryParameter; }))),
    requestBody: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpRequestBody; })).optional(),
    sdkRequest: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SdkRequest; })).optional(),
    response: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpResponse; })).optional(),
    errors: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ResponseErrors; })),
    auth: core.serialization.boolean(),
    examples: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleEndpointCall; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Declaration; })));
",
                        "name": "HttpEndpoint.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpHeader: core.serialization.ObjectSchema<serializers.HttpHeader.Raw, FernApi.HttpHeader>;
export declare namespace HttpHeader {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "HttpHeader.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpHeader = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpHeader = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Declaration; })));
",
                        "name": "HttpHeader.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpMethod: core.serialization.Schema<serializers.HttpMethod.Raw, FernApi.HttpMethod>;
export declare namespace HttpMethod {
    type Raw = \\"GET\\" | \\"POST\\" | \\"PUT\\" | \\"PATCH\\" | \\"DELETE\\";
}
",
                        "name": "HttpMethod.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpMethod = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpMethod = core.serialization.enum_([\\"GET\\", \\"POST\\", \\"PUT\\", \\"PATCH\\", \\"DELETE\\"]);
",
                        "name": "HttpMethod.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpPath: core.serialization.ObjectSchema<serializers.HttpPath.Raw, FernApi.HttpPath>;
export declare namespace HttpPath {
    interface Raw {
        head: string;
        parts: serializers.HttpPathPart.Raw[];
    }
}
",
                        "name": "HttpPath.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpPath = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpPath = core.serialization.objectWithoutOptionalProperties({
    head: core.serialization.string(),
    parts: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpPathPart; }))),
});
",
                        "name": "HttpPath.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpPathPart: core.serialization.ObjectSchema<serializers.HttpPathPart.Raw, FernApi.HttpPathPart>;
export declare namespace HttpPathPart {
    interface Raw {
        pathParameter: string;
        tail: string;
    }
}
",
                        "name": "HttpPathPart.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpPathPart = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpPathPart = core.serialization.objectWithoutOptionalProperties({
    pathParameter: core.serialization.string(),
    tail: core.serialization.string(),
});
",
                        "name": "HttpPathPart.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpRequestBody: core.serialization.Schema<serializers.HttpRequestBody.Raw, FernApi.HttpRequestBody>;
export declare namespace HttpRequestBody {
    type Raw = HttpRequestBody.InlinedRequestBody | HttpRequestBody.Reference | HttpRequestBody.FileUpload;
    interface InlinedRequestBody extends serializers.InlinedRequestBody.Raw {
        type: \\"inlinedRequestBody\\";
    }
    interface Reference extends serializers.HttpRequestBodyReference.Raw {
        type: \\"reference\\";
    }
    interface FileUpload extends serializers.FileUploadRequest.Raw {
        type: \\"fileUpload\\";
    }
}
",
                        "name": "HttpRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpRequestBody = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpRequestBody = core.serialization
    .union(\\"type\\", {
    inlinedRequestBody: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InlinedRequestBody; })),
    reference: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpRequestBodyReference; })),
    fileUpload: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileUploadRequest; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"inlinedRequestBody\\":
                return FernApi.HttpRequestBody.inlinedRequestBody(value);
            case \\"reference\\":
                return FernApi.HttpRequestBody.reference(value);
            case \\"fileUpload\\":
                return FernApi.HttpRequestBody.fileUpload(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "HttpRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpRequestBodyReference: core.serialization.ObjectSchema<serializers.HttpRequestBodyReference.Raw, FernApi.HttpRequestBodyReference>;
export declare namespace HttpRequestBodyReference {
    interface Raw extends serializers.WithDocs.Raw {
        requestBodyType: serializers.TypeReference.Raw;
        contentType?: string | null;
    }
}
",
                        "name": "HttpRequestBodyReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpRequestBodyReference = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpRequestBodyReference = core.serialization
    .objectWithoutOptionalProperties({
    requestBodyType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    contentType: core.serialization.string().optional(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "HttpRequestBodyReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpResponse: core.serialization.Schema<serializers.HttpResponse.Raw, FernApi.HttpResponse>;
export declare namespace HttpResponse {
    type Raw = HttpResponse.Json | HttpResponse.FileDownload | HttpResponse.Streaming;
    interface Json extends serializers.JsonResponse.Raw {
        type: \\"json\\";
    }
    interface FileDownload extends serializers.FileDownloadResponse.Raw {
        type: \\"fileDownload\\";
    }
    interface Streaming extends serializers.StreamingResponse.Raw {
        type: \\"streaming\\";
    }
}
",
                        "name": "HttpResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpResponse = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpResponse = core.serialization
    .union(\\"type\\", {
    json: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).JsonResponse; })),
    fileDownload: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileDownloadResponse; })),
    streaming: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StreamingResponse; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"json\\":
                return FernApi.HttpResponse.json(value);
            case \\"fileDownload\\":
                return FernApi.HttpResponse.fileDownload(value);
            case \\"streaming\\":
                return FernApi.HttpResponse.streaming(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "HttpResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const HttpService: core.serialization.ObjectSchema<serializers.HttpService.Raw, FernApi.HttpService>;
export declare namespace HttpService {
    interface Raw {
        availability: serializers.Availability.Raw;
        name: serializers.DeclaredServiceName.Raw;
        displayName?: string | null;
        basePath: serializers.HttpPath.Raw;
        endpoints: serializers.HttpEndpoint.Raw[];
        headers: serializers.HttpHeader.Raw[];
        pathParameters: serializers.PathParameter.Raw[];
    }
}
",
                        "name": "HttpService.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.HttpService = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.HttpService = core.serialization.objectWithoutOptionalProperties({
    availability: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Availability; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredServiceName; })),
    displayName: core.serialization.string().optional(),
    basePath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpPath; })),
    endpoints: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpEndpoint; }))),
    headers: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpHeader; }))),
    pathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PathParameter; }))),
});
",
                        "name": "HttpService.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const InlinedRequestBody: core.serialization.ObjectSchema<serializers.InlinedRequestBody.Raw, FernApi.InlinedRequestBody>;
export declare namespace InlinedRequestBody {
    interface Raw {
        name: serializers.Name.Raw;
        extends: serializers.DeclaredTypeName.Raw[];
        properties: serializers.InlinedRequestBodyProperty.Raw[];
        contentType?: string | null;
    }
}
",
                        "name": "InlinedRequestBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InlinedRequestBody = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.InlinedRequestBody = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    extends_: core.serialization.property(\\"extends\\", core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })))),
    properties: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InlinedRequestBodyProperty; }))),
    contentType: core.serialization.string().optional(),
});
",
                        "name": "InlinedRequestBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const InlinedRequestBodyProperty: core.serialization.ObjectSchema<serializers.InlinedRequestBodyProperty.Raw, FernApi.InlinedRequestBodyProperty>;
export declare namespace InlinedRequestBodyProperty {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "InlinedRequestBodyProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InlinedRequestBodyProperty = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.InlinedRequestBodyProperty = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "InlinedRequestBodyProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const JsonResponse: core.serialization.ObjectSchema<serializers.JsonResponse.Raw, FernApi.JsonResponse>;
export declare namespace JsonResponse {
    interface Raw extends serializers.WithDocs.Raw {
        responseBodyType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "JsonResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.JsonResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.JsonResponse = core.serialization
    .objectWithoutOptionalProperties({
    responseBodyType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "JsonResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const MaybeStreamingResponse: core.serialization.ObjectSchema<serializers.MaybeStreamingResponse.Raw, FernApi.MaybeStreamingResponse>;
export declare namespace MaybeStreamingResponse {
    interface Raw {
        condition: serializers.StreamCondition.Raw;
        nonStreaming: serializers.HttpResponse.Raw;
        streaming: serializers.StreamingResponse.Raw;
    }
}
",
                        "name": "MaybeStreamingResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MaybeStreamingResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MaybeStreamingResponse = core.serialization.objectWithoutOptionalProperties({
    condition: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StreamCondition; })),
    nonStreaming: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpResponse; })),
    streaming: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StreamingResponse; })),
});
",
                        "name": "MaybeStreamingResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const PathParameter: core.serialization.ObjectSchema<serializers.PathParameter.Raw, FernApi.PathParameter>;
export declare namespace PathParameter {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.Name.Raw;
        valueType: serializers.TypeReference.Raw;
        location: serializers.PathParameterLocation.Raw;
        variable?: serializers.VariableId.Raw | null;
    }
}
",
                        "name": "PathParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PathParameter = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PathParameter = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    location: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PathParameterLocation; })),
    variable: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableId; })).optional(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "PathParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const PathParameterLocation: core.serialization.Schema<serializers.PathParameterLocation.Raw, FernApi.PathParameterLocation>;
export declare namespace PathParameterLocation {
    type Raw = \\"ROOT\\" | \\"SERVICE\\" | \\"ENDPOINT\\";
}
",
                        "name": "PathParameterLocation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PathParameterLocation = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PathParameterLocation = core.serialization.enum_([\\"ROOT\\", \\"SERVICE\\", \\"ENDPOINT\\"]);
",
                        "name": "PathParameterLocation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const QueryParameter: core.serialization.ObjectSchema<serializers.QueryParameter.Raw, FernApi.QueryParameter>;
export declare namespace QueryParameter {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
        allowMultiple: boolean;
    }
}
",
                        "name": "QueryParameter.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.QueryParameter = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.QueryParameter = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    allowMultiple: core.serialization.boolean(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Declaration; })));
",
                        "name": "QueryParameter.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ResponseError: core.serialization.ObjectSchema<serializers.ResponseError.Raw, FernApi.ResponseError>;
export declare namespace ResponseError {
    interface Raw extends serializers.WithDocs.Raw {
        error: serializers.DeclaredErrorName.Raw;
    }
}
",
                        "name": "ResponseError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ResponseError = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ResponseError = core.serialization
    .objectWithoutOptionalProperties({
    error: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredErrorName; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "ResponseError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ResponseErrors: core.serialization.Schema<serializers.ResponseErrors.Raw, FernApi.ResponseErrors>;
export declare namespace ResponseErrors {
    type Raw = serializers.ResponseError.Raw[];
}
",
                        "name": "ResponseErrors.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ResponseErrors = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ResponseErrors = core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ResponseError; })));
",
                        "name": "ResponseErrors.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SdkRequest: core.serialization.ObjectSchema<serializers.SdkRequest.Raw, FernApi.SdkRequest>;
export declare namespace SdkRequest {
    interface Raw {
        requestParameterName: serializers.Name.Raw;
        shape: serializers.SdkRequestShape.Raw;
    }
}
",
                        "name": "SdkRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SdkRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SdkRequest = core.serialization.objectWithoutOptionalProperties({
    requestParameterName: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SdkRequestShape; })),
});
",
                        "name": "SdkRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SdkRequestShape: core.serialization.Schema<serializers.SdkRequestShape.Raw, FernApi.SdkRequestShape>;
export declare namespace SdkRequestShape {
    type Raw = SdkRequestShape.JustRequestBody | SdkRequestShape.Wrapper;
    interface JustRequestBody extends serializers.HttpRequestBodyReference.Raw {
        type: \\"justRequestBody\\";
    }
    interface Wrapper extends serializers.SdkRequestWrapper.Raw {
        type: \\"wrapper\\";
    }
}
",
                        "name": "SdkRequestShape.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SdkRequestShape = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.SdkRequestShape = core.serialization
    .union(\\"type\\", {
    justRequestBody: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpRequestBodyReference; })),
    wrapper: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SdkRequestWrapper; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"justRequestBody\\":
                return FernApi.SdkRequestShape.justRequestBody(value);
            case \\"wrapper\\":
                return FernApi.SdkRequestShape.wrapper(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "SdkRequestShape.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SdkRequestWrapper: core.serialization.ObjectSchema<serializers.SdkRequestWrapper.Raw, FernApi.SdkRequestWrapper>;
export declare namespace SdkRequestWrapper {
    interface Raw {
        wrapperName: serializers.Name.Raw;
        bodyKey: serializers.Name.Raw;
    }
}
",
                        "name": "SdkRequestWrapper.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SdkRequestWrapper = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SdkRequestWrapper = core.serialization.objectWithoutOptionalProperties({
    wrapperName: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    bodyKey: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
});
",
                        "name": "SdkRequestWrapper.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const StreamCondition: core.serialization.Schema<serializers.StreamCondition.Raw, FernApi.StreamCondition>;
export declare namespace StreamCondition {
    type Raw = StreamCondition.QueryParameterKey | StreamCondition.RequestPropertyKey;
    interface QueryParameterKey {
        type: \\"queryParameterKey\\";
        value: string;
    }
    interface RequestPropertyKey {
        type: \\"requestPropertyKey\\";
        value: string;
    }
}
",
                        "name": "StreamCondition.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StreamCondition = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.StreamCondition = core.serialization
    .union(\\"type\\", {
    queryParameterKey: core.serialization.object({
        value: core.serialization.string(),
    }),
    requestPropertyKey: core.serialization.object({
        value: core.serialization.string(),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"queryParameterKey\\":
                return FernApi.StreamCondition.queryParameterKey(value.value);
            case \\"requestPropertyKey\\":
                return FernApi.StreamCondition.requestPropertyKey(value.value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "StreamCondition.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const StreamingResponse: core.serialization.ObjectSchema<serializers.StreamingResponse.Raw, FernApi.StreamingResponse>;
export declare namespace StreamingResponse {
    interface Raw extends serializers.WithDocs.Raw {
        dataEventType: serializers.StreamingResponseChunkType.Raw;
        terminator?: string | null;
    }
}
",
                        "name": "StreamingResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StreamingResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StreamingResponse = core.serialization
    .objectWithoutOptionalProperties({
    dataEventType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StreamingResponseChunkType; })),
    terminator: core.serialization.string().optional(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "StreamingResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const StreamingResponseChunkType: core.serialization.Schema<serializers.StreamingResponseChunkType.Raw, FernApi.StreamingResponseChunkType>;
export declare namespace StreamingResponseChunkType {
    type Raw = StreamingResponseChunkType.Json | StreamingResponseChunkType.Text;
    interface Json {
        type: \\"json\\";
        value: serializers.TypeReference.Raw;
    }
    interface Text {
        type: \\"text\\";
    }
}
",
                        "name": "StreamingResponseChunkType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StreamingResponseChunkType = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.StreamingResponseChunkType = core.serialization
    .union(\\"type\\", {
    json: core.serialization.object({
        value: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    }),
    text: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"json\\":
                return FernApi.StreamingResponseChunkType.json(value.value);
            case \\"text\\":
                return FernApi.StreamingResponseChunkType.text();
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "StreamingResponseChunkType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./HttpService\\";
export * from \\"./DeclaredServiceName\\";
export * from \\"./HttpEndpoint\\";
export * from \\"./EndpointName\\";
export * from \\"./HttpPath\\";
export * from \\"./HttpPathPart\\";
export * from \\"./HttpMethod\\";
export * from \\"./HttpHeader\\";
export * from \\"./PathParameter\\";
export * from \\"./PathParameterLocation\\";
export * from \\"./QueryParameter\\";
export * from \\"./HttpRequestBody\\";
export * from \\"./InlinedRequestBody\\";
export * from \\"./InlinedRequestBodyProperty\\";
export * from \\"./FileUploadRequest\\";
export * from \\"./FileUploadRequestProperty\\";
export * from \\"./FileProperty\\";
export * from \\"./HttpRequestBodyReference\\";
export * from \\"./SdkRequest\\";
export * from \\"./SdkRequestShape\\";
export * from \\"./SdkRequestWrapper\\";
export * from \\"./HttpResponse\\";
export * from \\"./JsonResponse\\";
export * from \\"./FileDownloadResponse\\";
export * from \\"./StreamingResponse\\";
export * from \\"./StreamingResponseChunkType\\";
export * from \\"./MaybeStreamingResponse\\";
export * from \\"./StreamCondition\\";
export * from \\"./ResponseErrors\\";
export * from \\"./ResponseError\\";
export * from \\"./ExampleEndpointCall\\";
export * from \\"./ExamplePathParameter\\";
export * from \\"./ExampleQueryParameter\\";
export * from \\"./ExampleHeader\\";
export * from \\"./ExampleRequestBody\\";
export * from \\"./ExampleInlinedRequestBody\\";
export * from \\"./ExampleInlinedRequestBodyProperty\\";
export * from \\"./ExampleResponse\\";
export * from \\"./ExampleEndpointSuccessResponse\\";
export * from \\"./ExampleEndpointErrorResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./HttpService\\"), exports);
__exportStar(require(\\"./DeclaredServiceName\\"), exports);
__exportStar(require(\\"./HttpEndpoint\\"), exports);
__exportStar(require(\\"./EndpointName\\"), exports);
__exportStar(require(\\"./HttpPath\\"), exports);
__exportStar(require(\\"./HttpPathPart\\"), exports);
__exportStar(require(\\"./HttpMethod\\"), exports);
__exportStar(require(\\"./HttpHeader\\"), exports);
__exportStar(require(\\"./PathParameter\\"), exports);
__exportStar(require(\\"./PathParameterLocation\\"), exports);
__exportStar(require(\\"./QueryParameter\\"), exports);
__exportStar(require(\\"./HttpRequestBody\\"), exports);
__exportStar(require(\\"./InlinedRequestBody\\"), exports);
__exportStar(require(\\"./InlinedRequestBodyProperty\\"), exports);
__exportStar(require(\\"./FileUploadRequest\\"), exports);
__exportStar(require(\\"./FileUploadRequestProperty\\"), exports);
__exportStar(require(\\"./FileProperty\\"), exports);
__exportStar(require(\\"./HttpRequestBodyReference\\"), exports);
__exportStar(require(\\"./SdkRequest\\"), exports);
__exportStar(require(\\"./SdkRequestShape\\"), exports);
__exportStar(require(\\"./SdkRequestWrapper\\"), exports);
__exportStar(require(\\"./HttpResponse\\"), exports);
__exportStar(require(\\"./JsonResponse\\"), exports);
__exportStar(require(\\"./FileDownloadResponse\\"), exports);
__exportStar(require(\\"./StreamingResponse\\"), exports);
__exportStar(require(\\"./StreamingResponseChunkType\\"), exports);
__exportStar(require(\\"./MaybeStreamingResponse\\"), exports);
__exportStar(require(\\"./StreamCondition\\"), exports);
__exportStar(require(\\"./ResponseErrors\\"), exports);
__exportStar(require(\\"./ResponseError\\"), exports);
__exportStar(require(\\"./ExampleEndpointCall\\"), exports);
__exportStar(require(\\"./ExamplePathParameter\\"), exports);
__exportStar(require(\\"./ExampleQueryParameter\\"), exports);
__exportStar(require(\\"./ExampleHeader\\"), exports);
__exportStar(require(\\"./ExampleRequestBody\\"), exports);
__exportStar(require(\\"./ExampleInlinedRequestBody\\"), exports);
__exportStar(require(\\"./ExampleInlinedRequestBodyProperty\\"), exports);
__exportStar(require(\\"./ExampleResponse\\"), exports);
__exportStar(require(\\"./ExampleEndpointSuccessResponse\\"), exports);
__exportStar(require(\\"./ExampleEndpointErrorResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "http",
                "type": "directory",
              },
              Object {
                "contents": "export * as auth from \\"./auth\\";
export * from \\"./auth/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as constants from \\"./constants\\";
export * from \\"./constants/types\\";
export * as environment from \\"./environment\\";
export * from \\"./environment/types\\";
export * as errors from \\"./errors\\";
export * from \\"./errors/types\\";
export * as http from \\"./http\\";
export * from \\"./http/types\\";
export * as ir from \\"./ir\\";
export * from \\"./ir/types\\";
export * as types from \\"./types\\";
export * from \\"./types/types\\";
export * as variables from \\"./variables\\";
export * from \\"./variables/types\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.variables = exports.types = exports.ir = exports.http = exports.errors = exports.environment = exports.constants = exports.commons = exports.auth = void 0;
exports.auth = __importStar(require(\\"./auth\\"));
__exportStar(require(\\"./auth/types\\"), exports);
exports.commons = __importStar(require(\\"./commons\\"));
__exportStar(require(\\"./commons/types\\"), exports);
exports.constants = __importStar(require(\\"./constants\\"));
__exportStar(require(\\"./constants/types\\"), exports);
exports.environment = __importStar(require(\\"./environment\\"));
__exportStar(require(\\"./environment/types\\"), exports);
exports.errors = __importStar(require(\\"./errors\\"));
__exportStar(require(\\"./errors/types\\"), exports);
exports.http = __importStar(require(\\"./http\\"));
__exportStar(require(\\"./http/types\\"), exports);
exports.ir = __importStar(require(\\"./ir\\"));
__exportStar(require(\\"./ir/types\\"), exports);
exports.types = __importStar(require(\\"./types\\"));
__exportStar(require(\\"./types/types\\"), exports);
exports.variables = __importStar(require(\\"./variables\\"));
__exportStar(require(\\"./variables/types\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ErrorDiscriminationByPropertyStrategy: core.serialization.ObjectSchema<serializers.ErrorDiscriminationByPropertyStrategy.Raw, FernApi.ErrorDiscriminationByPropertyStrategy>;
export declare namespace ErrorDiscriminationByPropertyStrategy {
    interface Raw {
        discriminant: serializers.NameAndWireValue.Raw;
        contentProperty: serializers.NameAndWireValue.Raw;
    }
}
",
                        "name": "ErrorDiscriminationByPropertyStrategy.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorDiscriminationByPropertyStrategy = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ErrorDiscriminationByPropertyStrategy = core.serialization.objectWithoutOptionalProperties({
    discriminant: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    contentProperty: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
});
",
                        "name": "ErrorDiscriminationByPropertyStrategy.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ErrorDiscriminationStrategy: core.serialization.Schema<serializers.ErrorDiscriminationStrategy.Raw, FernApi.ErrorDiscriminationStrategy>;
export declare namespace ErrorDiscriminationStrategy {
    type Raw = ErrorDiscriminationStrategy.StatusCode | ErrorDiscriminationStrategy.Property;
    interface StatusCode {
        type: \\"statusCode\\";
    }
    interface Property extends serializers.ErrorDiscriminationByPropertyStrategy.Raw {
        type: \\"property\\";
    }
}
",
                        "name": "ErrorDiscriminationStrategy.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorDiscriminationStrategy = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ErrorDiscriminationStrategy = core.serialization
    .union(\\"type\\", {
    statusCode: core.serialization.object({}),
    property: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorDiscriminationByPropertyStrategy; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"statusCode\\":
                return FernApi.ErrorDiscriminationStrategy.statusCode();
            case \\"property\\":
                return FernApi.ErrorDiscriminationStrategy.property(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ErrorDiscriminationStrategy.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const IntermediateRepresentation: core.serialization.ObjectSchema<serializers.IntermediateRepresentation.Raw, FernApi.IntermediateRepresentation>;
export declare namespace IntermediateRepresentation {
    interface Raw {
        apiName: serializers.Name.Raw;
        apiDisplayName?: string | null;
        apiDocs?: string | null;
        auth: serializers.ApiAuth.Raw;
        headers: serializers.HttpHeader.Raw[];
        types: Record<serializers.TypeId.Raw, serializers.TypeDeclaration.Raw>;
        services: Record<serializers.ServiceId.Raw, serializers.HttpService.Raw>;
        errors: Record<serializers.ErrorId.Raw, serializers.ErrorDeclaration.Raw>;
        subpackages: Record<serializers.SubpackageId.Raw, serializers.Subpackage.Raw>;
        rootPackage: serializers.Package.Raw;
        constants: serializers.Constants.Raw;
        environments?: serializers.EnvironmentsConfig.Raw | null;
        basePath?: serializers.HttpPath.Raw | null;
        pathParameters: serializers.PathParameter.Raw[];
        errorDiscriminationStrategy: serializers.ErrorDiscriminationStrategy.Raw;
        sdkConfig: serializers.SdkConfig.Raw;
        variables: serializers.VariableDeclaration.Raw[];
        serviceTypeReferenceInfo?: serializers.ServiceTypeReferenceInfo.Raw | null;
    }
}
",
                        "name": "IntermediateRepresentation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.IntermediateRepresentation = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.IntermediateRepresentation = core.serialization.objectWithoutOptionalProperties({
    apiName: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    apiDisplayName: core.serialization.string().optional(),
    apiDocs: core.serialization.string().optional(),
    auth: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ApiAuth; })),
    headers: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpHeader; }))),
    types: core.serialization.record(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeId; })), core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeDeclaration; }))),
    services: core.serialization.record(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ServiceId; })), core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpService; }))),
    errors: core.serialization.record(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorId; })), core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorDeclaration; }))),
    subpackages: core.serialization.record(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubpackageId; })), core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Subpackage; }))),
    rootPackage: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Package; })),
    constants: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Constants; })),
    environments: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnvironmentsConfig; })).optional(),
    basePath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).HttpPath; })).optional(),
    pathParameters: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PathParameter; }))),
    errorDiscriminationStrategy: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorDiscriminationStrategy; })),
    sdkConfig: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SdkConfig; })),
    variables: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableDeclaration; }))),
    serviceTypeReferenceInfo: core.serialization
        .lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ServiceTypeReferenceInfo; }))
        .optional(),
});
",
                        "name": "IntermediateRepresentation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Package: core.serialization.ObjectSchema<serializers.Package.Raw, FernApi.Package>;
export declare namespace Package {
    interface Raw extends serializers.WithDocs.Raw {
        fernFilepath: serializers.FernFilepath.Raw;
        service?: serializers.ServiceId.Raw | null;
        types: serializers.TypeId.Raw[];
        errors: serializers.ErrorId.Raw[];
        subpackages: serializers.SubpackageId.Raw[];
        hasEndpointsInTree: boolean;
        navigationConfig?: serializers.PackageNavigationConfig.Raw | null;
    }
}
",
                        "name": "Package.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Package = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Package = core.serialization
    .objectWithoutOptionalProperties({
    fernFilepath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FernFilepath; })),
    service: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ServiceId; })).optional(),
    types: core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeId; }))),
    errors: core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorId; }))),
    subpackages: core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubpackageId; }))),
    hasEndpointsInTree: core.serialization.boolean(),
    navigationConfig: core.serialization
        .lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PackageNavigationConfig; }))
        .optional(),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "Package.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const PackageNavigationConfig: core.serialization.ObjectSchema<serializers.PackageNavigationConfig.Raw, FernApi.PackageNavigationConfig>;
export declare namespace PackageNavigationConfig {
    interface Raw {
        pointsTo: serializers.SubpackageId.Raw;
    }
}
",
                        "name": "PackageNavigationConfig.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PackageNavigationConfig = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PackageNavigationConfig = core.serialization.objectWithoutOptionalProperties({
    pointsTo: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubpackageId; })),
});
",
                        "name": "PackageNavigationConfig.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const PlatformHeaders: core.serialization.ObjectSchema<serializers.PlatformHeaders.Raw, FernApi.PlatformHeaders>;
export declare namespace PlatformHeaders {
    interface Raw {
        language: string;
        sdkName: string;
        sdkVersion: string;
    }
}
",
                        "name": "PlatformHeaders.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PlatformHeaders = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PlatformHeaders = core.serialization.objectWithoutOptionalProperties({
    language: core.serialization.string(),
    sdkName: core.serialization.string(),
    sdkVersion: core.serialization.string(),
});
",
                        "name": "PlatformHeaders.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SdkConfig: core.serialization.ObjectSchema<serializers.SdkConfig.Raw, FernApi.SdkConfig>;
export declare namespace SdkConfig {
    interface Raw {
        isAuthMandatory: boolean;
        hasStreamingEndpoints: boolean;
        hasFileDownloadEndpoints: boolean;
        platformHeaders: serializers.PlatformHeaders.Raw;
    }
}
",
                        "name": "SdkConfig.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SdkConfig = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SdkConfig = core.serialization.objectWithoutOptionalProperties({
    isAuthMandatory: core.serialization.boolean(),
    hasStreamingEndpoints: core.serialization.boolean(),
    hasFileDownloadEndpoints: core.serialization.boolean(),
    platformHeaders: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PlatformHeaders; })),
});
",
                        "name": "SdkConfig.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ServiceTypeReferenceInfo: core.serialization.ObjectSchema<serializers.ServiceTypeReferenceInfo.Raw, FernApi.ServiceTypeReferenceInfo>;
export declare namespace ServiceTypeReferenceInfo {
    interface Raw {
        typesReferencedOnlyByService: Record<serializers.ServiceId.Raw, serializers.TypeId.Raw[]>;
        sharedTypes: serializers.TypeId.Raw[];
    }
}
",
                        "name": "ServiceTypeReferenceInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ServiceTypeReferenceInfo = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ServiceTypeReferenceInfo = core.serialization.objectWithoutOptionalProperties({
    typesReferencedOnlyByService: core.serialization.record(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ServiceId; })), core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeId; })))),
    sharedTypes: core.serialization.list(core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeId; }))),
});
",
                        "name": "ServiceTypeReferenceInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Subpackage: core.serialization.ObjectSchema<serializers.Subpackage.Raw, FernApi.Subpackage>;
export declare namespace Subpackage {
    interface Raw extends serializers.Package.Raw {
        name: serializers.Name.Raw;
    }
}
",
                        "name": "Subpackage.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Subpackage = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Subpackage = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Package; })));
",
                        "name": "Subpackage.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./IntermediateRepresentation\\";
export * from \\"./SdkConfig\\";
export * from \\"./PlatformHeaders\\";
export * from \\"./ErrorDiscriminationStrategy\\";
export * from \\"./ErrorDiscriminationByPropertyStrategy\\";
export * from \\"./Package\\";
export * from \\"./Subpackage\\";
export * from \\"./PackageNavigationConfig\\";
export * from \\"./ServiceTypeReferenceInfo\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./IntermediateRepresentation\\"), exports);
__exportStar(require(\\"./SdkConfig\\"), exports);
__exportStar(require(\\"./PlatformHeaders\\"), exports);
__exportStar(require(\\"./ErrorDiscriminationStrategy\\"), exports);
__exportStar(require(\\"./ErrorDiscriminationByPropertyStrategy\\"), exports);
__exportStar(require(\\"./Package\\"), exports);
__exportStar(require(\\"./Subpackage\\"), exports);
__exportStar(require(\\"./PackageNavigationConfig\\"), exports);
__exportStar(require(\\"./ServiceTypeReferenceInfo\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "ir",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const AliasTypeDeclaration: core.serialization.ObjectSchema<serializers.AliasTypeDeclaration.Raw, FernApi.AliasTypeDeclaration>;
export declare namespace AliasTypeDeclaration {
    interface Raw {
        aliasOf: serializers.TypeReference.Raw;
        resolvedType: serializers.ResolvedTypeReference.Raw;
    }
}
",
                        "name": "AliasTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AliasTypeDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.AliasTypeDeclaration = core.serialization.objectWithoutOptionalProperties({
    aliasOf: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    resolvedType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ResolvedTypeReference; })),
});
",
                        "name": "AliasTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ContainerType: core.serialization.Schema<serializers.ContainerType.Raw, FernApi.ContainerType>;
export declare namespace ContainerType {
    type Raw = ContainerType.List | ContainerType.Map | ContainerType.Optional | ContainerType.Set | ContainerType.Literal;
    interface List {
        _type: \\"list\\";
        list: serializers.TypeReference.Raw;
    }
    interface Map extends serializers.MapType.Raw {
        _type: \\"map\\";
    }
    interface Optional {
        _type: \\"optional\\";
        optional: serializers.TypeReference.Raw;
    }
    interface Set {
        _type: \\"set\\";
        set: serializers.TypeReference.Raw;
    }
    interface Literal {
        _type: \\"literal\\";
        literal: serializers.Literal.Raw;
    }
}
",
                        "name": "ContainerType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ContainerType = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ContainerType = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
    list: core.serialization.object({
        list: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    }),
    map: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).MapType; })),
    optional: core.serialization.object({
        optional: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    }),
    set: core.serialization.object({
        set: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    }),
    literal: core.serialization.object({
        literal: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Literal; })),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"list\\":
                return FernApi.ContainerType.list(value.list);
            case \\"map\\":
                return FernApi.ContainerType.map(value);
            case \\"optional\\":
                return FernApi.ContainerType.optional(value.optional);
            case \\"set\\":
                return FernApi.ContainerType.set(value.set);
            case \\"literal\\":
                return FernApi.ContainerType.literal(value.literal);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ContainerType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const DeclaredTypeName: core.serialization.ObjectSchema<serializers.DeclaredTypeName.Raw, FernApi.DeclaredTypeName>;
export declare namespace DeclaredTypeName {
    interface Raw {
        typeId: serializers.TypeId.Raw;
        fernFilepath: serializers.FernFilepath.Raw;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "DeclaredTypeName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DeclaredTypeName = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DeclaredTypeName = core.serialization.objectWithoutOptionalProperties({
    typeId: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeId; })),
    fernFilepath: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FernFilepath; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
});
",
                        "name": "DeclaredTypeName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnumTypeDeclaration: core.serialization.ObjectSchema<serializers.EnumTypeDeclaration.Raw, FernApi.EnumTypeDeclaration>;
export declare namespace EnumTypeDeclaration {
    interface Raw {
        values: serializers.EnumValue.Raw[];
    }
}
",
                        "name": "EnumTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnumTypeDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnumTypeDeclaration = core.serialization.objectWithoutOptionalProperties({
    values: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnumValue; }))),
});
",
                        "name": "EnumTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const EnumValue: core.serialization.ObjectSchema<serializers.EnumValue.Raw, FernApi.EnumValue>;
export declare namespace EnumValue {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
    }
}
",
                        "name": "EnumValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.EnumValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.EnumValue = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Declaration; })));
",
                        "name": "EnumValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleAliasType: core.serialization.ObjectSchema<serializers.ExampleAliasType.Raw, FernApi.ExampleAliasType>;
export declare namespace ExampleAliasType {
    interface Raw {
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleAliasType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleAliasType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleAliasType = core.serialization.objectWithoutOptionalProperties({
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
});
",
                        "name": "ExampleAliasType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleContainer: core.serialization.Schema<serializers.ExampleContainer.Raw, FernApi.ExampleContainer>;
export declare namespace ExampleContainer {
    type Raw = ExampleContainer.List | ExampleContainer.Set | ExampleContainer.Optional | ExampleContainer.Map;
    interface List {
        type: \\"list\\";
        list: serializers.ExampleTypeReference.Raw[];
    }
    interface Set {
        type: \\"set\\";
        set: serializers.ExampleTypeReference.Raw[];
    }
    interface Optional {
        type: \\"optional\\";
        optional?: serializers.ExampleTypeReference.Raw | null;
    }
    interface Map {
        type: \\"map\\";
        map: serializers.ExampleKeyValuePair.Raw[];
    }
}
",
                        "name": "ExampleContainer.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleContainer = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleContainer = core.serialization
    .union(\\"type\\", {
    list: core.serialization.object({
        list: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; }))),
    }),
    set: core.serialization.object({
        set: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; }))),
    }),
    optional: core.serialization.object({
        optional: core.serialization
            .lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; }))
            .optional(),
    }),
    map: core.serialization.object({
        map: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleKeyValuePair; }))),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"list\\":
                return FernApi.ExampleContainer.list(value.list);
            case \\"set\\":
                return FernApi.ExampleContainer.set(value.set);
            case \\"optional\\":
                return FernApi.ExampleContainer.optional(value.optional);
            case \\"map\\":
                return FernApi.ExampleContainer.map(value.map);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExampleContainer.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleEnumType: core.serialization.ObjectSchema<serializers.ExampleEnumType.Raw, FernApi.ExampleEnumType>;
export declare namespace ExampleEnumType {
    interface Raw {
        wireValue: string;
    }
}
",
                        "name": "ExampleEnumType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleEnumType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleEnumType = core.serialization.objectWithoutOptionalProperties({
    wireValue: core.serialization.string(),
});
",
                        "name": "ExampleEnumType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleKeyValuePair: core.serialization.ObjectSchema<serializers.ExampleKeyValuePair.Raw, FernApi.ExampleKeyValuePair>;
export declare namespace ExampleKeyValuePair {
    interface Raw {
        key: serializers.ExampleTypeReference.Raw;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleKeyValuePair.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleKeyValuePair = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleKeyValuePair = core.serialization.objectWithoutOptionalProperties({
    key: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
});
",
                        "name": "ExampleKeyValuePair.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleNamedType: core.serialization.ObjectSchema<serializers.ExampleNamedType.Raw, FernApi.ExampleNamedType>;
export declare namespace ExampleNamedType {
    interface Raw {
        typeName: serializers.DeclaredTypeName.Raw;
        shape: serializers.ExampleTypeShape.Raw;
    }
}
",
                        "name": "ExampleNamedType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleNamedType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleNamedType = core.serialization.objectWithoutOptionalProperties({
    typeName: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })),
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeShape; })),
});
",
                        "name": "ExampleNamedType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleObjectProperty: core.serialization.ObjectSchema<serializers.ExampleObjectProperty.Raw, FernApi.ExampleObjectProperty>;
export declare namespace ExampleObjectProperty {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
        originalTypeDeclaration: serializers.DeclaredTypeName.Raw;
    }
}
",
                        "name": "ExampleObjectProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleObjectProperty = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleObjectProperty = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
    originalTypeDeclaration: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })),
});
",
                        "name": "ExampleObjectProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleObjectType: core.serialization.ObjectSchema<serializers.ExampleObjectType.Raw, FernApi.ExampleObjectType>;
export declare namespace ExampleObjectType {
    interface Raw {
        properties: serializers.ExampleObjectProperty.Raw[];
    }
}
",
                        "name": "ExampleObjectType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleObjectType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleObjectType = core.serialization.objectWithoutOptionalProperties({
    properties: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleObjectProperty; }))),
});
",
                        "name": "ExampleObjectType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExamplePrimitive: core.serialization.Schema<serializers.ExamplePrimitive.Raw, FernApi.ExamplePrimitive>;
export declare namespace ExamplePrimitive {
    type Raw = ExamplePrimitive.Integer | ExamplePrimitive.Double | ExamplePrimitive.String | ExamplePrimitive.Boolean | ExamplePrimitive.Long | ExamplePrimitive.Datetime | ExamplePrimitive.Date | ExamplePrimitive.Uuid;
    interface Integer {
        type: \\"integer\\";
        integer: number;
    }
    interface Double {
        type: \\"double\\";
        double: number;
    }
    interface String {
        type: \\"string\\";
        string: string;
    }
    interface Boolean {
        type: \\"boolean\\";
        boolean: boolean;
    }
    interface Long {
        type: \\"long\\";
        long: number;
    }
    interface Datetime {
        type: \\"datetime\\";
        datetime: string;
    }
    interface Date {
        type: \\"date\\";
        date: string;
    }
    interface Uuid {
        type: \\"uuid\\";
        uuid: string;
    }
}
",
                        "name": "ExamplePrimitive.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExamplePrimitive = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExamplePrimitive = core.serialization
    .union(\\"type\\", {
    integer: core.serialization.object({
        integer: core.serialization.number(),
    }),
    double: core.serialization.object({
        double: core.serialization.number(),
    }),
    string: core.serialization.object({
        string: core.serialization.string(),
    }),
    boolean: core.serialization.object({
        boolean: core.serialization.boolean(),
    }),
    long: core.serialization.object({
        long: core.serialization.number(),
    }),
    datetime: core.serialization.object({
        datetime: core.serialization.date(),
    }),
    date: core.serialization.object({
        date: core.serialization.string(),
    }),
    uuid: core.serialization.object({
        uuid: core.serialization.string(),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"integer\\":
                return FernApi.ExamplePrimitive.integer(value.integer);
            case \\"double\\":
                return FernApi.ExamplePrimitive.double(value.double);
            case \\"string\\":
                return FernApi.ExamplePrimitive.string(value.string);
            case \\"boolean\\":
                return FernApi.ExamplePrimitive.boolean(value.boolean);
            case \\"long\\":
                return FernApi.ExamplePrimitive.long(value.long);
            case \\"datetime\\":
                return FernApi.ExamplePrimitive.datetime(value.datetime);
            case \\"date\\":
                return FernApi.ExamplePrimitive.date(value.date);
            case \\"uuid\\":
                return FernApi.ExamplePrimitive.uuid(value.uuid);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExamplePrimitive.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleSingleUnionType: core.serialization.ObjectSchema<serializers.ExampleSingleUnionType.Raw, FernApi.ExampleSingleUnionType>;
export declare namespace ExampleSingleUnionType {
    interface Raw {
        wireDiscriminantValue: string;
        properties: serializers.ExampleSingleUnionTypeProperties.Raw;
    }
}
",
                        "name": "ExampleSingleUnionType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleSingleUnionType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleSingleUnionType = core.serialization.objectWithoutOptionalProperties({
    wireDiscriminantValue: core.serialization.string(),
    properties: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleSingleUnionTypeProperties; })),
});
",
                        "name": "ExampleSingleUnionType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleSingleUnionTypeProperties: core.serialization.Schema<serializers.ExampleSingleUnionTypeProperties.Raw, FernApi.ExampleSingleUnionTypeProperties>;
export declare namespace ExampleSingleUnionTypeProperties {
    type Raw = ExampleSingleUnionTypeProperties.SamePropertiesAsObject | ExampleSingleUnionTypeProperties.SingleProperty | ExampleSingleUnionTypeProperties.NoProperties;
    interface SamePropertiesAsObject extends serializers.ExampleNamedType.Raw {
        type: \\"samePropertiesAsObject\\";
    }
    interface SingleProperty extends serializers.ExampleTypeReference.Raw {
        type: \\"singleProperty\\";
    }
    interface NoProperties {
        type: \\"noProperties\\";
    }
}
",
                        "name": "ExampleSingleUnionTypeProperties.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleSingleUnionTypeProperties = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleSingleUnionTypeProperties = core.serialization
    .union(\\"type\\", {
    samePropertiesAsObject: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleNamedType; })),
    singleProperty: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReference; })),
    noProperties: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"samePropertiesAsObject\\":
                return FernApi.ExampleSingleUnionTypeProperties.samePropertiesAsObject(value);
            case \\"singleProperty\\":
                return FernApi.ExampleSingleUnionTypeProperties.singleProperty(value);
            case \\"noProperties\\":
                return FernApi.ExampleSingleUnionTypeProperties.noProperties();
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExampleSingleUnionTypeProperties.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleType: core.serialization.ObjectSchema<serializers.ExampleType.Raw, FernApi.ExampleType>;
export declare namespace ExampleType {
    interface Raw extends serializers.WithJsonExample.Raw, serializers.WithDocs.Raw {
        name?: serializers.Name.Raw | null;
        shape: serializers.ExampleTypeShape.Raw;
    }
}
",
                        "name": "ExampleType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleType = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })).optional(),
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeShape; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithJsonExample; })))
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "ExampleType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleTypeReference: core.serialization.ObjectSchema<serializers.ExampleTypeReference.Raw, FernApi.ExampleTypeReference>;
export declare namespace ExampleTypeReference {
    interface Raw extends serializers.WithJsonExample.Raw {
        shape: serializers.ExampleTypeReferenceShape.Raw;
    }
}
",
                        "name": "ExampleTypeReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleTypeReference = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleTypeReference = core.serialization
    .objectWithoutOptionalProperties({
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleTypeReferenceShape; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithJsonExample; })));
",
                        "name": "ExampleTypeReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleTypeReferenceShape: core.serialization.Schema<serializers.ExampleTypeReferenceShape.Raw, FernApi.ExampleTypeReferenceShape>;
export declare namespace ExampleTypeReferenceShape {
    type Raw = ExampleTypeReferenceShape.Primitive | ExampleTypeReferenceShape.Container | ExampleTypeReferenceShape.Unknown | ExampleTypeReferenceShape.Named;
    interface Primitive {
        type: \\"primitive\\";
        primitive: serializers.ExamplePrimitive.Raw;
    }
    interface Container {
        type: \\"container\\";
        container: serializers.ExampleContainer.Raw;
    }
    interface Unknown {
        type: \\"unknown\\";
        unknown?: unknown;
    }
    interface Named extends serializers.ExampleNamedType.Raw {
        type: \\"named\\";
    }
}
",
                        "name": "ExampleTypeReferenceShape.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleTypeReferenceShape = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleTypeReferenceShape = core.serialization
    .union(\\"type\\", {
    primitive: core.serialization.object({
        primitive: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExamplePrimitive; })),
    }),
    container: core.serialization.object({
        container: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleContainer; })),
    }),
    unknown: core.serialization.object({
        unknown: core.serialization.unknown(),
    }),
    named: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleNamedType; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"primitive\\":
                return FernApi.ExampleTypeReferenceShape.primitive(value.primitive);
            case \\"container\\":
                return FernApi.ExampleTypeReferenceShape.container(value.container);
            case \\"unknown\\":
                return FernApi.ExampleTypeReferenceShape.unknown(value.unknown);
            case \\"named\\":
                return FernApi.ExampleTypeReferenceShape.named(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExampleTypeReferenceShape.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ExampleTypeShape: core.serialization.Schema<serializers.ExampleTypeShape.Raw, FernApi.ExampleTypeShape>;
export declare namespace ExampleTypeShape {
    type Raw = ExampleTypeShape.Alias | ExampleTypeShape.Enum | ExampleTypeShape.Object | ExampleTypeShape.Union;
    interface Alias extends serializers.ExampleAliasType.Raw {
        type: \\"alias\\";
    }
    interface Enum extends serializers.ExampleEnumType.Raw {
        type: \\"enum\\";
    }
    interface Object extends serializers.ExampleObjectType.Raw {
        type: \\"object\\";
    }
    interface Union extends serializers.ExampleSingleUnionType.Raw {
        type: \\"union\\";
    }
}
",
                        "name": "ExampleTypeShape.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExampleTypeShape = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ExampleTypeShape = core.serialization
    .union(\\"type\\", {
    alias: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleAliasType; })),
    enum: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleEnumType; })),
    object: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleObjectType; })),
    union: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleSingleUnionType; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"alias\\":
                return FernApi.ExampleTypeShape.alias(value);
            case \\"enum\\":
                return FernApi.ExampleTypeShape.enum(value);
            case \\"object\\":
                return FernApi.ExampleTypeShape.object(value);
            case \\"union\\":
                return FernApi.ExampleTypeShape.union(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ExampleTypeShape.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Literal: core.serialization.Schema<serializers.Literal.Raw, FernApi.Literal>;
export declare namespace Literal {
    type Raw = Literal.String;
    interface String {
        type: \\"string\\";
        string: string;
    }
}
",
                        "name": "Literal.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Literal = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.Literal = core.serialization
    .union(\\"type\\", {
    string: core.serialization.object({
        string: core.serialization.string(),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"string\\":
                return FernApi.Literal.string(value.string);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "Literal.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const MapType: core.serialization.ObjectSchema<serializers.MapType.Raw, FernApi.MapType>;
export declare namespace MapType {
    interface Raw {
        keyType: serializers.TypeReference.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "MapType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MapType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MapType = core.serialization.objectWithoutOptionalProperties({
    keyType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
});
",
                        "name": "MapType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ObjectProperty: core.serialization.ObjectSchema<serializers.ObjectProperty.Raw, FernApi.ObjectProperty>;
export declare namespace ObjectProperty {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "ObjectProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ObjectProperty = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ObjectProperty = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    valueType: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Declaration; })));
",
                        "name": "ObjectProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ObjectTypeDeclaration: core.serialization.ObjectSchema<serializers.ObjectTypeDeclaration.Raw, FernApi.ObjectTypeDeclaration>;
export declare namespace ObjectTypeDeclaration {
    interface Raw {
        extends: serializers.DeclaredTypeName.Raw[];
        properties: serializers.ObjectProperty.Raw[];
    }
}
",
                        "name": "ObjectTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ObjectTypeDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ObjectTypeDeclaration = core.serialization.objectWithoutOptionalProperties({
    extends_: core.serialization.property(\\"extends\\", core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })))),
    properties: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ObjectProperty; }))),
});
",
                        "name": "ObjectTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const PrimitiveType: core.serialization.Schema<serializers.PrimitiveType.Raw, FernApi.PrimitiveType>;
export declare namespace PrimitiveType {
    type Raw = \\"INTEGER\\" | \\"DOUBLE\\" | \\"STRING\\" | \\"BOOLEAN\\" | \\"LONG\\" | \\"DATE_TIME\\" | \\"DATE\\" | \\"UUID\\" | \\"BASE_64\\";
}
",
                        "name": "PrimitiveType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PrimitiveType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PrimitiveType = core.serialization.enum_([
    \\"INTEGER\\",
    \\"DOUBLE\\",
    \\"STRING\\",
    \\"BOOLEAN\\",
    \\"LONG\\",
    \\"DATE_TIME\\",
    \\"DATE\\",
    \\"UUID\\",
    \\"BASE_64\\",
]);
",
                        "name": "PrimitiveType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ResolvedNamedType: core.serialization.ObjectSchema<serializers.ResolvedNamedType.Raw, FernApi.ResolvedNamedType>;
export declare namespace ResolvedNamedType {
    interface Raw {
        name: serializers.DeclaredTypeName.Raw;
        shape: serializers.ShapeType.Raw;
    }
}
",
                        "name": "ResolvedNamedType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ResolvedNamedType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ResolvedNamedType = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })),
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ShapeType; })),
});
",
                        "name": "ResolvedNamedType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ResolvedTypeReference: core.serialization.Schema<serializers.ResolvedTypeReference.Raw, FernApi.ResolvedTypeReference>;
export declare namespace ResolvedTypeReference {
    type Raw = ResolvedTypeReference.Container | ResolvedTypeReference.Named | ResolvedTypeReference.Primitive | ResolvedTypeReference.Unknown;
    interface Container {
        _type: \\"container\\";
        container: serializers.ContainerType.Raw;
    }
    interface Named extends serializers.ResolvedNamedType.Raw {
        _type: \\"named\\";
    }
    interface Primitive {
        _type: \\"primitive\\";
        primitive: serializers.PrimitiveType.Raw;
    }
    interface Unknown {
        _type: \\"unknown\\";
    }
}
",
                        "name": "ResolvedTypeReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ResolvedTypeReference = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.ResolvedTypeReference = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
    container: core.serialization.object({
        container: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ContainerType; })),
    }),
    named: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ResolvedNamedType; })),
    primitive: core.serialization.object({
        primitive: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PrimitiveType; })),
    }),
    unknown: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"container\\":
                return FernApi.ResolvedTypeReference.container(value.container);
            case \\"named\\":
                return FernApi.ResolvedTypeReference.named(value);
            case \\"primitive\\":
                return FernApi.ResolvedTypeReference.primitive(value.primitive);
            case \\"unknown\\":
                return FernApi.ResolvedTypeReference.unknown();
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "ResolvedTypeReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const ShapeType: core.serialization.Schema<serializers.ShapeType.Raw, FernApi.ShapeType>;
export declare namespace ShapeType {
    type Raw = \\"ENUM\\" | \\"OBJECT\\" | \\"UNION\\" | \\"UNDISCRIMINATED_UNION\\";
}
",
                        "name": "ShapeType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ShapeType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ShapeType = core.serialization.enum_([\\"ENUM\\", \\"OBJECT\\", \\"UNION\\", \\"UNDISCRIMINATED_UNION\\"]);
",
                        "name": "ShapeType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SingleUnionType: core.serialization.ObjectSchema<serializers.SingleUnionType.Raw, FernApi.SingleUnionType>;
export declare namespace SingleUnionType {
    interface Raw extends serializers.WithDocs.Raw {
        discriminantValue: serializers.NameAndWireValue.Raw;
        shape: serializers.SingleUnionTypeProperties.Raw;
    }
}
",
                        "name": "SingleUnionType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SingleUnionType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SingleUnionType = core.serialization
    .objectWithoutOptionalProperties({
    discriminantValue: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SingleUnionTypeProperties; })),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "SingleUnionType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SingleUnionTypeProperties: core.serialization.Schema<serializers.SingleUnionTypeProperties.Raw, FernApi.SingleUnionTypeProperties>;
export declare namespace SingleUnionTypeProperties {
    type Raw = SingleUnionTypeProperties.SamePropertiesAsObject | SingleUnionTypeProperties.SingleProperty | SingleUnionTypeProperties.NoProperties;
    interface SamePropertiesAsObject extends serializers.DeclaredTypeName.Raw {
        _type: \\"samePropertiesAsObject\\";
    }
    interface SingleProperty extends serializers.SingleUnionTypeProperty.Raw {
        _type: \\"singleProperty\\";
    }
    interface NoProperties {
        _type: \\"noProperties\\";
    }
}
",
                        "name": "SingleUnionTypeProperties.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SingleUnionTypeProperties = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.SingleUnionTypeProperties = core.serialization
    .union(core.serialization.discriminant(\\"propertiesType\\", \\"_type\\"), {
    samePropertiesAsObject: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })),
    singleProperty: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SingleUnionTypeProperty; })),
    noProperties: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.propertiesType) {
            case \\"samePropertiesAsObject\\":
                return FernApi.SingleUnionTypeProperties.samePropertiesAsObject(value);
            case \\"singleProperty\\":
                return FernApi.SingleUnionTypeProperties.singleProperty(value);
            case \\"noProperties\\":
                return FernApi.SingleUnionTypeProperties.noProperties();
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "SingleUnionTypeProperties.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const SingleUnionTypeProperty: core.serialization.ObjectSchema<serializers.SingleUnionTypeProperty.Raw, FernApi.SingleUnionTypeProperty>;
export declare namespace SingleUnionTypeProperty {
    interface Raw {
        name: serializers.NameAndWireValue.Raw;
        type: serializers.TypeReference.Raw;
    }
}
",
                        "name": "SingleUnionTypeProperty.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SingleUnionTypeProperty = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SingleUnionTypeProperty = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    type_: core.serialization.property(\\"type\\", core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; }))),
});
",
                        "name": "SingleUnionTypeProperty.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const Type: core.serialization.Schema<serializers.Type.Raw, FernApi.Type>;
export declare namespace Type {
    type Raw = Type.Alias | Type.Enum | Type.Object | Type.Union | Type.UndiscriminatedUnion;
    interface Alias extends serializers.AliasTypeDeclaration.Raw {
        _type: \\"alias\\";
    }
    interface Enum extends serializers.EnumTypeDeclaration.Raw {
        _type: \\"enum\\";
    }
    interface Object extends serializers.ObjectTypeDeclaration.Raw {
        _type: \\"object\\";
    }
    interface Union extends serializers.UnionTypeDeclaration.Raw {
        _type: \\"union\\";
    }
    interface UndiscriminatedUnion extends serializers.UndiscriminatedUnionTypeDeclaration.Raw {
        _type: \\"undiscriminatedUnion\\";
    }
}
",
                        "name": "Type.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Type = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.Type = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
    alias: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).AliasTypeDeclaration; })),
    enum: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).EnumTypeDeclaration; })),
    object: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ObjectTypeDeclaration; })),
    union: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).UnionTypeDeclaration; })),
    undiscriminatedUnion: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).UndiscriminatedUnionTypeDeclaration; })),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"alias\\":
                return FernApi.Type.alias(value);
            case \\"enum\\":
                return FernApi.Type.enum(value);
            case \\"object\\":
                return FernApi.Type.object(value);
            case \\"union\\":
                return FernApi.Type.union(value);
            case \\"undiscriminatedUnion\\":
                return FernApi.Type.undiscriminatedUnion(value);
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "Type.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const TypeDeclaration: core.serialization.ObjectSchema<serializers.TypeDeclaration.Raw, FernApi.TypeDeclaration>;
export declare namespace TypeDeclaration {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.DeclaredTypeName.Raw;
        shape: serializers.Type.Raw;
        examples: serializers.ExampleType.Raw[];
        referencedTypes: serializers.DeclaredTypeName.Raw[];
    }
}
",
                        "name": "TypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TypeDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TypeDeclaration = core.serialization
    .objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })),
    shape: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Type; })),
    examples: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExampleType; }))),
    referencedTypes: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Declaration; })));
",
                        "name": "TypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const TypeReference: core.serialization.Schema<serializers.TypeReference.Raw, FernApi.TypeReference>;
export declare namespace TypeReference {
    type Raw = TypeReference.Container | TypeReference.Named | TypeReference.Primitive | TypeReference.Unknown;
    interface Container {
        _type: \\"container\\";
        container: serializers.ContainerType.Raw;
    }
    interface Named extends serializers.DeclaredTypeName.Raw {
        _type: \\"named\\";
    }
    interface Primitive {
        _type: \\"primitive\\";
        primitive: serializers.PrimitiveType.Raw;
    }
    interface Unknown {
        _type: \\"unknown\\";
    }
}
",
                        "name": "TypeReference.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TypeReference = void 0;
const FernApi = __importStar(require(\\"../../../../api\\"));
const core = __importStar(require(\\"../../../../core\\"));
exports.TypeReference = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
    container: core.serialization.object({
        container: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ContainerType; })),
    }),
    named: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })),
    primitive: core.serialization.object({
        primitive: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PrimitiveType; })),
    }),
    unknown: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"container\\":
                return FernApi.TypeReference.container(value.container);
            case \\"named\\":
                return FernApi.TypeReference.named(value);
            case \\"primitive\\":
                return FernApi.TypeReference.primitive(value.primitive);
            case \\"unknown\\":
                return FernApi.TypeReference.unknown();
            default:
                return value;
        }
    },
    untransform: (_a) => {
        var { _visit } = _a, value = __rest(_a, [\\"_visit\\"]);
        return value;
    },
});
",
                        "name": "TypeReference.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const UndiscriminatedUnionMember: core.serialization.ObjectSchema<serializers.UndiscriminatedUnionMember.Raw, FernApi.UndiscriminatedUnionMember>;
export declare namespace UndiscriminatedUnionMember {
    interface Raw extends serializers.WithDocs.Raw {
        type: serializers.TypeReference.Raw;
    }
}
",
                        "name": "UndiscriminatedUnionMember.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UndiscriminatedUnionMember = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.UndiscriminatedUnionMember = core.serialization
    .objectWithoutOptionalProperties({
    type_: core.serialization.property(\\"type\\", core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "UndiscriminatedUnionMember.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const UndiscriminatedUnionTypeDeclaration: core.serialization.ObjectSchema<serializers.UndiscriminatedUnionTypeDeclaration.Raw, FernApi.UndiscriminatedUnionTypeDeclaration>;
export declare namespace UndiscriminatedUnionTypeDeclaration {
    interface Raw {
        members: serializers.UndiscriminatedUnionMember.Raw[];
    }
}
",
                        "name": "UndiscriminatedUnionTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UndiscriminatedUnionTypeDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.UndiscriminatedUnionTypeDeclaration = core.serialization.objectWithoutOptionalProperties({
    members: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).UndiscriminatedUnionMember; }))),
});
",
                        "name": "UndiscriminatedUnionTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const UnionTypeDeclaration: core.serialization.ObjectSchema<serializers.UnionTypeDeclaration.Raw, FernApi.UnionTypeDeclaration>;
export declare namespace UnionTypeDeclaration {
    interface Raw {
        discriminant: serializers.NameAndWireValue.Raw;
        extends: serializers.DeclaredTypeName.Raw[];
        types: serializers.SingleUnionType.Raw[];
        baseProperties: serializers.ObjectProperty.Raw[];
    }
}
",
                        "name": "UnionTypeDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UnionTypeDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.UnionTypeDeclaration = core.serialization.objectWithoutOptionalProperties({
    discriminant: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NameAndWireValue; })),
    extends_: core.serialization.property(\\"extends\\", core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DeclaredTypeName; })))),
    types: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SingleUnionType; }))),
    baseProperties: core.serialization.list(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ObjectProperty; }))),
});
",
                        "name": "UnionTypeDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TypeDeclaration\\";
export * from \\"./DeclaredTypeName\\";
export * from \\"./Type\\";
export * from \\"./AliasTypeDeclaration\\";
export * from \\"./ResolvedTypeReference\\";
export * from \\"./ResolvedNamedType\\";
export * from \\"./ShapeType\\";
export * from \\"./EnumTypeDeclaration\\";
export * from \\"./EnumValue\\";
export * from \\"./ObjectTypeDeclaration\\";
export * from \\"./ObjectProperty\\";
export * from \\"./UnionTypeDeclaration\\";
export * from \\"./SingleUnionType\\";
export * from \\"./SingleUnionTypeProperties\\";
export * from \\"./SingleUnionTypeProperty\\";
export * from \\"./UndiscriminatedUnionTypeDeclaration\\";
export * from \\"./UndiscriminatedUnionMember\\";
export * from \\"./TypeReference\\";
export * from \\"./ContainerType\\";
export * from \\"./MapType\\";
export * from \\"./PrimitiveType\\";
export * from \\"./Literal\\";
export * from \\"./ExampleType\\";
export * from \\"./ExampleTypeShape\\";
export * from \\"./ExampleAliasType\\";
export * from \\"./ExampleEnumType\\";
export * from \\"./ExampleObjectType\\";
export * from \\"./ExampleObjectProperty\\";
export * from \\"./ExampleSingleUnionType\\";
export * from \\"./ExampleSingleUnionTypeProperties\\";
export * from \\"./ExampleTypeReference\\";
export * from \\"./ExampleTypeReferenceShape\\";
export * from \\"./ExampleContainer\\";
export * from \\"./ExampleKeyValuePair\\";
export * from \\"./ExamplePrimitive\\";
export * from \\"./ExampleNamedType\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TypeDeclaration\\"), exports);
__exportStar(require(\\"./DeclaredTypeName\\"), exports);
__exportStar(require(\\"./Type\\"), exports);
__exportStar(require(\\"./AliasTypeDeclaration\\"), exports);
__exportStar(require(\\"./ResolvedTypeReference\\"), exports);
__exportStar(require(\\"./ResolvedNamedType\\"), exports);
__exportStar(require(\\"./ShapeType\\"), exports);
__exportStar(require(\\"./EnumTypeDeclaration\\"), exports);
__exportStar(require(\\"./EnumValue\\"), exports);
__exportStar(require(\\"./ObjectTypeDeclaration\\"), exports);
__exportStar(require(\\"./ObjectProperty\\"), exports);
__exportStar(require(\\"./UnionTypeDeclaration\\"), exports);
__exportStar(require(\\"./SingleUnionType\\"), exports);
__exportStar(require(\\"./SingleUnionTypeProperties\\"), exports);
__exportStar(require(\\"./SingleUnionTypeProperty\\"), exports);
__exportStar(require(\\"./UndiscriminatedUnionTypeDeclaration\\"), exports);
__exportStar(require(\\"./UndiscriminatedUnionMember\\"), exports);
__exportStar(require(\\"./TypeReference\\"), exports);
__exportStar(require(\\"./ContainerType\\"), exports);
__exportStar(require(\\"./MapType\\"), exports);
__exportStar(require(\\"./PrimitiveType\\"), exports);
__exportStar(require(\\"./Literal\\"), exports);
__exportStar(require(\\"./ExampleType\\"), exports);
__exportStar(require(\\"./ExampleTypeShape\\"), exports);
__exportStar(require(\\"./ExampleAliasType\\"), exports);
__exportStar(require(\\"./ExampleEnumType\\"), exports);
__exportStar(require(\\"./ExampleObjectType\\"), exports);
__exportStar(require(\\"./ExampleObjectProperty\\"), exports);
__exportStar(require(\\"./ExampleSingleUnionType\\"), exports);
__exportStar(require(\\"./ExampleSingleUnionTypeProperties\\"), exports);
__exportStar(require(\\"./ExampleTypeReference\\"), exports);
__exportStar(require(\\"./ExampleTypeReferenceShape\\"), exports);
__exportStar(require(\\"./ExampleContainer\\"), exports);
__exportStar(require(\\"./ExampleKeyValuePair\\"), exports);
__exportStar(require(\\"./ExamplePrimitive\\"), exports);
__exportStar(require(\\"./ExampleNamedType\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "types",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const VariableDeclaration: core.serialization.ObjectSchema<serializers.VariableDeclaration.Raw, FernApi.VariableDeclaration>;
export declare namespace VariableDeclaration {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.VariableId.Raw;
        name: serializers.Name.Raw;
        type: serializers.TypeReference.Raw;
    }
}
",
                        "name": "VariableDeclaration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableDeclaration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.VariableDeclaration = core.serialization
    .objectWithoutOptionalProperties({
    id: core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableId; })),
    name: core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Name; })),
    type_: core.serialization.property(\\"type\\", core.serialization.lazy(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TypeReference; }))),
})
    .extend(core.serialization.lazyObject(() => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WithDocs; })));
",
                        "name": "VariableDeclaration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";
export declare const VariableId: core.serialization.Schema<serializers.VariableId.Raw, FernApi.VariableId>;
export declare namespace VariableId {
    type Raw = string;
}
",
                        "name": "VariableId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.VariableId = core.serialization.string();
",
                        "name": "VariableId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./VariableId\\";
export * from \\"./VariableDeclaration\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./VariableId\\"), exports);
__exportStar(require(\\"./VariableDeclaration\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "variables",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "serialization",
        "type": "directory",
      },
    ],
    "name": "dist",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"name\\": \\"@fern/api\\",
    \\"version\\": \\"0.0.1\\",
    \\"repository\\": \\"https://github.com/fern/api}\\",
    \\"main\\": \\"./index.js\\",
    \\"types\\": \\"./index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"build\\": \\"tsc\\",
        \\"prepack\\": \\"cp -rv dist/. .\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
    "name": "package.json",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ApiAuth extends FernApi.WithDocs {
    requirement: FernApi.AuthSchemesRequirement;
    schemes: FernApi.AuthScheme[];
}
",
                        "name": "ApiAuth.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type AuthScheme = FernApi.AuthScheme.Bearer | FernApi.AuthScheme.Basic | FernApi.AuthScheme.Header;

export declare namespace AuthScheme {
    interface Bearer extends FernApi.BearerAuthScheme, _Utils {
        type: \\"bearer\\";
    }

    interface Basic extends FernApi.BasicAuthScheme, _Utils {
        type: \\"basic\\";
    }

    interface Header extends FernApi.HeaderAuthScheme, _Utils {
        type: \\"header\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.AuthScheme._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        bearer: (value: FernApi.BearerAuthScheme) => _Result;
        basic: (value: FernApi.BasicAuthScheme) => _Result;
        header: (value: FernApi.HeaderAuthScheme) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const AuthScheme = {
    bearer: (value: FernApi.BearerAuthScheme): FernApi.AuthScheme.Bearer => {
        return {
            ...value,
            type: \\"bearer\\",
            _visit: function <_Result>(this: FernApi.AuthScheme.Bearer, visitor: FernApi.AuthScheme._Visitor<_Result>) {
                return FernApi.AuthScheme._visit(this, visitor);
            },
        };
    },

    basic: (value: FernApi.BasicAuthScheme): FernApi.AuthScheme.Basic => {
        return {
            ...value,
            type: \\"basic\\",
            _visit: function <_Result>(this: FernApi.AuthScheme.Basic, visitor: FernApi.AuthScheme._Visitor<_Result>) {
                return FernApi.AuthScheme._visit(this, visitor);
            },
        };
    },

    header: (value: FernApi.HeaderAuthScheme): FernApi.AuthScheme.Header => {
        return {
            ...value,
            type: \\"header\\",
            _visit: function <_Result>(this: FernApi.AuthScheme.Header, visitor: FernApi.AuthScheme._Visitor<_Result>) {
                return FernApi.AuthScheme._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.AuthScheme, visitor: FernApi.AuthScheme._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"bearer\\":
                return visitor.bearer(value);
            case \\"basic\\":
                return visitor.basic(value);
            case \\"header\\":
                return visitor.header(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "AuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type AuthSchemesRequirement = \\"ALL\\" | \\"ANY\\";

export const AuthSchemesRequirement = {
    All: \\"ALL\\",
    Any: \\"ANY\\",
} as const;
",
                        "name": "AuthSchemesRequirement.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface BasicAuthScheme extends FernApi.WithDocs {
    username: FernApi.Name;
    password: FernApi.Name;
}
",
                        "name": "BasicAuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface BearerAuthScheme extends FernApi.WithDocs {
    token: FernApi.Name;
}
",
                        "name": "BearerAuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface HeaderAuthScheme extends FernApi.WithDocs {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
    prefix: string | undefined;
}
",
                        "name": "HeaderAuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ApiAuth\\";
export * from \\"./AuthSchemesRequirement\\";
export * from \\"./AuthScheme\\";
export * from \\"./BearerAuthScheme\\";
export * from \\"./BasicAuthScheme\\";
export * from \\"./HeaderAuthScheme\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "auth",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Availability {
    status: FernApi.AvailabilityStatus;
    message: string | undefined;
}
",
                        "name": "Availability.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type AvailabilityStatus = \\"IN_DEVELOPMENT\\" | \\"PRE_RELEASE\\" | \\"GENERAL_AVAILABILITY\\" | \\"DEPRECATED\\";

export const AvailabilityStatus = {
    InDevelopment: \\"IN_DEVELOPMENT\\",
    PreRelease: \\"PRE_RELEASE\\",
    GeneralAvailability: \\"GENERAL_AVAILABILITY\\",
    Deprecated: \\"DEPRECATED\\",
} as const;
",
                        "name": "AvailabilityStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Declaration extends FernApi.WithDocs {
    availability: FernApi.Availability;
}
",
                        "name": "Declaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ErrorId = string;
",
                        "name": "ErrorId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface FernFilepath {
    allParts: FernApi.Name[];
    packagePath: FernApi.Name[];
    file: FernApi.Name | undefined;
}
",
                        "name": "FernFilepath.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Name {
    originalName: string;
    camelCase: FernApi.SafeAndUnsafeString;
    pascalCase: FernApi.SafeAndUnsafeString;
    snakeCase: FernApi.SafeAndUnsafeString;
    screamingSnakeCase: FernApi.SafeAndUnsafeString;
}
",
                        "name": "Name.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface NameAndWireValue {
    wireValue: string;
    name: FernApi.Name;
}
",
                        "name": "NameAndWireValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface SafeAndUnsafeString {
    /** this name might overlap with reserved keywords of the language being generated */
    unsafeName: string;
    /** this name will NOT overlap with reserved keywords of the language being generated */
    safeName: string;
}
",
                        "name": "SafeAndUnsafeString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ServiceId = string;
",
                        "name": "ServiceId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type SubpackageId = string;
",
                        "name": "SubpackageId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TypeId = string;
",
                        "name": "TypeId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface WithDocs {
    docs: string | undefined;
}
",
                        "name": "WithDocs.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface WithJsonExample {
    jsonExample: unknown;
}
",
                        "name": "WithJsonExample.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./WithDocs\\";
export * from \\"./FernFilepath\\";
export * from \\"./Name\\";
export * from \\"./NameAndWireValue\\";
export * from \\"./SafeAndUnsafeString\\";
export * from \\"./WithJsonExample\\";
export * from \\"./SubpackageId\\";
export * from \\"./ServiceId\\";
export * from \\"./TypeId\\";
export * from \\"./ErrorId\\";
export * from \\"./Declaration\\";
export * from \\"./Availability\\";
export * from \\"./AvailabilityStatus\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Constants {
    errorInstanceIdKey: FernApi.NameAndWireValue;
}
",
                        "name": "Constants.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./Constants\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "constants",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type EnvironmentBaseUrlId = string;
",
                        "name": "EnvironmentBaseUrlId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface EnvironmentBaseUrlWithId {
    id: FernApi.EnvironmentBaseUrlId;
    name: FernApi.Name;
}
",
                        "name": "EnvironmentBaseUrlWithId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type EnvironmentId = string;
",
                        "name": "EnvironmentId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type EnvironmentUrl = string;
",
                        "name": "EnvironmentUrl.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type Environments = FernApi.Environments.SingleBaseUrl | FernApi.Environments.MultipleBaseUrls;

export declare namespace Environments {
    interface SingleBaseUrl extends FernApi.SingleBaseUrlEnvironments, _Utils {
        type: \\"singleBaseUrl\\";
    }

    interface MultipleBaseUrls extends FernApi.MultipleBaseUrlsEnvironments, _Utils {
        type: \\"multipleBaseUrls\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.Environments._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        singleBaseUrl: (value: FernApi.SingleBaseUrlEnvironments) => _Result;
        multipleBaseUrls: (value: FernApi.MultipleBaseUrlsEnvironments) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const Environments = {
    singleBaseUrl: (value: FernApi.SingleBaseUrlEnvironments): FernApi.Environments.SingleBaseUrl => {
        return {
            ...value,
            type: \\"singleBaseUrl\\",
            _visit: function <_Result>(
                this: FernApi.Environments.SingleBaseUrl,
                visitor: FernApi.Environments._Visitor<_Result>
            ) {
                return FernApi.Environments._visit(this, visitor);
            },
        };
    },

    multipleBaseUrls: (value: FernApi.MultipleBaseUrlsEnvironments): FernApi.Environments.MultipleBaseUrls => {
        return {
            ...value,
            type: \\"multipleBaseUrls\\",
            _visit: function <_Result>(
                this: FernApi.Environments.MultipleBaseUrls,
                visitor: FernApi.Environments._Visitor<_Result>
            ) {
                return FernApi.Environments._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.Environments, visitor: FernApi.Environments._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"singleBaseUrl\\":
                return visitor.singleBaseUrl(value);
            case \\"multipleBaseUrls\\":
                return visitor.multipleBaseUrls(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "Environments.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface EnvironmentsConfig {
    defaultEnvironment: FernApi.EnvironmentId | undefined;
    environments: FernApi.Environments;
}
",
                        "name": "EnvironmentsConfig.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface MultipleBaseUrlsEnvironment extends FernApi.WithDocs {
    id: FernApi.EnvironmentId;
    name: FernApi.Name;
    urls: Record<FernApi.EnvironmentBaseUrlId, FernApi.EnvironmentUrl>;
}
",
                        "name": "MultipleBaseUrlsEnvironment.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface MultipleBaseUrlsEnvironments {
    baseUrls: FernApi.EnvironmentBaseUrlWithId[];
    environments: FernApi.MultipleBaseUrlsEnvironment[];
}
",
                        "name": "MultipleBaseUrlsEnvironments.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SingleBaseUrlEnvironment extends FernApi.WithDocs {
    id: FernApi.EnvironmentId;
    name: FernApi.Name;
    url: FernApi.EnvironmentUrl;
}
",
                        "name": "SingleBaseUrlEnvironment.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SingleBaseUrlEnvironments {
    environments: FernApi.SingleBaseUrlEnvironment[];
}
",
                        "name": "SingleBaseUrlEnvironments.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./EnvironmentId\\";
export * from \\"./EnvironmentBaseUrlId\\";
export * from \\"./EnvironmentUrl\\";
export * from \\"./EnvironmentsConfig\\";
export * from \\"./Environments\\";
export * from \\"./SingleBaseUrlEnvironments\\";
export * from \\"./SingleBaseUrlEnvironment\\";
export * from \\"./MultipleBaseUrlsEnvironments\\";
export * from \\"./MultipleBaseUrlsEnvironment\\";
export * from \\"./EnvironmentBaseUrlWithId\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "environment",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DeclaredErrorName {
    errorId: FernApi.ErrorId;
    fernFilepath: FernApi.FernFilepath;
    name: FernApi.Name;
}
",
                        "name": "DeclaredErrorName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ErrorDeclaration extends FernApi.WithDocs {
    name: FernApi.DeclaredErrorName;
    discriminantValue: FernApi.NameAndWireValue;
    type_: FernApi.TypeReference | undefined;
    statusCode: number;
}
",
                        "name": "ErrorDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ErrorDeclarationDiscriminantValue =
    | FernApi.ErrorDeclarationDiscriminantValue.Property
    | FernApi.ErrorDeclarationDiscriminantValue.StatusCode;

export declare namespace ErrorDeclarationDiscriminantValue {
    interface Property extends FernApi.NameAndWireValue, _Utils {
        type: \\"property\\";
    }

    interface StatusCode extends _Utils {
        type: \\"statusCode\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ErrorDeclarationDiscriminantValue._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        property: (value: FernApi.NameAndWireValue) => _Result;
        statusCode: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ErrorDeclarationDiscriminantValue = {
    property: (value: FernApi.NameAndWireValue): FernApi.ErrorDeclarationDiscriminantValue.Property => {
        return {
            ...value,
            type: \\"property\\",
            _visit: function <_Result>(
                this: FernApi.ErrorDeclarationDiscriminantValue.Property,
                visitor: FernApi.ErrorDeclarationDiscriminantValue._Visitor<_Result>
            ) {
                return FernApi.ErrorDeclarationDiscriminantValue._visit(this, visitor);
            },
        };
    },

    statusCode: (): FernApi.ErrorDeclarationDiscriminantValue.StatusCode => {
        return {
            type: \\"statusCode\\",
            _visit: function <_Result>(
                this: FernApi.ErrorDeclarationDiscriminantValue.StatusCode,
                visitor: FernApi.ErrorDeclarationDiscriminantValue._Visitor<_Result>
            ) {
                return FernApi.ErrorDeclarationDiscriminantValue._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ErrorDeclarationDiscriminantValue,
        visitor: FernApi.ErrorDeclarationDiscriminantValue._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"property\\":
                return visitor.property(value);
            case \\"statusCode\\":
                return visitor.statusCode();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ErrorDeclarationDiscriminantValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ErrorDeclaration\\";
export * from \\"./ErrorDeclarationDiscriminantValue\\";
export * from \\"./DeclaredErrorName\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "errors",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DeclaredServiceName {
    fernFilepath: FernApi.FernFilepath;
}
",
                        "name": "DeclaredServiceName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type EndpointName = FernApi.Name;
",
                        "name": "EndpointName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleEndpointCall extends FernApi.WithDocs {
    name: FernApi.Name | undefined;
    url: string;
    rootPathParameters: FernApi.ExamplePathParameter[];
    servicePathParameters: FernApi.ExamplePathParameter[];
    endpointPathParameters: FernApi.ExamplePathParameter[];
    serviceHeaders: FernApi.ExampleHeader[];
    endpointHeaders: FernApi.ExampleHeader[];
    queryParameters: FernApi.ExampleQueryParameter[];
    request: FernApi.ExampleRequestBody | undefined;
    response: FernApi.ExampleResponse;
}
",
                        "name": "ExampleEndpointCall.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleEndpointErrorResponse {
    error: FernApi.DeclaredErrorName;
    body: FernApi.ExampleTypeReference | undefined;
}
",
                        "name": "ExampleEndpointErrorResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleEndpointSuccessResponse {
    body: FernApi.ExampleTypeReference | undefined;
}
",
                        "name": "ExampleEndpointSuccessResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleHeader {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleHeader.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleInlinedRequestBody extends FernApi.WithJsonExample {
    properties: FernApi.ExampleInlinedRequestBodyProperty[];
}
",
                        "name": "ExampleInlinedRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleInlinedRequestBodyProperty {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
    /**
     * this property may have been brought in via extension. originalTypeDeclaration
     * is the name of the type that contains this property
     *
     */
    originalTypeDeclaration: FernApi.DeclaredTypeName | undefined;
}
",
                        "name": "ExampleInlinedRequestBodyProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExamplePathParameter {
    key: string;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExamplePathParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleQueryParameter {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleQueryParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExampleRequestBody = FernApi.ExampleRequestBody.InlinedRequestBody | FernApi.ExampleRequestBody.Reference;

export declare namespace ExampleRequestBody {
    interface InlinedRequestBody extends FernApi.ExampleInlinedRequestBody, _Utils {
        type: \\"inlinedRequestBody\\";
    }

    interface Reference extends FernApi.ExampleTypeReference, _Utils {
        type: \\"reference\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleRequestBody._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        inlinedRequestBody: (value: FernApi.ExampleInlinedRequestBody) => _Result;
        reference: (value: FernApi.ExampleTypeReference) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleRequestBody = {
    inlinedRequestBody: (value: FernApi.ExampleInlinedRequestBody): FernApi.ExampleRequestBody.InlinedRequestBody => {
        return {
            ...value,
            type: \\"inlinedRequestBody\\",
            _visit: function <_Result>(
                this: FernApi.ExampleRequestBody.InlinedRequestBody,
                visitor: FernApi.ExampleRequestBody._Visitor<_Result>
            ) {
                return FernApi.ExampleRequestBody._visit(this, visitor);
            },
        };
    },

    reference: (value: FernApi.ExampleTypeReference): FernApi.ExampleRequestBody.Reference => {
        return {
            ...value,
            type: \\"reference\\",
            _visit: function <_Result>(
                this: FernApi.ExampleRequestBody.Reference,
                visitor: FernApi.ExampleRequestBody._Visitor<_Result>
            ) {
                return FernApi.ExampleRequestBody._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ExampleRequestBody,
        visitor: FernApi.ExampleRequestBody._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"inlinedRequestBody\\":
                return visitor.inlinedRequestBody(value);
            case \\"reference\\":
                return visitor.reference(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExampleRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExampleResponse = FernApi.ExampleResponse.Ok | FernApi.ExampleResponse.Error_;

export declare namespace ExampleResponse {
    interface Ok extends FernApi.ExampleEndpointSuccessResponse, _Utils {
        type: \\"ok\\";
    }

    interface Error_ extends FernApi.ExampleEndpointErrorResponse, _Utils {
        type: \\"error\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleResponse._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        ok: (value: FernApi.ExampleEndpointSuccessResponse) => _Result;
        error: (value: FernApi.ExampleEndpointErrorResponse) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleResponse = {
    ok: (value: FernApi.ExampleEndpointSuccessResponse): FernApi.ExampleResponse.Ok => {
        return {
            ...value,
            type: \\"ok\\",
            _visit: function <_Result>(
                this: FernApi.ExampleResponse.Ok,
                visitor: FernApi.ExampleResponse._Visitor<_Result>
            ) {
                return FernApi.ExampleResponse._visit(this, visitor);
            },
        };
    },

    error: (value: FernApi.ExampleEndpointErrorResponse): FernApi.ExampleResponse.Error_ => {
        return {
            ...value,
            type: \\"error\\",
            _visit: function <_Result>(
                this: FernApi.ExampleResponse.Error_,
                visitor: FernApi.ExampleResponse._Visitor<_Result>
            ) {
                return FernApi.ExampleResponse._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.ExampleResponse, visitor: FernApi.ExampleResponse._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"ok\\":
                return visitor.ok(value);
            case \\"error\\":
                return visitor.error(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExampleResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface FileDownloadResponse extends FernApi.WithDocs {}
",
                        "name": "FileDownloadResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface FileProperty {
    key: FernApi.NameAndWireValue;
    isOptional: boolean;
}
",
                        "name": "FileProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface FileUploadRequest {
    name: FernApi.Name;
    properties: FernApi.FileUploadRequestProperty[];
}
",
                        "name": "FileUploadRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type FileUploadRequestProperty =
    | FernApi.FileUploadRequestProperty.File_
    | FernApi.FileUploadRequestProperty.BodyProperty;

export declare namespace FileUploadRequestProperty {
    interface File_ extends FernApi.FileProperty, _Utils {
        type: \\"file\\";
    }

    interface BodyProperty extends FernApi.InlinedRequestBodyProperty, _Utils {
        type: \\"bodyProperty\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.FileUploadRequestProperty._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        file: (value: FernApi.FileProperty) => _Result;
        bodyProperty: (value: FernApi.InlinedRequestBodyProperty) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const FileUploadRequestProperty = {
    file: (value: FernApi.FileProperty): FernApi.FileUploadRequestProperty.File_ => {
        return {
            ...value,
            type: \\"file\\",
            _visit: function <_Result>(
                this: FernApi.FileUploadRequestProperty.File_,
                visitor: FernApi.FileUploadRequestProperty._Visitor<_Result>
            ) {
                return FernApi.FileUploadRequestProperty._visit(this, visitor);
            },
        };
    },

    bodyProperty: (value: FernApi.InlinedRequestBodyProperty): FernApi.FileUploadRequestProperty.BodyProperty => {
        return {
            ...value,
            type: \\"bodyProperty\\",
            _visit: function <_Result>(
                this: FernApi.FileUploadRequestProperty.BodyProperty,
                visitor: FernApi.FileUploadRequestProperty._Visitor<_Result>
            ) {
                return FernApi.FileUploadRequestProperty._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.FileUploadRequestProperty,
        visitor: FernApi.FileUploadRequestProperty._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"file\\":
                return visitor.file(value);
            case \\"bodyProperty\\":
                return visitor.bodyProperty(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "FileUploadRequestProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface HttpEndpoint extends FernApi.Declaration {
    name: FernApi.EndpointName;
    displayName: string | undefined;
    method: FernApi.HttpMethod;
    headers: FernApi.HttpHeader[];
    baseUrl: FernApi.EnvironmentBaseUrlId | undefined;
    path: FernApi.HttpPath;
    fullPath: FernApi.HttpPath;
    pathParameters: FernApi.PathParameter[];
    allPathParameters: FernApi.PathParameter[];
    queryParameters: FernApi.QueryParameter[];
    requestBody: FernApi.HttpRequestBody | undefined;
    sdkRequest: FernApi.SdkRequest | undefined;
    response: FernApi.HttpResponse | undefined;
    errors: FernApi.ResponseErrors;
    auth: boolean;
    examples: FernApi.ExampleEndpointCall[];
}
",
                        "name": "HttpEndpoint.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface HttpHeader extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
}
",
                        "name": "HttpHeader.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type HttpMethod = \\"GET\\" | \\"POST\\" | \\"PUT\\" | \\"PATCH\\" | \\"DELETE\\";

export const HttpMethod = {
    Get: \\"GET\\",
    Post: \\"POST\\",
    Put: \\"PUT\\",
    Patch: \\"PATCH\\",
    Delete: \\"DELETE\\",
} as const;
",
                        "name": "HttpMethod.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface HttpPath {
    head: string;
    parts: FernApi.HttpPathPart[];
}
",
                        "name": "HttpPath.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface HttpPathPart {
    pathParameter: string;
    tail: string;
}
",
                        "name": "HttpPathPart.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type HttpRequestBody =
    | FernApi.HttpRequestBody.InlinedRequestBody
    | FernApi.HttpRequestBody.Reference
    | FernApi.HttpRequestBody.FileUpload;

export declare namespace HttpRequestBody {
    interface InlinedRequestBody extends FernApi.InlinedRequestBody, _Utils {
        type: \\"inlinedRequestBody\\";
    }

    interface Reference extends FernApi.HttpRequestBodyReference, _Utils {
        type: \\"reference\\";
    }

    interface FileUpload extends FernApi.FileUploadRequest, _Utils {
        type: \\"fileUpload\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.HttpRequestBody._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        inlinedRequestBody: (value: FernApi.InlinedRequestBody) => _Result;
        reference: (value: FernApi.HttpRequestBodyReference) => _Result;
        fileUpload: (value: FernApi.FileUploadRequest) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const HttpRequestBody = {
    inlinedRequestBody: (value: FernApi.InlinedRequestBody): FernApi.HttpRequestBody.InlinedRequestBody => {
        return {
            ...value,
            type: \\"inlinedRequestBody\\",
            _visit: function <_Result>(
                this: FernApi.HttpRequestBody.InlinedRequestBody,
                visitor: FernApi.HttpRequestBody._Visitor<_Result>
            ) {
                return FernApi.HttpRequestBody._visit(this, visitor);
            },
        };
    },

    reference: (value: FernApi.HttpRequestBodyReference): FernApi.HttpRequestBody.Reference => {
        return {
            ...value,
            type: \\"reference\\",
            _visit: function <_Result>(
                this: FernApi.HttpRequestBody.Reference,
                visitor: FernApi.HttpRequestBody._Visitor<_Result>
            ) {
                return FernApi.HttpRequestBody._visit(this, visitor);
            },
        };
    },

    fileUpload: (value: FernApi.FileUploadRequest): FernApi.HttpRequestBody.FileUpload => {
        return {
            ...value,
            type: \\"fileUpload\\",
            _visit: function <_Result>(
                this: FernApi.HttpRequestBody.FileUpload,
                visitor: FernApi.HttpRequestBody._Visitor<_Result>
            ) {
                return FernApi.HttpRequestBody._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.HttpRequestBody, visitor: FernApi.HttpRequestBody._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"inlinedRequestBody\\":
                return visitor.inlinedRequestBody(value);
            case \\"reference\\":
                return visitor.reference(value);
            case \\"fileUpload\\":
                return visitor.fileUpload(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "HttpRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface HttpRequestBodyReference extends FernApi.WithDocs {
    requestBodyType: FernApi.TypeReference;
    contentType: string | undefined;
}
",
                        "name": "HttpRequestBodyReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type HttpResponse =
    | FernApi.HttpResponse.Json
    | FernApi.HttpResponse.FileDownload
    | FernApi.HttpResponse.Streaming;

export declare namespace HttpResponse {
    interface Json extends FernApi.JsonResponse, _Utils {
        type: \\"json\\";
    }

    interface FileDownload extends FernApi.FileDownloadResponse, _Utils {
        type: \\"fileDownload\\";
    }

    interface Streaming extends FernApi.StreamingResponse, _Utils {
        type: \\"streaming\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.HttpResponse._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        json: (value: FernApi.JsonResponse) => _Result;
        fileDownload: (value: FernApi.FileDownloadResponse) => _Result;
        streaming: (value: FernApi.StreamingResponse) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const HttpResponse = {
    json: (value: FernApi.JsonResponse): FernApi.HttpResponse.Json => {
        return {
            ...value,
            type: \\"json\\",
            _visit: function <_Result>(
                this: FernApi.HttpResponse.Json,
                visitor: FernApi.HttpResponse._Visitor<_Result>
            ) {
                return FernApi.HttpResponse._visit(this, visitor);
            },
        };
    },

    fileDownload: (value: FernApi.FileDownloadResponse): FernApi.HttpResponse.FileDownload => {
        return {
            ...value,
            type: \\"fileDownload\\",
            _visit: function <_Result>(
                this: FernApi.HttpResponse.FileDownload,
                visitor: FernApi.HttpResponse._Visitor<_Result>
            ) {
                return FernApi.HttpResponse._visit(this, visitor);
            },
        };
    },

    streaming: (value: FernApi.StreamingResponse): FernApi.HttpResponse.Streaming => {
        return {
            ...value,
            type: \\"streaming\\",
            _visit: function <_Result>(
                this: FernApi.HttpResponse.Streaming,
                visitor: FernApi.HttpResponse._Visitor<_Result>
            ) {
                return FernApi.HttpResponse._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.HttpResponse, visitor: FernApi.HttpResponse._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"json\\":
                return visitor.json(value);
            case \\"fileDownload\\":
                return visitor.fileDownload(value);
            case \\"streaming\\":
                return visitor.streaming(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "HttpResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface HttpService {
    availability: FernApi.Availability;
    name: FernApi.DeclaredServiceName;
    displayName: string | undefined;
    basePath: FernApi.HttpPath;
    endpoints: FernApi.HttpEndpoint[];
    headers: FernApi.HttpHeader[];
    pathParameters: FernApi.PathParameter[];
}
",
                        "name": "HttpService.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface InlinedRequestBody {
    name: FernApi.Name;
    extends_: FernApi.DeclaredTypeName[];
    properties: FernApi.InlinedRequestBodyProperty[];
    contentType: string | undefined;
}
",
                        "name": "InlinedRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface InlinedRequestBodyProperty extends FernApi.WithDocs {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
}
",
                        "name": "InlinedRequestBodyProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface JsonResponse extends FernApi.WithDocs {
    responseBodyType: FernApi.TypeReference;
}
",
                        "name": "JsonResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface MaybeStreamingResponse {
    condition: FernApi.StreamCondition;
    nonStreaming: FernApi.HttpResponse;
    streaming: FernApi.StreamingResponse;
}
",
                        "name": "MaybeStreamingResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface PathParameter extends FernApi.WithDocs {
    name: FernApi.Name;
    valueType: FernApi.TypeReference;
    location: FernApi.PathParameterLocation;
    variable: FernApi.VariableId | undefined;
}
",
                        "name": "PathParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type PathParameterLocation = \\"ROOT\\" | \\"SERVICE\\" | \\"ENDPOINT\\";

export const PathParameterLocation = {
    Root: \\"ROOT\\",
    Service: \\"SERVICE\\",
    Endpoint: \\"ENDPOINT\\",
} as const;
",
                        "name": "PathParameterLocation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface QueryParameter extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
    allowMultiple: boolean;
}
",
                        "name": "QueryParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ResponseError extends FernApi.WithDocs {
    error: FernApi.DeclaredErrorName;
}
",
                        "name": "ResponseError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ResponseErrors = FernApi.ResponseError[];
",
                        "name": "ResponseErrors.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SdkRequest {
    requestParameterName: FernApi.Name;
    shape: FernApi.SdkRequestShape;
}
",
                        "name": "SdkRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SdkRequestShape = FernApi.SdkRequestShape.JustRequestBody | FernApi.SdkRequestShape.Wrapper;

export declare namespace SdkRequestShape {
    interface JustRequestBody extends FernApi.HttpRequestBodyReference, _Utils {
        type: \\"justRequestBody\\";
    }

    interface Wrapper extends FernApi.SdkRequestWrapper, _Utils {
        type: \\"wrapper\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.SdkRequestShape._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        justRequestBody: (value: FernApi.HttpRequestBodyReference) => _Result;
        wrapper: (value: FernApi.SdkRequestWrapper) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const SdkRequestShape = {
    justRequestBody: (value: FernApi.HttpRequestBodyReference): FernApi.SdkRequestShape.JustRequestBody => {
        return {
            ...value,
            type: \\"justRequestBody\\",
            _visit: function <_Result>(
                this: FernApi.SdkRequestShape.JustRequestBody,
                visitor: FernApi.SdkRequestShape._Visitor<_Result>
            ) {
                return FernApi.SdkRequestShape._visit(this, visitor);
            },
        };
    },

    wrapper: (value: FernApi.SdkRequestWrapper): FernApi.SdkRequestShape.Wrapper => {
        return {
            ...value,
            type: \\"wrapper\\",
            _visit: function <_Result>(
                this: FernApi.SdkRequestShape.Wrapper,
                visitor: FernApi.SdkRequestShape._Visitor<_Result>
            ) {
                return FernApi.SdkRequestShape._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.SdkRequestShape, visitor: FernApi.SdkRequestShape._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"justRequestBody\\":
                return visitor.justRequestBody(value);
            case \\"wrapper\\":
                return visitor.wrapper(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "SdkRequestShape.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SdkRequestWrapper {
    wrapperName: FernApi.Name;
    bodyKey: FernApi.Name;
}
",
                        "name": "SdkRequestWrapper.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type StreamCondition =
    /**
     * The name of a boolean query parameter. If it is true, the response
     * should be streamed. Otherwise, it should not be streamed.
     *  */
    | FernApi.StreamCondition.QueryParameterKey
    /**
     * The name of a boolean property on the request. If it is true, the response
     * should be streamed. Otherwise, it should not be streamed.
     *  */
    | FernApi.StreamCondition.RequestPropertyKey;

export declare namespace StreamCondition {
    interface QueryParameterKey extends _Utils {
        type: \\"queryParameterKey\\";
        value: string;
    }

    interface RequestPropertyKey extends _Utils {
        type: \\"requestPropertyKey\\";
        value: string;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.StreamCondition._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        queryParameterKey: (value: string) => _Result;
        requestPropertyKey: (value: string) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const StreamCondition = {
    queryParameterKey: (value: string): FernApi.StreamCondition.QueryParameterKey => {
        return {
            value: value,
            type: \\"queryParameterKey\\",
            _visit: function <_Result>(
                this: FernApi.StreamCondition.QueryParameterKey,
                visitor: FernApi.StreamCondition._Visitor<_Result>
            ) {
                return FernApi.StreamCondition._visit(this, visitor);
            },
        };
    },

    requestPropertyKey: (value: string): FernApi.StreamCondition.RequestPropertyKey => {
        return {
            value: value,
            type: \\"requestPropertyKey\\",
            _visit: function <_Result>(
                this: FernApi.StreamCondition.RequestPropertyKey,
                visitor: FernApi.StreamCondition._Visitor<_Result>
            ) {
                return FernApi.StreamCondition._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.StreamCondition, visitor: FernApi.StreamCondition._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"queryParameterKey\\":
                return visitor.queryParameterKey(value.value);
            case \\"requestPropertyKey\\":
                return visitor.requestPropertyKey(value.value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "StreamCondition.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StreamingResponse extends FernApi.WithDocs {
    dataEventType: FernApi.StreamingResponseChunkType;
    terminator: string | undefined;
}
",
                        "name": "StreamingResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type StreamingResponseChunkType =
    | FernApi.StreamingResponseChunkType.Json
    | FernApi.StreamingResponseChunkType.Text;

export declare namespace StreamingResponseChunkType {
    interface Json extends _Utils {
        type: \\"json\\";
        value: FernApi.TypeReference;
    }

    interface Text extends _Utils {
        type: \\"text\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.StreamingResponseChunkType._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        json: (value: FernApi.TypeReference) => _Result;
        text: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const StreamingResponseChunkType = {
    json: (value: FernApi.TypeReference): FernApi.StreamingResponseChunkType.Json => {
        return {
            value: value,
            type: \\"json\\",
            _visit: function <_Result>(
                this: FernApi.StreamingResponseChunkType.Json,
                visitor: FernApi.StreamingResponseChunkType._Visitor<_Result>
            ) {
                return FernApi.StreamingResponseChunkType._visit(this, visitor);
            },
        };
    },

    text: (): FernApi.StreamingResponseChunkType.Text => {
        return {
            type: \\"text\\",
            _visit: function <_Result>(
                this: FernApi.StreamingResponseChunkType.Text,
                visitor: FernApi.StreamingResponseChunkType._Visitor<_Result>
            ) {
                return FernApi.StreamingResponseChunkType._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.StreamingResponseChunkType,
        visitor: FernApi.StreamingResponseChunkType._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"json\\":
                return visitor.json(value.value);
            case \\"text\\":
                return visitor.text();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "StreamingResponseChunkType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./HttpService\\";
export * from \\"./DeclaredServiceName\\";
export * from \\"./HttpEndpoint\\";
export * from \\"./EndpointName\\";
export * from \\"./HttpPath\\";
export * from \\"./HttpPathPart\\";
export * from \\"./HttpMethod\\";
export * from \\"./HttpHeader\\";
export * from \\"./PathParameter\\";
export * from \\"./PathParameterLocation\\";
export * from \\"./QueryParameter\\";
export * from \\"./HttpRequestBody\\";
export * from \\"./InlinedRequestBody\\";
export * from \\"./InlinedRequestBodyProperty\\";
export * from \\"./FileUploadRequest\\";
export * from \\"./FileUploadRequestProperty\\";
export * from \\"./FileProperty\\";
export * from \\"./HttpRequestBodyReference\\";
export * from \\"./SdkRequest\\";
export * from \\"./SdkRequestShape\\";
export * from \\"./SdkRequestWrapper\\";
export * from \\"./HttpResponse\\";
export * from \\"./JsonResponse\\";
export * from \\"./FileDownloadResponse\\";
export * from \\"./StreamingResponse\\";
export * from \\"./StreamingResponseChunkType\\";
export * from \\"./MaybeStreamingResponse\\";
export * from \\"./StreamCondition\\";
export * from \\"./ResponseErrors\\";
export * from \\"./ResponseError\\";
export * from \\"./ExampleEndpointCall\\";
export * from \\"./ExamplePathParameter\\";
export * from \\"./ExampleQueryParameter\\";
export * from \\"./ExampleHeader\\";
export * from \\"./ExampleRequestBody\\";
export * from \\"./ExampleInlinedRequestBody\\";
export * from \\"./ExampleInlinedRequestBodyProperty\\";
export * from \\"./ExampleResponse\\";
export * from \\"./ExampleEndpointSuccessResponse\\";
export * from \\"./ExampleEndpointErrorResponse\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "http",
                "type": "directory",
              },
              Object {
                "contents": "export * as auth from \\"./auth\\";
export * from \\"./auth/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as constants from \\"./constants\\";
export * from \\"./constants/types\\";
export * as environment from \\"./environment\\";
export * from \\"./environment/types\\";
export * as errors from \\"./errors\\";
export * from \\"./errors/types\\";
export * as http from \\"./http\\";
export * from \\"./http/types\\";
export * as ir from \\"./ir\\";
export * from \\"./ir/types\\";
export * as types from \\"./types\\";
export * from \\"./types/types\\";
export * as variables from \\"./variables\\";
export * from \\"./variables/types\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ErrorDiscriminationByPropertyStrategy {
    discriminant: FernApi.NameAndWireValue;
    contentProperty: FernApi.NameAndWireValue;
}
",
                        "name": "ErrorDiscriminationByPropertyStrategy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ErrorDiscriminationStrategy =
    | FernApi.ErrorDiscriminationStrategy.StatusCode
    | FernApi.ErrorDiscriminationStrategy.Property;

export declare namespace ErrorDiscriminationStrategy {
    interface StatusCode extends _Utils {
        type: \\"statusCode\\";
    }

    interface Property extends FernApi.ErrorDiscriminationByPropertyStrategy, _Utils {
        type: \\"property\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ErrorDiscriminationStrategy._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        statusCode: () => _Result;
        property: (value: FernApi.ErrorDiscriminationByPropertyStrategy) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ErrorDiscriminationStrategy = {
    statusCode: (): FernApi.ErrorDiscriminationStrategy.StatusCode => {
        return {
            type: \\"statusCode\\",
            _visit: function <_Result>(
                this: FernApi.ErrorDiscriminationStrategy.StatusCode,
                visitor: FernApi.ErrorDiscriminationStrategy._Visitor<_Result>
            ) {
                return FernApi.ErrorDiscriminationStrategy._visit(this, visitor);
            },
        };
    },

    property: (value: FernApi.ErrorDiscriminationByPropertyStrategy): FernApi.ErrorDiscriminationStrategy.Property => {
        return {
            ...value,
            type: \\"property\\",
            _visit: function <_Result>(
                this: FernApi.ErrorDiscriminationStrategy.Property,
                visitor: FernApi.ErrorDiscriminationStrategy._Visitor<_Result>
            ) {
                return FernApi.ErrorDiscriminationStrategy._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ErrorDiscriminationStrategy,
        visitor: FernApi.ErrorDiscriminationStrategy._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"statusCode\\":
                return visitor.statusCode();
            case \\"property\\":
                return visitor.property(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ErrorDiscriminationStrategy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

/**
 * Complete representation of the API schema
 */
export interface IntermediateRepresentation {
    /** This is the human readable unique id for the API. */
    apiName: FernApi.Name;
    apiDisplayName: string | undefined;
    apiDocs: string | undefined;
    auth: FernApi.ApiAuth;
    /** API Wide headers that are sent on every request */
    headers: FernApi.HttpHeader[];
    /** The types described by this API */
    types: Record<FernApi.TypeId, FernApi.TypeDeclaration>;
    /** The services exposed by this API */
    services: Record<FernApi.ServiceId, FernApi.HttpService>;
    errors: Record<FernApi.ErrorId, FernApi.ErrorDeclaration>;
    subpackages: Record<FernApi.SubpackageId, FernApi.Subpackage>;
    rootPackage: FernApi.Package;
    constants: FernApi.Constants;
    environments: FernApi.EnvironmentsConfig | undefined;
    basePath: FernApi.HttpPath | undefined;
    pathParameters: FernApi.PathParameter[];
    errorDiscriminationStrategy: FernApi.ErrorDiscriminationStrategy;
    sdkConfig: FernApi.SdkConfig;
    variables: FernApi.VariableDeclaration[];
    serviceTypeReferenceInfo: FernApi.ServiceTypeReferenceInfo | undefined;
}
",
                        "name": "IntermediateRepresentation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Package extends FernApi.WithDocs {
    fernFilepath: FernApi.FernFilepath;
    service: FernApi.ServiceId | undefined;
    types: FernApi.TypeId[];
    errors: FernApi.ErrorId[];
    subpackages: FernApi.SubpackageId[];
    hasEndpointsInTree: boolean;
    navigationConfig: FernApi.PackageNavigationConfig | undefined;
}
",
                        "name": "Package.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface PackageNavigationConfig {
    pointsTo: FernApi.SubpackageId;
}
",
                        "name": "PackageNavigationConfig.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface PlatformHeaders {
    language: string;
    sdkName: string;
    sdkVersion: string;
}
",
                        "name": "PlatformHeaders.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SdkConfig {
    isAuthMandatory: boolean;
    hasStreamingEndpoints: boolean;
    hasFileDownloadEndpoints: boolean;
    platformHeaders: FernApi.PlatformHeaders;
}
",
                        "name": "SdkConfig.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ServiceTypeReferenceInfo {
    /** Types referenced by exactly one service. */
    typesReferencedOnlyByService: Record<FernApi.ServiceId, FernApi.TypeId[]>;
    /** Types referenced by either zero or multiple services. */
    sharedTypes: FernApi.TypeId[];
}
",
                        "name": "ServiceTypeReferenceInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Subpackage extends FernApi.Package {
    name: FernApi.Name;
}
",
                        "name": "Subpackage.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./IntermediateRepresentation\\";
export * from \\"./SdkConfig\\";
export * from \\"./PlatformHeaders\\";
export * from \\"./ErrorDiscriminationStrategy\\";
export * from \\"./ErrorDiscriminationByPropertyStrategy\\";
export * from \\"./Package\\";
export * from \\"./Subpackage\\";
export * from \\"./PackageNavigationConfig\\";
export * from \\"./ServiceTypeReferenceInfo\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "ir",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface AliasTypeDeclaration {
    aliasOf: FernApi.TypeReference;
    resolvedType: FernApi.ResolvedTypeReference;
}
",
                        "name": "AliasTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ContainerType =
    | FernApi.ContainerType.List
    | FernApi.ContainerType.Map
    | FernApi.ContainerType.Optional
    | FernApi.ContainerType.Set
    | FernApi.ContainerType.Literal;

export declare namespace ContainerType {
    interface List extends _Utils {
        type: \\"list\\";
        list: FernApi.TypeReference;
    }

    interface Map extends FernApi.MapType, _Utils {
        type: \\"map\\";
    }

    interface Optional extends _Utils {
        type: \\"optional\\";
        optional: FernApi.TypeReference;
    }

    interface Set extends _Utils {
        type: \\"set\\";
        set: FernApi.TypeReference;
    }

    interface Literal extends _Utils {
        type: \\"literal\\";
        literal: FernApi.Literal;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ContainerType._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        list: (value: FernApi.TypeReference) => _Result;
        map: (value: FernApi.MapType) => _Result;
        optional: (value: FernApi.TypeReference) => _Result;
        set: (value: FernApi.TypeReference) => _Result;
        literal: (value: FernApi.Literal) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ContainerType = {
    list: (value: FernApi.TypeReference): FernApi.ContainerType.List => {
        return {
            list: value,
            type: \\"list\\",
            _visit: function <_Result>(
                this: FernApi.ContainerType.List,
                visitor: FernApi.ContainerType._Visitor<_Result>
            ) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },

    map: (value: FernApi.MapType): FernApi.ContainerType.Map => {
        return {
            ...value,
            type: \\"map\\",
            _visit: function <_Result>(
                this: FernApi.ContainerType.Map,
                visitor: FernApi.ContainerType._Visitor<_Result>
            ) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },

    optional: (value: FernApi.TypeReference): FernApi.ContainerType.Optional => {
        return {
            optional: value,
            type: \\"optional\\",
            _visit: function <_Result>(
                this: FernApi.ContainerType.Optional,
                visitor: FernApi.ContainerType._Visitor<_Result>
            ) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },

    set: (value: FernApi.TypeReference): FernApi.ContainerType.Set => {
        return {
            set: value,
            type: \\"set\\",
            _visit: function <_Result>(
                this: FernApi.ContainerType.Set,
                visitor: FernApi.ContainerType._Visitor<_Result>
            ) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },

    literal: (value: FernApi.Literal): FernApi.ContainerType.Literal => {
        return {
            literal: value,
            type: \\"literal\\",
            _visit: function <_Result>(
                this: FernApi.ContainerType.Literal,
                visitor: FernApi.ContainerType._Visitor<_Result>
            ) {
                return FernApi.ContainerType._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.ContainerType, visitor: FernApi.ContainerType._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"list\\":
                return visitor.list(value.list);
            case \\"map\\":
                return visitor.map(value);
            case \\"optional\\":
                return visitor.optional(value.optional);
            case \\"set\\":
                return visitor.set(value.set);
            case \\"literal\\":
                return visitor.literal(value.literal);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ContainerType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DeclaredTypeName {
    typeId: FernApi.TypeId;
    fernFilepath: FernApi.FernFilepath;
    name: FernApi.Name;
}
",
                        "name": "DeclaredTypeName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface EnumTypeDeclaration {
    values: FernApi.EnumValue[];
}
",
                        "name": "EnumTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface EnumValue extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
}
",
                        "name": "EnumValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleAliasType {
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleAliasType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExampleContainer =
    | FernApi.ExampleContainer.List
    | FernApi.ExampleContainer.Set
    | FernApi.ExampleContainer.Optional
    | FernApi.ExampleContainer.Map;

export declare namespace ExampleContainer {
    interface List extends _Utils {
        type: \\"list\\";
        list: FernApi.ExampleTypeReference[];
    }

    interface Set extends _Utils {
        type: \\"set\\";
        set: FernApi.ExampleTypeReference[];
    }

    interface Optional extends _Utils {
        type: \\"optional\\";
        optional: FernApi.ExampleTypeReference | undefined;
    }

    interface Map extends _Utils {
        type: \\"map\\";
        map: FernApi.ExampleKeyValuePair[];
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleContainer._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        list: (value: FernApi.ExampleTypeReference[]) => _Result;
        set: (value: FernApi.ExampleTypeReference[]) => _Result;
        optional: (value: FernApi.ExampleTypeReference | undefined) => _Result;
        map: (value: FernApi.ExampleKeyValuePair[]) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleContainer = {
    list: (value: FernApi.ExampleTypeReference[]): FernApi.ExampleContainer.List => {
        return {
            list: value,
            type: \\"list\\",
            _visit: function <_Result>(
                this: FernApi.ExampleContainer.List,
                visitor: FernApi.ExampleContainer._Visitor<_Result>
            ) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },

    set: (value: FernApi.ExampleTypeReference[]): FernApi.ExampleContainer.Set => {
        return {
            set: value,
            type: \\"set\\",
            _visit: function <_Result>(
                this: FernApi.ExampleContainer.Set,
                visitor: FernApi.ExampleContainer._Visitor<_Result>
            ) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },

    optional: (value?: FernApi.ExampleTypeReference): FernApi.ExampleContainer.Optional => {
        return {
            optional: value,
            type: \\"optional\\",
            _visit: function <_Result>(
                this: FernApi.ExampleContainer.Optional,
                visitor: FernApi.ExampleContainer._Visitor<_Result>
            ) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },

    map: (value: FernApi.ExampleKeyValuePair[]): FernApi.ExampleContainer.Map => {
        return {
            map: value,
            type: \\"map\\",
            _visit: function <_Result>(
                this: FernApi.ExampleContainer.Map,
                visitor: FernApi.ExampleContainer._Visitor<_Result>
            ) {
                return FernApi.ExampleContainer._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ExampleContainer,
        visitor: FernApi.ExampleContainer._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"list\\":
                return visitor.list(value.list);
            case \\"set\\":
                return visitor.set(value.set);
            case \\"optional\\":
                return visitor.optional(value.optional);
            case \\"map\\":
                return visitor.map(value.map);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExampleContainer.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface ExampleEnumType {
    wireValue: string;
}
",
                        "name": "ExampleEnumType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleKeyValuePair {
    key: FernApi.ExampleTypeReference;
    value: FernApi.ExampleTypeReference;
}
",
                        "name": "ExampleKeyValuePair.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleNamedType {
    typeName: FernApi.DeclaredTypeName;
    shape: FernApi.ExampleTypeShape;
}
",
                        "name": "ExampleNamedType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleObjectProperty {
    wireKey: string;
    value: FernApi.ExampleTypeReference;
    /**
     * this property may have been brought in via extension. originalTypeDeclaration
     * is the name of the type that contains this property
     *
     */
    originalTypeDeclaration: FernApi.DeclaredTypeName;
}
",
                        "name": "ExampleObjectProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleObjectType {
    properties: FernApi.ExampleObjectProperty[];
}
",
                        "name": "ExampleObjectType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExamplePrimitive =
    | FernApi.ExamplePrimitive.Integer
    | FernApi.ExamplePrimitive.Double
    | FernApi.ExamplePrimitive.String
    | FernApi.ExamplePrimitive.Boolean
    | FernApi.ExamplePrimitive.Long
    | FernApi.ExamplePrimitive.Datetime
    | FernApi.ExamplePrimitive.Date_
    | FernApi.ExamplePrimitive.Uuid;

export declare namespace ExamplePrimitive {
    interface Integer extends _Utils {
        type: \\"integer\\";
        integer: number;
    }

    interface Double extends _Utils {
        type: \\"double\\";
        double: number;
    }

    interface String extends _Utils {
        type: \\"string\\";
        string: string;
    }

    interface Boolean extends _Utils {
        type: \\"boolean\\";
        boolean: boolean;
    }

    interface Long extends _Utils {
        type: \\"long\\";
        long: number;
    }

    interface Datetime extends _Utils {
        type: \\"datetime\\";
        datetime: Date;
    }

    interface Date_ extends _Utils {
        type: \\"date\\";
        date: string;
    }

    interface Uuid extends _Utils {
        type: \\"uuid\\";
        uuid: string;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExamplePrimitive._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        integer: (value: number) => _Result;
        double: (value: number) => _Result;
        string: (value: string) => _Result;
        boolean: (value: boolean) => _Result;
        long: (value: number) => _Result;
        datetime: (value: Date) => _Result;
        date: (value: string) => _Result;
        uuid: (value: string) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExamplePrimitive = {
    integer: (value: number): FernApi.ExamplePrimitive.Integer => {
        return {
            integer: value,
            type: \\"integer\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Integer,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    double: (value: number): FernApi.ExamplePrimitive.Double => {
        return {
            double: value,
            type: \\"double\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Double,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    string: (value: string): FernApi.ExamplePrimitive.String => {
        return {
            string: value,
            type: \\"string\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.String,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    boolean: (value: boolean): FernApi.ExamplePrimitive.Boolean => {
        return {
            boolean: value,
            type: \\"boolean\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Boolean,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    long: (value: number): FernApi.ExamplePrimitive.Long => {
        return {
            long: value,
            type: \\"long\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Long,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    datetime: (value: Date): FernApi.ExamplePrimitive.Datetime => {
        return {
            datetime: value,
            type: \\"datetime\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Datetime,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    date: (value: string): FernApi.ExamplePrimitive.Date_ => {
        return {
            date: value,
            type: \\"date\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Date_,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    uuid: (value: string): FernApi.ExamplePrimitive.Uuid => {
        return {
            uuid: value,
            type: \\"uuid\\",
            _visit: function <_Result>(
                this: FernApi.ExamplePrimitive.Uuid,
                visitor: FernApi.ExamplePrimitive._Visitor<_Result>
            ) {
                return FernApi.ExamplePrimitive._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ExamplePrimitive,
        visitor: FernApi.ExamplePrimitive._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"integer\\":
                return visitor.integer(value.integer);
            case \\"double\\":
                return visitor.double(value.double);
            case \\"string\\":
                return visitor.string(value.string);
            case \\"boolean\\":
                return visitor.boolean(value.boolean);
            case \\"long\\":
                return visitor.long(value.long);
            case \\"datetime\\":
                return visitor.datetime(value.datetime);
            case \\"date\\":
                return visitor.date(value.date);
            case \\"uuid\\":
                return visitor.uuid(value.uuid);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExamplePrimitive.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleSingleUnionType {
    wireDiscriminantValue: string;
    properties: FernApi.ExampleSingleUnionTypeProperties;
}
",
                        "name": "ExampleSingleUnionType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExampleSingleUnionTypeProperties =
    | FernApi.ExampleSingleUnionTypeProperties.SamePropertiesAsObject
    | FernApi.ExampleSingleUnionTypeProperties.SingleProperty
    | FernApi.ExampleSingleUnionTypeProperties.NoProperties;

export declare namespace ExampleSingleUnionTypeProperties {
    interface SamePropertiesAsObject extends FernApi.ExampleNamedType, _Utils {
        type: \\"samePropertiesAsObject\\";
    }

    interface SingleProperty extends FernApi.ExampleTypeReference, _Utils {
        type: \\"singleProperty\\";
    }

    interface NoProperties extends _Utils {
        type: \\"noProperties\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        samePropertiesAsObject: (value: FernApi.ExampleNamedType) => _Result;
        singleProperty: (value: FernApi.ExampleTypeReference) => _Result;
        noProperties: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleSingleUnionTypeProperties = {
    samePropertiesAsObject: (
        value: FernApi.ExampleNamedType
    ): FernApi.ExampleSingleUnionTypeProperties.SamePropertiesAsObject => {
        return {
            ...value,
            type: \\"samePropertiesAsObject\\",
            _visit: function <_Result>(
                this: FernApi.ExampleSingleUnionTypeProperties.SamePropertiesAsObject,
                visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>
            ) {
                return FernApi.ExampleSingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    singleProperty: (value: FernApi.ExampleTypeReference): FernApi.ExampleSingleUnionTypeProperties.SingleProperty => {
        return {
            ...value,
            type: \\"singleProperty\\",
            _visit: function <_Result>(
                this: FernApi.ExampleSingleUnionTypeProperties.SingleProperty,
                visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>
            ) {
                return FernApi.ExampleSingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    noProperties: (): FernApi.ExampleSingleUnionTypeProperties.NoProperties => {
        return {
            type: \\"noProperties\\",
            _visit: function <_Result>(
                this: FernApi.ExampleSingleUnionTypeProperties.NoProperties,
                visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>
            ) {
                return FernApi.ExampleSingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ExampleSingleUnionTypeProperties,
        visitor: FernApi.ExampleSingleUnionTypeProperties._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"samePropertiesAsObject\\":
                return visitor.samePropertiesAsObject(value);
            case \\"singleProperty\\":
                return visitor.singleProperty(value);
            case \\"noProperties\\":
                return visitor.noProperties();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExampleSingleUnionTypeProperties.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleType extends FernApi.WithJsonExample, FernApi.WithDocs {
    name: FernApi.Name | undefined;
    shape: FernApi.ExampleTypeShape;
}
",
                        "name": "ExampleType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExampleTypeReference extends FernApi.WithJsonExample {
    shape: FernApi.ExampleTypeReferenceShape;
}
",
                        "name": "ExampleTypeReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExampleTypeReferenceShape =
    | FernApi.ExampleTypeReferenceShape.Primitive
    | FernApi.ExampleTypeReferenceShape.Container
    | FernApi.ExampleTypeReferenceShape.Unknown
    | FernApi.ExampleTypeReferenceShape.Named;

export declare namespace ExampleTypeReferenceShape {
    interface Primitive extends _Utils {
        type: \\"primitive\\";
        primitive: FernApi.ExamplePrimitive;
    }

    interface Container extends _Utils {
        type: \\"container\\";
        container: FernApi.ExampleContainer;
    }

    interface Unknown extends _Utils {
        type: \\"unknown\\";
        unknown: unknown;
    }

    interface Named extends FernApi.ExampleNamedType, _Utils {
        type: \\"named\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        primitive: (value: FernApi.ExamplePrimitive) => _Result;
        container: (value: FernApi.ExampleContainer) => _Result;
        unknown: (value: unknown) => _Result;
        named: (value: FernApi.ExampleNamedType) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleTypeReferenceShape = {
    primitive: (value: FernApi.ExamplePrimitive): FernApi.ExampleTypeReferenceShape.Primitive => {
        return {
            primitive: value,
            type: \\"primitive\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeReferenceShape.Primitive,
                visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    container: (value: FernApi.ExampleContainer): FernApi.ExampleTypeReferenceShape.Container => {
        return {
            container: value,
            type: \\"container\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeReferenceShape.Container,
                visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    unknown: (value?: unknown): FernApi.ExampleTypeReferenceShape.Unknown => {
        return {
            unknown: value,
            type: \\"unknown\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeReferenceShape.Unknown,
                visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    named: (value: FernApi.ExampleNamedType): FernApi.ExampleTypeReferenceShape.Named => {
        return {
            ...value,
            type: \\"named\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeReferenceShape.Named,
                visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeReferenceShape._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ExampleTypeReferenceShape,
        visitor: FernApi.ExampleTypeReferenceShape._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"primitive\\":
                return visitor.primitive(value.primitive);
            case \\"container\\":
                return visitor.container(value.container);
            case \\"unknown\\":
                return visitor.unknown(value.unknown);
            case \\"named\\":
                return visitor.named(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExampleTypeReferenceShape.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExampleTypeShape =
    | FernApi.ExampleTypeShape.Alias
    | FernApi.ExampleTypeShape.Enum
    | FernApi.ExampleTypeShape.Object_
    | FernApi.ExampleTypeShape.Union;

export declare namespace ExampleTypeShape {
    interface Alias extends FernApi.ExampleAliasType, _Utils {
        type: \\"alias\\";
    }

    interface Enum extends FernApi.ExampleEnumType, _Utils {
        type: \\"enum\\";
    }

    interface Object_ extends FernApi.ExampleObjectType, _Utils {
        type: \\"object\\";
    }

    interface Union extends FernApi.ExampleSingleUnionType, _Utils {
        type: \\"union\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ExampleTypeShape._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        alias: (value: FernApi.ExampleAliasType) => _Result;
        enum: (value: FernApi.ExampleEnumType) => _Result;
        object: (value: FernApi.ExampleObjectType) => _Result;
        union: (value: FernApi.ExampleSingleUnionType) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleTypeShape = {
    alias: (value: FernApi.ExampleAliasType): FernApi.ExampleTypeShape.Alias => {
        return {
            ...value,
            type: \\"alias\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeShape.Alias,
                visitor: FernApi.ExampleTypeShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            },
        };
    },

    enum: (value: FernApi.ExampleEnumType): FernApi.ExampleTypeShape.Enum => {
        return {
            ...value,
            type: \\"enum\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeShape.Enum,
                visitor: FernApi.ExampleTypeShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            },
        };
    },

    object: (value: FernApi.ExampleObjectType): FernApi.ExampleTypeShape.Object_ => {
        return {
            ...value,
            type: \\"object\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeShape.Object_,
                visitor: FernApi.ExampleTypeShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            },
        };
    },

    union: (value: FernApi.ExampleSingleUnionType): FernApi.ExampleTypeShape.Union => {
        return {
            ...value,
            type: \\"union\\",
            _visit: function <_Result>(
                this: FernApi.ExampleTypeShape.Union,
                visitor: FernApi.ExampleTypeShape._Visitor<_Result>
            ) {
                return FernApi.ExampleTypeShape._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ExampleTypeShape,
        visitor: FernApi.ExampleTypeShape._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"alias\\":
                return visitor.alias(value);
            case \\"enum\\":
                return visitor.enum(value);
            case \\"object\\":
                return visitor.object(value);
            case \\"union\\":
                return visitor.union(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ExampleTypeShape.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type Literal = FernApi.Literal.String;

export declare namespace Literal {
    interface String extends _Utils {
        type: \\"string\\";
        string: string;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.Literal._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        string: (value: string) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const Literal = {
    string: (value: string): FernApi.Literal.String => {
        return {
            string: value,
            type: \\"string\\",
            _visit: function <_Result>(this: FernApi.Literal.String, visitor: FernApi.Literal._Visitor<_Result>) {
                return FernApi.Literal._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.Literal, visitor: FernApi.Literal._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"string\\":
                return visitor.string(value.string);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "Literal.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface MapType {
    keyType: FernApi.TypeReference;
    valueType: FernApi.TypeReference;
}
",
                        "name": "MapType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ObjectProperty extends FernApi.Declaration {
    name: FernApi.NameAndWireValue;
    valueType: FernApi.TypeReference;
}
",
                        "name": "ObjectProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ObjectTypeDeclaration {
    /** A list of other types to inherit from */
    extends_: FernApi.DeclaredTypeName[];
    properties: FernApi.ObjectProperty[];
}
",
                        "name": "ObjectTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type PrimitiveType =
    | \\"INTEGER\\"
    | \\"DOUBLE\\"
    | \\"STRING\\"
    | \\"BOOLEAN\\"
    /**
     * Within the range -2^53 to 2^53 */
    | \\"LONG\\"
    | \\"DATE_TIME\\"
    | \\"DATE\\"
    | \\"UUID\\"
    | \\"BASE_64\\";

export const PrimitiveType = {
    Integer: \\"INTEGER\\",
    Double: \\"DOUBLE\\",
    String: \\"STRING\\",
    Boolean: \\"BOOLEAN\\",
    Long: \\"LONG\\",
    DateTime: \\"DATE_TIME\\",
    Date: \\"DATE\\",
    Uuid: \\"UUID\\",
    Base64: \\"BASE_64\\",
} as const;
",
                        "name": "PrimitiveType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ResolvedNamedType {
    name: FernApi.DeclaredTypeName;
    shape: FernApi.ShapeType;
}
",
                        "name": "ResolvedNamedType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ResolvedTypeReference =
    | FernApi.ResolvedTypeReference.Container
    | FernApi.ResolvedTypeReference.Named
    | FernApi.ResolvedTypeReference.Primitive
    | FernApi.ResolvedTypeReference.Unknown;

export declare namespace ResolvedTypeReference {
    interface Container extends _Utils {
        type: \\"container\\";
        container: FernApi.ContainerType;
    }

    interface Named extends FernApi.ResolvedNamedType, _Utils {
        type: \\"named\\";
    }

    interface Primitive extends _Utils {
        type: \\"primitive\\";
        primitive: FernApi.PrimitiveType;
    }

    interface Unknown extends _Utils {
        type: \\"unknown\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.ResolvedTypeReference._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        container: (value: FernApi.ContainerType) => _Result;
        named: (value: FernApi.ResolvedNamedType) => _Result;
        primitive: (value: FernApi.PrimitiveType) => _Result;
        unknown: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ResolvedTypeReference = {
    container: (value: FernApi.ContainerType): FernApi.ResolvedTypeReference.Container => {
        return {
            container: value,
            type: \\"container\\",
            _visit: function <_Result>(
                this: FernApi.ResolvedTypeReference.Container,
                visitor: FernApi.ResolvedTypeReference._Visitor<_Result>
            ) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },

    named: (value: FernApi.ResolvedNamedType): FernApi.ResolvedTypeReference.Named => {
        return {
            ...value,
            type: \\"named\\",
            _visit: function <_Result>(
                this: FernApi.ResolvedTypeReference.Named,
                visitor: FernApi.ResolvedTypeReference._Visitor<_Result>
            ) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },

    primitive: (value: FernApi.PrimitiveType): FernApi.ResolvedTypeReference.Primitive => {
        return {
            primitive: value,
            type: \\"primitive\\",
            _visit: function <_Result>(
                this: FernApi.ResolvedTypeReference.Primitive,
                visitor: FernApi.ResolvedTypeReference._Visitor<_Result>
            ) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },

    unknown: (): FernApi.ResolvedTypeReference.Unknown => {
        return {
            type: \\"unknown\\",
            _visit: function <_Result>(
                this: FernApi.ResolvedTypeReference.Unknown,
                visitor: FernApi.ResolvedTypeReference._Visitor<_Result>
            ) {
                return FernApi.ResolvedTypeReference._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.ResolvedTypeReference,
        visitor: FernApi.ResolvedTypeReference._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case \\"container\\":
                return visitor.container(value.container);
            case \\"named\\":
                return visitor.named(value);
            case \\"primitive\\":
                return visitor.primitive(value.primitive);
            case \\"unknown\\":
                return visitor.unknown();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "ResolvedTypeReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ShapeType = \\"ENUM\\" | \\"OBJECT\\" | \\"UNION\\" | \\"UNDISCRIMINATED_UNION\\";

export const ShapeType = {
    Enum: \\"ENUM\\",
    Object: \\"OBJECT\\",
    Union: \\"UNION\\",
    UndiscriminatedUnion: \\"UNDISCRIMINATED_UNION\\",
} as const;
",
                        "name": "ShapeType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SingleUnionType extends FernApi.WithDocs {
    discriminantValue: FernApi.NameAndWireValue;
    shape: FernApi.SingleUnionTypeProperties;
}
",
                        "name": "SingleUnionType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SingleUnionTypeProperties =
    | FernApi.SingleUnionTypeProperties.SamePropertiesAsObject
    | FernApi.SingleUnionTypeProperties.SingleProperty
    | FernApi.SingleUnionTypeProperties.NoProperties;

export declare namespace SingleUnionTypeProperties {
    interface SamePropertiesAsObject extends FernApi.DeclaredTypeName, _Utils {
        propertiesType: \\"samePropertiesAsObject\\";
    }

    interface SingleProperty extends FernApi.SingleUnionTypeProperty, _Utils {
        propertiesType: \\"singleProperty\\";
    }

    interface NoProperties extends _Utils {
        propertiesType: \\"noProperties\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        samePropertiesAsObject: (value: FernApi.DeclaredTypeName) => _Result;
        singleProperty: (value: FernApi.SingleUnionTypeProperty) => _Result;
        noProperties: () => _Result;
        _other: (value: { propertiesType: string }) => _Result;
    }
}

export const SingleUnionTypeProperties = {
    samePropertiesAsObject: (
        value: FernApi.DeclaredTypeName
    ): FernApi.SingleUnionTypeProperties.SamePropertiesAsObject => {
        return {
            ...value,
            propertiesType: \\"samePropertiesAsObject\\",
            _visit: function <_Result>(
                this: FernApi.SingleUnionTypeProperties.SamePropertiesAsObject,
                visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>
            ) {
                return FernApi.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    singleProperty: (value: FernApi.SingleUnionTypeProperty): FernApi.SingleUnionTypeProperties.SingleProperty => {
        return {
            ...value,
            propertiesType: \\"singleProperty\\",
            _visit: function <_Result>(
                this: FernApi.SingleUnionTypeProperties.SingleProperty,
                visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>
            ) {
                return FernApi.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    noProperties: (): FernApi.SingleUnionTypeProperties.NoProperties => {
        return {
            propertiesType: \\"noProperties\\",
            _visit: function <_Result>(
                this: FernApi.SingleUnionTypeProperties.NoProperties,
                visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>
            ) {
                return FernApi.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernApi.SingleUnionTypeProperties,
        visitor: FernApi.SingleUnionTypeProperties._Visitor<_Result>
    ): _Result => {
        switch (value.propertiesType) {
            case \\"samePropertiesAsObject\\":
                return visitor.samePropertiesAsObject(value);
            case \\"singleProperty\\":
                return visitor.singleProperty(value);
            case \\"noProperties\\":
                return visitor.noProperties();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "SingleUnionTypeProperties.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SingleUnionTypeProperty {
    name: FernApi.NameAndWireValue;
    type_: FernApi.TypeReference;
}
",
                        "name": "SingleUnionTypeProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type Type =
    | FernApi.Type.Alias
    | FernApi.Type.Enum
    | FernApi.Type.Object_
    | FernApi.Type.Union
    | FernApi.Type.UndiscriminatedUnion;

export declare namespace Type {
    interface Alias extends FernApi.AliasTypeDeclaration, _Utils {
        type: \\"alias\\";
    }

    interface Enum extends FernApi.EnumTypeDeclaration, _Utils {
        type: \\"enum\\";
    }

    interface Object_ extends FernApi.ObjectTypeDeclaration, _Utils {
        type: \\"object\\";
    }

    interface Union extends FernApi.UnionTypeDeclaration, _Utils {
        type: \\"union\\";
    }

    interface UndiscriminatedUnion extends FernApi.UndiscriminatedUnionTypeDeclaration, _Utils {
        type: \\"undiscriminatedUnion\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.Type._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        alias: (value: FernApi.AliasTypeDeclaration) => _Result;
        enum: (value: FernApi.EnumTypeDeclaration) => _Result;
        object: (value: FernApi.ObjectTypeDeclaration) => _Result;
        union: (value: FernApi.UnionTypeDeclaration) => _Result;
        undiscriminatedUnion: (value: FernApi.UndiscriminatedUnionTypeDeclaration) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const Type = {
    alias: (value: FernApi.AliasTypeDeclaration): FernApi.Type.Alias => {
        return {
            ...value,
            type: \\"alias\\",
            _visit: function <_Result>(this: FernApi.Type.Alias, visitor: FernApi.Type._Visitor<_Result>) {
                return FernApi.Type._visit(this, visitor);
            },
        };
    },

    enum: (value: FernApi.EnumTypeDeclaration): FernApi.Type.Enum => {
        return {
            ...value,
            type: \\"enum\\",
            _visit: function <_Result>(this: FernApi.Type.Enum, visitor: FernApi.Type._Visitor<_Result>) {
                return FernApi.Type._visit(this, visitor);
            },
        };
    },

    object: (value: FernApi.ObjectTypeDeclaration): FernApi.Type.Object_ => {
        return {
            ...value,
            type: \\"object\\",
            _visit: function <_Result>(this: FernApi.Type.Object_, visitor: FernApi.Type._Visitor<_Result>) {
                return FernApi.Type._visit(this, visitor);
            },
        };
    },

    union: (value: FernApi.UnionTypeDeclaration): FernApi.Type.Union => {
        return {
            ...value,
            type: \\"union\\",
            _visit: function <_Result>(this: FernApi.Type.Union, visitor: FernApi.Type._Visitor<_Result>) {
                return FernApi.Type._visit(this, visitor);
            },
        };
    },

    undiscriminatedUnion: (value: FernApi.UndiscriminatedUnionTypeDeclaration): FernApi.Type.UndiscriminatedUnion => {
        return {
            ...value,
            type: \\"undiscriminatedUnion\\",
            _visit: function <_Result>(
                this: FernApi.Type.UndiscriminatedUnion,
                visitor: FernApi.Type._Visitor<_Result>
            ) {
                return FernApi.Type._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.Type, visitor: FernApi.Type._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"alias\\":
                return visitor.alias(value);
            case \\"enum\\":
                return visitor.enum(value);
            case \\"object\\":
                return visitor.object(value);
            case \\"union\\":
                return visitor.union(value);
            case \\"undiscriminatedUnion\\":
                return visitor.undiscriminatedUnion(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "Type.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

/**
 * A type, which is a name and a shape
 */
export interface TypeDeclaration extends FernApi.Declaration {
    name: FernApi.DeclaredTypeName;
    shape: FernApi.Type;
    examples: FernApi.ExampleType[];
    /** All other named types that this type references (directly or indirectly) */
    referencedTypes: FernApi.DeclaredTypeName[];
}
",
                        "name": "TypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type TypeReference =
    | FernApi.TypeReference.Container
    | FernApi.TypeReference.Named
    | FernApi.TypeReference.Primitive
    | FernApi.TypeReference.Unknown;

export declare namespace TypeReference {
    interface Container extends _Utils {
        type: \\"container\\";
        container: FernApi.ContainerType;
    }

    interface Named extends FernApi.DeclaredTypeName, _Utils {
        type: \\"named\\";
    }

    interface Primitive extends _Utils {
        type: \\"primitive\\";
        primitive: FernApi.PrimitiveType;
    }

    interface Unknown extends _Utils {
        type: \\"unknown\\";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.TypeReference._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        container: (value: FernApi.ContainerType) => _Result;
        named: (value: FernApi.DeclaredTypeName) => _Result;
        primitive: (value: FernApi.PrimitiveType) => _Result;
        unknown: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const TypeReference = {
    container: (value: FernApi.ContainerType): FernApi.TypeReference.Container => {
        return {
            container: value,
            type: \\"container\\",
            _visit: function <_Result>(
                this: FernApi.TypeReference.Container,
                visitor: FernApi.TypeReference._Visitor<_Result>
            ) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },

    named: (value: FernApi.DeclaredTypeName): FernApi.TypeReference.Named => {
        return {
            ...value,
            type: \\"named\\",
            _visit: function <_Result>(
                this: FernApi.TypeReference.Named,
                visitor: FernApi.TypeReference._Visitor<_Result>
            ) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },

    primitive: (value: FernApi.PrimitiveType): FernApi.TypeReference.Primitive => {
        return {
            primitive: value,
            type: \\"primitive\\",
            _visit: function <_Result>(
                this: FernApi.TypeReference.Primitive,
                visitor: FernApi.TypeReference._Visitor<_Result>
            ) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },

    unknown: (): FernApi.TypeReference.Unknown => {
        return {
            type: \\"unknown\\",
            _visit: function <_Result>(
                this: FernApi.TypeReference.Unknown,
                visitor: FernApi.TypeReference._Visitor<_Result>
            ) {
                return FernApi.TypeReference._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.TypeReference, visitor: FernApi.TypeReference._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"container\\":
                return visitor.container(value.container);
            case \\"named\\":
                return visitor.named(value);
            case \\"primitive\\":
                return visitor.primitive(value.primitive);
            case \\"unknown\\":
                return visitor.unknown();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "TypeReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface UndiscriminatedUnionMember extends FernApi.WithDocs {
    type_: FernApi.TypeReference;
}
",
                        "name": "UndiscriminatedUnionMember.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface UndiscriminatedUnionTypeDeclaration {
    members: FernApi.UndiscriminatedUnionMember[];
}
",
                        "name": "UndiscriminatedUnionTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface UnionTypeDeclaration {
    discriminant: FernApi.NameAndWireValue;
    /** A list of other types to inherit from */
    extends_: FernApi.DeclaredTypeName[];
    types: FernApi.SingleUnionType[];
    baseProperties: FernApi.ObjectProperty[];
}
",
                        "name": "UnionTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TypeDeclaration\\";
export * from \\"./DeclaredTypeName\\";
export * from \\"./Type\\";
export * from \\"./AliasTypeDeclaration\\";
export * from \\"./ResolvedTypeReference\\";
export * from \\"./ResolvedNamedType\\";
export * from \\"./ShapeType\\";
export * from \\"./EnumTypeDeclaration\\";
export * from \\"./EnumValue\\";
export * from \\"./ObjectTypeDeclaration\\";
export * from \\"./ObjectProperty\\";
export * from \\"./UnionTypeDeclaration\\";
export * from \\"./SingleUnionType\\";
export * from \\"./SingleUnionTypeProperties\\";
export * from \\"./SingleUnionTypeProperty\\";
export * from \\"./UndiscriminatedUnionTypeDeclaration\\";
export * from \\"./UndiscriminatedUnionMember\\";
export * from \\"./TypeReference\\";
export * from \\"./ContainerType\\";
export * from \\"./MapType\\";
export * from \\"./PrimitiveType\\";
export * from \\"./Literal\\";
export * from \\"./ExampleType\\";
export * from \\"./ExampleTypeShape\\";
export * from \\"./ExampleAliasType\\";
export * from \\"./ExampleEnumType\\";
export * from \\"./ExampleObjectType\\";
export * from \\"./ExampleObjectProperty\\";
export * from \\"./ExampleSingleUnionType\\";
export * from \\"./ExampleSingleUnionTypeProperties\\";
export * from \\"./ExampleTypeReference\\";
export * from \\"./ExampleTypeReferenceShape\\";
export * from \\"./ExampleContainer\\";
export * from \\"./ExampleKeyValuePair\\";
export * from \\"./ExamplePrimitive\\";
export * from \\"./ExampleNamedType\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "types",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface VariableDeclaration extends FernApi.WithDocs {
    id: FernApi.VariableId;
    name: FernApi.Name;
    type_: FernApi.TypeReference;
}
",
                        "name": "VariableDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type VariableId = string;
",
                        "name": "VariableId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./VariableId\\";
export * from \\"./VariableDeclaration\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "variables",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * as serialization from \\"./schemas\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";

export type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;

export type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;

export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}

export const SchemaType = {
    DATE: \\"date\\",
    ENUM: \\"enum\\",
    LIST: \\"list\\",
    STRING_LITERAL: \\"stringLiteral\\",
    OBJECT: \\"object\\",
    ANY: \\"any\\",
    BOOLEAN: \\"boolean\\",
    NUMBER: \\"number\\",
    STRING: \\"string\\",
    UNKNOWN: \\"unknown\\",
    RECORD: \\"record\\",
    SET: \\"set\\",
    UNION: \\"union\\",
    UNDISCRIMINATED_UNION: \\"undiscriminatedUnion\\",
    OPTIONAL: \\"optional\\",
} as const;
export type SchemaType = typeof SchemaType[keyof typeof SchemaType];

export type MaybeValid<T> = Valid<T> | Invalid;

export interface Valid<T> {
    ok: true;
    value: T;
}

export interface Invalid {
    ok: false;
    errors: ValidationError[];
}

export interface ValidationError {
    path: string[];
    message: string;
}

export interface SchemaOptions {
    /**
     * how to handle unrecognized keys in objects
     *
     * @default \\"fail\\"
     */
    unrecognizedObjectKeys?: \\"fail\\" | \\"passthrough\\" | \\"strip\\";

    /**
     * whether to fail when an unrecognized discriminant value is
     * encountered in a union
     *
     * @default false
     */
    allowUnrecognizedUnionMembers?: boolean;

    /**
     * whether to fail when an unrecognized enum value is encountered
     *
     * @default false
     */
    allowUnrecognizedEnumValues?: boolean;

    /**
     * whether to allow data that doesn't conform to the schema.
     * invalid data is passed through without transformation.
     *
     * when this is enabled, .parse() and .json() will always
     * return \`ok: true\`. \`.parseOrThrow()\` and \`.jsonOrThrow()\`
     * will never fail.
     *
     * @default false
     */
    skipValidation?: boolean;

    /**
     * each validation failure contains a \\"path\\" property, which is
     * the breadcrumbs to the offending node in the JSON. you can supply
     * a prefix that is prepended to all the errors' paths. this can be
     * helpful for zurg's internal debug logging.
     */
    breadcrumbsPrefix?: string[];
}
",
                "name": "Schema.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaType } from \\"../../Schema\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { getSchemaUtils } from \\"../schema-utils\\";

// https://stackoverflow.com/questions/12756159/regex-and-iso8601-formatted-datetime
const ISO_8601_REGEX =
    /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;

export function date(): Schema<string, Date> {
    const baseSchema: BaseSchema<string, Date> = {
        parse: (raw, { breadcrumbsPrefix = [] } = {}) => {
            if (typeof raw !== \\"string\\") {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: getErrorMessageForIncorrectType(raw, \\"string\\"),
                        },
                    ],
                };
            }
            if (!ISO_8601_REGEX.test(raw)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: getErrorMessageForIncorrectType(raw, \\"ISO 8601 date string\\"),
                        },
                    ],
                };
            }
            return {
                ok: true,
                value: new Date(raw),
            };
        },
        json: (date, { breadcrumbsPrefix = [] } = {}) => {
            if (date instanceof Date) {
                return {
                    ok: true,
                    value: date.toISOString(),
                };
            } else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: getErrorMessageForIncorrectType(date, \\"Date object\\"),
                        },
                    ],
                };
            }
        },
        getType: () => SchemaType.DATE,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "date.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { date } from \\"./date\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "date",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema, SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";

export function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]> {
    const validValues = new Set<string>(values);

    const schemaCreator = createIdentitySchemaCreator(
        SchemaType.ENUM,
        (value, { allowUnrecognizedEnumValues, breadcrumbsPrefix = [] } = {}) => {
            if (typeof value !== \\"string\\") {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: getErrorMessageForIncorrectType(value, \\"string\\"),
                        },
                    ],
                };
            }

            if (!validValues.has(value) && !allowUnrecognizedEnumValues) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: getErrorMessageForIncorrectType(value, \\"enum\\"),
                        },
                    ],
                };
            }

            return {
                ok: true,
                value: value as U,
            };
        }
    );

    return schemaCreator();
}
",
                        "name": "enum.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { enum_ } from \\"./enum\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "enum",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./undiscriminated-union\\";
export * from \\"./union\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { lazy } from \\"./lazy\\";
export type { SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;

export function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed> {
    const baseSchema = constructLazyBaseSchema(getter);
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

export function constructLazyBaseSchema<Raw, Parsed>(
    getter: SchemaGetter<Schema<Raw, Parsed>>
): BaseSchema<Raw, Parsed> {
    return {
        parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
        json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
        getType: async () => (await getMemoizedSchema(getter)).getType(),
    };
}

type MemoizedGetter<SchemaType extends Schema<any, any>> = SchemaGetter<SchemaType> & { __zurg_memoized?: SchemaType };

export async function getMemoizedSchema<SchemaType extends Schema<any, any>>(
    getter: SchemaGetter<SchemaType>
): Promise<SchemaType> {
    const castedGetter = getter as MemoizedGetter<SchemaType>;
    if (castedGetter.__zurg_memoized == null) {
        castedGetter.__zurg_memoized = await getter();
    }
    return castedGetter.__zurg_memoized;
}
",
                        "name": "lazy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { getObjectUtils } from \\"../object\\";
import { getObjectLikeUtils } from \\"../object-like\\";
import { BaseObjectSchema, ObjectSchema } from \\"../object/types\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { constructLazyBaseSchema, getMemoizedSchema, SchemaGetter } from \\"./lazy\\";

export function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed> {
    const baseSchema: BaseObjectSchema<Raw, Parsed> = {
        ...constructLazyBaseSchema(getter),
        _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
        _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties(),
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}
",
                        "name": "lazyObject.ts",
                        "type": "file",
                      },
                    ],
                    "name": "lazy",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { list } from \\"./list\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]> {
    const baseSchema: BaseSchema<Raw[], Parsed[]> = {
        parse: async (raw, opts) =>
            validateAndTransformArray(raw, (item, index) =>
                schema.parse(item, {
                    ...opts,
                    breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), \`[\${index}]\`],
                })
            ),
        json: (parsed, opts) =>
            validateAndTransformArray(parsed, (item, index) =>
                schema.json(item, {
                    ...opts,
                    breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), \`[\${index}]\`],
                })
            ),
        getType: () => SchemaType.LIST,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformArray<Raw, Parsed>(
    value: unknown,
    transformItem: (item: Raw, index: number) => MaybePromise<MaybeValid<Parsed>>
): Promise<MaybeValid<Parsed[]>> {
    if (!Array.isArray(value)) {
        return {
            ok: false,
            errors: [
                {
                    message: getErrorMessageForIncorrectType(value, \\"list\\"),
                    path: [],
                },
            ],
        };
    }

    const maybeValidItems = await Promise.all(value.map((item, index) => transformItem(item, index)));

    return maybeValidItems.reduce<MaybeValid<Parsed[]>>(
        (acc, item) => {
            if (acc.ok && item.ok) {
                return {
                    ok: true,
                    value: [...acc.value, item.value],
                };
            }

            const errors: ValidationError[] = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!item.ok) {
                errors.push(...item.errors);
            }

            return {
                ok: false,
                errors,
            };
        },
        { ok: true, value: [] }
    );
}
",
                        "name": "list.ts",
                        "type": "file",
                      },
                    ],
                    "name": "list",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema, SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";

export function stringLiteral<V extends string>(literal: V): Schema<V, V> {
    const schemaCreator = createIdentitySchemaCreator(
        SchemaType.STRING_LITERAL,
        (value, { breadcrumbsPrefix = [] } = {}) => {
            if (value === literal) {
                return {
                    ok: true,
                    value: literal,
                };
            } else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: breadcrumbsPrefix,
                            message: getErrorMessageForIncorrectType(value, \`\\"\${literal}\\"\`),
                        },
                    ],
                };
            }
        }
    );

    return schemaCreator();
}
",
                        "name": "stringLiteral.ts",
                        "type": "file",
                      },
                    ],
                    "name": "literals",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { getObjectUtils, object } from \\"./object\\";
export { objectWithoutOptionalProperties } from \\"./objectWithoutOptionalProperties\\";
export type {
    inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas,
    inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas,
} from \\"./objectWithoutOptionalProperties\\";
export { isProperty, property } from \\"./property\\";
export type { Property } from \\"./property\\";
export type {
    BaseObjectSchema,
    inferObjectSchemaFromPropertySchemas,
    inferParsedObject,
    inferParsedObjectFromPropertySchemas,
    inferParsedPropertySchema,
    inferRawKey,
    inferRawObject,
    inferRawObjectFromPropertySchemas,
    inferRawPropertySchema,
    ObjectSchema,
    ObjectUtils,
    PropertySchemas,
} from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { entries } from \\"../../utils/entries\\";
import { filterObject } from \\"../../utils/filterObject\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { isPlainObject } from \\"../../utils/isPlainObject\\";
import { keys } from \\"../../utils/keys\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { partition } from \\"../../utils/partition\\";
import { getObjectLikeUtils } from \\"../object-like\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { isProperty } from \\"./property\\";
import {
    BaseObjectSchema,
    inferObjectSchemaFromPropertySchemas,
    inferParsedObjectFromPropertySchemas,
    inferRawObjectFromPropertySchemas,
    ObjectSchema,
    ObjectUtils,
    PropertySchemas,
} from \\"./types\\";

interface ObjectPropertyWithRawKey {
    rawKey: string;
    parsedKey: string;
    valueSchema: Schema<any, any>;
}

export function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(
    schemas: T
): inferObjectSchemaFromPropertySchemas<T> {
    const baseSchema: BaseObjectSchema<
        inferRawObjectFromPropertySchemas<T>,
        inferParsedObjectFromPropertySchemas<T>
    > = {
        _getRawProperties: () =>
            Promise.resolve(
                Object.entries(schemas).map(([parsedKey, propertySchema]) =>
                    isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
                ) as unknown as (keyof inferRawObjectFromPropertySchemas<T>)[]
            ),
        _getParsedProperties: () =>
            Promise.resolve(keys(schemas) as unknown as (keyof inferParsedObjectFromPropertySchemas<T>)[]),

        parse: async (raw, opts) => {
            const rawKeyToProperty: Record<string, ObjectPropertyWithRawKey> = {};
            const requiredKeys: string[] = [];

            for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
                const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
                const valueSchema: Schema<any, any> = isProperty(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;

                const property: ObjectPropertyWithRawKey = {
                    rawKey,
                    parsedKey: parsedKey as string,
                    valueSchema,
                };

                rawKeyToProperty[rawKey] = property;

                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(rawKey);
                }
            }

            return validateAndTransformObject({
                value: raw,
                requiredKeys,
                getProperty: (rawKey) => {
                    const property = rawKeyToProperty[rawKey];
                    if (property == null) {
                        return undefined;
                    }
                    return {
                        transformedKey: property.parsedKey,
                        transform: (propertyValue) =>
                            property.valueSchema.parse(propertyValue, {
                                ...opts,
                                breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), rawKey],
                            }),
                    };
                },
                unrecognizedObjectKeys: opts?.unrecognizedObjectKeys,
                skipValidation: opts?.skipValidation,
                breadcrumbsPrefix: opts?.breadcrumbsPrefix,
            });
        },

        json: async (parsed, opts) => {
            const requiredKeys: string[] = [];

            for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
                const valueSchema: Schema<any, any> = isProperty(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;

                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(parsedKey as string);
                }
            }

            return validateAndTransformObject({
                value: parsed,
                requiredKeys,
                getProperty: (
                    parsedKey
                ):
                    | { transformedKey: string; transform: (propertyValue: unknown) => MaybePromise<MaybeValid<any>> }
                    | undefined => {
                    const property = schemas[parsedKey as keyof T];

                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                    if (property == null) {
                        return undefined;
                    }

                    if (isProperty(property)) {
                        return {
                            transformedKey: property.rawKey,
                            transform: (propertyValue) =>
                                property.valueSchema.json(propertyValue, {
                                    ...opts,
                                    breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), parsedKey],
                                }),
                        };
                    } else {
                        return {
                            transformedKey: parsedKey,
                            transform: (propertyValue) =>
                                property.json(propertyValue, {
                                    ...opts,
                                    breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), parsedKey],
                                }),
                        };
                    }
                },
                unrecognizedObjectKeys: opts?.unrecognizedObjectKeys,
                skipValidation: opts?.skipValidation,
                breadcrumbsPrefix: opts?.breadcrumbsPrefix,
            });
        },

        getType: () => SchemaType.OBJECT,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}

async function validateAndTransformObject<Transformed>({
    value,
    requiredKeys,
    getProperty,
    unrecognizedObjectKeys = \\"fail\\",
    skipValidation = false,
    breadcrumbsPrefix = [],
}: {
    value: unknown;
    requiredKeys: string[];
    getProperty: (
        preTransformedKey: string
    ) => { transformedKey: string; transform: (propertyValue: unknown) => MaybePromise<MaybeValid<any>> } | undefined;
    unrecognizedObjectKeys: \\"fail\\" | \\"passthrough\\" | \\"strip\\" | undefined;
    skipValidation: boolean | undefined;
    breadcrumbsPrefix: string[] | undefined;
}): Promise<MaybeValid<Transformed>> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: getErrorMessageForIncorrectType(value, \\"object\\"),
                },
            ],
        };
    }

    const missingRequiredKeys = new Set(requiredKeys);
    const errors: ValidationError[] = [];
    const transformed: Record<string | number | symbol, any> = {};

    for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
        const property = getProperty(preTransformedKey);

        if (property != null) {
            missingRequiredKeys.delete(preTransformedKey);

            const value = await property.transform(preTransformedItemValue);
            if (value.ok) {
                transformed[property.transformedKey] = value.value;
            } else {
                transformed[preTransformedKey] = preTransformedItemValue;
                errors.push(...value.errors);
            }
        } else {
            switch (unrecognizedObjectKeys) {
                case \\"fail\\":
                    errors.push({
                        path: [...breadcrumbsPrefix, preTransformedKey],
                        message: \`Unexpected key \\"\${preTransformedKey}\\"\`,
                    });
                    break;
                case \\"strip\\":
                    break;
                case \\"passthrough\\":
                    transformed[preTransformedKey] = preTransformedItemValue;
                    break;
            }
        }
    }

    errors.push(
        ...requiredKeys
            .filter((key) => missingRequiredKeys.has(key))
            .map((key) => ({
                path: breadcrumbsPrefix,
                message: \`Missing required key \\"\${key}\\"\`,
            }))
    );

    if (errors.length === 0 || skipValidation) {
        return {
            ok: true,
            value: transformed as Transformed,
        };
    } else {
        return {
            ok: false,
            errors,
        };
    }
}

export function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed> {
    return {
        extend: <RawExtension, ParsedExtension>(extension: ObjectSchema<RawExtension, ParsedExtension>) => {
            const baseSchema: BaseObjectSchema<Raw & RawExtension, Parsed & ParsedExtension> = {
                _getParsedProperties: async () => [
                    ...(await schema._getParsedProperties()),
                    ...(await extension._getParsedProperties()),
                ],
                _getRawProperties: async () => [
                    ...(await schema._getRawProperties()),
                    ...(await extension._getRawProperties()),
                ],
                parse: async (raw, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getRawProperties(),
                        value: raw,
                        transformBase: (rawBase) => schema.parse(rawBase, opts),
                        transformExtension: (rawExtension) => extension.parse(rawExtension, opts),
                    });
                },
                json: async (parsed, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getParsedProperties(),
                        value: parsed,
                        transformBase: (parsedBase) => schema.json(parsedBase, opts),
                        transformExtension: (parsedExtension) => extension.json(parsedExtension, opts),
                    });
                },
                getType: () => SchemaType.OBJECT,
            };

            return {
                ...baseSchema,
                ...getSchemaUtils(baseSchema),
                ...getObjectLikeUtils(baseSchema),
                ...getObjectUtils(baseSchema),
            };
        },
    };
}

async function validateAndTransformExtendedObject<PreTransformedExtension, TransformedBase, TransformedExtension>({
    extensionKeys,
    value,
    transformBase,
    transformExtension,
}: {
    extensionKeys: (keyof PreTransformedExtension)[];
    value: unknown;
    transformBase: (value: unknown) => MaybePromise<MaybeValid<TransformedBase>>;
    transformExtension: (value: unknown) => MaybePromise<MaybeValid<TransformedExtension>>;
}): Promise<MaybeValid<TransformedBase & TransformedExtension>> {
    const extensionPropertiesSet = new Set(extensionKeys);
    const [extensionProperties, baseProperties] = partition(keys(value), (key) =>
        extensionPropertiesSet.has(key as keyof PreTransformedExtension)
    );

    const transformedBase = await transformBase(filterObject(value, baseProperties));
    const transformedExtension = await transformExtension(filterObject(value, extensionProperties));

    if (transformedBase.ok && transformedExtension.ok) {
        return {
            ok: true,
            value: {
                ...transformedBase.value,
                ...transformedExtension.value,
            },
        };
    } else {
        return {
            ok: false,
            errors: [
                ...(transformedBase.ok ? [] : transformedBase.errors),
                ...(transformedExtension.ok ? [] : transformedExtension.errors),
            ],
        };
    }
}

async function isSchemaRequired(schema: Schema<any, any>): Promise<boolean> {
    return !(await isSchemaOptional(schema));
}

async function isSchemaOptional(schema: Schema<any, any>): Promise<boolean> {
    switch (await schema.getType()) {
        case SchemaType.ANY:
        case SchemaType.UNKNOWN:
        case SchemaType.OPTIONAL:
            return true;
        default:
            return false;
    }
}
",
                        "name": "object.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { object } from \\"./object\\";
import { inferParsedPropertySchema, inferRawObjectFromPropertySchemas, ObjectSchema, PropertySchemas } from \\"./types\\";

export function objectWithoutOptionalProperties<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(
    schemas: T
): inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T> {
    return object(schemas) as unknown as inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T>;
}

export type inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    ObjectSchema<
        inferRawObjectFromPropertySchemas<T>,
        inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas<T>
    >;

export type inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas<T extends PropertySchemas<keyof T>> = {
    [K in keyof T]: inferParsedPropertySchema<T[K]>;
};
",
                        "name": "objectWithoutOptionalProperties.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";

export function property<RawKey extends string, RawValue, ParsedValue>(
    rawKey: RawKey,
    valueSchema: Schema<RawValue, ParsedValue>
): Property<RawKey, RawValue, ParsedValue> {
    return {
        rawKey,
        valueSchema,
        isProperty: true,
    };
}

export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}

export function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O {
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    return (maybeProperty as O).isProperty;
}
",
                        "name": "property.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";

export type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> &
    ObjectLikeUtils<Raw, Parsed> &
    ObjectUtils<Raw, Parsed> &
    SchemaUtils<Raw, Parsed>;

export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}

export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(
        schemas: ObjectSchema<RawExtension, ParsedExtension>
    ) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}

export type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;

export type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed>
    ? Parsed
    : never;

export type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<
    inferRawObjectFromPropertySchemas<T>,
    inferParsedObjectFromPropertySchemas<T>
>;

export type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    addQuestionMarksToNullableProperties<{
        [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
    }>;

export type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    addQuestionMarksToNullableProperties<{
        [K in keyof T]: inferParsedPropertySchema<T[K]>;
    }>;

export type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<
    ParsedKeys,
    Property<any, any, any> | Schema<any, any>
>;

export type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<
    any,
    infer Raw,
    any
>
    ? Raw
    : P extends Schema<any, any>
    ? inferRaw<P>
    : never;

export type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<
    any,
    any,
    infer Parsed
>
    ? Parsed
    : P extends Schema<any, any>
    ? inferParsed<P>
    : never;

export type inferRawKey<
    ParsedKey extends string | number | symbol,
    P extends Property<any, any, any> | Schema<any, any>
> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "object",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { filterObject } from \\"../../utils/filterObject\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { isPlainObject } from \\"../../utils/isPlainObject\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";

export function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed> {
    return {
        withParsedProperties: (properties) => withParsedProperties(schema, properties),
    };
}

/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */

export function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(
    objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>,
    properties: { [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]) }
): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties> {
    const objectSchema: BaseSchema<RawObjectShape, ParsedObjectShape & Properties> = {
        parse: async (raw, opts) => {
            const parsedObject = await objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
                return parsedObject;
            }

            const additionalProperties = Object.entries(properties).reduce<Record<string, any>>(
                (processed, [key, value]) => {
                    return {
                        ...processed,
                        [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value,
                    };
                },
                {}
            );

            return {
                ok: true,
                value: {
                    ...parsedObject.value,
                    ...(additionalProperties as Properties),
                },
            };
        },

        json: (parsed, opts) => {
            if (!isPlainObject(parsed)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: opts?.breadcrumbsPrefix ?? [],
                            message: getErrorMessageForIncorrectType(parsed, \\"object\\"),
                        },
                    ],
                };
            }

            // strip out added properties
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = filterObject(
                parsed,
                Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
            );

            return objectLike.json(parsedWithoutAddedProperties as ParsedObjectShape, opts);
        },

        getType: () => objectLike.getType(),
    };

    return {
        ...objectSchema,
        ...getSchemaUtils(objectSchema),
        ...getObjectLikeUtils(objectSchema),
    };
}
",
                        "name": "getObjectLikeUtils.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export type { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";

export type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> &
    BaseSchema<Raw, Parsed> &
    ObjectLikeUtils<Raw, Parsed>;

export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "object-like",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const any = createIdentitySchemaCreator<any>(SchemaType.ANY, (value) => ({ ok: true, value }));
",
                        "name": "any.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";

export const boolean = createIdentitySchemaCreator<boolean>(
    SchemaType.BOOLEAN,
    (value, { breadcrumbsPrefix = [] } = {}) => {
        if (typeof value === \\"boolean\\") {
            return {
                ok: true,
                value,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: getErrorMessageForIncorrectType(value, \\"boolean\\"),
                    },
                ],
            };
        }
    }
);
",
                        "name": "boolean.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";

export const number = createIdentitySchemaCreator<number>(
    SchemaType.NUMBER,
    (value, { breadcrumbsPrefix = [] } = {}) => {
        if (typeof value === \\"number\\") {
            return {
                ok: true,
                value,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: getErrorMessageForIncorrectType(value, \\"number\\"),
                    },
                ],
            };
        }
    }
);
",
                        "name": "number.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";

export const string = createIdentitySchemaCreator<string>(
    SchemaType.STRING,
    (value, { breadcrumbsPrefix = [] } = {}) => {
        if (typeof value === \\"string\\") {
            return {
                ok: true,
                value,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: breadcrumbsPrefix,
                        message: getErrorMessageForIncorrectType(value, \\"string\\"),
                    },
                ],
            };
        }
    }
);
",
                        "name": "string.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const unknown = createIdentitySchemaCreator<unknown>(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
",
                        "name": "unknown.ts",
                        "type": "file",
                      },
                    ],
                    "name": "primitives",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { record } from \\"./record\\";
export type { BaseRecordSchema, RecordSchema } from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { entries } from \\"../../utils/entries\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { isPlainObject } from \\"../../utils/isPlainObject\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { BaseRecordSchema, RecordSchema } from \\"./types\\";

export function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(
    keySchema: Schema<RawKey, ParsedKey>,
    valueSchema: Schema<RawValue, ParsedValue>
): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> {
    const baseSchema: BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> = {
        parse: async (raw, opts) => {
            return validateAndTransformRecord({
                value: raw,
                isKeyNumeric: (await keySchema.getType()) === SchemaType.NUMBER,
                transformKey: (key) =>
                    keySchema.parse(key, {
                        ...opts,
                        breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), \`\${key} (key)\`],
                    }),
                transformValue: (value, key) =>
                    valueSchema.parse(value, {
                        ...opts,
                        breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), \`\${key}\`],
                    }),
                breadcrumbsPrefix: opts?.breadcrumbsPrefix,
            });
        },
        json: async (parsed, opts) => {
            return validateAndTransformRecord({
                value: parsed,
                isKeyNumeric: (await keySchema.getType()) === SchemaType.NUMBER,
                transformKey: (key) =>
                    keySchema.json(key, {
                        ...opts,
                        breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), \`\${key} (key)\`],
                    }),
                transformValue: (value, key) =>
                    valueSchema.json(value, {
                        ...opts,
                        breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), \`\${key}\`],
                    }),
                breadcrumbsPrefix: opts?.breadcrumbsPrefix,
            });
        },
        getType: () => SchemaType.RECORD,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformRecord<TransformedKey extends string | number, TransformedValue>({
    value,
    isKeyNumeric,
    transformKey,
    transformValue,
    breadcrumbsPrefix = [],
}: {
    value: unknown;
    isKeyNumeric: boolean;
    transformKey: (key: string | number) => MaybePromise<MaybeValid<TransformedKey>>;
    transformValue: (value: unknown, key: string | number) => MaybePromise<MaybeValid<TransformedValue>>;
    breadcrumbsPrefix: string[] | undefined;
}): Promise<MaybeValid<Record<TransformedKey, TransformedValue>>> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: getErrorMessageForIncorrectType(value, \\"object\\"),
                },
            ],
        };
    }

    return entries(value).reduce<Promise<MaybeValid<Record<TransformedKey, TransformedValue>>>>(
        async (accPromise, [stringKey, value]) => {
            // skip nullish keys
            if (value == null) {
                return accPromise;
            }

            const acc = await accPromise;

            let key: string | number = stringKey;
            if (isKeyNumeric) {
                const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
                if (!isNaN(numberKey)) {
                    key = numberKey;
                }
            }
            const transformedKey = await transformKey(key);

            const transformedValue = await transformValue(value, key);

            if (acc.ok && transformedKey.ok && transformedValue.ok) {
                return {
                    ok: true,
                    value: {
                        ...acc.value,
                        [transformedKey.value]: transformedValue.value,
                    },
                };
            }

            const errors: ValidationError[] = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!transformedKey.ok) {
                errors.push(...transformedKey.errors);
            }
            if (!transformedValue.ok) {
                errors.push(...transformedValue.errors);
            }

            return {
                ok: false,
                errors,
            };
        },
        Promise.resolve({ ok: true, value: {} as Record<TransformedKey, TransformedValue> })
    );
}
",
                        "name": "record.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { SchemaUtils } from \\"../schema-utils\\";

export type RecordSchema<
    RawKey extends string | number,
    RawValue,
    ParsedKey extends string | number,
    ParsedValue
> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> &
    SchemaUtils<Record<RawKey, RawValue>, Record<ParsedKey, ParsedValue>>;

export type BaseRecordSchema<
    RawKey extends string | number,
    RawValue,
    ParsedKey extends string | number,
    ParsedValue
> = BaseSchema<Record<RawKey, RawValue>, Record<ParsedKey, ParsedValue>>;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "record",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
import { stringifyValidationError } from \\"./stringifyValidationErrors\\";

export class JsonError extends Error {
    constructor(public readonly errors: ValidationError[]) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        Object.setPrototypeOf(this, JsonError.prototype);
    }
}
",
                        "name": "JsonError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
import { stringifyValidationError } from \\"./stringifyValidationErrors\\";

export class ParseError extends Error {
    constructor(public readonly errors: ValidationError[]) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        Object.setPrototypeOf(this, ParseError.prototype);
    }
}
",
                        "name": "ParseError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaOptions, SchemaType } from \\"../../Schema\\";
import { JsonError } from \\"./JsonError\\";
import { ParseError } from \\"./ParseError\\";

export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}

export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}

export function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed> {
    return {
        optional: () => optional(schema),
        transform: (transformer) => transform(schema, transformer),
        parseOrThrow: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (parsed.ok) {
                return parsed.value;
            }
            throw new ParseError(parsed.errors);
        },
        jsonOrThrow: async (parsed, opts) => {
            const raw = await schema.json(parsed, opts);
            if (raw.ok) {
                return raw.value;
            }
            throw new JsonError(raw.errors);
        },
    };
}

/**
 * schema utils are defined in one file to resolve issues with circular imports
 */

export function optional<Raw, Parsed>(
    schema: BaseSchema<Raw, Parsed>
): Schema<Raw | null | undefined, Parsed | undefined> {
    const baseSchema: BaseSchema<Raw | null | undefined, Parsed | undefined> = {
        parse: (raw, opts) => {
            if (raw == null) {
                return {
                    ok: true,
                    value: undefined,
                };
            }
            return schema.parse(raw, opts);
        },
        json: (parsed, opts) => {
            if (parsed == null) {
                return {
                    ok: true,
                    value: null,
                };
            }
            return schema.json(parsed, opts);
        },
        getType: () => SchemaType.OPTIONAL,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

export function transform<Raw, Parsed, Transformed>(
    schema: BaseSchema<Raw, Parsed>,
    transformer: SchemaTransformer<Parsed, Transformed>
): Schema<Raw, Transformed> {
    const baseSchema: BaseSchema<Raw, Transformed> = {
        parse: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (!parsed.ok) {
                return parsed;
            }
            return {
                ok: true,
                value: transformer.transform(parsed.value),
            };
        },
        json: async (transformed, opts) => {
            const parsed = await transformer.untransform(transformed);
            return schema.json(parsed, opts);
        },
        getType: () => schema.getType(),
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "getSchemaUtils.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getSchemaUtils, optional, transform } from \\"./getSchemaUtils\\";
export type { SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";

export function stringifyValidationError(error: ValidationError): string {
    if (error.path.length === 0) {
        return error.message;
    }
    return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
",
                        "name": "stringifyValidationErrors.ts",
                        "type": "file",
                      },
                    ],
                    "name": "schema-utils",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { set } from \\"./set\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaType } from \\"../../Schema\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { list } from \\"../list\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>> {
    const listSchema = list(schema);
    const baseSchema: BaseSchema<Raw[], Set<Parsed>> = {
        parse: async (raw, opts) => {
            const parsedList = await listSchema.parse(raw, opts);
            if (parsedList.ok) {
                return {
                    ok: true,
                    value: new Set(parsedList.value),
                };
            } else {
                return parsedList;
            }
        },
        json: async (parsed, opts) => {
            if (!(parsed instanceof Set)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: opts?.breadcrumbsPrefix ?? [],
                            message: getErrorMessageForIncorrectType(parsed, \\"Set\\"),
                        },
                    ],
                };
            }
            const jsonList = await listSchema.json([...parsed], opts);
            return jsonList;
        },
        getType: () => SchemaType.SET,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "set.ts",
                        "type": "file",
                      },
                    ],
                    "name": "set",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export type {
    inferParsedUnidiscriminatedUnionSchema,
    inferRawUnidiscriminatedUnionSchema,
    UndiscriminatedUnionSchema,
} from \\"./types\\";
export { undiscriminatedUnion } from \\"./undiscriminatedUnion\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsed, inferRaw, Schema } from \\"../../Schema\\";

export type UndiscriminatedUnionSchema<Schemas extends [...Schema[]]> = Schema<
    inferRawUnidiscriminatedUnionSchema<Schemas>,
    inferParsedUnidiscriminatedUnionSchema<Schemas>
>;

export type inferRawUnidiscriminatedUnionSchema<Schemas extends [...Schema[]]> = inferRaw<Schemas[number]>;

export type inferParsedUnidiscriminatedUnionSchema<Schemas extends [...Schema[]]> = inferParsed<Schemas[number]>;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, Schema, SchemaOptions, SchemaType, ValidationError } from \\"../../Schema\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { inferParsedUnidiscriminatedUnionSchema, inferRawUnidiscriminatedUnionSchema } from \\"./types\\";

export function undiscriminatedUnion<Schemas extends [Schema<any, any>, ...Schema<any, any>[]]>(
    schemas: Schemas
): Schema<inferRawUnidiscriminatedUnionSchema<Schemas>, inferParsedUnidiscriminatedUnionSchema<Schemas>> {
    const baseSchema: BaseSchema<
        inferRawUnidiscriminatedUnionSchema<Schemas>,
        inferParsedUnidiscriminatedUnionSchema<Schemas>
    > = {
        parse: async (raw, opts) => {
            return validateAndTransformUndiscriminatedUnion<inferParsedUnidiscriminatedUnionSchema<Schemas>>(
                (schema, opts) => schema.parse(raw, opts),
                schemas,
                opts
            );
        },
        json: async (parsed, opts) => {
            return validateAndTransformUndiscriminatedUnion<inferRawUnidiscriminatedUnionSchema<Schemas>>(
                (schema, opts) => schema.json(parsed, opts),
                schemas,
                opts
            );
        },
        getType: () => SchemaType.UNDISCRIMINATED_UNION,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformUndiscriminatedUnion<Transformed>(
    transform: (schema: Schema<any, any>, opts: SchemaOptions) => MaybePromise<MaybeValid<Transformed>>,
    schemas: Schema<any, any>[],
    opts: SchemaOptions | undefined
): Promise<MaybeValid<Transformed>> {
    const errors: ValidationError[] = [];
    for (const [index, schema] of schemas.entries()) {
        const transformed = await transform(schema, { ...opts, skipValidation: false });
        if (transformed.ok) {
            return transformed;
        } else {
            for (const error of transformed.errors) {
                errors.push({
                    path: error.path,
                    message: \`[Variant \${index}] \${error.message}\`,
                });
            }
        }
    }

    return {
        ok: false,
        errors,
    };
}
",
                        "name": "undiscriminatedUnion.ts",
                        "type": "file",
                      },
                    ],
                    "name": "undiscriminated-union",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(
    parsedDiscriminant: ParsedDiscriminant,
    rawDiscriminant: RawDiscriminant
): Discriminant<RawDiscriminant, ParsedDiscriminant> {
    return {
        parsedDiscriminant,
        rawDiscriminant,
    };
}

export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                        "name": "discriminant.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { discriminant } from \\"./discriminant\\";
export type { Discriminant } from \\"./discriminant\\";
export type {
    inferParsedDiscriminant,
    inferParsedUnion,
    inferRawDiscriminant,
    inferRawUnion,
    UnionSubtypes,
} from \\"./types\\";
export { union } from \\"./union\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";

export type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};

export type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];

export type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];

export type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string
    ? D
    : D extends Discriminant<infer Raw, any>
    ? Raw
    : never;

export type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string
    ? D
    : D extends Discriminant<any, infer Parsed>
    ? Parsed
    : never;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, SchemaType } from \\"../../Schema\\";
import { getErrorMessageForIncorrectType } from \\"../../utils/getErrorMessageForIncorrectType\\";
import { isPlainObject } from \\"../../utils/isPlainObject\\";
import { keys } from \\"../../utils/keys\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { maybeSkipValidation } from \\"../../utils/maybeSkipValidation\\";
import { enum_ } from \\"../enum\\";
import { ObjectSchema } from \\"../object\\";
import { getObjectLikeUtils, ObjectLikeSchema } from \\"../object-like\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedDiscriminant, inferParsedUnion, inferRawDiscriminant, inferRawUnion, UnionSubtypes } from \\"./types\\";

export function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(
    discriminant: D,
    union: U
): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>> {
    const rawDiscriminant =
        typeof discriminant === \\"string\\" ? discriminant : (discriminant.rawDiscriminant as inferRawDiscriminant<D>);
    const parsedDiscriminant =
        typeof discriminant === \\"string\\"
            ? discriminant
            : (discriminant.parsedDiscriminant as inferParsedDiscriminant<D>);

    const discriminantValueSchema = enum_(keys(union) as string[]);

    const baseSchema: BaseSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>> = {
        parse: async (raw, opts) => {
            return transformAndValidateUnion({
                value: raw,
                discriminant: rawDiscriminant,
                transformedDiscriminant: parsedDiscriminant,
                transformDiscriminantValue: (discriminantValue) =>
                    discriminantValueSchema.parse(discriminantValue, {
                        allowUnrecognizedEnumValues: opts?.allowUnrecognizedUnionMembers,
                        breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), rawDiscriminant],
                    }),
                getAdditionalPropertiesSchema: (discriminantValue) => union[discriminantValue],
                allowUnrecognizedUnionMembers: opts?.allowUnrecognizedUnionMembers,
                transformAdditionalProperties: (additionalProperties, additionalPropertiesSchema) =>
                    additionalPropertiesSchema.parse(additionalProperties, opts),
                breadcrumbsPrefix: opts?.breadcrumbsPrefix,
            });
        },
        json: async (parsed, opts) => {
            return transformAndValidateUnion({
                value: parsed,
                discriminant: parsedDiscriminant,
                transformedDiscriminant: rawDiscriminant,
                transformDiscriminantValue: (discriminantValue) =>
                    discriminantValueSchema.json(discriminantValue, {
                        allowUnrecognizedEnumValues: opts?.allowUnrecognizedUnionMembers,
                        breadcrumbsPrefix: [...(opts?.breadcrumbsPrefix ?? []), parsedDiscriminant],
                    }),
                getAdditionalPropertiesSchema: (discriminantValue) => union[discriminantValue],
                allowUnrecognizedUnionMembers: opts?.allowUnrecognizedUnionMembers,
                transformAdditionalProperties: (additionalProperties, additionalPropertiesSchema) =>
                    additionalPropertiesSchema.json(additionalProperties, opts),
                breadcrumbsPrefix: opts?.breadcrumbsPrefix,
            });
        },
        getType: () => SchemaType.UNION,
    };

    return {
        ...maybeSkipValidation(baseSchema),
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
    };
}

async function transformAndValidateUnion<
    TransformedDiscriminant extends string,
    TransformedDiscriminantValue extends string,
    TransformedAdditionalProperties
>({
    value,
    discriminant,
    transformedDiscriminant,
    transformDiscriminantValue,
    getAdditionalPropertiesSchema,
    allowUnrecognizedUnionMembers = false,
    transformAdditionalProperties,
    breadcrumbsPrefix = [],
}: {
    value: unknown;
    discriminant: string;
    transformedDiscriminant: TransformedDiscriminant;
    transformDiscriminantValue: (discriminantValue: unknown) => MaybePromise<MaybeValid<TransformedDiscriminantValue>>;
    getAdditionalPropertiesSchema: (discriminantValue: string) => ObjectSchema<any, any> | undefined;
    allowUnrecognizedUnionMembers: boolean | undefined;
    transformAdditionalProperties: (
        additionalProperties: unknown,
        additionalPropertiesSchema: ObjectSchema<any, any>
    ) => MaybePromise<MaybeValid<TransformedAdditionalProperties>>;
    breadcrumbsPrefix: string[] | undefined;
}): Promise<
    MaybeValid<Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties>
> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: getErrorMessageForIncorrectType(value, \\"object\\"),
                },
            ],
        };
    }

    const { [discriminant]: discriminantValue, ...additionalProperties } = value;

    if (discriminantValue == null) {
        return {
            ok: false,
            errors: [
                {
                    path: breadcrumbsPrefix,
                    message: \`Missing discriminant (\\"\${discriminant}\\")\`,
                },
            ],
        };
    }

    const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
    if (!transformedDiscriminantValue.ok) {
        return {
            ok: false,
            errors: transformedDiscriminantValue.errors,
        };
    }

    const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);

    if (additionalPropertiesSchema == null) {
        if (allowUnrecognizedUnionMembers) {
            return {
                ok: true,
                value: {
                    [transformedDiscriminant]: transformedDiscriminantValue.value,
                    ...additionalProperties,
                } as Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [...breadcrumbsPrefix, discriminant],
                        message: \\"Unexpected discriminant value\\",
                    },
                ],
            };
        }
    }

    const transformedAdditionalProperties = await transformAdditionalProperties(
        additionalProperties,
        additionalPropertiesSchema
    );
    if (!transformedAdditionalProperties.ok) {
        return transformedAdditionalProperties;
    }

    return {
        ok: true,
        value: {
            [transformedDiscriminant]: discriminantValue,
            ...transformedAdditionalProperties.value,
        } as Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties,
    };
}
",
                        "name": "union.ts",
                        "type": "file",
                      },
                    ],
                    "name": "union",
                    "type": "directory",
                  },
                ],
                "name": "builders",
                "type": "directory",
              },
              Object {
                "contents": "export * from \\"./builders\\";
export type { inferParsed, inferRaw, Schema, SchemaOptions } from \\"./Schema\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export type MaybePromise<T> = T | Promise<T>;
",
                    "name": "MaybePromise.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;

export type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K]
        ? K
        : null extends T[K]
        ? K
        : 1 extends (any extends T[K] ? 0 : 1)
        ? never
        : K;
}[keyof T];

export type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                    "name": "addQuestionMarksToNullableProperties.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { getSchemaUtils } from \\"../builders/schema-utils\\";
import { BaseSchema, MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";
import { maybeSkipValidation } from \\"./maybeSkipValidation\\";

export function createIdentitySchemaCreator<T>(
    schemaType: SchemaType,
    validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>
): () => Schema<T, T> {
    return () => {
        const baseSchema: BaseSchema<T, T> = {
            parse: validate,
            json: validate,
            getType: () => schemaType,
        };

        return {
            ...maybeSkipValidation(baseSchema),
            ...getSchemaUtils(baseSchema),
        };
    };
}
",
                    "name": "createIdentitySchemaCreator.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function entries<T>(object: T): [keyof T, T[keyof T]][] {
    return Object.entries(object) as [keyof T, T[keyof T]][];
}
",
                    "name": "entries.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K> {
    const keysToIncludeSet = new Set(keysToInclude);
    return Object.entries(obj).reduce((acc, [key, value]) => {
        if (keysToIncludeSet.has(key as K)) {
            acc[key as K] = value;
        }
        return acc;
        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
    }, {} as Pick<T, K>);
}
",
                    "name": "filterObject.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function getErrorMessageForIncorrectType(value: unknown, expectedType: string): string {
    return \`Expected \${expectedType}. Received \${getTypeAsString(value)}.\`;
}

function getTypeAsString(value: unknown): string {
    if (Array.isArray(value)) {
        return \\"list\\";
    }
    if (value === null) {
        return \\"null\\";
    }
    switch (typeof value) {
        case \\"string\\":
            return \`\\"\${value}\\"\`;
        case \\"number\\":
        case \\"boolean\\":
        case \\"undefined\\":
            return \`\${value}\`;
    }
    return typeof value;
}
",
                    "name": "getErrorMessageForIncorrectType.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "// borrowed from https://github.com/lodash/lodash/blob/master/isPlainObject.js
export function isPlainObject(value: unknown): value is Record<string, unknown> {
    if (typeof value !== \\"object\\" || value === null) {
        return false;
    }

    if (Object.getPrototypeOf(value) === null) {
        return true;
    }

    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }

    return Object.getPrototypeOf(value) === proto;
}
",
                    "name": "isPlainObject.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function keys<T>(object: T): (keyof T)[] {
    return Object.keys(object) as (keyof T)[];
}
",
                    "name": "keys.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema, MaybeValid, SchemaOptions } from \\"../Schema\\";
import { MaybePromise } from \\"./MaybePromise\\";

export function maybeSkipValidation<S extends BaseSchema<Raw, Parsed>, Raw, Parsed>(schema: S): S {
    return {
        ...schema,
        json: transformAndMaybeSkipValidation(schema.json),
        parse: transformAndMaybeSkipValidation(schema.parse),
    };
}

function transformAndMaybeSkipValidation<T>(
    transform: (value: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<T>>
): (value: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<T>> {
    return async (value, opts): Promise<MaybeValid<T>> => {
        const transformed = await transform(value, opts);
        const { skipValidation = false } = opts ?? {};
        if (!transformed.ok && skipValidation) {
            // eslint-disable-next-line no-console
            console.warn(
                [
                    \\"Failed to validate.\\",
                    ...transformed.errors.map(
                        (error) =>
                            \\"  - \\" +
                            (error.path.length > 0 ? \`\${error.path.join(\\".\\")}: \${error.message}\` : error.message)
                    ),
                ].join(\\"\\\\n\\")
            );

            return {
                ok: true,
                value: value as T,
            };
        } else {
            return transformed;
        }
    };
}
",
                    "name": "maybeSkipValidation.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]] {
    const trueItems: T[] = [],
        falseItems: T[] = [];
    for (const item of items) {
        if (predicate(item)) {
            trueItems.push(item);
        } else {
            falseItems.push(item);
        }
    }
    return [trueItems, falseItems];
}
",
                    "name": "partition.ts",
                    "type": "file",
                  },
                ],
                "name": "utils",
                "type": "directory",
              },
            ],
            "name": "schemas",
            "type": "directory",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;

    constructor({ message, statusCode, body }: { message?: string; statusCode?: number; body?: unknown }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }

        if (body !== undefined) {
            this.body = body;
        }
    }
}

function buildMessage({
    message,
    statusCode,
    body,
}: {
    message: string | undefined;
    statusCode: number | undefined;
    body: unknown | undefined;
}): string {
    let lines: string[] = [];
    if (message != null) {
        lines.push(message);
    }

    if (statusCode != null) {
        lines.push(\`Status code: \${statusCode.toString()}\`);
    }

    if (body != null) {
        lines.push(\`Body: \${JSON.stringify(body, undefined, 2)}\`);
    }

    return lines.join(\\"\\\\n\\");
}
",
            "name": "FernApiError.ts",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
",
            "name": "FernApiTimeoutError.ts",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export * as FernApi from \\"./api\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ApiAuth: core.serialization.ObjectSchema<serializers.ApiAuth.Raw, FernApi.ApiAuth> = core.serialization
    .objectWithoutOptionalProperties({
        requirement: core.serialization.lazy(async () => (await import(\\"../../..\\")).AuthSchemesRequirement),
        schemes: core.serialization.list(core.serialization.lazy(async () => (await import(\\"../../..\\")).AuthScheme)),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace ApiAuth {
    interface Raw extends serializers.WithDocs.Raw {
        requirement: serializers.AuthSchemesRequirement.Raw;
        schemes: serializers.AuthScheme.Raw[];
    }
}
",
                        "name": "ApiAuth.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const AuthScheme: core.serialization.Schema<serializers.AuthScheme.Raw, FernApi.AuthScheme> = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
        bearer: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).BearerAuthScheme),
        basic: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).BasicAuthScheme),
        header: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HeaderAuthScheme),
    })
    .transform<FernApi.AuthScheme>({
        transform: (value) => {
            switch (value.type) {
                case \\"bearer\\":
                    return FernApi.AuthScheme.bearer(value);
                case \\"basic\\":
                    return FernApi.AuthScheme.basic(value);
                case \\"header\\":
                    return FernApi.AuthScheme.header(value);
                default:
                    return value as FernApi.AuthScheme;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace AuthScheme {
    type Raw = AuthScheme.Bearer | AuthScheme.Basic | AuthScheme.Header;

    interface Bearer extends serializers.BearerAuthScheme.Raw {
        _type: \\"bearer\\";
    }

    interface Basic extends serializers.BasicAuthScheme.Raw {
        _type: \\"basic\\";
    }

    interface Header extends serializers.HeaderAuthScheme.Raw {
        _type: \\"header\\";
    }
}
",
                        "name": "AuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const AuthSchemesRequirement: core.serialization.Schema<
    serializers.AuthSchemesRequirement.Raw,
    FernApi.AuthSchemesRequirement
> = core.serialization.enum_([\\"ALL\\", \\"ANY\\"]);

export declare namespace AuthSchemesRequirement {
    type Raw = \\"ALL\\" | \\"ANY\\";
}
",
                        "name": "AuthSchemesRequirement.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const BasicAuthScheme: core.serialization.ObjectSchema<
    serializers.BasicAuthScheme.Raw,
    FernApi.BasicAuthScheme
> = core.serialization
    .objectWithoutOptionalProperties({
        username: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
        password: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace BasicAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        username: serializers.Name.Raw;
        password: serializers.Name.Raw;
    }
}
",
                        "name": "BasicAuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const BearerAuthScheme: core.serialization.ObjectSchema<
    serializers.BearerAuthScheme.Raw,
    FernApi.BearerAuthScheme
> = core.serialization
    .objectWithoutOptionalProperties({
        token: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace BearerAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        token: serializers.Name.Raw;
    }
}
",
                        "name": "BearerAuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HeaderAuthScheme: core.serialization.ObjectSchema<
    serializers.HeaderAuthScheme.Raw,
    FernApi.HeaderAuthScheme
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        prefix: core.serialization.string().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace HeaderAuthScheme {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
        prefix?: string | null;
    }
}
",
                        "name": "HeaderAuthScheme.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ApiAuth\\";
export * from \\"./AuthSchemesRequirement\\";
export * from \\"./AuthScheme\\";
export * from \\"./BearerAuthScheme\\";
export * from \\"./BasicAuthScheme\\";
export * from \\"./HeaderAuthScheme\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "auth",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Availability: core.serialization.ObjectSchema<serializers.Availability.Raw, FernApi.Availability> =
    core.serialization.objectWithoutOptionalProperties({
        status: core.serialization.lazy(async () => (await import(\\"../../..\\")).AvailabilityStatus),
        message: core.serialization.string().optional(),
    });

export declare namespace Availability {
    interface Raw {
        status: serializers.AvailabilityStatus.Raw;
        message?: string | null;
    }
}
",
                        "name": "Availability.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const AvailabilityStatus: core.serialization.Schema<
    serializers.AvailabilityStatus.Raw,
    FernApi.AvailabilityStatus
> = core.serialization.enum_([\\"IN_DEVELOPMENT\\", \\"PRE_RELEASE\\", \\"GENERAL_AVAILABILITY\\", \\"DEPRECATED\\"]);

export declare namespace AvailabilityStatus {
    type Raw = \\"IN_DEVELOPMENT\\" | \\"PRE_RELEASE\\" | \\"GENERAL_AVAILABILITY\\" | \\"DEPRECATED\\";
}
",
                        "name": "AvailabilityStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Declaration: core.serialization.ObjectSchema<serializers.Declaration.Raw, FernApi.Declaration> =
    core.serialization
        .objectWithoutOptionalProperties({
            availability: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Availability),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace Declaration {
    interface Raw extends serializers.WithDocs.Raw {
        availability: serializers.Availability.Raw;
    }
}
",
                        "name": "Declaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ErrorId: core.serialization.Schema<serializers.ErrorId.Raw, FernApi.ErrorId> = core.serialization.string();

export declare namespace ErrorId {
    type Raw = string;
}
",
                        "name": "ErrorId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const FernFilepath: core.serialization.ObjectSchema<serializers.FernFilepath.Raw, FernApi.FernFilepath> =
    core.serialization.objectWithoutOptionalProperties({
        allParts: core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name)),
        packagePath: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name)
        ),
        file: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name).optional(),
    });

export declare namespace FernFilepath {
    interface Raw {
        allParts: serializers.Name.Raw[];
        packagePath: serializers.Name.Raw[];
        file?: serializers.Name.Raw | null;
    }
}
",
                        "name": "FernFilepath.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Name: core.serialization.ObjectSchema<serializers.Name.Raw, FernApi.Name> =
    core.serialization.objectWithoutOptionalProperties({
        originalName: core.serialization.string(),
        camelCase: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SafeAndUnsafeString),
        pascalCase: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SafeAndUnsafeString),
        snakeCase: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SafeAndUnsafeString),
        screamingSnakeCase: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SafeAndUnsafeString),
    });

export declare namespace Name {
    interface Raw {
        originalName: string;
        camelCase: serializers.SafeAndUnsafeString.Raw;
        pascalCase: serializers.SafeAndUnsafeString.Raw;
        snakeCase: serializers.SafeAndUnsafeString.Raw;
        screamingSnakeCase: serializers.SafeAndUnsafeString.Raw;
    }
}
",
                        "name": "Name.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const NameAndWireValue: core.serialization.ObjectSchema<
    serializers.NameAndWireValue.Raw,
    FernApi.NameAndWireValue
> = core.serialization.objectWithoutOptionalProperties({
    wireValue: core.serialization.string(),
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
});

export declare namespace NameAndWireValue {
    interface Raw {
        wireValue: string;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "NameAndWireValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SafeAndUnsafeString: core.serialization.ObjectSchema<
    serializers.SafeAndUnsafeString.Raw,
    FernApi.SafeAndUnsafeString
> = core.serialization.objectWithoutOptionalProperties({
    unsafeName: core.serialization.string(),
    safeName: core.serialization.string(),
});

export declare namespace SafeAndUnsafeString {
    interface Raw {
        unsafeName: string;
        safeName: string;
    }
}
",
                        "name": "SafeAndUnsafeString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ServiceId: core.serialization.Schema<serializers.ServiceId.Raw, FernApi.ServiceId> =
    core.serialization.string();

export declare namespace ServiceId {
    type Raw = string;
}
",
                        "name": "ServiceId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SubpackageId: core.serialization.Schema<serializers.SubpackageId.Raw, FernApi.SubpackageId> =
    core.serialization.string();

export declare namespace SubpackageId {
    type Raw = string;
}
",
                        "name": "SubpackageId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const TypeId: core.serialization.Schema<serializers.TypeId.Raw, FernApi.TypeId> = core.serialization.string();

export declare namespace TypeId {
    type Raw = string;
}
",
                        "name": "TypeId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const WithDocs: core.serialization.ObjectSchema<serializers.WithDocs.Raw, FernApi.WithDocs> =
    core.serialization.objectWithoutOptionalProperties({
        docs: core.serialization.string().optional(),
    });

export declare namespace WithDocs {
    interface Raw {
        docs?: string | null;
    }
}
",
                        "name": "WithDocs.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const WithJsonExample: core.serialization.ObjectSchema<
    serializers.WithJsonExample.Raw,
    FernApi.WithJsonExample
> = core.serialization.objectWithoutOptionalProperties({
    jsonExample: core.serialization.unknown(),
});

export declare namespace WithJsonExample {
    interface Raw {
        jsonExample?: unknown;
    }
}
",
                        "name": "WithJsonExample.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./WithDocs\\";
export * from \\"./FernFilepath\\";
export * from \\"./Name\\";
export * from \\"./NameAndWireValue\\";
export * from \\"./SafeAndUnsafeString\\";
export * from \\"./WithJsonExample\\";
export * from \\"./SubpackageId\\";
export * from \\"./ServiceId\\";
export * from \\"./TypeId\\";
export * from \\"./ErrorId\\";
export * from \\"./Declaration\\";
export * from \\"./Availability\\";
export * from \\"./AvailabilityStatus\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Constants: core.serialization.ObjectSchema<serializers.Constants.Raw, FernApi.Constants> =
    core.serialization.objectWithoutOptionalProperties({
        errorInstanceIdKey: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
    });

export declare namespace Constants {
    interface Raw {
        errorInstanceIdKey: serializers.NameAndWireValue.Raw;
    }
}
",
                        "name": "Constants.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./Constants\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "constants",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnvironmentBaseUrlId: core.serialization.Schema<
    serializers.EnvironmentBaseUrlId.Raw,
    FernApi.EnvironmentBaseUrlId
> = core.serialization.string();

export declare namespace EnvironmentBaseUrlId {
    type Raw = string;
}
",
                        "name": "EnvironmentBaseUrlId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnvironmentBaseUrlWithId: core.serialization.ObjectSchema<
    serializers.EnvironmentBaseUrlWithId.Raw,
    FernApi.EnvironmentBaseUrlWithId
> = core.serialization.objectWithoutOptionalProperties({
    id: core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentBaseUrlId),
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
});

export declare namespace EnvironmentBaseUrlWithId {
    interface Raw {
        id: serializers.EnvironmentBaseUrlId.Raw;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "EnvironmentBaseUrlWithId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnvironmentId: core.serialization.Schema<serializers.EnvironmentId.Raw, FernApi.EnvironmentId> =
    core.serialization.string();

export declare namespace EnvironmentId {
    type Raw = string;
}
",
                        "name": "EnvironmentId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnvironmentUrl: core.serialization.Schema<serializers.EnvironmentUrl.Raw, FernApi.EnvironmentUrl> =
    core.serialization.string();

export declare namespace EnvironmentUrl {
    type Raw = string;
}
",
                        "name": "EnvironmentUrl.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Environments: core.serialization.Schema<serializers.Environments.Raw, FernApi.Environments> =
    core.serialization
        .union(\\"type\\", {
            singleBaseUrl: core.serialization.lazyObject(
                async () => (await import(\\"../../..\\")).SingleBaseUrlEnvironments
            ),
            multipleBaseUrls: core.serialization.lazyObject(
                async () => (await import(\\"../../..\\")).MultipleBaseUrlsEnvironments
            ),
        })
        .transform<FernApi.Environments>({
            transform: (value) => {
                switch (value.type) {
                    case \\"singleBaseUrl\\":
                        return FernApi.Environments.singleBaseUrl(value);
                    case \\"multipleBaseUrls\\":
                        return FernApi.Environments.multipleBaseUrls(value);
                    default:
                        return value as FernApi.Environments;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace Environments {
    type Raw = Environments.SingleBaseUrl | Environments.MultipleBaseUrls;

    interface SingleBaseUrl extends serializers.SingleBaseUrlEnvironments.Raw {
        type: \\"singleBaseUrl\\";
    }

    interface MultipleBaseUrls extends serializers.MultipleBaseUrlsEnvironments.Raw {
        type: \\"multipleBaseUrls\\";
    }
}
",
                        "name": "Environments.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnvironmentsConfig: core.serialization.ObjectSchema<
    serializers.EnvironmentsConfig.Raw,
    FernApi.EnvironmentsConfig
> = core.serialization.objectWithoutOptionalProperties({
    defaultEnvironment: core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentId).optional(),
    environments: core.serialization.lazy(async () => (await import(\\"../../..\\")).Environments),
});

export declare namespace EnvironmentsConfig {
    interface Raw {
        defaultEnvironment?: serializers.EnvironmentId.Raw | null;
        environments: serializers.Environments.Raw;
    }
}
",
                        "name": "EnvironmentsConfig.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const MultipleBaseUrlsEnvironment: core.serialization.ObjectSchema<
    serializers.MultipleBaseUrlsEnvironment.Raw,
    FernApi.MultipleBaseUrlsEnvironment
> = core.serialization
    .objectWithoutOptionalProperties({
        id: core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentId),
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
        urls: core.serialization.record(
            core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentBaseUrlId),
            core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentUrl)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace MultipleBaseUrlsEnvironment {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.EnvironmentId.Raw;
        name: serializers.Name.Raw;
        urls: Record<serializers.EnvironmentBaseUrlId.Raw, serializers.EnvironmentUrl.Raw>;
    }
}
",
                        "name": "MultipleBaseUrlsEnvironment.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const MultipleBaseUrlsEnvironments: core.serialization.ObjectSchema<
    serializers.MultipleBaseUrlsEnvironments.Raw,
    FernApi.MultipleBaseUrlsEnvironments
> = core.serialization.objectWithoutOptionalProperties({
    baseUrls: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).EnvironmentBaseUrlWithId)
    ),
    environments: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).MultipleBaseUrlsEnvironment)
    ),
});

export declare namespace MultipleBaseUrlsEnvironments {
    interface Raw {
        baseUrls: serializers.EnvironmentBaseUrlWithId.Raw[];
        environments: serializers.MultipleBaseUrlsEnvironment.Raw[];
    }
}
",
                        "name": "MultipleBaseUrlsEnvironments.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SingleBaseUrlEnvironment: core.serialization.ObjectSchema<
    serializers.SingleBaseUrlEnvironment.Raw,
    FernApi.SingleBaseUrlEnvironment
> = core.serialization
    .objectWithoutOptionalProperties({
        id: core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentId),
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
        url: core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentUrl),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace SingleBaseUrlEnvironment {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.EnvironmentId.Raw;
        name: serializers.Name.Raw;
        url: serializers.EnvironmentUrl.Raw;
    }
}
",
                        "name": "SingleBaseUrlEnvironment.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SingleBaseUrlEnvironments: core.serialization.ObjectSchema<
    serializers.SingleBaseUrlEnvironments.Raw,
    FernApi.SingleBaseUrlEnvironments
> = core.serialization.objectWithoutOptionalProperties({
    environments: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SingleBaseUrlEnvironment)
    ),
});

export declare namespace SingleBaseUrlEnvironments {
    interface Raw {
        environments: serializers.SingleBaseUrlEnvironment.Raw[];
    }
}
",
                        "name": "SingleBaseUrlEnvironments.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./EnvironmentId\\";
export * from \\"./EnvironmentBaseUrlId\\";
export * from \\"./EnvironmentUrl\\";
export * from \\"./EnvironmentsConfig\\";
export * from \\"./Environments\\";
export * from \\"./SingleBaseUrlEnvironments\\";
export * from \\"./SingleBaseUrlEnvironment\\";
export * from \\"./MultipleBaseUrlsEnvironments\\";
export * from \\"./MultipleBaseUrlsEnvironment\\";
export * from \\"./EnvironmentBaseUrlWithId\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "environment",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const DeclaredErrorName: core.serialization.ObjectSchema<
    serializers.DeclaredErrorName.Raw,
    FernApi.DeclaredErrorName
> = core.serialization.objectWithoutOptionalProperties({
    errorId: core.serialization.lazy(async () => (await import(\\"../../..\\")).ErrorId),
    fernFilepath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FernFilepath),
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
});

export declare namespace DeclaredErrorName {
    interface Raw {
        errorId: serializers.ErrorId.Raw;
        fernFilepath: serializers.FernFilepath.Raw;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "DeclaredErrorName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ErrorDeclaration: core.serialization.ObjectSchema<
    serializers.ErrorDeclaration.Raw,
    FernApi.ErrorDeclaration
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredErrorName),
        discriminantValue: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        type_: core.serialization.property(
            \\"type\\",
            core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference).optional()
        ),
        statusCode: core.serialization.number(),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace ErrorDeclaration {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.DeclaredErrorName.Raw;
        discriminantValue: serializers.NameAndWireValue.Raw;
        type?: serializers.TypeReference.Raw | null;
        statusCode: number;
    }
}
",
                        "name": "ErrorDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ErrorDeclarationDiscriminantValue: core.serialization.Schema<
    serializers.ErrorDeclarationDiscriminantValue.Raw,
    FernApi.ErrorDeclarationDiscriminantValue
> = core.serialization
    .union(\\"type\\", {
        property: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        statusCode: core.serialization.object({}),
    })
    .transform<FernApi.ErrorDeclarationDiscriminantValue>({
        transform: (value) => {
            switch (value.type) {
                case \\"property\\":
                    return FernApi.ErrorDeclarationDiscriminantValue.property(value);
                case \\"statusCode\\":
                    return FernApi.ErrorDeclarationDiscriminantValue.statusCode();
                default:
                    return value as FernApi.ErrorDeclarationDiscriminantValue;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ErrorDeclarationDiscriminantValue {
    type Raw = ErrorDeclarationDiscriminantValue.Property | ErrorDeclarationDiscriminantValue.StatusCode;

    interface Property extends serializers.NameAndWireValue.Raw {
        type: \\"property\\";
    }

    interface StatusCode {
        type: \\"statusCode\\";
    }
}
",
                        "name": "ErrorDeclarationDiscriminantValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ErrorDeclaration\\";
export * from \\"./ErrorDeclarationDiscriminantValue\\";
export * from \\"./DeclaredErrorName\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "errors",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const DeclaredServiceName: core.serialization.ObjectSchema<
    serializers.DeclaredServiceName.Raw,
    FernApi.DeclaredServiceName
> = core.serialization.objectWithoutOptionalProperties({
    fernFilepath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FernFilepath),
});

export declare namespace DeclaredServiceName {
    interface Raw {
        fernFilepath: serializers.FernFilepath.Raw;
    }
}
",
                        "name": "DeclaredServiceName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EndpointName: core.serialization.ObjectSchema<serializers.EndpointName.Raw, FernApi.EndpointName> =
    core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name);

export declare namespace EndpointName {
    type Raw = serializers.Name.Raw;
}
",
                        "name": "EndpointName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleEndpointCall: core.serialization.ObjectSchema<
    serializers.ExampleEndpointCall.Raw,
    FernApi.ExampleEndpointCall
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name).optional(),
        url: core.serialization.string(),
        rootPathParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExamplePathParameter)
        ),
        servicePathParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExamplePathParameter)
        ),
        endpointPathParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExamplePathParameter)
        ),
        serviceHeaders: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleHeader)
        ),
        endpointHeaders: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleHeader)
        ),
        queryParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleQueryParameter)
        ),
        request: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleRequestBody).optional(),
        response: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleResponse),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace ExampleEndpointCall {
    interface Raw extends serializers.WithDocs.Raw {
        name?: serializers.Name.Raw | null;
        url: string;
        rootPathParameters: serializers.ExamplePathParameter.Raw[];
        servicePathParameters: serializers.ExamplePathParameter.Raw[];
        endpointPathParameters: serializers.ExamplePathParameter.Raw[];
        serviceHeaders: serializers.ExampleHeader.Raw[];
        endpointHeaders: serializers.ExampleHeader.Raw[];
        queryParameters: serializers.ExampleQueryParameter.Raw[];
        request?: serializers.ExampleRequestBody.Raw | null;
        response: serializers.ExampleResponse.Raw;
    }
}
",
                        "name": "ExampleEndpointCall.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleEndpointErrorResponse: core.serialization.ObjectSchema<
    serializers.ExampleEndpointErrorResponse.Raw,
    FernApi.ExampleEndpointErrorResponse
> = core.serialization.objectWithoutOptionalProperties({
    error: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredErrorName),
    body: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference).optional(),
});

export declare namespace ExampleEndpointErrorResponse {
    interface Raw {
        error: serializers.DeclaredErrorName.Raw;
        body?: serializers.ExampleTypeReference.Raw | null;
    }
}
",
                        "name": "ExampleEndpointErrorResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleEndpointSuccessResponse: core.serialization.ObjectSchema<
    serializers.ExampleEndpointSuccessResponse.Raw,
    FernApi.ExampleEndpointSuccessResponse
> = core.serialization.objectWithoutOptionalProperties({
    body: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference).optional(),
});

export declare namespace ExampleEndpointSuccessResponse {
    interface Raw {
        body?: serializers.ExampleTypeReference.Raw | null;
    }
}
",
                        "name": "ExampleEndpointSuccessResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleHeader: core.serialization.ObjectSchema<serializers.ExampleHeader.Raw, FernApi.ExampleHeader> =
    core.serialization.objectWithoutOptionalProperties({
        wireKey: core.serialization.string(),
        value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
    });

export declare namespace ExampleHeader {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleHeader.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleInlinedRequestBody: core.serialization.ObjectSchema<
    serializers.ExampleInlinedRequestBody.Raw,
    FernApi.ExampleInlinedRequestBody
> = core.serialization
    .objectWithoutOptionalProperties({
        properties: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleInlinedRequestBodyProperty)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithJsonExample));

export declare namespace ExampleInlinedRequestBody {
    interface Raw extends serializers.WithJsonExample.Raw {
        properties: serializers.ExampleInlinedRequestBodyProperty.Raw[];
    }
}
",
                        "name": "ExampleInlinedRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleInlinedRequestBodyProperty: core.serialization.ObjectSchema<
    serializers.ExampleInlinedRequestBodyProperty.Raw,
    FernApi.ExampleInlinedRequestBodyProperty
> = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
    originalTypeDeclaration: core.serialization
        .lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName)
        .optional(),
});

export declare namespace ExampleInlinedRequestBodyProperty {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
        originalTypeDeclaration?: serializers.DeclaredTypeName.Raw | null;
    }
}
",
                        "name": "ExampleInlinedRequestBodyProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExamplePathParameter: core.serialization.ObjectSchema<
    serializers.ExamplePathParameter.Raw,
    FernApi.ExamplePathParameter
> = core.serialization.objectWithoutOptionalProperties({
    key: core.serialization.string(),
    value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
});

export declare namespace ExamplePathParameter {
    interface Raw {
        key: string;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExamplePathParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleQueryParameter: core.serialization.ObjectSchema<
    serializers.ExampleQueryParameter.Raw,
    FernApi.ExampleQueryParameter
> = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
});

export declare namespace ExampleQueryParameter {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleQueryParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleRequestBody: core.serialization.Schema<
    serializers.ExampleRequestBody.Raw,
    FernApi.ExampleRequestBody
> = core.serialization
    .union(\\"type\\", {
        inlinedRequestBody: core.serialization.lazyObject(
            async () => (await import(\\"../../..\\")).ExampleInlinedRequestBody
        ),
        reference: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
    })
    .transform<FernApi.ExampleRequestBody>({
        transform: (value) => {
            switch (value.type) {
                case \\"inlinedRequestBody\\":
                    return FernApi.ExampleRequestBody.inlinedRequestBody(value);
                case \\"reference\\":
                    return FernApi.ExampleRequestBody.reference(value);
                default:
                    return value as FernApi.ExampleRequestBody;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ExampleRequestBody {
    type Raw = ExampleRequestBody.InlinedRequestBody | ExampleRequestBody.Reference;

    interface InlinedRequestBody extends serializers.ExampleInlinedRequestBody.Raw {
        type: \\"inlinedRequestBody\\";
    }

    interface Reference extends serializers.ExampleTypeReference.Raw {
        type: \\"reference\\";
    }
}
",
                        "name": "ExampleRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleResponse: core.serialization.Schema<serializers.ExampleResponse.Raw, FernApi.ExampleResponse> =
    core.serialization
        .union(\\"type\\", {
            ok: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleEndpointSuccessResponse),
            error: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleEndpointErrorResponse),
        })
        .transform<FernApi.ExampleResponse>({
            transform: (value) => {
                switch (value.type) {
                    case \\"ok\\":
                        return FernApi.ExampleResponse.ok(value);
                    case \\"error\\":
                        return FernApi.ExampleResponse.error(value);
                    default:
                        return value as FernApi.ExampleResponse;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace ExampleResponse {
    type Raw = ExampleResponse.Ok | ExampleResponse.Error;

    interface Ok extends serializers.ExampleEndpointSuccessResponse.Raw {
        type: \\"ok\\";
    }

    interface Error extends serializers.ExampleEndpointErrorResponse.Raw {
        type: \\"error\\";
    }
}
",
                        "name": "ExampleResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const FileDownloadResponse: core.serialization.ObjectSchema<
    serializers.FileDownloadResponse.Raw,
    FernApi.FileDownloadResponse
> = core.serialization
    .objectWithoutOptionalProperties({})
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace FileDownloadResponse {
    interface Raw extends serializers.WithDocs.Raw {}
}
",
                        "name": "FileDownloadResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const FileProperty: core.serialization.ObjectSchema<serializers.FileProperty.Raw, FernApi.FileProperty> =
    core.serialization.objectWithoutOptionalProperties({
        key: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        isOptional: core.serialization.boolean(),
    });

export declare namespace FileProperty {
    interface Raw {
        key: serializers.NameAndWireValue.Raw;
        isOptional: boolean;
    }
}
",
                        "name": "FileProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const FileUploadRequest: core.serialization.ObjectSchema<
    serializers.FileUploadRequest.Raw,
    FernApi.FileUploadRequest
> = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
    properties: core.serialization.list(
        core.serialization.lazy(async () => (await import(\\"../../..\\")).FileUploadRequestProperty)
    ),
});

export declare namespace FileUploadRequest {
    interface Raw {
        name: serializers.Name.Raw;
        properties: serializers.FileUploadRequestProperty.Raw[];
    }
}
",
                        "name": "FileUploadRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const FileUploadRequestProperty: core.serialization.Schema<
    serializers.FileUploadRequestProperty.Raw,
    FernApi.FileUploadRequestProperty
> = core.serialization
    .union(\\"type\\", {
        file: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FileProperty),
        bodyProperty: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).InlinedRequestBodyProperty),
    })
    .transform<FernApi.FileUploadRequestProperty>({
        transform: (value) => {
            switch (value.type) {
                case \\"file\\":
                    return FernApi.FileUploadRequestProperty.file(value);
                case \\"bodyProperty\\":
                    return FernApi.FileUploadRequestProperty.bodyProperty(value);
                default:
                    return value as FernApi.FileUploadRequestProperty;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace FileUploadRequestProperty {
    type Raw = FileUploadRequestProperty.File | FileUploadRequestProperty.BodyProperty;

    interface File extends serializers.FileProperty.Raw {
        type: \\"file\\";
    }

    interface BodyProperty extends serializers.InlinedRequestBodyProperty.Raw {
        type: \\"bodyProperty\\";
    }
}
",
                        "name": "FileUploadRequestProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpEndpoint: core.serialization.ObjectSchema<serializers.HttpEndpoint.Raw, FernApi.HttpEndpoint> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).EndpointName),
            displayName: core.serialization.string().optional(),
            method: core.serialization.lazy(async () => (await import(\\"../../..\\")).HttpMethod),
            headers: core.serialization.list(
                core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpHeader)
            ),
            baseUrl: core.serialization.lazy(async () => (await import(\\"../../..\\")).EnvironmentBaseUrlId).optional(),
            path: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpPath),
            fullPath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpPath),
            pathParameters: core.serialization.list(
                core.serialization.lazyObject(async () => (await import(\\"../../..\\")).PathParameter)
            ),
            allPathParameters: core.serialization.list(
                core.serialization.lazyObject(async () => (await import(\\"../../..\\")).PathParameter)
            ),
            queryParameters: core.serialization.list(
                core.serialization.lazyObject(async () => (await import(\\"../../..\\")).QueryParameter)
            ),
            requestBody: core.serialization.lazy(async () => (await import(\\"../../..\\")).HttpRequestBody).optional(),
            sdkRequest: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SdkRequest).optional(),
            response: core.serialization.lazy(async () => (await import(\\"../../..\\")).HttpResponse).optional(),
            errors: core.serialization.lazy(async () => (await import(\\"../../..\\")).ResponseErrors),
            auth: core.serialization.boolean(),
            examples: core.serialization.list(
                core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleEndpointCall)
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Declaration));

export declare namespace HttpEndpoint {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.EndpointName.Raw;
        displayName?: string | null;
        method: serializers.HttpMethod.Raw;
        headers: serializers.HttpHeader.Raw[];
        baseUrl?: serializers.EnvironmentBaseUrlId.Raw | null;
        path: serializers.HttpPath.Raw;
        fullPath: serializers.HttpPath.Raw;
        pathParameters: serializers.PathParameter.Raw[];
        allPathParameters: serializers.PathParameter.Raw[];
        queryParameters: serializers.QueryParameter.Raw[];
        requestBody?: serializers.HttpRequestBody.Raw | null;
        sdkRequest?: serializers.SdkRequest.Raw | null;
        response?: serializers.HttpResponse.Raw | null;
        errors: serializers.ResponseErrors.Raw;
        auth: boolean;
        examples: serializers.ExampleEndpointCall.Raw[];
    }
}
",
                        "name": "HttpEndpoint.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpHeader: core.serialization.ObjectSchema<serializers.HttpHeader.Raw, FernApi.HttpHeader> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
            valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Declaration));

export declare namespace HttpHeader {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "HttpHeader.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpMethod: core.serialization.Schema<serializers.HttpMethod.Raw, FernApi.HttpMethod> =
    core.serialization.enum_([\\"GET\\", \\"POST\\", \\"PUT\\", \\"PATCH\\", \\"DELETE\\"]);

export declare namespace HttpMethod {
    type Raw = \\"GET\\" | \\"POST\\" | \\"PUT\\" | \\"PATCH\\" | \\"DELETE\\";
}
",
                        "name": "HttpMethod.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpPath: core.serialization.ObjectSchema<serializers.HttpPath.Raw, FernApi.HttpPath> =
    core.serialization.objectWithoutOptionalProperties({
        head: core.serialization.string(),
        parts: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpPathPart)
        ),
    });

export declare namespace HttpPath {
    interface Raw {
        head: string;
        parts: serializers.HttpPathPart.Raw[];
    }
}
",
                        "name": "HttpPath.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpPathPart: core.serialization.ObjectSchema<serializers.HttpPathPart.Raw, FernApi.HttpPathPart> =
    core.serialization.objectWithoutOptionalProperties({
        pathParameter: core.serialization.string(),
        tail: core.serialization.string(),
    });

export declare namespace HttpPathPart {
    interface Raw {
        pathParameter: string;
        tail: string;
    }
}
",
                        "name": "HttpPathPart.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpRequestBody: core.serialization.Schema<serializers.HttpRequestBody.Raw, FernApi.HttpRequestBody> =
    core.serialization
        .union(\\"type\\", {
            inlinedRequestBody: core.serialization.lazyObject(
                async () => (await import(\\"../../..\\")).InlinedRequestBody
            ),
            reference: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpRequestBodyReference),
            fileUpload: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FileUploadRequest),
        })
        .transform<FernApi.HttpRequestBody>({
            transform: (value) => {
                switch (value.type) {
                    case \\"inlinedRequestBody\\":
                        return FernApi.HttpRequestBody.inlinedRequestBody(value);
                    case \\"reference\\":
                        return FernApi.HttpRequestBody.reference(value);
                    case \\"fileUpload\\":
                        return FernApi.HttpRequestBody.fileUpload(value);
                    default:
                        return value as FernApi.HttpRequestBody;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace HttpRequestBody {
    type Raw = HttpRequestBody.InlinedRequestBody | HttpRequestBody.Reference | HttpRequestBody.FileUpload;

    interface InlinedRequestBody extends serializers.InlinedRequestBody.Raw {
        type: \\"inlinedRequestBody\\";
    }

    interface Reference extends serializers.HttpRequestBodyReference.Raw {
        type: \\"reference\\";
    }

    interface FileUpload extends serializers.FileUploadRequest.Raw {
        type: \\"fileUpload\\";
    }
}
",
                        "name": "HttpRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpRequestBodyReference: core.serialization.ObjectSchema<
    serializers.HttpRequestBodyReference.Raw,
    FernApi.HttpRequestBodyReference
> = core.serialization
    .objectWithoutOptionalProperties({
        requestBodyType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        contentType: core.serialization.string().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace HttpRequestBodyReference {
    interface Raw extends serializers.WithDocs.Raw {
        requestBodyType: serializers.TypeReference.Raw;
        contentType?: string | null;
    }
}
",
                        "name": "HttpRequestBodyReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpResponse: core.serialization.Schema<serializers.HttpResponse.Raw, FernApi.HttpResponse> =
    core.serialization
        .union(\\"type\\", {
            json: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).JsonResponse),
            fileDownload: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FileDownloadResponse),
            streaming: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).StreamingResponse),
        })
        .transform<FernApi.HttpResponse>({
            transform: (value) => {
                switch (value.type) {
                    case \\"json\\":
                        return FernApi.HttpResponse.json(value);
                    case \\"fileDownload\\":
                        return FernApi.HttpResponse.fileDownload(value);
                    case \\"streaming\\":
                        return FernApi.HttpResponse.streaming(value);
                    default:
                        return value as FernApi.HttpResponse;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace HttpResponse {
    type Raw = HttpResponse.Json | HttpResponse.FileDownload | HttpResponse.Streaming;

    interface Json extends serializers.JsonResponse.Raw {
        type: \\"json\\";
    }

    interface FileDownload extends serializers.FileDownloadResponse.Raw {
        type: \\"fileDownload\\";
    }

    interface Streaming extends serializers.StreamingResponse.Raw {
        type: \\"streaming\\";
    }
}
",
                        "name": "HttpResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const HttpService: core.serialization.ObjectSchema<serializers.HttpService.Raw, FernApi.HttpService> =
    core.serialization.objectWithoutOptionalProperties({
        availability: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Availability),
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredServiceName),
        displayName: core.serialization.string().optional(),
        basePath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpPath),
        endpoints: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpEndpoint)
        ),
        headers: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpHeader)
        ),
        pathParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).PathParameter)
        ),
    });

export declare namespace HttpService {
    interface Raw {
        availability: serializers.Availability.Raw;
        name: serializers.DeclaredServiceName.Raw;
        displayName?: string | null;
        basePath: serializers.HttpPath.Raw;
        endpoints: serializers.HttpEndpoint.Raw[];
        headers: serializers.HttpHeader.Raw[];
        pathParameters: serializers.PathParameter.Raw[];
    }
}
",
                        "name": "HttpService.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const InlinedRequestBody: core.serialization.ObjectSchema<
    serializers.InlinedRequestBody.Raw,
    FernApi.InlinedRequestBody
> = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
    extends_: core.serialization.property(
        \\"extends\\",
        core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName))
    ),
    properties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).InlinedRequestBodyProperty)
    ),
    contentType: core.serialization.string().optional(),
});

export declare namespace InlinedRequestBody {
    interface Raw {
        name: serializers.Name.Raw;
        extends: serializers.DeclaredTypeName.Raw[];
        properties: serializers.InlinedRequestBodyProperty.Raw[];
        contentType?: string | null;
    }
}
",
                        "name": "InlinedRequestBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const InlinedRequestBodyProperty: core.serialization.ObjectSchema<
    serializers.InlinedRequestBodyProperty.Raw,
    FernApi.InlinedRequestBodyProperty
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace InlinedRequestBodyProperty {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "InlinedRequestBodyProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const JsonResponse: core.serialization.ObjectSchema<serializers.JsonResponse.Raw, FernApi.JsonResponse> =
    core.serialization
        .objectWithoutOptionalProperties({
            responseBodyType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace JsonResponse {
    interface Raw extends serializers.WithDocs.Raw {
        responseBodyType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "JsonResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const MaybeStreamingResponse: core.serialization.ObjectSchema<
    serializers.MaybeStreamingResponse.Raw,
    FernApi.MaybeStreamingResponse
> = core.serialization.objectWithoutOptionalProperties({
    condition: core.serialization.lazy(async () => (await import(\\"../../..\\")).StreamCondition),
    nonStreaming: core.serialization.lazy(async () => (await import(\\"../../..\\")).HttpResponse),
    streaming: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).StreamingResponse),
});

export declare namespace MaybeStreamingResponse {
    interface Raw {
        condition: serializers.StreamCondition.Raw;
        nonStreaming: serializers.HttpResponse.Raw;
        streaming: serializers.StreamingResponse.Raw;
    }
}
",
                        "name": "MaybeStreamingResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const PathParameter: core.serialization.ObjectSchema<serializers.PathParameter.Raw, FernApi.PathParameter> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
            valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
            location: core.serialization.lazy(async () => (await import(\\"../../..\\")).PathParameterLocation),
            variable: core.serialization.lazy(async () => (await import(\\"../../..\\")).VariableId).optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace PathParameter {
    interface Raw extends serializers.WithDocs.Raw {
        name: serializers.Name.Raw;
        valueType: serializers.TypeReference.Raw;
        location: serializers.PathParameterLocation.Raw;
        variable?: serializers.VariableId.Raw | null;
    }
}
",
                        "name": "PathParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const PathParameterLocation: core.serialization.Schema<
    serializers.PathParameterLocation.Raw,
    FernApi.PathParameterLocation
> = core.serialization.enum_([\\"ROOT\\", \\"SERVICE\\", \\"ENDPOINT\\"]);

export declare namespace PathParameterLocation {
    type Raw = \\"ROOT\\" | \\"SERVICE\\" | \\"ENDPOINT\\";
}
",
                        "name": "PathParameterLocation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const QueryParameter: core.serialization.ObjectSchema<serializers.QueryParameter.Raw, FernApi.QueryParameter> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
            valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
            allowMultiple: core.serialization.boolean(),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Declaration));

export declare namespace QueryParameter {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
        allowMultiple: boolean;
    }
}
",
                        "name": "QueryParameter.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ResponseError: core.serialization.ObjectSchema<serializers.ResponseError.Raw, FernApi.ResponseError> =
    core.serialization
        .objectWithoutOptionalProperties({
            error: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredErrorName),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace ResponseError {
    interface Raw extends serializers.WithDocs.Raw {
        error: serializers.DeclaredErrorName.Raw;
    }
}
",
                        "name": "ResponseError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ResponseErrors: core.serialization.Schema<serializers.ResponseErrors.Raw, FernApi.ResponseErrors> =
    core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ResponseError));

export declare namespace ResponseErrors {
    type Raw = serializers.ResponseError.Raw[];
}
",
                        "name": "ResponseErrors.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SdkRequest: core.serialization.ObjectSchema<serializers.SdkRequest.Raw, FernApi.SdkRequest> =
    core.serialization.objectWithoutOptionalProperties({
        requestParameterName: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
        shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).SdkRequestShape),
    });

export declare namespace SdkRequest {
    interface Raw {
        requestParameterName: serializers.Name.Raw;
        shape: serializers.SdkRequestShape.Raw;
    }
}
",
                        "name": "SdkRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SdkRequestShape: core.serialization.Schema<serializers.SdkRequestShape.Raw, FernApi.SdkRequestShape> =
    core.serialization
        .union(\\"type\\", {
            justRequestBody: core.serialization.lazyObject(
                async () => (await import(\\"../../..\\")).HttpRequestBodyReference
            ),
            wrapper: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SdkRequestWrapper),
        })
        .transform<FernApi.SdkRequestShape>({
            transform: (value) => {
                switch (value.type) {
                    case \\"justRequestBody\\":
                        return FernApi.SdkRequestShape.justRequestBody(value);
                    case \\"wrapper\\":
                        return FernApi.SdkRequestShape.wrapper(value);
                    default:
                        return value as FernApi.SdkRequestShape;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace SdkRequestShape {
    type Raw = SdkRequestShape.JustRequestBody | SdkRequestShape.Wrapper;

    interface JustRequestBody extends serializers.HttpRequestBodyReference.Raw {
        type: \\"justRequestBody\\";
    }

    interface Wrapper extends serializers.SdkRequestWrapper.Raw {
        type: \\"wrapper\\";
    }
}
",
                        "name": "SdkRequestShape.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SdkRequestWrapper: core.serialization.ObjectSchema<
    serializers.SdkRequestWrapper.Raw,
    FernApi.SdkRequestWrapper
> = core.serialization.objectWithoutOptionalProperties({
    wrapperName: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
    bodyKey: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
});

export declare namespace SdkRequestWrapper {
    interface Raw {
        wrapperName: serializers.Name.Raw;
        bodyKey: serializers.Name.Raw;
    }
}
",
                        "name": "SdkRequestWrapper.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const StreamCondition: core.serialization.Schema<serializers.StreamCondition.Raw, FernApi.StreamCondition> =
    core.serialization
        .union(\\"type\\", {
            queryParameterKey: core.serialization.object({
                value: core.serialization.string(),
            }),
            requestPropertyKey: core.serialization.object({
                value: core.serialization.string(),
            }),
        })
        .transform<FernApi.StreamCondition>({
            transform: (value) => {
                switch (value.type) {
                    case \\"queryParameterKey\\":
                        return FernApi.StreamCondition.queryParameterKey(value.value);
                    case \\"requestPropertyKey\\":
                        return FernApi.StreamCondition.requestPropertyKey(value.value);
                    default:
                        return value as FernApi.StreamCondition;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace StreamCondition {
    type Raw = StreamCondition.QueryParameterKey | StreamCondition.RequestPropertyKey;

    interface QueryParameterKey {
        type: \\"queryParameterKey\\";
        value: string;
    }

    interface RequestPropertyKey {
        type: \\"requestPropertyKey\\";
        value: string;
    }
}
",
                        "name": "StreamCondition.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const StreamingResponse: core.serialization.ObjectSchema<
    serializers.StreamingResponse.Raw,
    FernApi.StreamingResponse
> = core.serialization
    .objectWithoutOptionalProperties({
        dataEventType: core.serialization.lazy(async () => (await import(\\"../../..\\")).StreamingResponseChunkType),
        terminator: core.serialization.string().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace StreamingResponse {
    interface Raw extends serializers.WithDocs.Raw {
        dataEventType: serializers.StreamingResponseChunkType.Raw;
        terminator?: string | null;
    }
}
",
                        "name": "StreamingResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const StreamingResponseChunkType: core.serialization.Schema<
    serializers.StreamingResponseChunkType.Raw,
    FernApi.StreamingResponseChunkType
> = core.serialization
    .union(\\"type\\", {
        json: core.serialization.object({
            value: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        }),
        text: core.serialization.object({}),
    })
    .transform<FernApi.StreamingResponseChunkType>({
        transform: (value) => {
            switch (value.type) {
                case \\"json\\":
                    return FernApi.StreamingResponseChunkType.json(value.value);
                case \\"text\\":
                    return FernApi.StreamingResponseChunkType.text();
                default:
                    return value as FernApi.StreamingResponseChunkType;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace StreamingResponseChunkType {
    type Raw = StreamingResponseChunkType.Json | StreamingResponseChunkType.Text;

    interface Json {
        type: \\"json\\";
        value: serializers.TypeReference.Raw;
    }

    interface Text {
        type: \\"text\\";
    }
}
",
                        "name": "StreamingResponseChunkType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./HttpService\\";
export * from \\"./DeclaredServiceName\\";
export * from \\"./HttpEndpoint\\";
export * from \\"./EndpointName\\";
export * from \\"./HttpPath\\";
export * from \\"./HttpPathPart\\";
export * from \\"./HttpMethod\\";
export * from \\"./HttpHeader\\";
export * from \\"./PathParameter\\";
export * from \\"./PathParameterLocation\\";
export * from \\"./QueryParameter\\";
export * from \\"./HttpRequestBody\\";
export * from \\"./InlinedRequestBody\\";
export * from \\"./InlinedRequestBodyProperty\\";
export * from \\"./FileUploadRequest\\";
export * from \\"./FileUploadRequestProperty\\";
export * from \\"./FileProperty\\";
export * from \\"./HttpRequestBodyReference\\";
export * from \\"./SdkRequest\\";
export * from \\"./SdkRequestShape\\";
export * from \\"./SdkRequestWrapper\\";
export * from \\"./HttpResponse\\";
export * from \\"./JsonResponse\\";
export * from \\"./FileDownloadResponse\\";
export * from \\"./StreamingResponse\\";
export * from \\"./StreamingResponseChunkType\\";
export * from \\"./MaybeStreamingResponse\\";
export * from \\"./StreamCondition\\";
export * from \\"./ResponseErrors\\";
export * from \\"./ResponseError\\";
export * from \\"./ExampleEndpointCall\\";
export * from \\"./ExamplePathParameter\\";
export * from \\"./ExampleQueryParameter\\";
export * from \\"./ExampleHeader\\";
export * from \\"./ExampleRequestBody\\";
export * from \\"./ExampleInlinedRequestBody\\";
export * from \\"./ExampleInlinedRequestBodyProperty\\";
export * from \\"./ExampleResponse\\";
export * from \\"./ExampleEndpointSuccessResponse\\";
export * from \\"./ExampleEndpointErrorResponse\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "http",
                "type": "directory",
              },
              Object {
                "contents": "export * as auth from \\"./auth\\";
export * from \\"./auth/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as constants from \\"./constants\\";
export * from \\"./constants/types\\";
export * as environment from \\"./environment\\";
export * from \\"./environment/types\\";
export * as errors from \\"./errors\\";
export * from \\"./errors/types\\";
export * as http from \\"./http\\";
export * from \\"./http/types\\";
export * as ir from \\"./ir\\";
export * from \\"./ir/types\\";
export * as types from \\"./types\\";
export * from \\"./types/types\\";
export * as variables from \\"./variables\\";
export * from \\"./variables/types\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ErrorDiscriminationByPropertyStrategy: core.serialization.ObjectSchema<
    serializers.ErrorDiscriminationByPropertyStrategy.Raw,
    FernApi.ErrorDiscriminationByPropertyStrategy
> = core.serialization.objectWithoutOptionalProperties({
    discriminant: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
    contentProperty: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
});

export declare namespace ErrorDiscriminationByPropertyStrategy {
    interface Raw {
        discriminant: serializers.NameAndWireValue.Raw;
        contentProperty: serializers.NameAndWireValue.Raw;
    }
}
",
                        "name": "ErrorDiscriminationByPropertyStrategy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ErrorDiscriminationStrategy: core.serialization.Schema<
    serializers.ErrorDiscriminationStrategy.Raw,
    FernApi.ErrorDiscriminationStrategy
> = core.serialization
    .union(\\"type\\", {
        statusCode: core.serialization.object({}),
        property: core.serialization.lazyObject(
            async () => (await import(\\"../../..\\")).ErrorDiscriminationByPropertyStrategy
        ),
    })
    .transform<FernApi.ErrorDiscriminationStrategy>({
        transform: (value) => {
            switch (value.type) {
                case \\"statusCode\\":
                    return FernApi.ErrorDiscriminationStrategy.statusCode();
                case \\"property\\":
                    return FernApi.ErrorDiscriminationStrategy.property(value);
                default:
                    return value as FernApi.ErrorDiscriminationStrategy;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ErrorDiscriminationStrategy {
    type Raw = ErrorDiscriminationStrategy.StatusCode | ErrorDiscriminationStrategy.Property;

    interface StatusCode {
        type: \\"statusCode\\";
    }

    interface Property extends serializers.ErrorDiscriminationByPropertyStrategy.Raw {
        type: \\"property\\";
    }
}
",
                        "name": "ErrorDiscriminationStrategy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const IntermediateRepresentation: core.serialization.ObjectSchema<
    serializers.IntermediateRepresentation.Raw,
    FernApi.IntermediateRepresentation
> = core.serialization.objectWithoutOptionalProperties({
    apiName: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
    apiDisplayName: core.serialization.string().optional(),
    apiDocs: core.serialization.string().optional(),
    auth: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ApiAuth),
    headers: core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpHeader)),
    types: core.serialization.record(
        core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeId),
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).TypeDeclaration)
    ),
    services: core.serialization.record(
        core.serialization.lazy(async () => (await import(\\"../../..\\")).ServiceId),
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpService)
    ),
    errors: core.serialization.record(
        core.serialization.lazy(async () => (await import(\\"../../..\\")).ErrorId),
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ErrorDeclaration)
    ),
    subpackages: core.serialization.record(
        core.serialization.lazy(async () => (await import(\\"../../..\\")).SubpackageId),
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Subpackage)
    ),
    rootPackage: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Package),
    constants: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Constants),
    environments: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).EnvironmentsConfig).optional(),
    basePath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).HttpPath).optional(),
    pathParameters: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).PathParameter)
    ),
    errorDiscriminationStrategy: core.serialization.lazy(
        async () => (await import(\\"../../..\\")).ErrorDiscriminationStrategy
    ),
    sdkConfig: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SdkConfig),
    variables: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).VariableDeclaration)
    ),
    serviceTypeReferenceInfo: core.serialization
        .lazyObject(async () => (await import(\\"../../..\\")).ServiceTypeReferenceInfo)
        .optional(),
});

export declare namespace IntermediateRepresentation {
    interface Raw {
        apiName: serializers.Name.Raw;
        apiDisplayName?: string | null;
        apiDocs?: string | null;
        auth: serializers.ApiAuth.Raw;
        headers: serializers.HttpHeader.Raw[];
        types: Record<serializers.TypeId.Raw, serializers.TypeDeclaration.Raw>;
        services: Record<serializers.ServiceId.Raw, serializers.HttpService.Raw>;
        errors: Record<serializers.ErrorId.Raw, serializers.ErrorDeclaration.Raw>;
        subpackages: Record<serializers.SubpackageId.Raw, serializers.Subpackage.Raw>;
        rootPackage: serializers.Package.Raw;
        constants: serializers.Constants.Raw;
        environments?: serializers.EnvironmentsConfig.Raw | null;
        basePath?: serializers.HttpPath.Raw | null;
        pathParameters: serializers.PathParameter.Raw[];
        errorDiscriminationStrategy: serializers.ErrorDiscriminationStrategy.Raw;
        sdkConfig: serializers.SdkConfig.Raw;
        variables: serializers.VariableDeclaration.Raw[];
        serviceTypeReferenceInfo?: serializers.ServiceTypeReferenceInfo.Raw | null;
    }
}
",
                        "name": "IntermediateRepresentation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Package: core.serialization.ObjectSchema<serializers.Package.Raw, FernApi.Package> = core.serialization
    .objectWithoutOptionalProperties({
        fernFilepath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FernFilepath),
        service: core.serialization.lazy(async () => (await import(\\"../../..\\")).ServiceId).optional(),
        types: core.serialization.list(core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeId)),
        errors: core.serialization.list(core.serialization.lazy(async () => (await import(\\"../../..\\")).ErrorId)),
        subpackages: core.serialization.list(
            core.serialization.lazy(async () => (await import(\\"../../..\\")).SubpackageId)
        ),
        hasEndpointsInTree: core.serialization.boolean(),
        navigationConfig: core.serialization
            .lazyObject(async () => (await import(\\"../../..\\")).PackageNavigationConfig)
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace Package {
    interface Raw extends serializers.WithDocs.Raw {
        fernFilepath: serializers.FernFilepath.Raw;
        service?: serializers.ServiceId.Raw | null;
        types: serializers.TypeId.Raw[];
        errors: serializers.ErrorId.Raw[];
        subpackages: serializers.SubpackageId.Raw[];
        hasEndpointsInTree: boolean;
        navigationConfig?: serializers.PackageNavigationConfig.Raw | null;
    }
}
",
                        "name": "Package.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const PackageNavigationConfig: core.serialization.ObjectSchema<
    serializers.PackageNavigationConfig.Raw,
    FernApi.PackageNavigationConfig
> = core.serialization.objectWithoutOptionalProperties({
    pointsTo: core.serialization.lazy(async () => (await import(\\"../../..\\")).SubpackageId),
});

export declare namespace PackageNavigationConfig {
    interface Raw {
        pointsTo: serializers.SubpackageId.Raw;
    }
}
",
                        "name": "PackageNavigationConfig.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const PlatformHeaders: core.serialization.ObjectSchema<
    serializers.PlatformHeaders.Raw,
    FernApi.PlatformHeaders
> = core.serialization.objectWithoutOptionalProperties({
    language: core.serialization.string(),
    sdkName: core.serialization.string(),
    sdkVersion: core.serialization.string(),
});

export declare namespace PlatformHeaders {
    interface Raw {
        language: string;
        sdkName: string;
        sdkVersion: string;
    }
}
",
                        "name": "PlatformHeaders.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SdkConfig: core.serialization.ObjectSchema<serializers.SdkConfig.Raw, FernApi.SdkConfig> =
    core.serialization.objectWithoutOptionalProperties({
        isAuthMandatory: core.serialization.boolean(),
        hasStreamingEndpoints: core.serialization.boolean(),
        hasFileDownloadEndpoints: core.serialization.boolean(),
        platformHeaders: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).PlatformHeaders),
    });

export declare namespace SdkConfig {
    interface Raw {
        isAuthMandatory: boolean;
        hasStreamingEndpoints: boolean;
        hasFileDownloadEndpoints: boolean;
        platformHeaders: serializers.PlatformHeaders.Raw;
    }
}
",
                        "name": "SdkConfig.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ServiceTypeReferenceInfo: core.serialization.ObjectSchema<
    serializers.ServiceTypeReferenceInfo.Raw,
    FernApi.ServiceTypeReferenceInfo
> = core.serialization.objectWithoutOptionalProperties({
    typesReferencedOnlyByService: core.serialization.record(
        core.serialization.lazy(async () => (await import(\\"../../..\\")).ServiceId),
        core.serialization.list(core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeId))
    ),
    sharedTypes: core.serialization.list(core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeId)),
});

export declare namespace ServiceTypeReferenceInfo {
    interface Raw {
        typesReferencedOnlyByService: Record<serializers.ServiceId.Raw, serializers.TypeId.Raw[]>;
        sharedTypes: serializers.TypeId.Raw[];
    }
}
",
                        "name": "ServiceTypeReferenceInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Subpackage: core.serialization.ObjectSchema<serializers.Subpackage.Raw, FernApi.Subpackage> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Package));

export declare namespace Subpackage {
    interface Raw extends serializers.Package.Raw {
        name: serializers.Name.Raw;
    }
}
",
                        "name": "Subpackage.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./IntermediateRepresentation\\";
export * from \\"./SdkConfig\\";
export * from \\"./PlatformHeaders\\";
export * from \\"./ErrorDiscriminationStrategy\\";
export * from \\"./ErrorDiscriminationByPropertyStrategy\\";
export * from \\"./Package\\";
export * from \\"./Subpackage\\";
export * from \\"./PackageNavigationConfig\\";
export * from \\"./ServiceTypeReferenceInfo\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "ir",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const AliasTypeDeclaration: core.serialization.ObjectSchema<
    serializers.AliasTypeDeclaration.Raw,
    FernApi.AliasTypeDeclaration
> = core.serialization.objectWithoutOptionalProperties({
    aliasOf: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
    resolvedType: core.serialization.lazy(async () => (await import(\\"../../..\\")).ResolvedTypeReference),
});

export declare namespace AliasTypeDeclaration {
    interface Raw {
        aliasOf: serializers.TypeReference.Raw;
        resolvedType: serializers.ResolvedTypeReference.Raw;
    }
}
",
                        "name": "AliasTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ContainerType: core.serialization.Schema<serializers.ContainerType.Raw, FernApi.ContainerType> =
    core.serialization
        .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
            list: core.serialization.object({
                list: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
            }),
            map: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).MapType),
            optional: core.serialization.object({
                optional: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
            }),
            set: core.serialization.object({
                set: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
            }),
            literal: core.serialization.object({
                literal: core.serialization.lazy(async () => (await import(\\"../../..\\")).Literal),
            }),
        })
        .transform<FernApi.ContainerType>({
            transform: (value) => {
                switch (value.type) {
                    case \\"list\\":
                        return FernApi.ContainerType.list(value.list);
                    case \\"map\\":
                        return FernApi.ContainerType.map(value);
                    case \\"optional\\":
                        return FernApi.ContainerType.optional(value.optional);
                    case \\"set\\":
                        return FernApi.ContainerType.set(value.set);
                    case \\"literal\\":
                        return FernApi.ContainerType.literal(value.literal);
                    default:
                        return value as FernApi.ContainerType;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace ContainerType {
    type Raw =
        | ContainerType.List
        | ContainerType.Map
        | ContainerType.Optional
        | ContainerType.Set
        | ContainerType.Literal;

    interface List {
        _type: \\"list\\";
        list: serializers.TypeReference.Raw;
    }

    interface Map extends serializers.MapType.Raw {
        _type: \\"map\\";
    }

    interface Optional {
        _type: \\"optional\\";
        optional: serializers.TypeReference.Raw;
    }

    interface Set {
        _type: \\"set\\";
        set: serializers.TypeReference.Raw;
    }

    interface Literal {
        _type: \\"literal\\";
        literal: serializers.Literal.Raw;
    }
}
",
                        "name": "ContainerType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const DeclaredTypeName: core.serialization.ObjectSchema<
    serializers.DeclaredTypeName.Raw,
    FernApi.DeclaredTypeName
> = core.serialization.objectWithoutOptionalProperties({
    typeId: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeId),
    fernFilepath: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).FernFilepath),
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
});

export declare namespace DeclaredTypeName {
    interface Raw {
        typeId: serializers.TypeId.Raw;
        fernFilepath: serializers.FernFilepath.Raw;
        name: serializers.Name.Raw;
    }
}
",
                        "name": "DeclaredTypeName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnumTypeDeclaration: core.serialization.ObjectSchema<
    serializers.EnumTypeDeclaration.Raw,
    FernApi.EnumTypeDeclaration
> = core.serialization.objectWithoutOptionalProperties({
    values: core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).EnumValue)),
});

export declare namespace EnumTypeDeclaration {
    interface Raw {
        values: serializers.EnumValue.Raw[];
    }
}
",
                        "name": "EnumTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const EnumValue: core.serialization.ObjectSchema<serializers.EnumValue.Raw, FernApi.EnumValue> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Declaration));

export declare namespace EnumValue {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
    }
}
",
                        "name": "EnumValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleAliasType: core.serialization.ObjectSchema<
    serializers.ExampleAliasType.Raw,
    FernApi.ExampleAliasType
> = core.serialization.objectWithoutOptionalProperties({
    value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
});

export declare namespace ExampleAliasType {
    interface Raw {
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleAliasType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleContainer: core.serialization.Schema<serializers.ExampleContainer.Raw, FernApi.ExampleContainer> =
    core.serialization
        .union(\\"type\\", {
            list: core.serialization.object({
                list: core.serialization.list(
                    core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference)
                ),
            }),
            set: core.serialization.object({
                set: core.serialization.list(
                    core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference)
                ),
            }),
            optional: core.serialization.object({
                optional: core.serialization
                    .lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference)
                    .optional(),
            }),
            map: core.serialization.object({
                map: core.serialization.list(
                    core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleKeyValuePair)
                ),
            }),
        })
        .transform<FernApi.ExampleContainer>({
            transform: (value) => {
                switch (value.type) {
                    case \\"list\\":
                        return FernApi.ExampleContainer.list(value.list);
                    case \\"set\\":
                        return FernApi.ExampleContainer.set(value.set);
                    case \\"optional\\":
                        return FernApi.ExampleContainer.optional(value.optional);
                    case \\"map\\":
                        return FernApi.ExampleContainer.map(value.map);
                    default:
                        return value as FernApi.ExampleContainer;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace ExampleContainer {
    type Raw = ExampleContainer.List | ExampleContainer.Set | ExampleContainer.Optional | ExampleContainer.Map;

    interface List {
        type: \\"list\\";
        list: serializers.ExampleTypeReference.Raw[];
    }

    interface Set {
        type: \\"set\\";
        set: serializers.ExampleTypeReference.Raw[];
    }

    interface Optional {
        type: \\"optional\\";
        optional?: serializers.ExampleTypeReference.Raw | null;
    }

    interface Map {
        type: \\"map\\";
        map: serializers.ExampleKeyValuePair.Raw[];
    }
}
",
                        "name": "ExampleContainer.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleEnumType: core.serialization.ObjectSchema<
    serializers.ExampleEnumType.Raw,
    FernApi.ExampleEnumType
> = core.serialization.objectWithoutOptionalProperties({
    wireValue: core.serialization.string(),
});

export declare namespace ExampleEnumType {
    interface Raw {
        wireValue: string;
    }
}
",
                        "name": "ExampleEnumType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleKeyValuePair: core.serialization.ObjectSchema<
    serializers.ExampleKeyValuePair.Raw,
    FernApi.ExampleKeyValuePair
> = core.serialization.objectWithoutOptionalProperties({
    key: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
    value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
});

export declare namespace ExampleKeyValuePair {
    interface Raw {
        key: serializers.ExampleTypeReference.Raw;
        value: serializers.ExampleTypeReference.Raw;
    }
}
",
                        "name": "ExampleKeyValuePair.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleNamedType: core.serialization.ObjectSchema<
    serializers.ExampleNamedType.Raw,
    FernApi.ExampleNamedType
> = core.serialization.objectWithoutOptionalProperties({
    typeName: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName),
    shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleTypeShape),
});

export declare namespace ExampleNamedType {
    interface Raw {
        typeName: serializers.DeclaredTypeName.Raw;
        shape: serializers.ExampleTypeShape.Raw;
    }
}
",
                        "name": "ExampleNamedType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleObjectProperty: core.serialization.ObjectSchema<
    serializers.ExampleObjectProperty.Raw,
    FernApi.ExampleObjectProperty
> = core.serialization.objectWithoutOptionalProperties({
    wireKey: core.serialization.string(),
    value: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
    originalTypeDeclaration: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName),
});

export declare namespace ExampleObjectProperty {
    interface Raw {
        wireKey: string;
        value: serializers.ExampleTypeReference.Raw;
        originalTypeDeclaration: serializers.DeclaredTypeName.Raw;
    }
}
",
                        "name": "ExampleObjectProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleObjectType: core.serialization.ObjectSchema<
    serializers.ExampleObjectType.Raw,
    FernApi.ExampleObjectType
> = core.serialization.objectWithoutOptionalProperties({
    properties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleObjectProperty)
    ),
});

export declare namespace ExampleObjectType {
    interface Raw {
        properties: serializers.ExampleObjectProperty.Raw[];
    }
}
",
                        "name": "ExampleObjectType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExamplePrimitive: core.serialization.Schema<serializers.ExamplePrimitive.Raw, FernApi.ExamplePrimitive> =
    core.serialization
        .union(\\"type\\", {
            integer: core.serialization.object({
                integer: core.serialization.number(),
            }),
            double: core.serialization.object({
                double: core.serialization.number(),
            }),
            string: core.serialization.object({
                string: core.serialization.string(),
            }),
            boolean: core.serialization.object({
                boolean: core.serialization.boolean(),
            }),
            long: core.serialization.object({
                long: core.serialization.number(),
            }),
            datetime: core.serialization.object({
                datetime: core.serialization.date(),
            }),
            date: core.serialization.object({
                date: core.serialization.string(),
            }),
            uuid: core.serialization.object({
                uuid: core.serialization.string(),
            }),
        })
        .transform<FernApi.ExamplePrimitive>({
            transform: (value) => {
                switch (value.type) {
                    case \\"integer\\":
                        return FernApi.ExamplePrimitive.integer(value.integer);
                    case \\"double\\":
                        return FernApi.ExamplePrimitive.double(value.double);
                    case \\"string\\":
                        return FernApi.ExamplePrimitive.string(value.string);
                    case \\"boolean\\":
                        return FernApi.ExamplePrimitive.boolean(value.boolean);
                    case \\"long\\":
                        return FernApi.ExamplePrimitive.long(value.long);
                    case \\"datetime\\":
                        return FernApi.ExamplePrimitive.datetime(value.datetime);
                    case \\"date\\":
                        return FernApi.ExamplePrimitive.date(value.date);
                    case \\"uuid\\":
                        return FernApi.ExamplePrimitive.uuid(value.uuid);
                    default:
                        return value as FernApi.ExamplePrimitive;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace ExamplePrimitive {
    type Raw =
        | ExamplePrimitive.Integer
        | ExamplePrimitive.Double
        | ExamplePrimitive.String
        | ExamplePrimitive.Boolean
        | ExamplePrimitive.Long
        | ExamplePrimitive.Datetime
        | ExamplePrimitive.Date
        | ExamplePrimitive.Uuid;

    interface Integer {
        type: \\"integer\\";
        integer: number;
    }

    interface Double {
        type: \\"double\\";
        double: number;
    }

    interface String {
        type: \\"string\\";
        string: string;
    }

    interface Boolean {
        type: \\"boolean\\";
        boolean: boolean;
    }

    interface Long {
        type: \\"long\\";
        long: number;
    }

    interface Datetime {
        type: \\"datetime\\";
        datetime: string;
    }

    interface Date {
        type: \\"date\\";
        date: string;
    }

    interface Uuid {
        type: \\"uuid\\";
        uuid: string;
    }
}
",
                        "name": "ExamplePrimitive.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleSingleUnionType: core.serialization.ObjectSchema<
    serializers.ExampleSingleUnionType.Raw,
    FernApi.ExampleSingleUnionType
> = core.serialization.objectWithoutOptionalProperties({
    wireDiscriminantValue: core.serialization.string(),
    properties: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleSingleUnionTypeProperties),
});

export declare namespace ExampleSingleUnionType {
    interface Raw {
        wireDiscriminantValue: string;
        properties: serializers.ExampleSingleUnionTypeProperties.Raw;
    }
}
",
                        "name": "ExampleSingleUnionType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleSingleUnionTypeProperties: core.serialization.Schema<
    serializers.ExampleSingleUnionTypeProperties.Raw,
    FernApi.ExampleSingleUnionTypeProperties
> = core.serialization
    .union(\\"type\\", {
        samePropertiesAsObject: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleNamedType),
        singleProperty: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleTypeReference),
        noProperties: core.serialization.object({}),
    })
    .transform<FernApi.ExampleSingleUnionTypeProperties>({
        transform: (value) => {
            switch (value.type) {
                case \\"samePropertiesAsObject\\":
                    return FernApi.ExampleSingleUnionTypeProperties.samePropertiesAsObject(value);
                case \\"singleProperty\\":
                    return FernApi.ExampleSingleUnionTypeProperties.singleProperty(value);
                case \\"noProperties\\":
                    return FernApi.ExampleSingleUnionTypeProperties.noProperties();
                default:
                    return value as FernApi.ExampleSingleUnionTypeProperties;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ExampleSingleUnionTypeProperties {
    type Raw =
        | ExampleSingleUnionTypeProperties.SamePropertiesAsObject
        | ExampleSingleUnionTypeProperties.SingleProperty
        | ExampleSingleUnionTypeProperties.NoProperties;

    interface SamePropertiesAsObject extends serializers.ExampleNamedType.Raw {
        type: \\"samePropertiesAsObject\\";
    }

    interface SingleProperty extends serializers.ExampleTypeReference.Raw {
        type: \\"singleProperty\\";
    }

    interface NoProperties {
        type: \\"noProperties\\";
    }
}
",
                        "name": "ExampleSingleUnionTypeProperties.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleType: core.serialization.ObjectSchema<serializers.ExampleType.Raw, FernApi.ExampleType> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name).optional(),
            shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleTypeShape),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithJsonExample))
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace ExampleType {
    interface Raw extends serializers.WithJsonExample.Raw, serializers.WithDocs.Raw {
        name?: serializers.Name.Raw | null;
        shape: serializers.ExampleTypeShape.Raw;
    }
}
",
                        "name": "ExampleType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleTypeReference: core.serialization.ObjectSchema<
    serializers.ExampleTypeReference.Raw,
    FernApi.ExampleTypeReference
> = core.serialization
    .objectWithoutOptionalProperties({
        shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleTypeReferenceShape),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithJsonExample));

export declare namespace ExampleTypeReference {
    interface Raw extends serializers.WithJsonExample.Raw {
        shape: serializers.ExampleTypeReferenceShape.Raw;
    }
}
",
                        "name": "ExampleTypeReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleTypeReferenceShape: core.serialization.Schema<
    serializers.ExampleTypeReferenceShape.Raw,
    FernApi.ExampleTypeReferenceShape
> = core.serialization
    .union(\\"type\\", {
        primitive: core.serialization.object({
            primitive: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExamplePrimitive),
        }),
        container: core.serialization.object({
            container: core.serialization.lazy(async () => (await import(\\"../../..\\")).ExampleContainer),
        }),
        unknown: core.serialization.object({
            unknown: core.serialization.unknown(),
        }),
        named: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleNamedType),
    })
    .transform<FernApi.ExampleTypeReferenceShape>({
        transform: (value) => {
            switch (value.type) {
                case \\"primitive\\":
                    return FernApi.ExampleTypeReferenceShape.primitive(value.primitive);
                case \\"container\\":
                    return FernApi.ExampleTypeReferenceShape.container(value.container);
                case \\"unknown\\":
                    return FernApi.ExampleTypeReferenceShape.unknown(value.unknown);
                case \\"named\\":
                    return FernApi.ExampleTypeReferenceShape.named(value);
                default:
                    return value as FernApi.ExampleTypeReferenceShape;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ExampleTypeReferenceShape {
    type Raw =
        | ExampleTypeReferenceShape.Primitive
        | ExampleTypeReferenceShape.Container
        | ExampleTypeReferenceShape.Unknown
        | ExampleTypeReferenceShape.Named;

    interface Primitive {
        type: \\"primitive\\";
        primitive: serializers.ExamplePrimitive.Raw;
    }

    interface Container {
        type: \\"container\\";
        container: serializers.ExampleContainer.Raw;
    }

    interface Unknown {
        type: \\"unknown\\";
        unknown?: unknown;
    }

    interface Named extends serializers.ExampleNamedType.Raw {
        type: \\"named\\";
    }
}
",
                        "name": "ExampleTypeReferenceShape.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ExampleTypeShape: core.serialization.Schema<serializers.ExampleTypeShape.Raw, FernApi.ExampleTypeShape> =
    core.serialization
        .union(\\"type\\", {
            alias: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleAliasType),
            enum: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleEnumType),
            object: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleObjectType),
            union: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleSingleUnionType),
        })
        .transform<FernApi.ExampleTypeShape>({
            transform: (value) => {
                switch (value.type) {
                    case \\"alias\\":
                        return FernApi.ExampleTypeShape.alias(value);
                    case \\"enum\\":
                        return FernApi.ExampleTypeShape.enum(value);
                    case \\"object\\":
                        return FernApi.ExampleTypeShape.object(value);
                    case \\"union\\":
                        return FernApi.ExampleTypeShape.union(value);
                    default:
                        return value as FernApi.ExampleTypeShape;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace ExampleTypeShape {
    type Raw = ExampleTypeShape.Alias | ExampleTypeShape.Enum | ExampleTypeShape.Object | ExampleTypeShape.Union;

    interface Alias extends serializers.ExampleAliasType.Raw {
        type: \\"alias\\";
    }

    interface Enum extends serializers.ExampleEnumType.Raw {
        type: \\"enum\\";
    }

    interface Object extends serializers.ExampleObjectType.Raw {
        type: \\"object\\";
    }

    interface Union extends serializers.ExampleSingleUnionType.Raw {
        type: \\"union\\";
    }
}
",
                        "name": "ExampleTypeShape.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Literal: core.serialization.Schema<serializers.Literal.Raw, FernApi.Literal> = core.serialization
    .union(\\"type\\", {
        string: core.serialization.object({
            string: core.serialization.string(),
        }),
    })
    .transform<FernApi.Literal>({
        transform: (value) => {
            switch (value.type) {
                case \\"string\\":
                    return FernApi.Literal.string(value.string);
                default:
                    return value as FernApi.Literal;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace Literal {
    type Raw = Literal.String;

    interface String {
        type: \\"string\\";
        string: string;
    }
}
",
                        "name": "Literal.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const MapType: core.serialization.ObjectSchema<serializers.MapType.Raw, FernApi.MapType> =
    core.serialization.objectWithoutOptionalProperties({
        keyType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
    });

export declare namespace MapType {
    interface Raw {
        keyType: serializers.TypeReference.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "MapType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ObjectProperty: core.serialization.ObjectSchema<serializers.ObjectProperty.Raw, FernApi.ObjectProperty> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
            valueType: core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference),
        })
        .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Declaration));

export declare namespace ObjectProperty {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
    }
}
",
                        "name": "ObjectProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ObjectTypeDeclaration: core.serialization.ObjectSchema<
    serializers.ObjectTypeDeclaration.Raw,
    FernApi.ObjectTypeDeclaration
> = core.serialization.objectWithoutOptionalProperties({
    extends_: core.serialization.property(
        \\"extends\\",
        core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName))
    ),
    properties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ObjectProperty)
    ),
});

export declare namespace ObjectTypeDeclaration {
    interface Raw {
        extends: serializers.DeclaredTypeName.Raw[];
        properties: serializers.ObjectProperty.Raw[];
    }
}
",
                        "name": "ObjectTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const PrimitiveType: core.serialization.Schema<serializers.PrimitiveType.Raw, FernApi.PrimitiveType> =
    core.serialization.enum_([
        \\"INTEGER\\",
        \\"DOUBLE\\",
        \\"STRING\\",
        \\"BOOLEAN\\",
        \\"LONG\\",
        \\"DATE_TIME\\",
        \\"DATE\\",
        \\"UUID\\",
        \\"BASE_64\\",
    ]);

export declare namespace PrimitiveType {
    type Raw = \\"INTEGER\\" | \\"DOUBLE\\" | \\"STRING\\" | \\"BOOLEAN\\" | \\"LONG\\" | \\"DATE_TIME\\" | \\"DATE\\" | \\"UUID\\" | \\"BASE_64\\";
}
",
                        "name": "PrimitiveType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ResolvedNamedType: core.serialization.ObjectSchema<
    serializers.ResolvedNamedType.Raw,
    FernApi.ResolvedNamedType
> = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName),
    shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).ShapeType),
});

export declare namespace ResolvedNamedType {
    interface Raw {
        name: serializers.DeclaredTypeName.Raw;
        shape: serializers.ShapeType.Raw;
    }
}
",
                        "name": "ResolvedNamedType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ResolvedTypeReference: core.serialization.Schema<
    serializers.ResolvedTypeReference.Raw,
    FernApi.ResolvedTypeReference
> = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
        container: core.serialization.object({
            container: core.serialization.lazy(async () => (await import(\\"../../..\\")).ContainerType),
        }),
        named: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ResolvedNamedType),
        primitive: core.serialization.object({
            primitive: core.serialization.lazy(async () => (await import(\\"../../..\\")).PrimitiveType),
        }),
        unknown: core.serialization.object({}),
    })
    .transform<FernApi.ResolvedTypeReference>({
        transform: (value) => {
            switch (value.type) {
                case \\"container\\":
                    return FernApi.ResolvedTypeReference.container(value.container);
                case \\"named\\":
                    return FernApi.ResolvedTypeReference.named(value);
                case \\"primitive\\":
                    return FernApi.ResolvedTypeReference.primitive(value.primitive);
                case \\"unknown\\":
                    return FernApi.ResolvedTypeReference.unknown();
                default:
                    return value as FernApi.ResolvedTypeReference;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace ResolvedTypeReference {
    type Raw =
        | ResolvedTypeReference.Container
        | ResolvedTypeReference.Named
        | ResolvedTypeReference.Primitive
        | ResolvedTypeReference.Unknown;

    interface Container {
        _type: \\"container\\";
        container: serializers.ContainerType.Raw;
    }

    interface Named extends serializers.ResolvedNamedType.Raw {
        _type: \\"named\\";
    }

    interface Primitive {
        _type: \\"primitive\\";
        primitive: serializers.PrimitiveType.Raw;
    }

    interface Unknown {
        _type: \\"unknown\\";
    }
}
",
                        "name": "ResolvedTypeReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const ShapeType: core.serialization.Schema<serializers.ShapeType.Raw, FernApi.ShapeType> =
    core.serialization.enum_([\\"ENUM\\", \\"OBJECT\\", \\"UNION\\", \\"UNDISCRIMINATED_UNION\\"]);

export declare namespace ShapeType {
    type Raw = \\"ENUM\\" | \\"OBJECT\\" | \\"UNION\\" | \\"UNDISCRIMINATED_UNION\\";
}
",
                        "name": "ShapeType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SingleUnionType: core.serialization.ObjectSchema<
    serializers.SingleUnionType.Raw,
    FernApi.SingleUnionType
> = core.serialization
    .objectWithoutOptionalProperties({
        discriminantValue: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
        shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).SingleUnionTypeProperties),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace SingleUnionType {
    interface Raw extends serializers.WithDocs.Raw {
        discriminantValue: serializers.NameAndWireValue.Raw;
        shape: serializers.SingleUnionTypeProperties.Raw;
    }
}
",
                        "name": "SingleUnionType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SingleUnionTypeProperties: core.serialization.Schema<
    serializers.SingleUnionTypeProperties.Raw,
    FernApi.SingleUnionTypeProperties
> = core.serialization
    .union(core.serialization.discriminant(\\"propertiesType\\", \\"_type\\"), {
        samePropertiesAsObject: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName),
        singleProperty: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SingleUnionTypeProperty),
        noProperties: core.serialization.object({}),
    })
    .transform<FernApi.SingleUnionTypeProperties>({
        transform: (value) => {
            switch (value.propertiesType) {
                case \\"samePropertiesAsObject\\":
                    return FernApi.SingleUnionTypeProperties.samePropertiesAsObject(value);
                case \\"singleProperty\\":
                    return FernApi.SingleUnionTypeProperties.singleProperty(value);
                case \\"noProperties\\":
                    return FernApi.SingleUnionTypeProperties.noProperties();
                default:
                    return value as FernApi.SingleUnionTypeProperties;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace SingleUnionTypeProperties {
    type Raw =
        | SingleUnionTypeProperties.SamePropertiesAsObject
        | SingleUnionTypeProperties.SingleProperty
        | SingleUnionTypeProperties.NoProperties;

    interface SamePropertiesAsObject extends serializers.DeclaredTypeName.Raw {
        _type: \\"samePropertiesAsObject\\";
    }

    interface SingleProperty extends serializers.SingleUnionTypeProperty.Raw {
        _type: \\"singleProperty\\";
    }

    interface NoProperties {
        _type: \\"noProperties\\";
    }
}
",
                        "name": "SingleUnionTypeProperties.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const SingleUnionTypeProperty: core.serialization.ObjectSchema<
    serializers.SingleUnionTypeProperty.Raw,
    FernApi.SingleUnionTypeProperty
> = core.serialization.objectWithoutOptionalProperties({
    name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
    type_: core.serialization.property(
        \\"type\\",
        core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference)
    ),
});

export declare namespace SingleUnionTypeProperty {
    interface Raw {
        name: serializers.NameAndWireValue.Raw;
        type: serializers.TypeReference.Raw;
    }
}
",
                        "name": "SingleUnionTypeProperty.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const Type: core.serialization.Schema<serializers.Type.Raw, FernApi.Type> = core.serialization
    .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
        alias: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).AliasTypeDeclaration),
        enum: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).EnumTypeDeclaration),
        object: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ObjectTypeDeclaration),
        union: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).UnionTypeDeclaration),
        undiscriminatedUnion: core.serialization.lazyObject(
            async () => (await import(\\"../../..\\")).UndiscriminatedUnionTypeDeclaration
        ),
    })
    .transform<FernApi.Type>({
        transform: (value) => {
            switch (value.type) {
                case \\"alias\\":
                    return FernApi.Type.alias(value);
                case \\"enum\\":
                    return FernApi.Type.enum(value);
                case \\"object\\":
                    return FernApi.Type.object(value);
                case \\"union\\":
                    return FernApi.Type.union(value);
                case \\"undiscriminatedUnion\\":
                    return FernApi.Type.undiscriminatedUnion(value);
                default:
                    return value as FernApi.Type;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace Type {
    type Raw = Type.Alias | Type.Enum | Type.Object | Type.Union | Type.UndiscriminatedUnion;

    interface Alias extends serializers.AliasTypeDeclaration.Raw {
        _type: \\"alias\\";
    }

    interface Enum extends serializers.EnumTypeDeclaration.Raw {
        _type: \\"enum\\";
    }

    interface Object extends serializers.ObjectTypeDeclaration.Raw {
        _type: \\"object\\";
    }

    interface Union extends serializers.UnionTypeDeclaration.Raw {
        _type: \\"union\\";
    }

    interface UndiscriminatedUnion extends serializers.UndiscriminatedUnionTypeDeclaration.Raw {
        _type: \\"undiscriminatedUnion\\";
    }
}
",
                        "name": "Type.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const TypeDeclaration: core.serialization.ObjectSchema<
    serializers.TypeDeclaration.Raw,
    FernApi.TypeDeclaration
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName),
        shape: core.serialization.lazy(async () => (await import(\\"../../..\\")).Type),
        examples: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ExampleType)
        ),
        referencedTypes: core.serialization.list(
            core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Declaration));

export declare namespace TypeDeclaration {
    interface Raw extends serializers.Declaration.Raw {
        name: serializers.DeclaredTypeName.Raw;
        shape: serializers.Type.Raw;
        examples: serializers.ExampleType.Raw[];
        referencedTypes: serializers.DeclaredTypeName.Raw[];
    }
}
",
                        "name": "TypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const TypeReference: core.serialization.Schema<serializers.TypeReference.Raw, FernApi.TypeReference> =
    core.serialization
        .union(core.serialization.discriminant(\\"type\\", \\"_type\\"), {
            container: core.serialization.object({
                container: core.serialization.lazy(async () => (await import(\\"../../..\\")).ContainerType),
            }),
            named: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName),
            primitive: core.serialization.object({
                primitive: core.serialization.lazy(async () => (await import(\\"../../..\\")).PrimitiveType),
            }),
            unknown: core.serialization.object({}),
        })
        .transform<FernApi.TypeReference>({
            transform: (value) => {
                switch (value.type) {
                    case \\"container\\":
                        return FernApi.TypeReference.container(value.container);
                    case \\"named\\":
                        return FernApi.TypeReference.named(value);
                    case \\"primitive\\":
                        return FernApi.TypeReference.primitive(value.primitive);
                    case \\"unknown\\":
                        return FernApi.TypeReference.unknown();
                    default:
                        return value as FernApi.TypeReference;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace TypeReference {
    type Raw = TypeReference.Container | TypeReference.Named | TypeReference.Primitive | TypeReference.Unknown;

    interface Container {
        _type: \\"container\\";
        container: serializers.ContainerType.Raw;
    }

    interface Named extends serializers.DeclaredTypeName.Raw {
        _type: \\"named\\";
    }

    interface Primitive {
        _type: \\"primitive\\";
        primitive: serializers.PrimitiveType.Raw;
    }

    interface Unknown {
        _type: \\"unknown\\";
    }
}
",
                        "name": "TypeReference.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const UndiscriminatedUnionMember: core.serialization.ObjectSchema<
    serializers.UndiscriminatedUnionMember.Raw,
    FernApi.UndiscriminatedUnionMember
> = core.serialization
    .objectWithoutOptionalProperties({
        type_: core.serialization.property(
            \\"type\\",
            core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace UndiscriminatedUnionMember {
    interface Raw extends serializers.WithDocs.Raw {
        type: serializers.TypeReference.Raw;
    }
}
",
                        "name": "UndiscriminatedUnionMember.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const UndiscriminatedUnionTypeDeclaration: core.serialization.ObjectSchema<
    serializers.UndiscriminatedUnionTypeDeclaration.Raw,
    FernApi.UndiscriminatedUnionTypeDeclaration
> = core.serialization.objectWithoutOptionalProperties({
    members: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).UndiscriminatedUnionMember)
    ),
});

export declare namespace UndiscriminatedUnionTypeDeclaration {
    interface Raw {
        members: serializers.UndiscriminatedUnionMember.Raw[];
    }
}
",
                        "name": "UndiscriminatedUnionTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const UnionTypeDeclaration: core.serialization.ObjectSchema<
    serializers.UnionTypeDeclaration.Raw,
    FernApi.UnionTypeDeclaration
> = core.serialization.objectWithoutOptionalProperties({
    discriminant: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).NameAndWireValue),
    extends_: core.serialization.property(
        \\"extends\\",
        core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).DeclaredTypeName))
    ),
    types: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).SingleUnionType)
    ),
    baseProperties: core.serialization.list(
        core.serialization.lazyObject(async () => (await import(\\"../../..\\")).ObjectProperty)
    ),
});

export declare namespace UnionTypeDeclaration {
    interface Raw {
        discriminant: serializers.NameAndWireValue.Raw;
        extends: serializers.DeclaredTypeName.Raw[];
        types: serializers.SingleUnionType.Raw[];
        baseProperties: serializers.ObjectProperty.Raw[];
    }
}
",
                        "name": "UnionTypeDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TypeDeclaration\\";
export * from \\"./DeclaredTypeName\\";
export * from \\"./Type\\";
export * from \\"./AliasTypeDeclaration\\";
export * from \\"./ResolvedTypeReference\\";
export * from \\"./ResolvedNamedType\\";
export * from \\"./ShapeType\\";
export * from \\"./EnumTypeDeclaration\\";
export * from \\"./EnumValue\\";
export * from \\"./ObjectTypeDeclaration\\";
export * from \\"./ObjectProperty\\";
export * from \\"./UnionTypeDeclaration\\";
export * from \\"./SingleUnionType\\";
export * from \\"./SingleUnionTypeProperties\\";
export * from \\"./SingleUnionTypeProperty\\";
export * from \\"./UndiscriminatedUnionTypeDeclaration\\";
export * from \\"./UndiscriminatedUnionMember\\";
export * from \\"./TypeReference\\";
export * from \\"./ContainerType\\";
export * from \\"./MapType\\";
export * from \\"./PrimitiveType\\";
export * from \\"./Literal\\";
export * from \\"./ExampleType\\";
export * from \\"./ExampleTypeShape\\";
export * from \\"./ExampleAliasType\\";
export * from \\"./ExampleEnumType\\";
export * from \\"./ExampleObjectType\\";
export * from \\"./ExampleObjectProperty\\";
export * from \\"./ExampleSingleUnionType\\";
export * from \\"./ExampleSingleUnionTypeProperties\\";
export * from \\"./ExampleTypeReference\\";
export * from \\"./ExampleTypeReferenceShape\\";
export * from \\"./ExampleContainer\\";
export * from \\"./ExampleKeyValuePair\\";
export * from \\"./ExamplePrimitive\\";
export * from \\"./ExampleNamedType\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "types",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const VariableDeclaration: core.serialization.ObjectSchema<
    serializers.VariableDeclaration.Raw,
    FernApi.VariableDeclaration
> = core.serialization
    .objectWithoutOptionalProperties({
        id: core.serialization.lazy(async () => (await import(\\"../../..\\")).VariableId),
        name: core.serialization.lazyObject(async () => (await import(\\"../../..\\")).Name),
        type_: core.serialization.property(
            \\"type\\",
            core.serialization.lazy(async () => (await import(\\"../../..\\")).TypeReference)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).WithDocs));

export declare namespace VariableDeclaration {
    interface Raw extends serializers.WithDocs.Raw {
        id: serializers.VariableId.Raw;
        name: serializers.Name.Raw;
        type: serializers.TypeReference.Raw;
    }
}
",
                        "name": "VariableDeclaration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import * as FernApi from \\"../../../../api\\";
import * as core from \\"../../../../core\\";

export const VariableId: core.serialization.Schema<serializers.VariableId.Raw, FernApi.VariableId> =
    core.serialization.string();

export declare namespace VariableId {
    type Raw = string;
}
",
                        "name": "VariableId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./VariableId\\";
export * from \\"./VariableDeclaration\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "variables",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "serialization",
        "type": "directory",
      },
    ],
    "name": "src",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"extendedDiagnostics\\": true,
        \\"strict\\": true,
        \\"target\\": \\"ES6\\",
        \\"module\\": \\"CommonJS\\",
        \\"moduleResolution\\": \\"node\\",
        \\"esModuleInterop\\": true,
        \\"skipLibCheck\\": true,
        \\"declaration\\": true,
        \\"noUnusedParameters\\": true,
        \\"outDir\\": \\"dist\\",
        \\"rootDir\\": \\"src\\",
        \\"baseUrl\\": \\"src\\"
    },
    \\"include\\": [
        \\"src\\"
    ],
    \\"exclude\\": []
}",
    "name": "tsconfig.json",
    "type": "file",
  },
]
`;
