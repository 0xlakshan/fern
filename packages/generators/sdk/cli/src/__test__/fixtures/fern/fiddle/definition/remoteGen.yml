types:
  RemoteGenJobId: string
  RemoteGenTaskId:
    type: string
    docs: |
      A remote gen job can be made up of several tasks.
      A task corresponds to an instance of a generator (in .fernrc.yml).
  GeneratorIdAndVersion:
    properties:
      id: string
      version: string

  GeneratorConfig:
    properties:
      id: string
      version: string
      customConfig: unknown
      willDownloadFiles: boolean
      outputs:
        type: GeneratorOutputs
        docs: Npm and Maven outputs default to fern registries.
  GeneratorConfigV2:
    properties:
      id: string
      version: string
      customConfig: unknown
      outputMode: OutputMode
  OutputMode:
    union:
      publish: PublishOutputMode
      publishV2:
        type: PublishOutputModeV2
        key: publishV2
      downloadFiles: {}
      github: GithubOutputMode

  PublishOutputMode:
    properties:
      registryOverrides: RegistryOverrides
  PublishOutputModeV2:
    union:
      npmOverride:
        type: optional<NpmOutput>
        key: npmOverride
      mavenOverride:
        type: optional<MavenOutput>
        key: mavenOverride
      postman: PostmanOutput
  RegistryOverrides:
    properties:
      npm: optional<NpmOutput>
      maven: optional<MavenOutput>
  GeneratorOutputs:
    properties:
      npm: optional<NpmOutput>
      maven: optional<MavenOutput>
  NpmOutput:
    properties:
      registryUrl: string
      packageName: string
      token: string
  MavenOutput:
    properties:
      registryUrl: string
      username: string
      password: string
      coordinate: string
  PostmanOutput:
    properties:
      apiKey: string
      workspaceId: string

  GithubOutputMode:
    properties:
      owner: string
      repo: string
      publishInfo: optional<GithubPublishInfo>
  GithubPublishInfo:
    union:
      npm: NpmOutputWithOptionalToken
      maven: MavenOutputWithOptionalCreds
      postman: PostmanOutput
  NpmOutputWithOptionalToken:
    properties:
      registryUrl: string
      packageName: string
      token: optional<string>
  MavenOutputWithOptionalCreds:
    properties:
      registryUrl: string
      coordinate: string
      credentials: optional<UsernamePassword>
  UsernamePassword:
    properties:
      username: string
      password: string
  Task:
    properties:
      status: TaskStatus
      packages: list<Package>
      logs: list<TaskLog>
  TaskStatus:
    discriminant:
      value: _type
      name: type
    union:
      notStarted: {}
      running: {}
      failed: FailedTaskStatus
      finished: FinishedTaskStatus
  FailedTaskStatus:
    properties:
      message: string
      s3PreSignedReadUrl:
        type: optional<string>
        docs: Pre-signed URL that points to a zipfile containing generated code.
  FinishedTaskStatus:
    properties:
      hasFilesToDownload:
        type: boolean
        docs: This field is deprecated.
      s3PreSignedReadUrl:
        type: string
        docs: Deprecated (use v2). Pre-signed URL that points to a zipfile containing
          generated code.
      s3PreSignedReadUrlV2:
        type: optional<string>
        docs: Pre-signed URL that points to a zipfile containing generated code.
  TaskLog:
    properties:
      level: LogLevel
      message: string
  LogLevel:
    enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR

  Package:
    properties:
      coordinate: PackageCoordinate
      status: PackagePublishStatus
  PackagePublishStatus:
    enum:
      - NOT_STARTED_PUBLISHING
      - PUBLISHING
      - PUBLISHED
      - FAILED_TO_PUBLISH
  PackageCoordinate:
    discriminant:
      value: _type
      name: type
    union:
      npm: NpmCoordinate
      maven: MavenCoordinate
      pypi: PypiCoordinate
  NpmCoordinate:
    properties:
      name: string
      version: string
  MavenCoordinate:
    properties:
      group: string
      artifact: string
      version: string
  PypiCoordinate:
    properties:
      name: string
      version: string

  CreateJobResponse:
    properties:
      jobId: RemoteGenJobId
      taskIds:
        type: list<RemoteGenTaskId>
        docs: The order of this list corresponds to the order of the generators supplied
          in the request.
  GeneratorsDoNotExistErrorBodyType:
    properties:
      nonExistentGenerators: list<GeneratorIdAndVersion>

  CannotPublishToNpmScopeDetails:
    properties:
      generatorId: string
      invalidScope: string
      validScope: string
  CannotPublishToMavenGroupDetails:
    properties:
      generatorId: string
      invalidGroup: string
      validGroup: string
  InsufficientPermissionsDetails:
    properties:
      dummy: optional<string>

errors:
  IllegalApiNameError:
    status-code: 400
  GeneratorsDoNotExistError:
    type: GeneratorsDoNotExistErrorBodyType
    status-code: 400
  CannotPublishToNpmScope:
    type: CannotPublishToNpmScopeDetails
    status-code: 403
  CannotPublishToMavenGroup:
    type: CannotPublishToMavenGroupDetails
    status-code: 403
  InsufficientPermissions:
    type: InsufficientPermissionsDetails
    status-code: 403

service:
  auth: true
  base-path: /api/remote-gen
  endpoints:
    createJob:
      method: POST
      path: /create-job
      request:
        name: CreateJobRequest
        body:
          properties:
            apiName: string
            organizationName: string
            version: optional<string>
            generators: list<GeneratorConfig>
      response: CreateJobResponse
      errors:
        - IllegalApiNameError
        - GeneratorsDoNotExistError
        - CannotPublishToNpmScope
        - CannotPublishToMavenGroup
        - InsufficientPermissions

    createJobV2:
      method: POST
      path: /create-job-v2
      request:
        name: CreateJobRequestV2
        body:
          properties:
            apiName: string
            organizationName: string
            version: optional<string>
            generators: list<GeneratorConfigV2>
            uploadToS3:
              type: optional<boolean>
              docs: defaults to False
      response: CreateJobResponse
      errors:
        - IllegalApiNameError
        - GeneratorsDoNotExistError
        - CannotPublishToNpmScope
        - CannotPublishToMavenGroup
        - InsufficientPermissions

    #        startJob:
    #          method: POST
    #          path: /jobs/{jobId}/start
    #          path-parameters:
    #            jobId: RemoteGenJobId
    #          request: File

    getJobStatus:
      method: POST
      path: /jobs/{jobId}/status
      path-parameters:
        jobId: RemoteGenJobId
      response: map<RemoteGenTaskId, Task>
#        downloadFiles:
#          method: POST
#          path: /tasks/{taskId}/download
#          path-parameters:
#            jobId: RemoteGenJobId
#          response: File # Should be file download
