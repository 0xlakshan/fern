// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runGenerator fiddle 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": "// this is needed for older versions of TypeScript
// that don't read the \\"exports\\" field in package.json
export * from \\"./types/core\\";
            ",
        "name": "core.d.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "\\"use strict\\";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module2) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module2.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module2.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module2.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module2.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module2) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module2.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module2.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js
var require_null = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js\\"(exports, module2) {
    module2.exports = null;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_null()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module2.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module2) {
    module2.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module2) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module2.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module2.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module2) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module2.exports = axios2;
    module2.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module2) {
    module2.exports = require_axios();
  }
});

// src/core/index.ts
var core_exports = {};
__export(core_exports, {
  Supplier: () => Supplier,
  fetcher: () => fetcher,
  serialization: () => schemas_exports
});
module.exports = __toCommonJS(core_exports);

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});

// src/core/schemas/Schema.ts
var SchemaType = {
  DATE: \\"date\\",
  ENUM: \\"enum\\",
  LIST: \\"list\\",
  STRING_LITERAL: \\"stringLiteral\\",
  OBJECT: \\"object\\",
  ANY: \\"any\\",
  BOOLEAN: \\"boolean\\",
  NUMBER: \\"number\\",
  STRING: \\"string\\",
  UNKNOWN: \\"unknown\\",
  RECORD: \\"record\\",
  SET: \\"set\\",
  UNION: \\"union\\",
  OPTIONAL: \\"optional\\"
};

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError = class extends Error {
  constructor(errors) {
    super(errors.map(stringifyValidationError).join(\\"; \\"));
    this.errors = errors;
    Object.setPrototypeOf(this, JsonError.prototype);
  }
};

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError = class extends Error {
  constructor(errors) {
    super(errors.map(stringifyValidationError).join(\\"; \\"));
    this.errors = errors;
    Object.setPrototypeOf(this, ParseError.prototype);
  }
};

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/builders/date/date.ts
var ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}

// src/core/schemas/utils/isPlainObject.ts
var NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}

// src/core/schemas/builders/primitives/any.ts
var any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));

// src/core/schemas/builders/primitives/boolean.ts
var boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
  if (typeof value === \\"boolean\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a boolean\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/number.ts
var number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
  if (typeof value === \\"number\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a number\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/string.ts
var string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
  if (typeof value === \\"string\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a string\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}

// src/core/fetcher/Fetcher.ts
var import_axios = __toESM(require_axios2());
var fetcher = async (args) => {
  const headers = {
    \\"Content-Type\\": \\"application/json\\"
  };
  if (args.headers != null) {
    for (const [key, value] of Object.entries(args.headers)) {
      if (value != null) {
        headers[key] = value;
      }
    }
  }
  try {
    const response = await (0, import_axios.default)({
      url: args.url,
      params: args.queryParameters,
      method: args.method,
      headers,
      data: args.body,
      validateStatus: () => true,
      transformResponse: (response2) => response2,
      timeout: args.timeoutMs ?? 6e4,
      transitional: {
        clarifyTimeoutError: true
      },
      withCredentials: args.withCredentials
    });
    let body;
    if (response.data != null && response.data.length > 0) {
      try {
        body = JSON.parse(response.data) ?? void 0;
      } catch {
        return {
          ok: false,
          error: {
            reason: \\"non-json\\",
            statusCode: response.status,
            rawBody: response.data
          }
        };
      }
    }
    if (response.status >= 200 && response.status < 300) {
      return {
        ok: true,
        body
      };
    } else {
      return {
        ok: false,
        error: {
          reason: \\"status-code\\",
          statusCode: response.status,
          body
        }
      };
    }
  } catch (error) {
    if (error.code === \\"ETIMEDOUT\\") {
      return {
        ok: false,
        error: {
          reason: \\"timeout\\"
        }
      };
    }
    return {
      ok: false,
      error: {
        reason: \\"unknown\\",
        errorMessage: error.message
      }
    };
  }
};

// src/core/fetcher/Supplier.ts
var Supplier = {
  get: async (supplier) => {
    if (typeof supplier === \\"function\\") {
      return supplier();
    } else {
      return supplier;
    }
  }
};
",
                    "name": "core.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

// src/api/resources/remoteGen/types/RemoteGenJobId.ts
function RemoteGenJobId(value) {
  return value;
}
var init_RemoteGenJobId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/RemoteGenTaskId.ts
function RemoteGenTaskId(value) {
  return value;
}
var init_RemoteGenTaskId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts
var init_GeneratorIdAndVersion = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfig.ts
var init_GeneratorConfig = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfigV2.ts
var init_GeneratorConfigV2 = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/OutputMode.ts
var OutputMode;
var init_OutputMode = __esm({
  \\"src/api/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    OutputMode = {
      publish: (value) => {
        return {
          ...value,
          type: \\"publish\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      publishV2: (value) => {
        return {
          publishV2: value,
          type: \\"publishV2\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      downloadFiles: () => {
        return {
          type: \\"downloadFiles\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      github: (value) => {
        return {
          ...value,
          type: \\"github\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"publish\\":
            return visitor.publish(value);
          case \\"publishV2\\":
            return visitor.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return visitor.downloadFiles();
          case \\"github\\":
            return visitor.github(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/PublishOutputMode.ts
var init_PublishOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV2;
var init_PublishOutputModeV2 = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    PublishOutputModeV2 = {
      npmOverride: (value) => {
        return {
          npmOverride: value,
          type: \\"npmOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      mavenOverride: (value) => {
        return {
          mavenOverride: value,
          type: \\"mavenOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return visitor.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return visitor.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/RegistryOverrides.ts
var init_RegistryOverrides = __esm({
  \\"src/api/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorOutputs.ts
var init_GeneratorOutputs = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/NpmOutput.ts
var init_NpmOutput = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutput.ts
var init_MavenOutput = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PostmanOutput.ts
var init_PostmanOutput = __esm({
  \\"src/api/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubOutputMode.ts
var init_GithubOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo;
var init_GithubPublishInfo = __esm({
  \\"src/api/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    GithubPublishInfo = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var init_NpmOutputWithOptionalToken = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var init_MavenOutputWithOptionalCreds = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/UsernamePassword.ts
var init_UsernamePassword = __esm({
  \\"src/api/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/Task.ts
var init_Task = __esm({
  \\"src/api/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskStatus.ts
var TaskStatus;
var init_TaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    TaskStatus = {
      notStarted: () => {
        return {
          type: \\"notStarted\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      running: () => {
        return {
          type: \\"running\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      failed: (value) => {
        return {
          ...value,
          type: \\"failed\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      finished: (value) => {
        return {
          ...value,
          type: \\"finished\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"notStarted\\":
            return visitor.notStarted();
          case \\"running\\":
            return visitor.running();
          case \\"failed\\":
            return visitor.failed(value);
          case \\"finished\\":
            return visitor.finished(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/FailedTaskStatus.ts
var init_FailedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/FinishedTaskStatus.ts
var init_FinishedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskLog.ts
var init_TaskLog = __esm({
  \\"src/api/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/LogLevel.ts
var LogLevel;
var init_LogLevel = __esm({
  \\"src/api/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    LogLevel = {
      Debug: \\"DEBUG\\",
      Info: \\"INFO\\",
      Warn: \\"WARN\\",
      Error: \\"ERROR\\"
    };
  }
});

// src/api/resources/remoteGen/types/Package.ts
var init_Package = __esm({
  \\"src/api/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus;
var init_PackagePublishStatus = __esm({
  \\"src/api/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    PackagePublishStatus = {
      NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\",
      Publishing: \\"PUBLISHING\\",
      Published: \\"PUBLISHED\\",
      FailedToPublish: \\"FAILED_TO_PUBLISH\\"
    };
  }
});

// src/api/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate;
var init_PackageCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    PackageCoordinate = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      pypi: (value) => {
        return {
          ...value,
          type: \\"pypi\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"pypi\\":
            return visitor.pypi(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmCoordinate.ts
var init_NpmCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenCoordinate.ts
var init_MavenCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PypiCoordinate.ts
var init_PypiCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CreateJobResponse.ts
var init_CreateJobResponse = __esm({
  \\"src/api/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var init_GeneratorsDoNotExistErrorBodyType = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var init_CannotPublishToNpmScopeDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var init_CannotPublishToMavenGroupDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var init_InsufficientPermissionsDetails = __esm({
  \\"src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/index.ts
var init_types = __esm({
  \\"src/api/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId();
    init_RemoteGenTaskId();
    init_GeneratorIdAndVersion();
    init_GeneratorConfig();
    init_GeneratorConfigV2();
    init_OutputMode();
    init_PublishOutputMode();
    init_PublishOutputModeV2();
    init_RegistryOverrides();
    init_GeneratorOutputs();
    init_NpmOutput();
    init_MavenOutput();
    init_PostmanOutput();
    init_GithubOutputMode();
    init_GithubPublishInfo();
    init_NpmOutputWithOptionalToken();
    init_MavenOutputWithOptionalCreds();
    init_UsernamePassword();
    init_Task();
    init_TaskStatus();
    init_FailedTaskStatus();
    init_FinishedTaskStatus();
    init_TaskLog();
    init_LogLevel();
    init_Package();
    init_PackagePublishStatus();
    init_PackageCoordinate();
    init_NpmCoordinate();
    init_MavenCoordinate();
    init_PypiCoordinate();
    init_CreateJobResponse();
    init_GeneratorsDoNotExistErrorBodyType();
    init_CannotPublishToNpmScopeDetails();
    init_CannotPublishToMavenGroupDetails();
    init_InsufficientPermissionsDetails();
  }
});

// src/api/resources/remoteGen/client/requests/index.ts
var init_requests = __esm({
  \\"src/api/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/client/createJob.ts
var createJob_exports = {};
__export(createJob_exports, {
  Error: () => Error2
});
var Error2;
var init_createJob = __esm({
  \\"src/api/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    Error2 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports = {};
__export(createJobV2_exports, {
  Error: () => Error3
});
var Error3;
var init_createJobV2 = __esm({
  \\"src/api/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    Error3 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports = {};
__export(getJobStatus_exports, {
  Error: () => Error4
});
var Error4;
var init_getJobStatus = __esm({
  \\"src/api/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    Error4 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.getJobStatus.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/index.ts
var init_client = __esm({
  \\"src/api/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_requests();
    init_createJob();
    init_createJobV2();
    init_getJobStatus();
  }
});

// src/api/resources/remoteGen/index.ts
var remoteGen_exports = {};
__export(remoteGen_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  createJob: () => createJob_exports,
  createJobV2: () => createJobV2_exports,
  getJobStatus: () => getJobStatus_exports
});
var init_remoteGen = __esm({
  \\"src/api/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types();
    init_client();
  }
});

// src/api/resources/fiddle/client/test.ts
var test_exports = {};
__export(test_exports, {
  Error: () => Error5
});
var Error5;
var init_test = __esm({
  \\"src/api/resources/fiddle/client/test.ts\\"() {
    \\"use strict\\";
    init_src();
    Error5 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.fiddle.test.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/fiddle/client/index.ts
var init_client2 = __esm({
  \\"src/api/resources/fiddle/client/index.ts\\"() {
    \\"use strict\\";
    init_test();
  }
});

// src/api/resources/fiddle/index.ts
var fiddle_exports = {};
__export(fiddle_exports, {
  test: () => test_exports
});
var init_fiddle = __esm({
  \\"src/api/resources/fiddle/index.ts\\"() {
    \\"use strict\\";
    init_client2();
  }
});

// src/api/resources/health/client/status.ts
var status_exports = {};
__export(status_exports, {
  Error: () => Error6
});
var Error6;
var init_status = __esm({
  \\"src/api/resources/health/client/status.ts\\"() {
    \\"use strict\\";
    init_src();
    Error6 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.health.status.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/health/client/index.ts
var init_client3 = __esm({
  \\"src/api/resources/health/client/index.ts\\"() {
    \\"use strict\\";
    init_status();
  }
});

// src/api/resources/health/index.ts
var health_exports = {};
__export(health_exports, {
  status: () => status_exports
});
var init_health = __esm({
  \\"src/api/resources/health/index.ts\\"() {
    \\"use strict\\";
    init_client3();
  }
});

// src/api/resources/index.ts
var init_resources = __esm({
  \\"src/api/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen();
    init_types();
    init_fiddle();
    init_health();
    init_requests();
  }
});

// src/api/index.ts
var api_exports = {};
__export(api_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  fiddle: () => fiddle_exports,
  health: () => health_exports,
  remoteGen: () => remoteGen_exports
});
var init_api = __esm({
  \\"src/api/index.ts\\"() {
    \\"use strict\\";
    init_resources();
  }
});

// src/core/schemas/Schema.ts
var SchemaType;
var init_Schema = __esm({
  \\"src/core/schemas/Schema.ts\\"() {
    \\"use strict\\";
    SchemaType = {
      DATE: \\"date\\",
      ENUM: \\"enum\\",
      LIST: \\"list\\",
      STRING_LITERAL: \\"stringLiteral\\",
      OBJECT: \\"object\\",
      ANY: \\"any\\",
      BOOLEAN: \\"boolean\\",
      NUMBER: \\"number\\",
      STRING: \\"string\\",
      UNKNOWN: \\"unknown\\",
      RECORD: \\"record\\",
      SET: \\"set\\",
      UNION: \\"union\\",
      OPTIONAL: \\"optional\\"
    };
  }
});

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
var init_stringifyValidationErrors = __esm({
  \\"src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError;
var init_JsonError = __esm({
  \\"src/core/schemas/builders/schema-utils/JsonError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    JsonError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError;
var init_ParseError = __esm({
  \\"src/core/schemas/builders/schema-utils/ParseError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    ParseError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_getSchemaUtils = __esm({
  \\"src/core/schemas/builders/schema-utils/getSchemaUtils.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/schema-utils/index.ts
var init_schema_utils = __esm({
  \\"src/core/schemas/builders/schema-utils/index.ts\\"() {
    \\"use strict\\";
    init_getSchemaUtils();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/date/date.ts
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var ISO_8601_REGEX;
var init_date = __esm({
  \\"src/core/schemas/builders/date/date.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
    ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
  }
});

// src/core/schemas/builders/date/index.ts
var init_date2 = __esm({
  \\"src/core/schemas/builders/date/index.ts\\"() {
    \\"use strict\\";
    init_date();
  }
});

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}
var init_createIdentitySchemaCreator = __esm({
  \\"src/core/schemas/utils/createIdentitySchemaCreator.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_enum = __esm({
  \\"src/core/schemas/builders/enum/enum.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/enum/index.ts
var init_enum2 = __esm({
  \\"src/core/schemas/builders/enum/index.ts\\"() {
    \\"use strict\\";
    init_enum();
  }
});

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}
var init_lazy = __esm({
  \\"src/core/schemas/builders/lazy/lazy.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}
var init_entries = __esm({
  \\"src/core/schemas/utils/entries.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
var init_filterObject = __esm({
  \\"src/core/schemas/utils/filterObject.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/isPlainObject.ts
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}
var NOT_AN_OBJECT_ERROR_MESSAGE;
var init_isPlainObject = __esm({
  \\"src/core/schemas/utils/isPlainObject.ts\\"() {
    \\"use strict\\";
    NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
  }
});

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}
var init_keys = __esm({
  \\"src/core/schemas/utils/keys.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}
var init_partition = __esm({
  \\"src/core/schemas/utils/partition.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}
var init_getObjectLikeUtils = __esm({
  \\"src/core/schemas/builders/object-like/getObjectLikeUtils.ts\\"() {
    \\"use strict\\";
    init_filterObject();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/object-like/index.ts
var init_object_like = __esm({
  \\"src/core/schemas/builders/object-like/index.ts\\"() {
    \\"use strict\\";
    init_getObjectLikeUtils();
  }
});

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}
var init_property = __esm({
  \\"src/core/schemas/builders/object/property.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}
var init_object = __esm({
  \\"src/core/schemas/builders/object/object.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_filterObject();
    init_isPlainObject();
    init_keys();
    init_partition();
    init_object_like();
    init_schema_utils();
    init_property();
  }
});

// src/core/schemas/builders/object/index.ts
var init_object2 = __esm({
  \\"src/core/schemas/builders/object/index.ts\\"() {
    \\"use strict\\";
    init_object();
    init_property();
  }
});

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
var init_lazyObject = __esm({
  \\"src/core/schemas/builders/lazy/lazyObject.ts\\"() {
    \\"use strict\\";
    init_object2();
    init_object_like();
    init_schema_utils();
    init_lazy();
  }
});

// src/core/schemas/builders/lazy/index.ts
var init_lazy2 = __esm({
  \\"src/core/schemas/builders/lazy/index.ts\\"() {
    \\"use strict\\";
    init_lazy();
    init_lazyObject();
  }
});

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}
var init_list = __esm({
  \\"src/core/schemas/builders/list/list.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
  }
});

// src/core/schemas/builders/list/index.ts
var init_list2 = __esm({
  \\"src/core/schemas/builders/list/index.ts\\"() {
    \\"use strict\\";
    init_list();
  }
});

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_stringLiteral = __esm({
  \\"src/core/schemas/builders/literals/stringLiteral.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/literals/index.ts
var init_literals = __esm({
  \\"src/core/schemas/builders/literals/index.ts\\"() {
    \\"use strict\\";
    init_stringLiteral();
  }
});

// src/core/schemas/builders/primitives/any.ts
var any;
var init_any = __esm({
  \\"src/core/schemas/builders/primitives/any.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/boolean.ts
var boolean;
var init_boolean = __esm({
  \\"src/core/schemas/builders/primitives/boolean.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
      if (typeof value === \\"boolean\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a boolean\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/number.ts
var number;
var init_number = __esm({
  \\"src/core/schemas/builders/primitives/number.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
      if (typeof value === \\"number\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a number\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/string.ts
var string;
var init_string = __esm({
  \\"src/core/schemas/builders/primitives/string.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
      if (typeof value === \\"string\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a string\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown;
var init_unknown = __esm({
  \\"src/core/schemas/builders/primitives/unknown.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/index.ts
var init_primitives = __esm({
  \\"src/core/schemas/builders/primitives/index.ts\\"() {
    \\"use strict\\";
    init_any();
    init_boolean();
    init_number();
    init_string();
    init_unknown();
  }
});

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}
var init_record = __esm({
  \\"src/core/schemas/builders/record/record.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/record/index.ts
var init_record2 = __esm({
  \\"src/core/schemas/builders/record/index.ts\\"() {
    \\"use strict\\";
    init_record();
  }
});

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_set = __esm({
  \\"src/core/schemas/builders/set/set.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_list2();
    init_schema_utils();
  }
});

// src/core/schemas/builders/set/index.ts
var init_set2 = __esm({
  \\"src/core/schemas/builders/set/index.ts\\"() {
    \\"use strict\\";
    init_set();
  }
});

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}
var init_discriminant = __esm({
  \\"src/core/schemas/builders/union/discriminant.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}
var init_union = __esm({
  \\"src/core/schemas/builders/union/union.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_isPlainObject();
    init_keys();
    init_enum2();
    init_object_like();
    init_schema_utils();
  }
});

// src/core/schemas/builders/union/index.ts
var init_union2 = __esm({
  \\"src/core/schemas/builders/union/index.ts\\"() {
    \\"use strict\\";
    init_discriminant();
    init_union();
  }
});

// src/core/schemas/builders/index.ts
var init_builders = __esm({
  \\"src/core/schemas/builders/index.ts\\"() {
    \\"use strict\\";
    init_date2();
    init_enum2();
    init_lazy2();
    init_list2();
    init_literals();
    init_object2();
    init_object_like();
    init_primitives();
    init_record2();
    init_schema_utils();
    init_set2();
    init_union2();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});
var init_schemas = __esm({
  \\"src/core/schemas/index.ts\\"() {
    \\"use strict\\";
    init_builders();
    init_Schema();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module2) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module2.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module2.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module2.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module2.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module2) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module2.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module2.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js
var require_null = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js\\"(exports, module2) {
    module2.exports = null;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_null()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module2.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module2) {
    module2.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module2) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module2.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module2.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module2) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module2.exports = axios2;
    module2.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module2) {
    module2.exports = require_axios();
  }
});

// src/core/fetcher/Fetcher.ts
var import_axios, fetcher;
var init_Fetcher = __esm({
  \\"src/core/fetcher/Fetcher.ts\\"() {
    \\"use strict\\";
    import_axios = __toESM(require_axios2());
    fetcher = async (args) => {
      const headers = {
        \\"Content-Type\\": \\"application/json\\"
      };
      if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
          if (value != null) {
            headers[key] = value;
          }
        }
      }
      try {
        const response = await (0, import_axios.default)({
          url: args.url,
          params: args.queryParameters,
          method: args.method,
          headers,
          data: args.body,
          validateStatus: () => true,
          transformResponse: (response2) => response2,
          timeout: args.timeoutMs ?? 6e4,
          transitional: {
            clarifyTimeoutError: true
          },
          withCredentials: args.withCredentials
        });
        let body;
        if (response.data != null && response.data.length > 0) {
          try {
            body = JSON.parse(response.data) ?? void 0;
          } catch {
            return {
              ok: false,
              error: {
                reason: \\"non-json\\",
                statusCode: response.status,
                rawBody: response.data
              }
            };
          }
        }
        if (response.status >= 200 && response.status < 300) {
          return {
            ok: true,
            body
          };
        } else {
          return {
            ok: false,
            error: {
              reason: \\"status-code\\",
              statusCode: response.status,
              body
            }
          };
        }
      } catch (error) {
        if (error.code === \\"ETIMEDOUT\\") {
          return {
            ok: false,
            error: {
              reason: \\"timeout\\"
            }
          };
        }
        return {
          ok: false,
          error: {
            reason: \\"unknown\\",
            errorMessage: error.message
          }
        };
      }
    };
  }
});

// src/core/fetcher/Supplier.ts
var init_Supplier = __esm({
  \\"src/core/fetcher/Supplier.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/fetcher/index.ts
var init_fetcher = __esm({
  \\"src/core/fetcher/index.ts\\"() {
    \\"use strict\\";
    init_Fetcher();
    init_Supplier();
  }
});

// src/core/index.ts
var init_core = __esm({
  \\"src/core/index.ts\\"() {
    \\"use strict\\";
    init_schemas();
    init_fetcher();
  }
});

// src/api/resources/fiddle/client/Client.ts
var FiddleService;
var init_Client = __esm({
  \\"src/api/resources/fiddle/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    FiddleService = class {
      constructor(options) {
        this.options = options;
      }
      async test() {
        const _response = await fetcher({
          url: this.options.environment,
          method: \\"GET\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: void 0
          };
        }
        return {
          ok: false,
          error: api_exports.fiddle.test.Error._unknown(_response.error)
        };
      }
    };
  }
});

// .yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  \\".yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js\\"(exports, module2) {
    (function(name, context, definition) {
      if (typeof module2 !== \\"undefined\\" && module2.exports)
        module2.exports = definition();
      else if (typeof define === \\"function\\" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })(\\"urljoin\\", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return \\"\\";
        }
        if (typeof strArray[0] !== \\"string\\") {
          throw new TypeError(\\"Url must be a string. Received \\" + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\\\\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\\\\/\\\\/\\\\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1:///\\");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1://\\");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== \\"string\\") {
            throw new TypeError(\\"Url must be a string. Received \\" + component);
          }
          if (component === \\"\\") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\\\\/]+/, \\"\\");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\\\\/]+$/, \\"\\");
          } else {
            component = component.replace(/[\\\\/]+$/, \\"/\\");
          }
          resultArray.push(component);
        }
        var str = resultArray.join(\\"/\\");
        str = str.replace(/\\\\/(\\\\?|&|#[^!])/g, \\"$1\\");
        var parts = str.split(\\"?\\");
        str = parts.shift() + (parts.length > 0 ? \\"?\\" : \\"\\") + parts.join(\\"&\\");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === \\"object\\") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// src/api/resources/health/client/Client.ts
var import_url_join, Health;
var init_Client2 = __esm({
  \\"src/api/resources/health/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join = __toESM(require_url_join());
    Health = class {
      constructor(options) {
        this.options = options;
      }
      async status() {
        const _response = await fetcher({
          url: (0, import_url_join.default)(this.options.environment, \\"/api/health\\"),
          method: \\"GET\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: void 0
          };
        }
        return {
          ok: false,
          error: api_exports.health.status.Error._unknown(_response.error)
        };
      }
    };
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenJobId.ts
var RemoteGenJobId2;
var init_RemoteGenJobId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenJobId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenJobId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts
var RemoteGenTaskId2;
var init_RemoteGenTaskId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenTaskId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenTaskId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts
var GeneratorIdAndVersion;
var init_GeneratorIdAndVersion2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorIdAndVersion = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfig.ts
var GeneratorConfig;
var init_GeneratorConfig2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfig = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      willDownloadFiles: schemas_exports.boolean(),
      outputs: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorOutputs)
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts
var GeneratorConfigV2;
var init_GeneratorConfigV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfigV2 = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      outputMode: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).OutputMode)
    });
  }
});

// src/serialization/resources/remoteGen/types/OutputMode.ts
var OutputMode2;
var init_OutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    OutputMode2 = schemas_exports.union(\\"type\\", {
      publish: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputMode),
      publishV2: schemas_exports.object({
        publishV2: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputModeV2)
      }),
      downloadFiles: schemas_exports.object({}),
      github: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubOutputMode)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"publish\\":
            return api_exports.OutputMode.publish(value);
          case \\"publishV2\\":
            return api_exports.OutputMode.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return api_exports.OutputMode.downloadFiles();
          case \\"github\\":
            return api_exports.OutputMode.github(value);
          default:
            return api_exports.OutputMode._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputMode.ts
var PublishOutputMode;
var init_PublishOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    PublishOutputMode = schemas_exports.object({
      registryOverrides: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RegistryOverrides)
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV22;
var init_PublishOutputModeV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PublishOutputModeV22 = schemas_exports.union(\\"type\\", {
      npmOverride: schemas_exports.object({
        npmOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional()
      }),
      mavenOverride: schemas_exports.object({
        mavenOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
      }),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return api_exports.PublishOutputModeV2.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return api_exports.PublishOutputModeV2.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return api_exports.PublishOutputModeV2.postman(value);
          default:
            return api_exports.PublishOutputModeV2._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RegistryOverrides.ts
var RegistryOverrides;
var init_RegistryOverrides2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
    init_core();
    RegistryOverrides = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorOutputs.ts
var GeneratorOutputs;
var init_GeneratorOutputs2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorOutputs = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutput.ts
var NpmOutput;
var init_NpmOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutput.ts
var MavenOutput;
var init_MavenOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      username: schemas_exports.string(),
      password: schemas_exports.string(),
      coordinate: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PostmanOutput.ts
var PostmanOutput;
var init_PostmanOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    PostmanOutput = schemas_exports.object({
      apiKey: schemas_exports.string(),
      workspaceId: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubOutputMode.ts
var GithubOutputMode;
var init_GithubOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    GithubOutputMode = schemas_exports.object({
      owner: schemas_exports.string(),
      repo: schemas_exports.string(),
      publishInfo: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubPublishInfo).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo2;
var init_GithubPublishInfo2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    GithubPublishInfo2 = schemas_exports.union(\\"type\\", {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutputWithOptionalToken),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutputWithOptionalCreds),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.GithubPublishInfo.npm(value);
          case \\"maven\\":
            return api_exports.GithubPublishInfo.maven(value);
          case \\"postman\\":
            return api_exports.GithubPublishInfo.postman(value);
          default:
            return api_exports.GithubPublishInfo._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var NpmOutputWithOptionalToken;
var init_NpmOutputWithOptionalToken2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutputWithOptionalToken = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var MavenOutputWithOptionalCreds;
var init_MavenOutputWithOptionalCreds2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutputWithOptionalCreds = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      coordinate: schemas_exports.string(),
      credentials: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).UsernamePassword).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/UsernamePassword.ts
var UsernamePassword;
var init_UsernamePassword2 = __esm({
  \\"src/serialization/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
    init_core();
    UsernamePassword = schemas_exports.object({
      username: schemas_exports.string(),
      password: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/Task.ts
var Task;
var init_Task2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
    init_core();
    Task = schemas_exports.object({
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskStatus),
      packages: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Package)),
      logs: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskLog))
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskStatus.ts
var TaskStatus2;
var init_TaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    TaskStatus2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      notStarted: schemas_exports.object({}),
      running: schemas_exports.object({}),
      failed: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FailedTaskStatus),
      finished: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FinishedTaskStatus)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"notStarted\\":
            return api_exports.TaskStatus.notStarted();
          case \\"running\\":
            return api_exports.TaskStatus.running();
          case \\"failed\\":
            return api_exports.TaskStatus.failed(value);
          case \\"finished\\":
            return api_exports.TaskStatus.finished(value);
          default:
            return api_exports.TaskStatus._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/FailedTaskStatus.ts
var FailedTaskStatus;
var init_FailedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FailedTaskStatus = schemas_exports.object({
      message: schemas_exports.string(),
      s3PreSignedReadUrl: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts
var FinishedTaskStatus;
var init_FinishedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FinishedTaskStatus = schemas_exports.object({
      hasFilesToDownload: schemas_exports.boolean(),
      s3PreSignedReadUrl: schemas_exports.string(),
      s3PreSignedReadUrlV2: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskLog.ts
var TaskLog;
var init_TaskLog2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
    init_core();
    TaskLog = schemas_exports.object({
      level: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).LogLevel),
      message: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/LogLevel.ts
var LogLevel2;
var init_LogLevel2 = __esm({
  \\"src/serialization/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    init_core();
    LogLevel2 = schemas_exports.enum_([
      \\"DEBUG\\",
      \\"INFO\\",
      \\"WARN\\",
      \\"ERROR\\"
    ]);
  }
});

// src/serialization/resources/remoteGen/types/Package.ts
var Package;
var init_Package2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
    init_core();
    Package = schemas_exports.object({
      coordinate: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackageCoordinate),
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackagePublishStatus)
    });
  }
});

// src/serialization/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus2;
var init_PackagePublishStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    PackagePublishStatus2 = schemas_exports.enum_([\\"NOT_STARTED_PUBLISHING\\", \\"PUBLISHING\\", \\"PUBLISHED\\", \\"FAILED_TO_PUBLISH\\"]);
  }
});

// src/serialization/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate2;
var init_PackageCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PackageCoordinate2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmCoordinate),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenCoordinate),
      pypi: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PypiCoordinate)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.PackageCoordinate.npm(value);
          case \\"maven\\":
            return api_exports.PackageCoordinate.maven(value);
          case \\"pypi\\":
            return api_exports.PackageCoordinate.pypi(value);
          default:
            return api_exports.PackageCoordinate._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmCoordinate.ts
var NpmCoordinate;
var init_NpmCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenCoordinate.ts
var MavenCoordinate;
var init_MavenCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenCoordinate = schemas_exports.object({
      group: schemas_exports.string(),
      artifact: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PypiCoordinate.ts
var PypiCoordinate;
var init_PypiCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    PypiCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CreateJobResponse.ts
var CreateJobResponse;
var init_CreateJobResponse2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobResponse = schemas_exports.object({
      jobId: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenJobId),
      taskIds: schemas_exports.list(schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId))
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var GeneratorsDoNotExistErrorBodyType;
var init_GeneratorsDoNotExistErrorBodyType2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorsDoNotExistErrorBodyType = schemas_exports.object({
      nonExistentGenerators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorIdAndVersion)
      )
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var CannotPublishToNpmScopeDetails;
var init_CannotPublishToNpmScopeDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToNpmScopeDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidScope: schemas_exports.string(),
      validScope: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var CannotPublishToMavenGroupDetails;
var init_CannotPublishToMavenGroupDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToMavenGroupDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidGroup: schemas_exports.string(),
      validGroup: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var InsufficientPermissionsDetails;
var init_InsufficientPermissionsDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    InsufficientPermissionsDetails = schemas_exports.object({
      dummy: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/index.ts
var init_types2 = __esm({
  \\"src/serialization/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId2();
    init_RemoteGenTaskId2();
    init_GeneratorIdAndVersion2();
    init_GeneratorConfig2();
    init_GeneratorConfigV22();
    init_OutputMode2();
    init_PublishOutputMode2();
    init_PublishOutputModeV22();
    init_RegistryOverrides2();
    init_GeneratorOutputs2();
    init_NpmOutput2();
    init_MavenOutput2();
    init_PostmanOutput2();
    init_GithubOutputMode2();
    init_GithubPublishInfo2();
    init_NpmOutputWithOptionalToken2();
    init_MavenOutputWithOptionalCreds2();
    init_UsernamePassword2();
    init_Task2();
    init_TaskStatus2();
    init_FailedTaskStatus2();
    init_FinishedTaskStatus2();
    init_TaskLog2();
    init_LogLevel2();
    init_Package2();
    init_PackagePublishStatus2();
    init_PackageCoordinate2();
    init_NpmCoordinate2();
    init_MavenCoordinate2();
    init_PypiCoordinate2();
    init_CreateJobResponse2();
    init_GeneratorsDoNotExistErrorBodyType2();
    init_CannotPublishToNpmScopeDetails2();
    init_CannotPublishToMavenGroupDetails2();
    init_InsufficientPermissionsDetails2();
  }
});

// src/serialization/resources/remoteGen/client/createJob.ts
var createJob_exports2 = {};
__export(createJob_exports2, {
  Error: () => Error7
});
var Error7;
var init_createJob2 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error7 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJob.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJob.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJob.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports2 = {};
__export(createJobV2_exports2, {
  Error: () => Error8
});
var Error8;
var init_createJobV22 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error8 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJobV2.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJobV2.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJobV2.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports2 = {};
__export(getJobStatus_exports2, {
  Response: () => Response
});
var Response;
var init_getJobStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    Response = schemas_exports.record(
      schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId),
      schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Task).optional()
    );
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts
var CreateJobRequest;
var init_CreateJobRequest = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequest = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfig)
      )
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts
var CreateJobRequestV2;
var init_CreateJobRequestV2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequestV2 = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfigV2)
      ),
      uploadToS3: schemas_exports.boolean().optional()
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/index.ts
var init_requests2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
    init_CreateJobRequest();
    init_CreateJobRequestV2();
  }
});

// src/serialization/resources/remoteGen/client/index.ts
var init_client4 = __esm({
  \\"src/serialization/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_createJob2();
    init_createJobV22();
    init_getJobStatus2();
    init_requests2();
  }
});

// src/serialization/resources/remoteGen/index.ts
var remoteGen_exports2 = {};
__export(remoteGen_exports2, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  createJob: () => createJob_exports2,
  createJobV2: () => createJobV2_exports2,
  getJobStatus: () => getJobStatus_exports2
});
var init_remoteGen2 = __esm({
  \\"src/serialization/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types2();
    init_client4();
  }
});

// src/serialization/resources/index.ts
var init_resources2 = __esm({
  \\"src/serialization/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen2();
    init_types2();
    init_requests2();
  }
});

// src/serialization/index.ts
var serialization_exports = {};
__export(serialization_exports, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  remoteGen: () => remoteGen_exports2
});
var init_serialization = __esm({
  \\"src/serialization/index.ts\\"() {
    \\"use strict\\";
    init_resources2();
  }
});

// src/api/resources/remoteGen/client/Client.ts
var import_url_join2, RemoteGen;
var init_Client3 = __esm({
  \\"src/api/resources/remoteGen/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join2 = __toESM(require_url_join());
    init_serialization();
    RemoteGen = class {
      constructor(options) {
        this.options = options;
      }
      async createJob(request) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(this.options.environment, \\"/api/remote-gen/create-job\\"),
          method: \\"POST\\",
          body: await CreateJobRequest.jsonOrThrow(request)
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await CreateJobResponse.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        if (_response.error.reason === \\"status-code\\") {
          switch (_response.error.body?.error) {
            case \\"IllegalApiNameError\\":
            case \\"GeneratorsDoNotExistError\\":
            case \\"CannotPublishToNpmScope\\":
            case \\"CannotPublishToMavenGroup\\":
            case \\"InsufficientPermissions\\":
              return {
                ok: false,
                error: await remoteGen_exports2.createJob.Error.parseOrThrow(
                  _response.error.body,
                  { allowUnknownKeys: true }
                )
              };
          }
        }
        return {
          ok: false,
          error: api_exports.remoteGen.createJob.Error._unknown(_response.error)
        };
      }
      async createJobV2(request) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(this.options.environment, \\"/api/remote-gen/create-job-v2\\"),
          method: \\"POST\\",
          body: await CreateJobRequestV2.jsonOrThrow(request)
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await CreateJobResponse.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        if (_response.error.reason === \\"status-code\\") {
          switch (_response.error.body?.error) {
            case \\"IllegalApiNameError\\":
            case \\"GeneratorsDoNotExistError\\":
            case \\"CannotPublishToNpmScope\\":
            case \\"CannotPublishToMavenGroup\\":
            case \\"InsufficientPermissions\\":
              return {
                ok: false,
                error: await remoteGen_exports2.createJobV2.Error.parseOrThrow(
                  _response.error.body,
                  { allowUnknownKeys: true }
                )
              };
          }
        }
        return {
          ok: false,
          error: api_exports.remoteGen.createJobV2.Error._unknown(_response.error)
        };
      }
      async getJobStatus(jobId) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(
            this.options.environment,
            \`/api/remote-gen/jobs/\${await RemoteGenJobId2.jsonOrThrow(jobId)}/status\`
          ),
          method: \\"POST\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await remoteGen_exports2.getJobStatus.Response.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        return {
          ok: false,
          error: api_exports.remoteGen.getJobStatus.Error._unknown(_response.error)
        };
      }
    };
  }
});

// src/Client.ts
var FiddleClient;
var init_Client4 = __esm({
  \\"src/Client.ts\\"() {
    \\"use strict\\";
    init_Client();
    init_Client2();
    init_Client3();
    FiddleClient = class {
      constructor(options) {
        this.options = options;
      }
      _fiddle;
      get fiddle() {
        return this._fiddle ??= new FiddleService(this.options);
      }
      _health;
      get health() {
        return this._health ??= new Health(this.options);
      }
      _remoteGen;
      get remoteGen() {
        return this._remoteGen ??= new RemoteGen(this.options);
      }
    };
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Fiddle: () => api_exports,
  FiddleClient: () => FiddleClient
});
module.exports = __toCommonJS(src_exports);
var init_src = __esm({
  \\"src/index.ts\\"() {
    init_api();
    init_Client4();
  }
});
init_src();
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

// src/api/resources/remoteGen/types/RemoteGenJobId.ts
function RemoteGenJobId(value) {
  return value;
}
var init_RemoteGenJobId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/RemoteGenTaskId.ts
function RemoteGenTaskId(value) {
  return value;
}
var init_RemoteGenTaskId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts
var init_GeneratorIdAndVersion = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfig.ts
var init_GeneratorConfig = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfigV2.ts
var init_GeneratorConfigV2 = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/OutputMode.ts
var OutputMode;
var init_OutputMode = __esm({
  \\"src/api/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    OutputMode = {
      publish: (value) => {
        return {
          ...value,
          type: \\"publish\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      publishV2: (value) => {
        return {
          publishV2: value,
          type: \\"publishV2\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      downloadFiles: () => {
        return {
          type: \\"downloadFiles\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      github: (value) => {
        return {
          ...value,
          type: \\"github\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"publish\\":
            return visitor.publish(value);
          case \\"publishV2\\":
            return visitor.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return visitor.downloadFiles();
          case \\"github\\":
            return visitor.github(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/PublishOutputMode.ts
var init_PublishOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV2;
var init_PublishOutputModeV2 = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    PublishOutputModeV2 = {
      npmOverride: (value) => {
        return {
          npmOverride: value,
          type: \\"npmOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      mavenOverride: (value) => {
        return {
          mavenOverride: value,
          type: \\"mavenOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return visitor.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return visitor.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/RegistryOverrides.ts
var init_RegistryOverrides = __esm({
  \\"src/api/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorOutputs.ts
var init_GeneratorOutputs = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/NpmOutput.ts
var init_NpmOutput = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutput.ts
var init_MavenOutput = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PostmanOutput.ts
var init_PostmanOutput = __esm({
  \\"src/api/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubOutputMode.ts
var init_GithubOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo;
var init_GithubPublishInfo = __esm({
  \\"src/api/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    GithubPublishInfo = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var init_NpmOutputWithOptionalToken = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var init_MavenOutputWithOptionalCreds = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/UsernamePassword.ts
var init_UsernamePassword = __esm({
  \\"src/api/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/Task.ts
var init_Task = __esm({
  \\"src/api/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskStatus.ts
var TaskStatus;
var init_TaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    TaskStatus = {
      notStarted: () => {
        return {
          type: \\"notStarted\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      running: () => {
        return {
          type: \\"running\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      failed: (value) => {
        return {
          ...value,
          type: \\"failed\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      finished: (value) => {
        return {
          ...value,
          type: \\"finished\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"notStarted\\":
            return visitor.notStarted();
          case \\"running\\":
            return visitor.running();
          case \\"failed\\":
            return visitor.failed(value);
          case \\"finished\\":
            return visitor.finished(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/FailedTaskStatus.ts
var init_FailedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/FinishedTaskStatus.ts
var init_FinishedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskLog.ts
var init_TaskLog = __esm({
  \\"src/api/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/LogLevel.ts
var LogLevel;
var init_LogLevel = __esm({
  \\"src/api/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    LogLevel = {
      Debug: \\"DEBUG\\",
      Info: \\"INFO\\",
      Warn: \\"WARN\\",
      Error: \\"ERROR\\"
    };
  }
});

// src/api/resources/remoteGen/types/Package.ts
var init_Package = __esm({
  \\"src/api/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus;
var init_PackagePublishStatus = __esm({
  \\"src/api/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    PackagePublishStatus = {
      NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\",
      Publishing: \\"PUBLISHING\\",
      Published: \\"PUBLISHED\\",
      FailedToPublish: \\"FAILED_TO_PUBLISH\\"
    };
  }
});

// src/api/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate;
var init_PackageCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    PackageCoordinate = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      pypi: (value) => {
        return {
          ...value,
          type: \\"pypi\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"pypi\\":
            return visitor.pypi(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmCoordinate.ts
var init_NpmCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenCoordinate.ts
var init_MavenCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PypiCoordinate.ts
var init_PypiCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CreateJobResponse.ts
var init_CreateJobResponse = __esm({
  \\"src/api/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var init_GeneratorsDoNotExistErrorBodyType = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var init_CannotPublishToNpmScopeDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var init_CannotPublishToMavenGroupDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var init_InsufficientPermissionsDetails = __esm({
  \\"src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/index.ts
var init_types = __esm({
  \\"src/api/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId();
    init_RemoteGenTaskId();
    init_GeneratorIdAndVersion();
    init_GeneratorConfig();
    init_GeneratorConfigV2();
    init_OutputMode();
    init_PublishOutputMode();
    init_PublishOutputModeV2();
    init_RegistryOverrides();
    init_GeneratorOutputs();
    init_NpmOutput();
    init_MavenOutput();
    init_PostmanOutput();
    init_GithubOutputMode();
    init_GithubPublishInfo();
    init_NpmOutputWithOptionalToken();
    init_MavenOutputWithOptionalCreds();
    init_UsernamePassword();
    init_Task();
    init_TaskStatus();
    init_FailedTaskStatus();
    init_FinishedTaskStatus();
    init_TaskLog();
    init_LogLevel();
    init_Package();
    init_PackagePublishStatus();
    init_PackageCoordinate();
    init_NpmCoordinate();
    init_MavenCoordinate();
    init_PypiCoordinate();
    init_CreateJobResponse();
    init_GeneratorsDoNotExistErrorBodyType();
    init_CannotPublishToNpmScopeDetails();
    init_CannotPublishToMavenGroupDetails();
    init_InsufficientPermissionsDetails();
  }
});

// src/api/resources/remoteGen/client/requests/index.ts
var init_requests = __esm({
  \\"src/api/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/client/createJob.ts
var createJob_exports = {};
__export(createJob_exports, {
  Error: () => Error2
});
var Error2;
var init_createJob = __esm({
  \\"src/api/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    Error2 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports = {};
__export(createJobV2_exports, {
  Error: () => Error3
});
var Error3;
var init_createJobV2 = __esm({
  \\"src/api/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    Error3 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports = {};
__export(getJobStatus_exports, {
  Error: () => Error4
});
var Error4;
var init_getJobStatus = __esm({
  \\"src/api/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    Error4 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.getJobStatus.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/index.ts
var init_client = __esm({
  \\"src/api/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_requests();
    init_createJob();
    init_createJobV2();
    init_getJobStatus();
  }
});

// src/api/resources/remoteGen/index.ts
var remoteGen_exports = {};
__export(remoteGen_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  createJob: () => createJob_exports,
  createJobV2: () => createJobV2_exports,
  getJobStatus: () => getJobStatus_exports
});
var init_remoteGen = __esm({
  \\"src/api/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types();
    init_client();
  }
});

// src/api/resources/fiddle/client/test.ts
var test_exports = {};
__export(test_exports, {
  Error: () => Error5
});
var Error5;
var init_test = __esm({
  \\"src/api/resources/fiddle/client/test.ts\\"() {
    \\"use strict\\";
    init_src();
    Error5 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.fiddle.test.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/fiddle/client/index.ts
var init_client2 = __esm({
  \\"src/api/resources/fiddle/client/index.ts\\"() {
    \\"use strict\\";
    init_test();
  }
});

// src/api/resources/fiddle/index.ts
var fiddle_exports = {};
__export(fiddle_exports, {
  test: () => test_exports
});
var init_fiddle = __esm({
  \\"src/api/resources/fiddle/index.ts\\"() {
    \\"use strict\\";
    init_client2();
  }
});

// src/api/resources/health/client/status.ts
var status_exports = {};
__export(status_exports, {
  Error: () => Error6
});
var Error6;
var init_status = __esm({
  \\"src/api/resources/health/client/status.ts\\"() {
    \\"use strict\\";
    init_src();
    Error6 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.health.status.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/health/client/index.ts
var init_client3 = __esm({
  \\"src/api/resources/health/client/index.ts\\"() {
    \\"use strict\\";
    init_status();
  }
});

// src/api/resources/health/index.ts
var health_exports = {};
__export(health_exports, {
  status: () => status_exports
});
var init_health = __esm({
  \\"src/api/resources/health/index.ts\\"() {
    \\"use strict\\";
    init_client3();
  }
});

// src/api/resources/index.ts
var init_resources = __esm({
  \\"src/api/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen();
    init_types();
    init_fiddle();
    init_health();
    init_requests();
  }
});

// src/api/index.ts
var api_exports = {};
__export(api_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  fiddle: () => fiddle_exports,
  health: () => health_exports,
  remoteGen: () => remoteGen_exports
});
var init_api = __esm({
  \\"src/api/index.ts\\"() {
    \\"use strict\\";
    init_resources();
  }
});

// src/core/schemas/Schema.ts
var SchemaType;
var init_Schema = __esm({
  \\"src/core/schemas/Schema.ts\\"() {
    \\"use strict\\";
    SchemaType = {
      DATE: \\"date\\",
      ENUM: \\"enum\\",
      LIST: \\"list\\",
      STRING_LITERAL: \\"stringLiteral\\",
      OBJECT: \\"object\\",
      ANY: \\"any\\",
      BOOLEAN: \\"boolean\\",
      NUMBER: \\"number\\",
      STRING: \\"string\\",
      UNKNOWN: \\"unknown\\",
      RECORD: \\"record\\",
      SET: \\"set\\",
      UNION: \\"union\\",
      OPTIONAL: \\"optional\\"
    };
  }
});

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
var init_stringifyValidationErrors = __esm({
  \\"src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError;
var init_JsonError = __esm({
  \\"src/core/schemas/builders/schema-utils/JsonError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    JsonError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError;
var init_ParseError = __esm({
  \\"src/core/schemas/builders/schema-utils/ParseError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    ParseError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_getSchemaUtils = __esm({
  \\"src/core/schemas/builders/schema-utils/getSchemaUtils.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/schema-utils/index.ts
var init_schema_utils = __esm({
  \\"src/core/schemas/builders/schema-utils/index.ts\\"() {
    \\"use strict\\";
    init_getSchemaUtils();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/date/date.ts
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var ISO_8601_REGEX;
var init_date = __esm({
  \\"src/core/schemas/builders/date/date.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
    ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
  }
});

// src/core/schemas/builders/date/index.ts
var init_date2 = __esm({
  \\"src/core/schemas/builders/date/index.ts\\"() {
    \\"use strict\\";
    init_date();
  }
});

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}
var init_createIdentitySchemaCreator = __esm({
  \\"src/core/schemas/utils/createIdentitySchemaCreator.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_enum = __esm({
  \\"src/core/schemas/builders/enum/enum.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/enum/index.ts
var init_enum2 = __esm({
  \\"src/core/schemas/builders/enum/index.ts\\"() {
    \\"use strict\\";
    init_enum();
  }
});

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}
var init_lazy = __esm({
  \\"src/core/schemas/builders/lazy/lazy.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}
var init_entries = __esm({
  \\"src/core/schemas/utils/entries.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
var init_filterObject = __esm({
  \\"src/core/schemas/utils/filterObject.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/isPlainObject.ts
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}
var NOT_AN_OBJECT_ERROR_MESSAGE;
var init_isPlainObject = __esm({
  \\"src/core/schemas/utils/isPlainObject.ts\\"() {
    \\"use strict\\";
    NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
  }
});

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}
var init_keys = __esm({
  \\"src/core/schemas/utils/keys.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}
var init_partition = __esm({
  \\"src/core/schemas/utils/partition.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}
var init_getObjectLikeUtils = __esm({
  \\"src/core/schemas/builders/object-like/getObjectLikeUtils.ts\\"() {
    \\"use strict\\";
    init_filterObject();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/object-like/index.ts
var init_object_like = __esm({
  \\"src/core/schemas/builders/object-like/index.ts\\"() {
    \\"use strict\\";
    init_getObjectLikeUtils();
  }
});

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}
var init_property = __esm({
  \\"src/core/schemas/builders/object/property.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}
var init_object = __esm({
  \\"src/core/schemas/builders/object/object.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_filterObject();
    init_isPlainObject();
    init_keys();
    init_partition();
    init_object_like();
    init_schema_utils();
    init_property();
  }
});

// src/core/schemas/builders/object/index.ts
var init_object2 = __esm({
  \\"src/core/schemas/builders/object/index.ts\\"() {
    \\"use strict\\";
    init_object();
    init_property();
  }
});

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
var init_lazyObject = __esm({
  \\"src/core/schemas/builders/lazy/lazyObject.ts\\"() {
    \\"use strict\\";
    init_object2();
    init_object_like();
    init_schema_utils();
    init_lazy();
  }
});

// src/core/schemas/builders/lazy/index.ts
var init_lazy2 = __esm({
  \\"src/core/schemas/builders/lazy/index.ts\\"() {
    \\"use strict\\";
    init_lazy();
    init_lazyObject();
  }
});

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}
var init_list = __esm({
  \\"src/core/schemas/builders/list/list.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
  }
});

// src/core/schemas/builders/list/index.ts
var init_list2 = __esm({
  \\"src/core/schemas/builders/list/index.ts\\"() {
    \\"use strict\\";
    init_list();
  }
});

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_stringLiteral = __esm({
  \\"src/core/schemas/builders/literals/stringLiteral.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/literals/index.ts
var init_literals = __esm({
  \\"src/core/schemas/builders/literals/index.ts\\"() {
    \\"use strict\\";
    init_stringLiteral();
  }
});

// src/core/schemas/builders/primitives/any.ts
var any;
var init_any = __esm({
  \\"src/core/schemas/builders/primitives/any.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/boolean.ts
var boolean;
var init_boolean = __esm({
  \\"src/core/schemas/builders/primitives/boolean.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
      if (typeof value === \\"boolean\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a boolean\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/number.ts
var number;
var init_number = __esm({
  \\"src/core/schemas/builders/primitives/number.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
      if (typeof value === \\"number\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a number\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/string.ts
var string;
var init_string = __esm({
  \\"src/core/schemas/builders/primitives/string.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
      if (typeof value === \\"string\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a string\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown;
var init_unknown = __esm({
  \\"src/core/schemas/builders/primitives/unknown.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/index.ts
var init_primitives = __esm({
  \\"src/core/schemas/builders/primitives/index.ts\\"() {
    \\"use strict\\";
    init_any();
    init_boolean();
    init_number();
    init_string();
    init_unknown();
  }
});

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}
var init_record = __esm({
  \\"src/core/schemas/builders/record/record.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/record/index.ts
var init_record2 = __esm({
  \\"src/core/schemas/builders/record/index.ts\\"() {
    \\"use strict\\";
    init_record();
  }
});

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_set = __esm({
  \\"src/core/schemas/builders/set/set.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_list2();
    init_schema_utils();
  }
});

// src/core/schemas/builders/set/index.ts
var init_set2 = __esm({
  \\"src/core/schemas/builders/set/index.ts\\"() {
    \\"use strict\\";
    init_set();
  }
});

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}
var init_discriminant = __esm({
  \\"src/core/schemas/builders/union/discriminant.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}
var init_union = __esm({
  \\"src/core/schemas/builders/union/union.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_isPlainObject();
    init_keys();
    init_enum2();
    init_object_like();
    init_schema_utils();
  }
});

// src/core/schemas/builders/union/index.ts
var init_union2 = __esm({
  \\"src/core/schemas/builders/union/index.ts\\"() {
    \\"use strict\\";
    init_discriminant();
    init_union();
  }
});

// src/core/schemas/builders/index.ts
var init_builders = __esm({
  \\"src/core/schemas/builders/index.ts\\"() {
    \\"use strict\\";
    init_date2();
    init_enum2();
    init_lazy2();
    init_list2();
    init_literals();
    init_object2();
    init_object_like();
    init_primitives();
    init_record2();
    init_schema_utils();
    init_set2();
    init_union2();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});
var init_schemas = __esm({
  \\"src/core/schemas/index.ts\\"() {
    \\"use strict\\";
    init_builders();
    init_Schema();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module2) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module2.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module2.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module2.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module2.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module2) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module2.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module2.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js
var require_null = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js\\"(exports, module2) {
    module2.exports = null;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_null()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module2.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module2) {
    module2.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module2) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module2.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module2.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module2) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module2.exports = axios2;
    module2.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module2) {
    module2.exports = require_axios();
  }
});

// src/core/fetcher/Fetcher.ts
var import_axios;
var init_Fetcher = __esm({
  \\"src/core/fetcher/Fetcher.ts\\"() {
    \\"use strict\\";
    import_axios = __toESM(require_axios2());
  }
});

// src/core/fetcher/Supplier.ts
var init_Supplier = __esm({
  \\"src/core/fetcher/Supplier.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/fetcher/index.ts
var init_fetcher = __esm({
  \\"src/core/fetcher/index.ts\\"() {
    \\"use strict\\";
    init_Fetcher();
    init_Supplier();
  }
});

// src/core/index.ts
var init_core = __esm({
  \\"src/core/index.ts\\"() {
    \\"use strict\\";
    init_schemas();
    init_fetcher();
  }
});

// src/api/resources/fiddle/client/Client.ts
var init_Client = __esm({
  \\"src/api/resources/fiddle/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
  }
});

// .yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  \\".yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js\\"(exports, module2) {
    (function(name, context, definition) {
      if (typeof module2 !== \\"undefined\\" && module2.exports)
        module2.exports = definition();
      else if (typeof define === \\"function\\" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })(\\"urljoin\\", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return \\"\\";
        }
        if (typeof strArray[0] !== \\"string\\") {
          throw new TypeError(\\"Url must be a string. Received \\" + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\\\\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\\\\/\\\\/\\\\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1:///\\");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1://\\");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== \\"string\\") {
            throw new TypeError(\\"Url must be a string. Received \\" + component);
          }
          if (component === \\"\\") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\\\\/]+/, \\"\\");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\\\\/]+$/, \\"\\");
          } else {
            component = component.replace(/[\\\\/]+$/, \\"/\\");
          }
          resultArray.push(component);
        }
        var str = resultArray.join(\\"/\\");
        str = str.replace(/\\\\/(\\\\?|&|#[^!])/g, \\"$1\\");
        var parts = str.split(\\"?\\");
        str = parts.shift() + (parts.length > 0 ? \\"?\\" : \\"\\") + parts.join(\\"&\\");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === \\"object\\") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// src/api/resources/health/client/Client.ts
var import_url_join;
var init_Client2 = __esm({
  \\"src/api/resources/health/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join = __toESM(require_url_join());
  }
});

// src/api/resources/remoteGen/client/Client.ts
var import_url_join2;
var init_Client3 = __esm({
  \\"src/api/resources/remoteGen/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join2 = __toESM(require_url_join());
    init_serialization();
  }
});

// src/Client.ts
var init_Client4 = __esm({
  \\"src/Client.ts\\"() {
    \\"use strict\\";
    init_Client();
    init_Client2();
    init_Client3();
  }
});

// src/index.ts
var init_src = __esm({
  \\"src/index.ts\\"() {
    \\"use strict\\";
    init_api();
    init_Client4();
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenJobId.ts
var RemoteGenJobId2;
var init_RemoteGenJobId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenJobId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenJobId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts
var RemoteGenTaskId2;
var init_RemoteGenTaskId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenTaskId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenTaskId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts
var GeneratorIdAndVersion;
var init_GeneratorIdAndVersion2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorIdAndVersion = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfig.ts
var GeneratorConfig;
var init_GeneratorConfig2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfig = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      willDownloadFiles: schemas_exports.boolean(),
      outputs: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorOutputs)
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts
var GeneratorConfigV2;
var init_GeneratorConfigV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfigV2 = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      outputMode: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).OutputMode)
    });
  }
});

// src/serialization/resources/remoteGen/types/OutputMode.ts
var OutputMode2;
var init_OutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    OutputMode2 = schemas_exports.union(\\"type\\", {
      publish: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputMode),
      publishV2: schemas_exports.object({
        publishV2: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputModeV2)
      }),
      downloadFiles: schemas_exports.object({}),
      github: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubOutputMode)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"publish\\":
            return api_exports.OutputMode.publish(value);
          case \\"publishV2\\":
            return api_exports.OutputMode.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return api_exports.OutputMode.downloadFiles();
          case \\"github\\":
            return api_exports.OutputMode.github(value);
          default:
            return api_exports.OutputMode._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputMode.ts
var PublishOutputMode;
var init_PublishOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    PublishOutputMode = schemas_exports.object({
      registryOverrides: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RegistryOverrides)
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV22;
var init_PublishOutputModeV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PublishOutputModeV22 = schemas_exports.union(\\"type\\", {
      npmOverride: schemas_exports.object({
        npmOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional()
      }),
      mavenOverride: schemas_exports.object({
        mavenOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
      }),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return api_exports.PublishOutputModeV2.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return api_exports.PublishOutputModeV2.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return api_exports.PublishOutputModeV2.postman(value);
          default:
            return api_exports.PublishOutputModeV2._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RegistryOverrides.ts
var RegistryOverrides;
var init_RegistryOverrides2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
    init_core();
    RegistryOverrides = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorOutputs.ts
var GeneratorOutputs;
var init_GeneratorOutputs2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorOutputs = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutput.ts
var NpmOutput;
var init_NpmOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutput.ts
var MavenOutput;
var init_MavenOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      username: schemas_exports.string(),
      password: schemas_exports.string(),
      coordinate: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PostmanOutput.ts
var PostmanOutput;
var init_PostmanOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    PostmanOutput = schemas_exports.object({
      apiKey: schemas_exports.string(),
      workspaceId: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubOutputMode.ts
var GithubOutputMode;
var init_GithubOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    GithubOutputMode = schemas_exports.object({
      owner: schemas_exports.string(),
      repo: schemas_exports.string(),
      publishInfo: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubPublishInfo).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo2;
var init_GithubPublishInfo2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    GithubPublishInfo2 = schemas_exports.union(\\"type\\", {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutputWithOptionalToken),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutputWithOptionalCreds),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.GithubPublishInfo.npm(value);
          case \\"maven\\":
            return api_exports.GithubPublishInfo.maven(value);
          case \\"postman\\":
            return api_exports.GithubPublishInfo.postman(value);
          default:
            return api_exports.GithubPublishInfo._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var NpmOutputWithOptionalToken;
var init_NpmOutputWithOptionalToken2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutputWithOptionalToken = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var MavenOutputWithOptionalCreds;
var init_MavenOutputWithOptionalCreds2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutputWithOptionalCreds = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      coordinate: schemas_exports.string(),
      credentials: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).UsernamePassword).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/UsernamePassword.ts
var UsernamePassword;
var init_UsernamePassword2 = __esm({
  \\"src/serialization/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
    init_core();
    UsernamePassword = schemas_exports.object({
      username: schemas_exports.string(),
      password: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/Task.ts
var Task;
var init_Task2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
    init_core();
    Task = schemas_exports.object({
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskStatus),
      packages: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Package)),
      logs: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskLog))
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskStatus.ts
var TaskStatus2;
var init_TaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    TaskStatus2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      notStarted: schemas_exports.object({}),
      running: schemas_exports.object({}),
      failed: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FailedTaskStatus),
      finished: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FinishedTaskStatus)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"notStarted\\":
            return api_exports.TaskStatus.notStarted();
          case \\"running\\":
            return api_exports.TaskStatus.running();
          case \\"failed\\":
            return api_exports.TaskStatus.failed(value);
          case \\"finished\\":
            return api_exports.TaskStatus.finished(value);
          default:
            return api_exports.TaskStatus._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/FailedTaskStatus.ts
var FailedTaskStatus;
var init_FailedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FailedTaskStatus = schemas_exports.object({
      message: schemas_exports.string(),
      s3PreSignedReadUrl: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts
var FinishedTaskStatus;
var init_FinishedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FinishedTaskStatus = schemas_exports.object({
      hasFilesToDownload: schemas_exports.boolean(),
      s3PreSignedReadUrl: schemas_exports.string(),
      s3PreSignedReadUrlV2: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskLog.ts
var TaskLog;
var init_TaskLog2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
    init_core();
    TaskLog = schemas_exports.object({
      level: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).LogLevel),
      message: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/LogLevel.ts
var LogLevel2;
var init_LogLevel2 = __esm({
  \\"src/serialization/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    init_core();
    LogLevel2 = schemas_exports.enum_([
      \\"DEBUG\\",
      \\"INFO\\",
      \\"WARN\\",
      \\"ERROR\\"
    ]);
  }
});

// src/serialization/resources/remoteGen/types/Package.ts
var Package;
var init_Package2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
    init_core();
    Package = schemas_exports.object({
      coordinate: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackageCoordinate),
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackagePublishStatus)
    });
  }
});

// src/serialization/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus2;
var init_PackagePublishStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    PackagePublishStatus2 = schemas_exports.enum_([\\"NOT_STARTED_PUBLISHING\\", \\"PUBLISHING\\", \\"PUBLISHED\\", \\"FAILED_TO_PUBLISH\\"]);
  }
});

// src/serialization/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate2;
var init_PackageCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PackageCoordinate2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmCoordinate),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenCoordinate),
      pypi: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PypiCoordinate)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.PackageCoordinate.npm(value);
          case \\"maven\\":
            return api_exports.PackageCoordinate.maven(value);
          case \\"pypi\\":
            return api_exports.PackageCoordinate.pypi(value);
          default:
            return api_exports.PackageCoordinate._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmCoordinate.ts
var NpmCoordinate;
var init_NpmCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenCoordinate.ts
var MavenCoordinate;
var init_MavenCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenCoordinate = schemas_exports.object({
      group: schemas_exports.string(),
      artifact: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PypiCoordinate.ts
var PypiCoordinate;
var init_PypiCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    PypiCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CreateJobResponse.ts
var CreateJobResponse;
var init_CreateJobResponse2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobResponse = schemas_exports.object({
      jobId: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenJobId),
      taskIds: schemas_exports.list(schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId))
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var GeneratorsDoNotExistErrorBodyType;
var init_GeneratorsDoNotExistErrorBodyType2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorsDoNotExistErrorBodyType = schemas_exports.object({
      nonExistentGenerators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorIdAndVersion)
      )
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var CannotPublishToNpmScopeDetails;
var init_CannotPublishToNpmScopeDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToNpmScopeDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidScope: schemas_exports.string(),
      validScope: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var CannotPublishToMavenGroupDetails;
var init_CannotPublishToMavenGroupDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToMavenGroupDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidGroup: schemas_exports.string(),
      validGroup: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var InsufficientPermissionsDetails;
var init_InsufficientPermissionsDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    InsufficientPermissionsDetails = schemas_exports.object({
      dummy: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/index.ts
var init_types2 = __esm({
  \\"src/serialization/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId2();
    init_RemoteGenTaskId2();
    init_GeneratorIdAndVersion2();
    init_GeneratorConfig2();
    init_GeneratorConfigV22();
    init_OutputMode2();
    init_PublishOutputMode2();
    init_PublishOutputModeV22();
    init_RegistryOverrides2();
    init_GeneratorOutputs2();
    init_NpmOutput2();
    init_MavenOutput2();
    init_PostmanOutput2();
    init_GithubOutputMode2();
    init_GithubPublishInfo2();
    init_NpmOutputWithOptionalToken2();
    init_MavenOutputWithOptionalCreds2();
    init_UsernamePassword2();
    init_Task2();
    init_TaskStatus2();
    init_FailedTaskStatus2();
    init_FinishedTaskStatus2();
    init_TaskLog2();
    init_LogLevel2();
    init_Package2();
    init_PackagePublishStatus2();
    init_PackageCoordinate2();
    init_NpmCoordinate2();
    init_MavenCoordinate2();
    init_PypiCoordinate2();
    init_CreateJobResponse2();
    init_GeneratorsDoNotExistErrorBodyType2();
    init_CannotPublishToNpmScopeDetails2();
    init_CannotPublishToMavenGroupDetails2();
    init_InsufficientPermissionsDetails2();
  }
});

// src/serialization/resources/remoteGen/client/createJob.ts
var createJob_exports2 = {};
__export(createJob_exports2, {
  Error: () => Error7
});
var Error7;
var init_createJob2 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error7 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJob.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJob.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJob.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports2 = {};
__export(createJobV2_exports2, {
  Error: () => Error8
});
var Error8;
var init_createJobV22 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error8 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJobV2.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJobV2.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJobV2.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports2 = {};
__export(getJobStatus_exports2, {
  Response: () => Response
});
var Response;
var init_getJobStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    Response = schemas_exports.record(
      schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId),
      schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Task).optional()
    );
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts
var CreateJobRequest;
var init_CreateJobRequest = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequest = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfig)
      )
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts
var CreateJobRequestV2;
var init_CreateJobRequestV2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequestV2 = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfigV2)
      ),
      uploadToS3: schemas_exports.boolean().optional()
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/index.ts
var init_requests2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
    init_CreateJobRequest();
    init_CreateJobRequestV2();
  }
});

// src/serialization/resources/remoteGen/client/index.ts
var init_client4 = __esm({
  \\"src/serialization/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_createJob2();
    init_createJobV22();
    init_getJobStatus2();
    init_requests2();
  }
});

// src/serialization/resources/remoteGen/index.ts
var remoteGen_exports2 = {};
__export(remoteGen_exports2, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  createJob: () => createJob_exports2,
  createJobV2: () => createJobV2_exports2,
  getJobStatus: () => getJobStatus_exports2
});
var init_remoteGen2 = __esm({
  \\"src/serialization/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types2();
    init_client4();
  }
});

// src/serialization/resources/index.ts
var init_resources2 = __esm({
  \\"src/serialization/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen2();
    init_types2();
    init_requests2();
  }
});

// src/serialization/index.ts
var serialization_exports = {};
__export(serialization_exports, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  remoteGen: () => remoteGen_exports2
});
module.exports = __toCommonJS(serialization_exports);
var init_serialization = __esm({
  \\"src/serialization/index.ts\\"() {
    init_resources2();
  }
});
init_serialization();
",
                    "name": "serialization.js",
                    "type": "file",
                  },
                ],
                "name": "cjs",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js
var require_null = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js\\"(exports, module) {
    module.exports = null;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_null()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module) {
    module.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module.exports = axios2;
    module.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module) {
    module.exports = require_axios();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});

// src/core/schemas/Schema.ts
var SchemaType = {
  DATE: \\"date\\",
  ENUM: \\"enum\\",
  LIST: \\"list\\",
  STRING_LITERAL: \\"stringLiteral\\",
  OBJECT: \\"object\\",
  ANY: \\"any\\",
  BOOLEAN: \\"boolean\\",
  NUMBER: \\"number\\",
  STRING: \\"string\\",
  UNKNOWN: \\"unknown\\",
  RECORD: \\"record\\",
  SET: \\"set\\",
  UNION: \\"union\\",
  OPTIONAL: \\"optional\\"
};

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError = class extends Error {
  constructor(errors) {
    super(errors.map(stringifyValidationError).join(\\"; \\"));
    this.errors = errors;
    Object.setPrototypeOf(this, JsonError.prototype);
  }
};

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError = class extends Error {
  constructor(errors) {
    super(errors.map(stringifyValidationError).join(\\"; \\"));
    this.errors = errors;
    Object.setPrototypeOf(this, ParseError.prototype);
  }
};

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/builders/date/date.ts
var ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}

// src/core/schemas/utils/isPlainObject.ts
var NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}

// src/core/schemas/builders/primitives/any.ts
var any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));

// src/core/schemas/builders/primitives/boolean.ts
var boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
  if (typeof value === \\"boolean\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a boolean\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/number.ts
var number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
  if (typeof value === \\"number\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a number\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/string.ts
var string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
  if (typeof value === \\"string\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a string\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}

// src/core/fetcher/Fetcher.ts
var import_axios = __toESM(require_axios2());
var fetcher = async (args) => {
  const headers = {
    \\"Content-Type\\": \\"application/json\\"
  };
  if (args.headers != null) {
    for (const [key, value] of Object.entries(args.headers)) {
      if (value != null) {
        headers[key] = value;
      }
    }
  }
  try {
    const response = await (0, import_axios.default)({
      url: args.url,
      params: args.queryParameters,
      method: args.method,
      headers,
      data: args.body,
      validateStatus: () => true,
      transformResponse: (response2) => response2,
      timeout: args.timeoutMs ?? 6e4,
      transitional: {
        clarifyTimeoutError: true
      },
      withCredentials: args.withCredentials
    });
    let body;
    if (response.data != null && response.data.length > 0) {
      try {
        body = JSON.parse(response.data) ?? void 0;
      } catch {
        return {
          ok: false,
          error: {
            reason: \\"non-json\\",
            statusCode: response.status,
            rawBody: response.data
          }
        };
      }
    }
    if (response.status >= 200 && response.status < 300) {
      return {
        ok: true,
        body
      };
    } else {
      return {
        ok: false,
        error: {
          reason: \\"status-code\\",
          statusCode: response.status,
          body
        }
      };
    }
  } catch (error) {
    if (error.code === \\"ETIMEDOUT\\") {
      return {
        ok: false,
        error: {
          reason: \\"timeout\\"
        }
      };
    }
    return {
      ok: false,
      error: {
        reason: \\"unknown\\",
        errorMessage: error.message
      }
    };
  }
};

// src/core/fetcher/Supplier.ts
var Supplier = {
  get: async (supplier) => {
    if (typeof supplier === \\"function\\") {
      return supplier();
    } else {
      return supplier;
    }
  }
};
export {
  Supplier,
  fetcher,
  schemas_exports as serialization
};
",
                    "name": "core.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));

// src/api/resources/remoteGen/types/RemoteGenJobId.ts
function RemoteGenJobId(value) {
  return value;
}
var init_RemoteGenJobId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/RemoteGenTaskId.ts
function RemoteGenTaskId(value) {
  return value;
}
var init_RemoteGenTaskId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts
var init_GeneratorIdAndVersion = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfig.ts
var init_GeneratorConfig = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfigV2.ts
var init_GeneratorConfigV2 = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/OutputMode.ts
var OutputMode;
var init_OutputMode = __esm({
  \\"src/api/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    OutputMode = {
      publish: (value) => {
        return {
          ...value,
          type: \\"publish\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      publishV2: (value) => {
        return {
          publishV2: value,
          type: \\"publishV2\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      downloadFiles: () => {
        return {
          type: \\"downloadFiles\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      github: (value) => {
        return {
          ...value,
          type: \\"github\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"publish\\":
            return visitor.publish(value);
          case \\"publishV2\\":
            return visitor.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return visitor.downloadFiles();
          case \\"github\\":
            return visitor.github(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/PublishOutputMode.ts
var init_PublishOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV2;
var init_PublishOutputModeV2 = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    PublishOutputModeV2 = {
      npmOverride: (value) => {
        return {
          npmOverride: value,
          type: \\"npmOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      mavenOverride: (value) => {
        return {
          mavenOverride: value,
          type: \\"mavenOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return visitor.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return visitor.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/RegistryOverrides.ts
var init_RegistryOverrides = __esm({
  \\"src/api/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorOutputs.ts
var init_GeneratorOutputs = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/NpmOutput.ts
var init_NpmOutput = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutput.ts
var init_MavenOutput = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PostmanOutput.ts
var init_PostmanOutput = __esm({
  \\"src/api/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubOutputMode.ts
var init_GithubOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo;
var init_GithubPublishInfo = __esm({
  \\"src/api/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    GithubPublishInfo = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var init_NpmOutputWithOptionalToken = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var init_MavenOutputWithOptionalCreds = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/UsernamePassword.ts
var init_UsernamePassword = __esm({
  \\"src/api/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/Task.ts
var init_Task = __esm({
  \\"src/api/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskStatus.ts
var TaskStatus;
var init_TaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    TaskStatus = {
      notStarted: () => {
        return {
          type: \\"notStarted\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      running: () => {
        return {
          type: \\"running\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      failed: (value) => {
        return {
          ...value,
          type: \\"failed\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      finished: (value) => {
        return {
          ...value,
          type: \\"finished\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"notStarted\\":
            return visitor.notStarted();
          case \\"running\\":
            return visitor.running();
          case \\"failed\\":
            return visitor.failed(value);
          case \\"finished\\":
            return visitor.finished(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/FailedTaskStatus.ts
var init_FailedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/FinishedTaskStatus.ts
var init_FinishedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskLog.ts
var init_TaskLog = __esm({
  \\"src/api/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/LogLevel.ts
var LogLevel;
var init_LogLevel = __esm({
  \\"src/api/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    LogLevel = {
      Debug: \\"DEBUG\\",
      Info: \\"INFO\\",
      Warn: \\"WARN\\",
      Error: \\"ERROR\\"
    };
  }
});

// src/api/resources/remoteGen/types/Package.ts
var init_Package = __esm({
  \\"src/api/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus;
var init_PackagePublishStatus = __esm({
  \\"src/api/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    PackagePublishStatus = {
      NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\",
      Publishing: \\"PUBLISHING\\",
      Published: \\"PUBLISHED\\",
      FailedToPublish: \\"FAILED_TO_PUBLISH\\"
    };
  }
});

// src/api/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate;
var init_PackageCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    PackageCoordinate = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      pypi: (value) => {
        return {
          ...value,
          type: \\"pypi\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"pypi\\":
            return visitor.pypi(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmCoordinate.ts
var init_NpmCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenCoordinate.ts
var init_MavenCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PypiCoordinate.ts
var init_PypiCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CreateJobResponse.ts
var init_CreateJobResponse = __esm({
  \\"src/api/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var init_GeneratorsDoNotExistErrorBodyType = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var init_CannotPublishToNpmScopeDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var init_CannotPublishToMavenGroupDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var init_InsufficientPermissionsDetails = __esm({
  \\"src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/index.ts
var init_types = __esm({
  \\"src/api/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId();
    init_RemoteGenTaskId();
    init_GeneratorIdAndVersion();
    init_GeneratorConfig();
    init_GeneratorConfigV2();
    init_OutputMode();
    init_PublishOutputMode();
    init_PublishOutputModeV2();
    init_RegistryOverrides();
    init_GeneratorOutputs();
    init_NpmOutput();
    init_MavenOutput();
    init_PostmanOutput();
    init_GithubOutputMode();
    init_GithubPublishInfo();
    init_NpmOutputWithOptionalToken();
    init_MavenOutputWithOptionalCreds();
    init_UsernamePassword();
    init_Task();
    init_TaskStatus();
    init_FailedTaskStatus();
    init_FinishedTaskStatus();
    init_TaskLog();
    init_LogLevel();
    init_Package();
    init_PackagePublishStatus();
    init_PackageCoordinate();
    init_NpmCoordinate();
    init_MavenCoordinate();
    init_PypiCoordinate();
    init_CreateJobResponse();
    init_GeneratorsDoNotExistErrorBodyType();
    init_CannotPublishToNpmScopeDetails();
    init_CannotPublishToMavenGroupDetails();
    init_InsufficientPermissionsDetails();
  }
});

// src/api/resources/remoteGen/client/requests/index.ts
var init_requests = __esm({
  \\"src/api/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/client/createJob.ts
var createJob_exports = {};
__export(createJob_exports, {
  Error: () => Error2
});
var Error2;
var init_createJob = __esm({
  \\"src/api/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    Error2 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports = {};
__export(createJobV2_exports, {
  Error: () => Error3
});
var Error3;
var init_createJobV2 = __esm({
  \\"src/api/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    Error3 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports = {};
__export(getJobStatus_exports, {
  Error: () => Error4
});
var Error4;
var init_getJobStatus = __esm({
  \\"src/api/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    Error4 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.getJobStatus.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/index.ts
var init_client = __esm({
  \\"src/api/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_requests();
    init_createJob();
    init_createJobV2();
    init_getJobStatus();
  }
});

// src/api/resources/remoteGen/index.ts
var remoteGen_exports = {};
__export(remoteGen_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  createJob: () => createJob_exports,
  createJobV2: () => createJobV2_exports,
  getJobStatus: () => getJobStatus_exports
});
var init_remoteGen = __esm({
  \\"src/api/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types();
    init_client();
  }
});

// src/api/resources/fiddle/client/test.ts
var test_exports = {};
__export(test_exports, {
  Error: () => Error5
});
var Error5;
var init_test = __esm({
  \\"src/api/resources/fiddle/client/test.ts\\"() {
    \\"use strict\\";
    init_src();
    Error5 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.fiddle.test.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/fiddle/client/index.ts
var init_client2 = __esm({
  \\"src/api/resources/fiddle/client/index.ts\\"() {
    \\"use strict\\";
    init_test();
  }
});

// src/api/resources/fiddle/index.ts
var fiddle_exports = {};
__export(fiddle_exports, {
  test: () => test_exports
});
var init_fiddle = __esm({
  \\"src/api/resources/fiddle/index.ts\\"() {
    \\"use strict\\";
    init_client2();
  }
});

// src/api/resources/health/client/status.ts
var status_exports = {};
__export(status_exports, {
  Error: () => Error6
});
var Error6;
var init_status = __esm({
  \\"src/api/resources/health/client/status.ts\\"() {
    \\"use strict\\";
    init_src();
    Error6 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.health.status.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/health/client/index.ts
var init_client3 = __esm({
  \\"src/api/resources/health/client/index.ts\\"() {
    \\"use strict\\";
    init_status();
  }
});

// src/api/resources/health/index.ts
var health_exports = {};
__export(health_exports, {
  status: () => status_exports
});
var init_health = __esm({
  \\"src/api/resources/health/index.ts\\"() {
    \\"use strict\\";
    init_client3();
  }
});

// src/api/resources/index.ts
var init_resources = __esm({
  \\"src/api/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen();
    init_types();
    init_fiddle();
    init_health();
    init_requests();
  }
});

// src/api/index.ts
var api_exports = {};
__export(api_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  fiddle: () => fiddle_exports,
  health: () => health_exports,
  remoteGen: () => remoteGen_exports
});
var init_api = __esm({
  \\"src/api/index.ts\\"() {
    \\"use strict\\";
    init_resources();
  }
});

// src/core/schemas/Schema.ts
var SchemaType;
var init_Schema = __esm({
  \\"src/core/schemas/Schema.ts\\"() {
    \\"use strict\\";
    SchemaType = {
      DATE: \\"date\\",
      ENUM: \\"enum\\",
      LIST: \\"list\\",
      STRING_LITERAL: \\"stringLiteral\\",
      OBJECT: \\"object\\",
      ANY: \\"any\\",
      BOOLEAN: \\"boolean\\",
      NUMBER: \\"number\\",
      STRING: \\"string\\",
      UNKNOWN: \\"unknown\\",
      RECORD: \\"record\\",
      SET: \\"set\\",
      UNION: \\"union\\",
      OPTIONAL: \\"optional\\"
    };
  }
});

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
var init_stringifyValidationErrors = __esm({
  \\"src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError;
var init_JsonError = __esm({
  \\"src/core/schemas/builders/schema-utils/JsonError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    JsonError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError;
var init_ParseError = __esm({
  \\"src/core/schemas/builders/schema-utils/ParseError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    ParseError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_getSchemaUtils = __esm({
  \\"src/core/schemas/builders/schema-utils/getSchemaUtils.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/schema-utils/index.ts
var init_schema_utils = __esm({
  \\"src/core/schemas/builders/schema-utils/index.ts\\"() {
    \\"use strict\\";
    init_getSchemaUtils();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/date/date.ts
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var ISO_8601_REGEX;
var init_date = __esm({
  \\"src/core/schemas/builders/date/date.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
    ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
  }
});

// src/core/schemas/builders/date/index.ts
var init_date2 = __esm({
  \\"src/core/schemas/builders/date/index.ts\\"() {
    \\"use strict\\";
    init_date();
  }
});

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}
var init_createIdentitySchemaCreator = __esm({
  \\"src/core/schemas/utils/createIdentitySchemaCreator.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_enum = __esm({
  \\"src/core/schemas/builders/enum/enum.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/enum/index.ts
var init_enum2 = __esm({
  \\"src/core/schemas/builders/enum/index.ts\\"() {
    \\"use strict\\";
    init_enum();
  }
});

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}
var init_lazy = __esm({
  \\"src/core/schemas/builders/lazy/lazy.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}
var init_entries = __esm({
  \\"src/core/schemas/utils/entries.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
var init_filterObject = __esm({
  \\"src/core/schemas/utils/filterObject.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/isPlainObject.ts
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}
var NOT_AN_OBJECT_ERROR_MESSAGE;
var init_isPlainObject = __esm({
  \\"src/core/schemas/utils/isPlainObject.ts\\"() {
    \\"use strict\\";
    NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
  }
});

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}
var init_keys = __esm({
  \\"src/core/schemas/utils/keys.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}
var init_partition = __esm({
  \\"src/core/schemas/utils/partition.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}
var init_getObjectLikeUtils = __esm({
  \\"src/core/schemas/builders/object-like/getObjectLikeUtils.ts\\"() {
    \\"use strict\\";
    init_filterObject();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/object-like/index.ts
var init_object_like = __esm({
  \\"src/core/schemas/builders/object-like/index.ts\\"() {
    \\"use strict\\";
    init_getObjectLikeUtils();
  }
});

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}
var init_property = __esm({
  \\"src/core/schemas/builders/object/property.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}
var init_object = __esm({
  \\"src/core/schemas/builders/object/object.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_filterObject();
    init_isPlainObject();
    init_keys();
    init_partition();
    init_object_like();
    init_schema_utils();
    init_property();
  }
});

// src/core/schemas/builders/object/index.ts
var init_object2 = __esm({
  \\"src/core/schemas/builders/object/index.ts\\"() {
    \\"use strict\\";
    init_object();
    init_property();
  }
});

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
var init_lazyObject = __esm({
  \\"src/core/schemas/builders/lazy/lazyObject.ts\\"() {
    \\"use strict\\";
    init_object2();
    init_object_like();
    init_schema_utils();
    init_lazy();
  }
});

// src/core/schemas/builders/lazy/index.ts
var init_lazy2 = __esm({
  \\"src/core/schemas/builders/lazy/index.ts\\"() {
    \\"use strict\\";
    init_lazy();
    init_lazyObject();
  }
});

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}
var init_list = __esm({
  \\"src/core/schemas/builders/list/list.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
  }
});

// src/core/schemas/builders/list/index.ts
var init_list2 = __esm({
  \\"src/core/schemas/builders/list/index.ts\\"() {
    \\"use strict\\";
    init_list();
  }
});

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_stringLiteral = __esm({
  \\"src/core/schemas/builders/literals/stringLiteral.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/literals/index.ts
var init_literals = __esm({
  \\"src/core/schemas/builders/literals/index.ts\\"() {
    \\"use strict\\";
    init_stringLiteral();
  }
});

// src/core/schemas/builders/primitives/any.ts
var any;
var init_any = __esm({
  \\"src/core/schemas/builders/primitives/any.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/boolean.ts
var boolean;
var init_boolean = __esm({
  \\"src/core/schemas/builders/primitives/boolean.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
      if (typeof value === \\"boolean\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a boolean\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/number.ts
var number;
var init_number = __esm({
  \\"src/core/schemas/builders/primitives/number.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
      if (typeof value === \\"number\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a number\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/string.ts
var string;
var init_string = __esm({
  \\"src/core/schemas/builders/primitives/string.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
      if (typeof value === \\"string\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a string\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown;
var init_unknown = __esm({
  \\"src/core/schemas/builders/primitives/unknown.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/index.ts
var init_primitives = __esm({
  \\"src/core/schemas/builders/primitives/index.ts\\"() {
    \\"use strict\\";
    init_any();
    init_boolean();
    init_number();
    init_string();
    init_unknown();
  }
});

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}
var init_record = __esm({
  \\"src/core/schemas/builders/record/record.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/record/index.ts
var init_record2 = __esm({
  \\"src/core/schemas/builders/record/index.ts\\"() {
    \\"use strict\\";
    init_record();
  }
});

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_set = __esm({
  \\"src/core/schemas/builders/set/set.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_list2();
    init_schema_utils();
  }
});

// src/core/schemas/builders/set/index.ts
var init_set2 = __esm({
  \\"src/core/schemas/builders/set/index.ts\\"() {
    \\"use strict\\";
    init_set();
  }
});

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}
var init_discriminant = __esm({
  \\"src/core/schemas/builders/union/discriminant.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}
var init_union = __esm({
  \\"src/core/schemas/builders/union/union.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_isPlainObject();
    init_keys();
    init_enum2();
    init_object_like();
    init_schema_utils();
  }
});

// src/core/schemas/builders/union/index.ts
var init_union2 = __esm({
  \\"src/core/schemas/builders/union/index.ts\\"() {
    \\"use strict\\";
    init_discriminant();
    init_union();
  }
});

// src/core/schemas/builders/index.ts
var init_builders = __esm({
  \\"src/core/schemas/builders/index.ts\\"() {
    \\"use strict\\";
    init_date2();
    init_enum2();
    init_lazy2();
    init_list2();
    init_literals();
    init_object2();
    init_object_like();
    init_primitives();
    init_record2();
    init_schema_utils();
    init_set2();
    init_union2();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});
var init_schemas = __esm({
  \\"src/core/schemas/index.ts\\"() {
    \\"use strict\\";
    init_builders();
    init_Schema();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js
var require_null = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js\\"(exports, module) {
    module.exports = null;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_null()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module) {
    module.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module.exports = axios2;
    module.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module) {
    module.exports = require_axios();
  }
});

// src/core/fetcher/Fetcher.ts
var import_axios, fetcher;
var init_Fetcher = __esm({
  \\"src/core/fetcher/Fetcher.ts\\"() {
    \\"use strict\\";
    import_axios = __toESM(require_axios2());
    fetcher = async (args) => {
      const headers = {
        \\"Content-Type\\": \\"application/json\\"
      };
      if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
          if (value != null) {
            headers[key] = value;
          }
        }
      }
      try {
        const response = await (0, import_axios.default)({
          url: args.url,
          params: args.queryParameters,
          method: args.method,
          headers,
          data: args.body,
          validateStatus: () => true,
          transformResponse: (response2) => response2,
          timeout: args.timeoutMs ?? 6e4,
          transitional: {
            clarifyTimeoutError: true
          },
          withCredentials: args.withCredentials
        });
        let body;
        if (response.data != null && response.data.length > 0) {
          try {
            body = JSON.parse(response.data) ?? void 0;
          } catch {
            return {
              ok: false,
              error: {
                reason: \\"non-json\\",
                statusCode: response.status,
                rawBody: response.data
              }
            };
          }
        }
        if (response.status >= 200 && response.status < 300) {
          return {
            ok: true,
            body
          };
        } else {
          return {
            ok: false,
            error: {
              reason: \\"status-code\\",
              statusCode: response.status,
              body
            }
          };
        }
      } catch (error) {
        if (error.code === \\"ETIMEDOUT\\") {
          return {
            ok: false,
            error: {
              reason: \\"timeout\\"
            }
          };
        }
        return {
          ok: false,
          error: {
            reason: \\"unknown\\",
            errorMessage: error.message
          }
        };
      }
    };
  }
});

// src/core/fetcher/Supplier.ts
var init_Supplier = __esm({
  \\"src/core/fetcher/Supplier.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/fetcher/index.ts
var init_fetcher = __esm({
  \\"src/core/fetcher/index.ts\\"() {
    \\"use strict\\";
    init_Fetcher();
    init_Supplier();
  }
});

// src/core/index.ts
var init_core = __esm({
  \\"src/core/index.ts\\"() {
    \\"use strict\\";
    init_schemas();
    init_fetcher();
  }
});

// src/api/resources/fiddle/client/Client.ts
var FiddleService;
var init_Client = __esm({
  \\"src/api/resources/fiddle/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    FiddleService = class {
      constructor(options) {
        this.options = options;
      }
      async test() {
        const _response = await fetcher({
          url: this.options.environment,
          method: \\"GET\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: void 0
          };
        }
        return {
          ok: false,
          error: api_exports.fiddle.test.Error._unknown(_response.error)
        };
      }
    };
  }
});

// .yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  \\".yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js\\"(exports, module) {
    (function(name, context, definition) {
      if (typeof module !== \\"undefined\\" && module.exports)
        module.exports = definition();
      else if (typeof define === \\"function\\" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })(\\"urljoin\\", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return \\"\\";
        }
        if (typeof strArray[0] !== \\"string\\") {
          throw new TypeError(\\"Url must be a string. Received \\" + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\\\\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\\\\/\\\\/\\\\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1:///\\");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1://\\");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== \\"string\\") {
            throw new TypeError(\\"Url must be a string. Received \\" + component);
          }
          if (component === \\"\\") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\\\\/]+/, \\"\\");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\\\\/]+$/, \\"\\");
          } else {
            component = component.replace(/[\\\\/]+$/, \\"/\\");
          }
          resultArray.push(component);
        }
        var str = resultArray.join(\\"/\\");
        str = str.replace(/\\\\/(\\\\?|&|#[^!])/g, \\"$1\\");
        var parts = str.split(\\"?\\");
        str = parts.shift() + (parts.length > 0 ? \\"?\\" : \\"\\") + parts.join(\\"&\\");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === \\"object\\") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// src/api/resources/health/client/Client.ts
var import_url_join, Health;
var init_Client2 = __esm({
  \\"src/api/resources/health/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join = __toESM(require_url_join());
    Health = class {
      constructor(options) {
        this.options = options;
      }
      async status() {
        const _response = await fetcher({
          url: (0, import_url_join.default)(this.options.environment, \\"/api/health\\"),
          method: \\"GET\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: void 0
          };
        }
        return {
          ok: false,
          error: api_exports.health.status.Error._unknown(_response.error)
        };
      }
    };
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenJobId.ts
var RemoteGenJobId2;
var init_RemoteGenJobId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenJobId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenJobId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts
var RemoteGenTaskId2;
var init_RemoteGenTaskId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenTaskId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenTaskId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts
var GeneratorIdAndVersion;
var init_GeneratorIdAndVersion2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorIdAndVersion = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfig.ts
var GeneratorConfig;
var init_GeneratorConfig2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfig = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      willDownloadFiles: schemas_exports.boolean(),
      outputs: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorOutputs)
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts
var GeneratorConfigV2;
var init_GeneratorConfigV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfigV2 = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      outputMode: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).OutputMode)
    });
  }
});

// src/serialization/resources/remoteGen/types/OutputMode.ts
var OutputMode2;
var init_OutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    OutputMode2 = schemas_exports.union(\\"type\\", {
      publish: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputMode),
      publishV2: schemas_exports.object({
        publishV2: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputModeV2)
      }),
      downloadFiles: schemas_exports.object({}),
      github: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubOutputMode)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"publish\\":
            return api_exports.OutputMode.publish(value);
          case \\"publishV2\\":
            return api_exports.OutputMode.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return api_exports.OutputMode.downloadFiles();
          case \\"github\\":
            return api_exports.OutputMode.github(value);
          default:
            return api_exports.OutputMode._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputMode.ts
var PublishOutputMode;
var init_PublishOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    PublishOutputMode = schemas_exports.object({
      registryOverrides: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RegistryOverrides)
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV22;
var init_PublishOutputModeV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PublishOutputModeV22 = schemas_exports.union(\\"type\\", {
      npmOverride: schemas_exports.object({
        npmOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional()
      }),
      mavenOverride: schemas_exports.object({
        mavenOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
      }),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return api_exports.PublishOutputModeV2.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return api_exports.PublishOutputModeV2.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return api_exports.PublishOutputModeV2.postman(value);
          default:
            return api_exports.PublishOutputModeV2._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RegistryOverrides.ts
var RegistryOverrides;
var init_RegistryOverrides2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
    init_core();
    RegistryOverrides = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorOutputs.ts
var GeneratorOutputs;
var init_GeneratorOutputs2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorOutputs = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutput.ts
var NpmOutput;
var init_NpmOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutput.ts
var MavenOutput;
var init_MavenOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      username: schemas_exports.string(),
      password: schemas_exports.string(),
      coordinate: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PostmanOutput.ts
var PostmanOutput;
var init_PostmanOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    PostmanOutput = schemas_exports.object({
      apiKey: schemas_exports.string(),
      workspaceId: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubOutputMode.ts
var GithubOutputMode;
var init_GithubOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    GithubOutputMode = schemas_exports.object({
      owner: schemas_exports.string(),
      repo: schemas_exports.string(),
      publishInfo: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubPublishInfo).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo2;
var init_GithubPublishInfo2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    GithubPublishInfo2 = schemas_exports.union(\\"type\\", {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutputWithOptionalToken),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutputWithOptionalCreds),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.GithubPublishInfo.npm(value);
          case \\"maven\\":
            return api_exports.GithubPublishInfo.maven(value);
          case \\"postman\\":
            return api_exports.GithubPublishInfo.postman(value);
          default:
            return api_exports.GithubPublishInfo._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var NpmOutputWithOptionalToken;
var init_NpmOutputWithOptionalToken2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutputWithOptionalToken = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var MavenOutputWithOptionalCreds;
var init_MavenOutputWithOptionalCreds2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutputWithOptionalCreds = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      coordinate: schemas_exports.string(),
      credentials: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).UsernamePassword).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/UsernamePassword.ts
var UsernamePassword;
var init_UsernamePassword2 = __esm({
  \\"src/serialization/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
    init_core();
    UsernamePassword = schemas_exports.object({
      username: schemas_exports.string(),
      password: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/Task.ts
var Task;
var init_Task2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
    init_core();
    Task = schemas_exports.object({
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskStatus),
      packages: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Package)),
      logs: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskLog))
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskStatus.ts
var TaskStatus2;
var init_TaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    TaskStatus2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      notStarted: schemas_exports.object({}),
      running: schemas_exports.object({}),
      failed: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FailedTaskStatus),
      finished: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FinishedTaskStatus)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"notStarted\\":
            return api_exports.TaskStatus.notStarted();
          case \\"running\\":
            return api_exports.TaskStatus.running();
          case \\"failed\\":
            return api_exports.TaskStatus.failed(value);
          case \\"finished\\":
            return api_exports.TaskStatus.finished(value);
          default:
            return api_exports.TaskStatus._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/FailedTaskStatus.ts
var FailedTaskStatus;
var init_FailedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FailedTaskStatus = schemas_exports.object({
      message: schemas_exports.string(),
      s3PreSignedReadUrl: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts
var FinishedTaskStatus;
var init_FinishedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FinishedTaskStatus = schemas_exports.object({
      hasFilesToDownload: schemas_exports.boolean(),
      s3PreSignedReadUrl: schemas_exports.string(),
      s3PreSignedReadUrlV2: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskLog.ts
var TaskLog;
var init_TaskLog2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
    init_core();
    TaskLog = schemas_exports.object({
      level: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).LogLevel),
      message: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/LogLevel.ts
var LogLevel2;
var init_LogLevel2 = __esm({
  \\"src/serialization/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    init_core();
    LogLevel2 = schemas_exports.enum_([
      \\"DEBUG\\",
      \\"INFO\\",
      \\"WARN\\",
      \\"ERROR\\"
    ]);
  }
});

// src/serialization/resources/remoteGen/types/Package.ts
var Package;
var init_Package2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
    init_core();
    Package = schemas_exports.object({
      coordinate: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackageCoordinate),
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackagePublishStatus)
    });
  }
});

// src/serialization/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus2;
var init_PackagePublishStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    PackagePublishStatus2 = schemas_exports.enum_([\\"NOT_STARTED_PUBLISHING\\", \\"PUBLISHING\\", \\"PUBLISHED\\", \\"FAILED_TO_PUBLISH\\"]);
  }
});

// src/serialization/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate2;
var init_PackageCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PackageCoordinate2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmCoordinate),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenCoordinate),
      pypi: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PypiCoordinate)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.PackageCoordinate.npm(value);
          case \\"maven\\":
            return api_exports.PackageCoordinate.maven(value);
          case \\"pypi\\":
            return api_exports.PackageCoordinate.pypi(value);
          default:
            return api_exports.PackageCoordinate._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmCoordinate.ts
var NpmCoordinate;
var init_NpmCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenCoordinate.ts
var MavenCoordinate;
var init_MavenCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenCoordinate = schemas_exports.object({
      group: schemas_exports.string(),
      artifact: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PypiCoordinate.ts
var PypiCoordinate;
var init_PypiCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    PypiCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CreateJobResponse.ts
var CreateJobResponse;
var init_CreateJobResponse2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobResponse = schemas_exports.object({
      jobId: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenJobId),
      taskIds: schemas_exports.list(schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId))
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var GeneratorsDoNotExistErrorBodyType;
var init_GeneratorsDoNotExistErrorBodyType2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorsDoNotExistErrorBodyType = schemas_exports.object({
      nonExistentGenerators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorIdAndVersion)
      )
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var CannotPublishToNpmScopeDetails;
var init_CannotPublishToNpmScopeDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToNpmScopeDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidScope: schemas_exports.string(),
      validScope: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var CannotPublishToMavenGroupDetails;
var init_CannotPublishToMavenGroupDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToMavenGroupDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidGroup: schemas_exports.string(),
      validGroup: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var InsufficientPermissionsDetails;
var init_InsufficientPermissionsDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    InsufficientPermissionsDetails = schemas_exports.object({
      dummy: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/index.ts
var init_types2 = __esm({
  \\"src/serialization/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId2();
    init_RemoteGenTaskId2();
    init_GeneratorIdAndVersion2();
    init_GeneratorConfig2();
    init_GeneratorConfigV22();
    init_OutputMode2();
    init_PublishOutputMode2();
    init_PublishOutputModeV22();
    init_RegistryOverrides2();
    init_GeneratorOutputs2();
    init_NpmOutput2();
    init_MavenOutput2();
    init_PostmanOutput2();
    init_GithubOutputMode2();
    init_GithubPublishInfo2();
    init_NpmOutputWithOptionalToken2();
    init_MavenOutputWithOptionalCreds2();
    init_UsernamePassword2();
    init_Task2();
    init_TaskStatus2();
    init_FailedTaskStatus2();
    init_FinishedTaskStatus2();
    init_TaskLog2();
    init_LogLevel2();
    init_Package2();
    init_PackagePublishStatus2();
    init_PackageCoordinate2();
    init_NpmCoordinate2();
    init_MavenCoordinate2();
    init_PypiCoordinate2();
    init_CreateJobResponse2();
    init_GeneratorsDoNotExistErrorBodyType2();
    init_CannotPublishToNpmScopeDetails2();
    init_CannotPublishToMavenGroupDetails2();
    init_InsufficientPermissionsDetails2();
  }
});

// src/serialization/resources/remoteGen/client/createJob.ts
var createJob_exports2 = {};
__export(createJob_exports2, {
  Error: () => Error7
});
var Error7;
var init_createJob2 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error7 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJob.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJob.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJob.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports2 = {};
__export(createJobV2_exports2, {
  Error: () => Error8
});
var Error8;
var init_createJobV22 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error8 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJobV2.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJobV2.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJobV2.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports2 = {};
__export(getJobStatus_exports2, {
  Response: () => Response
});
var Response;
var init_getJobStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    Response = schemas_exports.record(
      schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId),
      schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Task).optional()
    );
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts
var CreateJobRequest;
var init_CreateJobRequest = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequest = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfig)
      )
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts
var CreateJobRequestV2;
var init_CreateJobRequestV2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequestV2 = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfigV2)
      ),
      uploadToS3: schemas_exports.boolean().optional()
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/index.ts
var init_requests2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
    init_CreateJobRequest();
    init_CreateJobRequestV2();
  }
});

// src/serialization/resources/remoteGen/client/index.ts
var init_client4 = __esm({
  \\"src/serialization/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_createJob2();
    init_createJobV22();
    init_getJobStatus2();
    init_requests2();
  }
});

// src/serialization/resources/remoteGen/index.ts
var remoteGen_exports2 = {};
__export(remoteGen_exports2, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  createJob: () => createJob_exports2,
  createJobV2: () => createJobV2_exports2,
  getJobStatus: () => getJobStatus_exports2
});
var init_remoteGen2 = __esm({
  \\"src/serialization/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types2();
    init_client4();
  }
});

// src/serialization/resources/index.ts
var init_resources2 = __esm({
  \\"src/serialization/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen2();
    init_types2();
    init_requests2();
  }
});

// src/serialization/index.ts
var serialization_exports = {};
__export(serialization_exports, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  remoteGen: () => remoteGen_exports2
});
var init_serialization = __esm({
  \\"src/serialization/index.ts\\"() {
    \\"use strict\\";
    init_resources2();
  }
});

// src/api/resources/remoteGen/client/Client.ts
var import_url_join2, RemoteGen;
var init_Client3 = __esm({
  \\"src/api/resources/remoteGen/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join2 = __toESM(require_url_join());
    init_serialization();
    RemoteGen = class {
      constructor(options) {
        this.options = options;
      }
      async createJob(request) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(this.options.environment, \\"/api/remote-gen/create-job\\"),
          method: \\"POST\\",
          body: await CreateJobRequest.jsonOrThrow(request)
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await CreateJobResponse.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        if (_response.error.reason === \\"status-code\\") {
          switch (_response.error.body?.error) {
            case \\"IllegalApiNameError\\":
            case \\"GeneratorsDoNotExistError\\":
            case \\"CannotPublishToNpmScope\\":
            case \\"CannotPublishToMavenGroup\\":
            case \\"InsufficientPermissions\\":
              return {
                ok: false,
                error: await remoteGen_exports2.createJob.Error.parseOrThrow(
                  _response.error.body,
                  { allowUnknownKeys: true }
                )
              };
          }
        }
        return {
          ok: false,
          error: api_exports.remoteGen.createJob.Error._unknown(_response.error)
        };
      }
      async createJobV2(request) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(this.options.environment, \\"/api/remote-gen/create-job-v2\\"),
          method: \\"POST\\",
          body: await CreateJobRequestV2.jsonOrThrow(request)
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await CreateJobResponse.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        if (_response.error.reason === \\"status-code\\") {
          switch (_response.error.body?.error) {
            case \\"IllegalApiNameError\\":
            case \\"GeneratorsDoNotExistError\\":
            case \\"CannotPublishToNpmScope\\":
            case \\"CannotPublishToMavenGroup\\":
            case \\"InsufficientPermissions\\":
              return {
                ok: false,
                error: await remoteGen_exports2.createJobV2.Error.parseOrThrow(
                  _response.error.body,
                  { allowUnknownKeys: true }
                )
              };
          }
        }
        return {
          ok: false,
          error: api_exports.remoteGen.createJobV2.Error._unknown(_response.error)
        };
      }
      async getJobStatus(jobId) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(
            this.options.environment,
            \`/api/remote-gen/jobs/\${await RemoteGenJobId2.jsonOrThrow(jobId)}/status\`
          ),
          method: \\"POST\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await remoteGen_exports2.getJobStatus.Response.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        return {
          ok: false,
          error: api_exports.remoteGen.getJobStatus.Error._unknown(_response.error)
        };
      }
    };
  }
});

// src/Client.ts
var FiddleClient;
var init_Client4 = __esm({
  \\"src/Client.ts\\"() {
    \\"use strict\\";
    init_Client();
    init_Client2();
    init_Client3();
    FiddleClient = class {
      constructor(options) {
        this.options = options;
      }
      _fiddle;
      get fiddle() {
        return this._fiddle ??= new FiddleService(this.options);
      }
      _health;
      get health() {
        return this._health ??= new Health(this.options);
      }
      _remoteGen;
      get remoteGen() {
        return this._remoteGen ??= new RemoteGen(this.options);
      }
    };
  }
});

// src/index.ts
var init_src = __esm({
  \\"src/index.ts\\"() {
    init_api();
    init_Client4();
  }
});
init_src();
export {
  api_exports as Fiddle,
  FiddleClient
};
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));

// src/api/resources/remoteGen/types/RemoteGenJobId.ts
function RemoteGenJobId(value) {
  return value;
}
var init_RemoteGenJobId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/RemoteGenTaskId.ts
function RemoteGenTaskId(value) {
  return value;
}
var init_RemoteGenTaskId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts
var init_GeneratorIdAndVersion = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfig.ts
var init_GeneratorConfig = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfigV2.ts
var init_GeneratorConfigV2 = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/OutputMode.ts
var OutputMode;
var init_OutputMode = __esm({
  \\"src/api/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    OutputMode = {
      publish: (value) => {
        return {
          ...value,
          type: \\"publish\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      publishV2: (value) => {
        return {
          publishV2: value,
          type: \\"publishV2\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      downloadFiles: () => {
        return {
          type: \\"downloadFiles\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      github: (value) => {
        return {
          ...value,
          type: \\"github\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"publish\\":
            return visitor.publish(value);
          case \\"publishV2\\":
            return visitor.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return visitor.downloadFiles();
          case \\"github\\":
            return visitor.github(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/PublishOutputMode.ts
var init_PublishOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV2;
var init_PublishOutputModeV2 = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    PublishOutputModeV2 = {
      npmOverride: (value) => {
        return {
          npmOverride: value,
          type: \\"npmOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      mavenOverride: (value) => {
        return {
          mavenOverride: value,
          type: \\"mavenOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return visitor.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return visitor.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/RegistryOverrides.ts
var init_RegistryOverrides = __esm({
  \\"src/api/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorOutputs.ts
var init_GeneratorOutputs = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/NpmOutput.ts
var init_NpmOutput = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutput.ts
var init_MavenOutput = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PostmanOutput.ts
var init_PostmanOutput = __esm({
  \\"src/api/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubOutputMode.ts
var init_GithubOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo;
var init_GithubPublishInfo = __esm({
  \\"src/api/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    GithubPublishInfo = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var init_NpmOutputWithOptionalToken = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var init_MavenOutputWithOptionalCreds = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/UsernamePassword.ts
var init_UsernamePassword = __esm({
  \\"src/api/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/Task.ts
var init_Task = __esm({
  \\"src/api/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskStatus.ts
var TaskStatus;
var init_TaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    TaskStatus = {
      notStarted: () => {
        return {
          type: \\"notStarted\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      running: () => {
        return {
          type: \\"running\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      failed: (value) => {
        return {
          ...value,
          type: \\"failed\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      finished: (value) => {
        return {
          ...value,
          type: \\"finished\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"notStarted\\":
            return visitor.notStarted();
          case \\"running\\":
            return visitor.running();
          case \\"failed\\":
            return visitor.failed(value);
          case \\"finished\\":
            return visitor.finished(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/FailedTaskStatus.ts
var init_FailedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/FinishedTaskStatus.ts
var init_FinishedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskLog.ts
var init_TaskLog = __esm({
  \\"src/api/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/LogLevel.ts
var LogLevel;
var init_LogLevel = __esm({
  \\"src/api/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    LogLevel = {
      Debug: \\"DEBUG\\",
      Info: \\"INFO\\",
      Warn: \\"WARN\\",
      Error: \\"ERROR\\"
    };
  }
});

// src/api/resources/remoteGen/types/Package.ts
var init_Package = __esm({
  \\"src/api/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus;
var init_PackagePublishStatus = __esm({
  \\"src/api/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    PackagePublishStatus = {
      NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\",
      Publishing: \\"PUBLISHING\\",
      Published: \\"PUBLISHED\\",
      FailedToPublish: \\"FAILED_TO_PUBLISH\\"
    };
  }
});

// src/api/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate;
var init_PackageCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    PackageCoordinate = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      pypi: (value) => {
        return {
          ...value,
          type: \\"pypi\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"pypi\\":
            return visitor.pypi(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmCoordinate.ts
var init_NpmCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenCoordinate.ts
var init_MavenCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PypiCoordinate.ts
var init_PypiCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CreateJobResponse.ts
var init_CreateJobResponse = __esm({
  \\"src/api/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var init_GeneratorsDoNotExistErrorBodyType = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var init_CannotPublishToNpmScopeDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var init_CannotPublishToMavenGroupDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var init_InsufficientPermissionsDetails = __esm({
  \\"src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/index.ts
var init_types = __esm({
  \\"src/api/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId();
    init_RemoteGenTaskId();
    init_GeneratorIdAndVersion();
    init_GeneratorConfig();
    init_GeneratorConfigV2();
    init_OutputMode();
    init_PublishOutputMode();
    init_PublishOutputModeV2();
    init_RegistryOverrides();
    init_GeneratorOutputs();
    init_NpmOutput();
    init_MavenOutput();
    init_PostmanOutput();
    init_GithubOutputMode();
    init_GithubPublishInfo();
    init_NpmOutputWithOptionalToken();
    init_MavenOutputWithOptionalCreds();
    init_UsernamePassword();
    init_Task();
    init_TaskStatus();
    init_FailedTaskStatus();
    init_FinishedTaskStatus();
    init_TaskLog();
    init_LogLevel();
    init_Package();
    init_PackagePublishStatus();
    init_PackageCoordinate();
    init_NpmCoordinate();
    init_MavenCoordinate();
    init_PypiCoordinate();
    init_CreateJobResponse();
    init_GeneratorsDoNotExistErrorBodyType();
    init_CannotPublishToNpmScopeDetails();
    init_CannotPublishToMavenGroupDetails();
    init_InsufficientPermissionsDetails();
  }
});

// src/api/resources/remoteGen/client/requests/index.ts
var init_requests = __esm({
  \\"src/api/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/client/createJob.ts
var createJob_exports = {};
__export(createJob_exports, {
  Error: () => Error2
});
var Error2;
var init_createJob = __esm({
  \\"src/api/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    Error2 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports = {};
__export(createJobV2_exports, {
  Error: () => Error3
});
var Error3;
var init_createJobV2 = __esm({
  \\"src/api/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    Error3 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports = {};
__export(getJobStatus_exports, {
  Error: () => Error4
});
var Error4;
var init_getJobStatus = __esm({
  \\"src/api/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    Error4 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.getJobStatus.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/index.ts
var init_client = __esm({
  \\"src/api/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_requests();
    init_createJob();
    init_createJobV2();
    init_getJobStatus();
  }
});

// src/api/resources/remoteGen/index.ts
var remoteGen_exports = {};
__export(remoteGen_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  createJob: () => createJob_exports,
  createJobV2: () => createJobV2_exports,
  getJobStatus: () => getJobStatus_exports
});
var init_remoteGen = __esm({
  \\"src/api/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types();
    init_client();
  }
});

// src/api/resources/fiddle/client/test.ts
var test_exports = {};
__export(test_exports, {
  Error: () => Error5
});
var Error5;
var init_test = __esm({
  \\"src/api/resources/fiddle/client/test.ts\\"() {
    \\"use strict\\";
    init_src();
    Error5 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.fiddle.test.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/fiddle/client/index.ts
var init_client2 = __esm({
  \\"src/api/resources/fiddle/client/index.ts\\"() {
    \\"use strict\\";
    init_test();
  }
});

// src/api/resources/fiddle/index.ts
var fiddle_exports = {};
__export(fiddle_exports, {
  test: () => test_exports
});
var init_fiddle = __esm({
  \\"src/api/resources/fiddle/index.ts\\"() {
    \\"use strict\\";
    init_client2();
  }
});

// src/api/resources/health/client/status.ts
var status_exports = {};
__export(status_exports, {
  Error: () => Error6
});
var Error6;
var init_status = __esm({
  \\"src/api/resources/health/client/status.ts\\"() {
    \\"use strict\\";
    init_src();
    Error6 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.health.status.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/health/client/index.ts
var init_client3 = __esm({
  \\"src/api/resources/health/client/index.ts\\"() {
    \\"use strict\\";
    init_status();
  }
});

// src/api/resources/health/index.ts
var health_exports = {};
__export(health_exports, {
  status: () => status_exports
});
var init_health = __esm({
  \\"src/api/resources/health/index.ts\\"() {
    \\"use strict\\";
    init_client3();
  }
});

// src/api/resources/index.ts
var init_resources = __esm({
  \\"src/api/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen();
    init_types();
    init_fiddle();
    init_health();
    init_requests();
  }
});

// src/api/index.ts
var api_exports = {};
__export(api_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  fiddle: () => fiddle_exports,
  health: () => health_exports,
  remoteGen: () => remoteGen_exports
});
var init_api = __esm({
  \\"src/api/index.ts\\"() {
    \\"use strict\\";
    init_resources();
  }
});

// src/core/schemas/Schema.ts
var SchemaType;
var init_Schema = __esm({
  \\"src/core/schemas/Schema.ts\\"() {
    \\"use strict\\";
    SchemaType = {
      DATE: \\"date\\",
      ENUM: \\"enum\\",
      LIST: \\"list\\",
      STRING_LITERAL: \\"stringLiteral\\",
      OBJECT: \\"object\\",
      ANY: \\"any\\",
      BOOLEAN: \\"boolean\\",
      NUMBER: \\"number\\",
      STRING: \\"string\\",
      UNKNOWN: \\"unknown\\",
      RECORD: \\"record\\",
      SET: \\"set\\",
      UNION: \\"union\\",
      OPTIONAL: \\"optional\\"
    };
  }
});

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
var init_stringifyValidationErrors = __esm({
  \\"src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError;
var init_JsonError = __esm({
  \\"src/core/schemas/builders/schema-utils/JsonError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    JsonError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError;
var init_ParseError = __esm({
  \\"src/core/schemas/builders/schema-utils/ParseError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    ParseError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_getSchemaUtils = __esm({
  \\"src/core/schemas/builders/schema-utils/getSchemaUtils.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/schema-utils/index.ts
var init_schema_utils = __esm({
  \\"src/core/schemas/builders/schema-utils/index.ts\\"() {
    \\"use strict\\";
    init_getSchemaUtils();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/date/date.ts
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var ISO_8601_REGEX;
var init_date = __esm({
  \\"src/core/schemas/builders/date/date.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
    ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
  }
});

// src/core/schemas/builders/date/index.ts
var init_date2 = __esm({
  \\"src/core/schemas/builders/date/index.ts\\"() {
    \\"use strict\\";
    init_date();
  }
});

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}
var init_createIdentitySchemaCreator = __esm({
  \\"src/core/schemas/utils/createIdentitySchemaCreator.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_enum = __esm({
  \\"src/core/schemas/builders/enum/enum.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/enum/index.ts
var init_enum2 = __esm({
  \\"src/core/schemas/builders/enum/index.ts\\"() {
    \\"use strict\\";
    init_enum();
  }
});

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}
var init_lazy = __esm({
  \\"src/core/schemas/builders/lazy/lazy.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}
var init_entries = __esm({
  \\"src/core/schemas/utils/entries.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
var init_filterObject = __esm({
  \\"src/core/schemas/utils/filterObject.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/isPlainObject.ts
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}
var NOT_AN_OBJECT_ERROR_MESSAGE;
var init_isPlainObject = __esm({
  \\"src/core/schemas/utils/isPlainObject.ts\\"() {
    \\"use strict\\";
    NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
  }
});

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}
var init_keys = __esm({
  \\"src/core/schemas/utils/keys.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}
var init_partition = __esm({
  \\"src/core/schemas/utils/partition.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}
var init_getObjectLikeUtils = __esm({
  \\"src/core/schemas/builders/object-like/getObjectLikeUtils.ts\\"() {
    \\"use strict\\";
    init_filterObject();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/object-like/index.ts
var init_object_like = __esm({
  \\"src/core/schemas/builders/object-like/index.ts\\"() {
    \\"use strict\\";
    init_getObjectLikeUtils();
  }
});

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}
var init_property = __esm({
  \\"src/core/schemas/builders/object/property.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: opts?.allowUnknownKeys ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}
var init_object = __esm({
  \\"src/core/schemas/builders/object/object.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_filterObject();
    init_isPlainObject();
    init_keys();
    init_partition();
    init_object_like();
    init_schema_utils();
    init_property();
  }
});

// src/core/schemas/builders/object/index.ts
var init_object2 = __esm({
  \\"src/core/schemas/builders/object/index.ts\\"() {
    \\"use strict\\";
    init_object();
    init_property();
  }
});

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
var init_lazyObject = __esm({
  \\"src/core/schemas/builders/lazy/lazyObject.ts\\"() {
    \\"use strict\\";
    init_object2();
    init_object_like();
    init_schema_utils();
    init_lazy();
  }
});

// src/core/schemas/builders/lazy/index.ts
var init_lazy2 = __esm({
  \\"src/core/schemas/builders/lazy/index.ts\\"() {
    \\"use strict\\";
    init_lazy();
    init_lazyObject();
  }
});

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}
var init_list = __esm({
  \\"src/core/schemas/builders/list/list.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
  }
});

// src/core/schemas/builders/list/index.ts
var init_list2 = __esm({
  \\"src/core/schemas/builders/list/index.ts\\"() {
    \\"use strict\\";
    init_list();
  }
});

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_stringLiteral = __esm({
  \\"src/core/schemas/builders/literals/stringLiteral.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/literals/index.ts
var init_literals = __esm({
  \\"src/core/schemas/builders/literals/index.ts\\"() {
    \\"use strict\\";
    init_stringLiteral();
  }
});

// src/core/schemas/builders/primitives/any.ts
var any;
var init_any = __esm({
  \\"src/core/schemas/builders/primitives/any.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/boolean.ts
var boolean;
var init_boolean = __esm({
  \\"src/core/schemas/builders/primitives/boolean.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
      if (typeof value === \\"boolean\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a boolean\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/number.ts
var number;
var init_number = __esm({
  \\"src/core/schemas/builders/primitives/number.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
      if (typeof value === \\"number\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a number\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/string.ts
var string;
var init_string = __esm({
  \\"src/core/schemas/builders/primitives/string.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
      if (typeof value === \\"string\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a string\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown;
var init_unknown = __esm({
  \\"src/core/schemas/builders/primitives/unknown.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/index.ts
var init_primitives = __esm({
  \\"src/core/schemas/builders/primitives/index.ts\\"() {
    \\"use strict\\";
    init_any();
    init_boolean();
    init_number();
    init_string();
    init_unknown();
  }
});

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}
var init_record = __esm({
  \\"src/core/schemas/builders/record/record.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/record/index.ts
var init_record2 = __esm({
  \\"src/core/schemas/builders/record/index.ts\\"() {
    \\"use strict\\";
    init_record();
  }
});

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_set = __esm({
  \\"src/core/schemas/builders/set/set.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_list2();
    init_schema_utils();
  }
});

// src/core/schemas/builders/set/index.ts
var init_set2 = __esm({
  \\"src/core/schemas/builders/set/index.ts\\"() {
    \\"use strict\\";
    init_set();
  }
});

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}
var init_discriminant = __esm({
  \\"src/core/schemas/builders/union/discriminant.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        opts?.allowUnknownKeys ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}
var init_union = __esm({
  \\"src/core/schemas/builders/union/union.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_isPlainObject();
    init_keys();
    init_enum2();
    init_object_like();
    init_schema_utils();
  }
});

// src/core/schemas/builders/union/index.ts
var init_union2 = __esm({
  \\"src/core/schemas/builders/union/index.ts\\"() {
    \\"use strict\\";
    init_discriminant();
    init_union();
  }
});

// src/core/schemas/builders/index.ts
var init_builders = __esm({
  \\"src/core/schemas/builders/index.ts\\"() {
    \\"use strict\\";
    init_date2();
    init_enum2();
    init_lazy2();
    init_list2();
    init_literals();
    init_object2();
    init_object_like();
    init_primitives();
    init_record2();
    init_schema_utils();
    init_set2();
    init_union2();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});
var init_schemas = __esm({
  \\"src/core/schemas/index.ts\\"() {
    \\"use strict\\";
    init_builders();
    init_Schema();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js
var require_null = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/null.js\\"(exports, module) {
    module.exports = null;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_xhr();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_null()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module) {
    module.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module) {
    \\"use strict\\";
    module.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    module.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module.exports = axios2;
    module.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module) {
    module.exports = require_axios();
  }
});

// src/core/fetcher/Fetcher.ts
var import_axios;
var init_Fetcher = __esm({
  \\"src/core/fetcher/Fetcher.ts\\"() {
    \\"use strict\\";
    import_axios = __toESM(require_axios2());
  }
});

// src/core/fetcher/Supplier.ts
var init_Supplier = __esm({
  \\"src/core/fetcher/Supplier.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/fetcher/index.ts
var init_fetcher = __esm({
  \\"src/core/fetcher/index.ts\\"() {
    \\"use strict\\";
    init_Fetcher();
    init_Supplier();
  }
});

// src/core/index.ts
var init_core = __esm({
  \\"src/core/index.ts\\"() {
    \\"use strict\\";
    init_schemas();
    init_fetcher();
  }
});

// src/api/resources/fiddle/client/Client.ts
var init_Client = __esm({
  \\"src/api/resources/fiddle/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
  }
});

// .yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  \\".yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js\\"(exports, module) {
    (function(name, context, definition) {
      if (typeof module !== \\"undefined\\" && module.exports)
        module.exports = definition();
      else if (typeof define === \\"function\\" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })(\\"urljoin\\", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return \\"\\";
        }
        if (typeof strArray[0] !== \\"string\\") {
          throw new TypeError(\\"Url must be a string. Received \\" + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\\\\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\\\\/\\\\/\\\\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1:///\\");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1://\\");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== \\"string\\") {
            throw new TypeError(\\"Url must be a string. Received \\" + component);
          }
          if (component === \\"\\") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\\\\/]+/, \\"\\");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\\\\/]+$/, \\"\\");
          } else {
            component = component.replace(/[\\\\/]+$/, \\"/\\");
          }
          resultArray.push(component);
        }
        var str = resultArray.join(\\"/\\");
        str = str.replace(/\\\\/(\\\\?|&|#[^!])/g, \\"$1\\");
        var parts = str.split(\\"?\\");
        str = parts.shift() + (parts.length > 0 ? \\"?\\" : \\"\\") + parts.join(\\"&\\");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === \\"object\\") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// src/api/resources/health/client/Client.ts
var import_url_join;
var init_Client2 = __esm({
  \\"src/api/resources/health/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join = __toESM(require_url_join());
  }
});

// src/api/resources/remoteGen/client/Client.ts
var import_url_join2;
var init_Client3 = __esm({
  \\"src/api/resources/remoteGen/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join2 = __toESM(require_url_join());
    init_serialization();
  }
});

// src/Client.ts
var init_Client4 = __esm({
  \\"src/Client.ts\\"() {
    \\"use strict\\";
    init_Client();
    init_Client2();
    init_Client3();
  }
});

// src/index.ts
var init_src = __esm({
  \\"src/index.ts\\"() {
    \\"use strict\\";
    init_api();
    init_Client4();
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenJobId.ts
var RemoteGenJobId2;
var init_RemoteGenJobId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenJobId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenJobId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts
var RemoteGenTaskId2;
var init_RemoteGenTaskId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenTaskId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenTaskId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts
var GeneratorIdAndVersion;
var init_GeneratorIdAndVersion2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorIdAndVersion = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfig.ts
var GeneratorConfig;
var init_GeneratorConfig2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfig = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      willDownloadFiles: schemas_exports.boolean(),
      outputs: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorOutputs)
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts
var GeneratorConfigV2;
var init_GeneratorConfigV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfigV2 = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      outputMode: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).OutputMode)
    });
  }
});

// src/serialization/resources/remoteGen/types/OutputMode.ts
var OutputMode2;
var init_OutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    OutputMode2 = schemas_exports.union(\\"type\\", {
      publish: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputMode),
      publishV2: schemas_exports.object({
        publishV2: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputModeV2)
      }),
      downloadFiles: schemas_exports.object({}),
      github: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubOutputMode)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"publish\\":
            return api_exports.OutputMode.publish(value);
          case \\"publishV2\\":
            return api_exports.OutputMode.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return api_exports.OutputMode.downloadFiles();
          case \\"github\\":
            return api_exports.OutputMode.github(value);
          default:
            return api_exports.OutputMode._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputMode.ts
var PublishOutputMode;
var init_PublishOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    PublishOutputMode = schemas_exports.object({
      registryOverrides: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RegistryOverrides)
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV22;
var init_PublishOutputModeV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PublishOutputModeV22 = schemas_exports.union(\\"type\\", {
      npmOverride: schemas_exports.object({
        npmOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional()
      }),
      mavenOverride: schemas_exports.object({
        mavenOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
      }),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return api_exports.PublishOutputModeV2.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return api_exports.PublishOutputModeV2.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return api_exports.PublishOutputModeV2.postman(value);
          default:
            return api_exports.PublishOutputModeV2._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RegistryOverrides.ts
var RegistryOverrides;
var init_RegistryOverrides2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
    init_core();
    RegistryOverrides = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorOutputs.ts
var GeneratorOutputs;
var init_GeneratorOutputs2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorOutputs = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutput.ts
var NpmOutput;
var init_NpmOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutput.ts
var MavenOutput;
var init_MavenOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      username: schemas_exports.string(),
      password: schemas_exports.string(),
      coordinate: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PostmanOutput.ts
var PostmanOutput;
var init_PostmanOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    PostmanOutput = schemas_exports.object({
      apiKey: schemas_exports.string(),
      workspaceId: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubOutputMode.ts
var GithubOutputMode;
var init_GithubOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    GithubOutputMode = schemas_exports.object({
      owner: schemas_exports.string(),
      repo: schemas_exports.string(),
      publishInfo: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubPublishInfo).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo2;
var init_GithubPublishInfo2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    GithubPublishInfo2 = schemas_exports.union(\\"type\\", {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutputWithOptionalToken),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutputWithOptionalCreds),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.GithubPublishInfo.npm(value);
          case \\"maven\\":
            return api_exports.GithubPublishInfo.maven(value);
          case \\"postman\\":
            return api_exports.GithubPublishInfo.postman(value);
          default:
            return api_exports.GithubPublishInfo._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var NpmOutputWithOptionalToken;
var init_NpmOutputWithOptionalToken2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutputWithOptionalToken = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var MavenOutputWithOptionalCreds;
var init_MavenOutputWithOptionalCreds2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutputWithOptionalCreds = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      coordinate: schemas_exports.string(),
      credentials: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).UsernamePassword).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/UsernamePassword.ts
var UsernamePassword;
var init_UsernamePassword2 = __esm({
  \\"src/serialization/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
    init_core();
    UsernamePassword = schemas_exports.object({
      username: schemas_exports.string(),
      password: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/Task.ts
var Task;
var init_Task2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
    init_core();
    Task = schemas_exports.object({
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskStatus),
      packages: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Package)),
      logs: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskLog))
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskStatus.ts
var TaskStatus2;
var init_TaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    TaskStatus2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      notStarted: schemas_exports.object({}),
      running: schemas_exports.object({}),
      failed: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FailedTaskStatus),
      finished: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FinishedTaskStatus)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"notStarted\\":
            return api_exports.TaskStatus.notStarted();
          case \\"running\\":
            return api_exports.TaskStatus.running();
          case \\"failed\\":
            return api_exports.TaskStatus.failed(value);
          case \\"finished\\":
            return api_exports.TaskStatus.finished(value);
          default:
            return api_exports.TaskStatus._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/FailedTaskStatus.ts
var FailedTaskStatus;
var init_FailedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FailedTaskStatus = schemas_exports.object({
      message: schemas_exports.string(),
      s3PreSignedReadUrl: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts
var FinishedTaskStatus;
var init_FinishedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FinishedTaskStatus = schemas_exports.object({
      hasFilesToDownload: schemas_exports.boolean(),
      s3PreSignedReadUrl: schemas_exports.string(),
      s3PreSignedReadUrlV2: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskLog.ts
var TaskLog;
var init_TaskLog2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
    init_core();
    TaskLog = schemas_exports.object({
      level: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).LogLevel),
      message: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/LogLevel.ts
var LogLevel2;
var init_LogLevel2 = __esm({
  \\"src/serialization/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    init_core();
    LogLevel2 = schemas_exports.enum_([
      \\"DEBUG\\",
      \\"INFO\\",
      \\"WARN\\",
      \\"ERROR\\"
    ]);
  }
});

// src/serialization/resources/remoteGen/types/Package.ts
var Package;
var init_Package2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
    init_core();
    Package = schemas_exports.object({
      coordinate: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackageCoordinate),
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackagePublishStatus)
    });
  }
});

// src/serialization/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus2;
var init_PackagePublishStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    PackagePublishStatus2 = schemas_exports.enum_([\\"NOT_STARTED_PUBLISHING\\", \\"PUBLISHING\\", \\"PUBLISHED\\", \\"FAILED_TO_PUBLISH\\"]);
  }
});

// src/serialization/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate2;
var init_PackageCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PackageCoordinate2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmCoordinate),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenCoordinate),
      pypi: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PypiCoordinate)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.PackageCoordinate.npm(value);
          case \\"maven\\":
            return api_exports.PackageCoordinate.maven(value);
          case \\"pypi\\":
            return api_exports.PackageCoordinate.pypi(value);
          default:
            return api_exports.PackageCoordinate._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmCoordinate.ts
var NpmCoordinate;
var init_NpmCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenCoordinate.ts
var MavenCoordinate;
var init_MavenCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenCoordinate = schemas_exports.object({
      group: schemas_exports.string(),
      artifact: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PypiCoordinate.ts
var PypiCoordinate;
var init_PypiCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    PypiCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CreateJobResponse.ts
var CreateJobResponse;
var init_CreateJobResponse2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobResponse = schemas_exports.object({
      jobId: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenJobId),
      taskIds: schemas_exports.list(schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId))
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var GeneratorsDoNotExistErrorBodyType;
var init_GeneratorsDoNotExistErrorBodyType2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorsDoNotExistErrorBodyType = schemas_exports.object({
      nonExistentGenerators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorIdAndVersion)
      )
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var CannotPublishToNpmScopeDetails;
var init_CannotPublishToNpmScopeDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToNpmScopeDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidScope: schemas_exports.string(),
      validScope: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var CannotPublishToMavenGroupDetails;
var init_CannotPublishToMavenGroupDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToMavenGroupDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidGroup: schemas_exports.string(),
      validGroup: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var InsufficientPermissionsDetails;
var init_InsufficientPermissionsDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    InsufficientPermissionsDetails = schemas_exports.object({
      dummy: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/index.ts
var init_types2 = __esm({
  \\"src/serialization/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId2();
    init_RemoteGenTaskId2();
    init_GeneratorIdAndVersion2();
    init_GeneratorConfig2();
    init_GeneratorConfigV22();
    init_OutputMode2();
    init_PublishOutputMode2();
    init_PublishOutputModeV22();
    init_RegistryOverrides2();
    init_GeneratorOutputs2();
    init_NpmOutput2();
    init_MavenOutput2();
    init_PostmanOutput2();
    init_GithubOutputMode2();
    init_GithubPublishInfo2();
    init_NpmOutputWithOptionalToken2();
    init_MavenOutputWithOptionalCreds2();
    init_UsernamePassword2();
    init_Task2();
    init_TaskStatus2();
    init_FailedTaskStatus2();
    init_FinishedTaskStatus2();
    init_TaskLog2();
    init_LogLevel2();
    init_Package2();
    init_PackagePublishStatus2();
    init_PackageCoordinate2();
    init_NpmCoordinate2();
    init_MavenCoordinate2();
    init_PypiCoordinate2();
    init_CreateJobResponse2();
    init_GeneratorsDoNotExistErrorBodyType2();
    init_CannotPublishToNpmScopeDetails2();
    init_CannotPublishToMavenGroupDetails2();
    init_InsufficientPermissionsDetails2();
  }
});

// src/serialization/resources/remoteGen/client/createJob.ts
var createJob_exports2 = {};
__export(createJob_exports2, {
  Error: () => Error7
});
var Error7;
var init_createJob2 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error7 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJob.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJob.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJob.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports2 = {};
__export(createJobV2_exports2, {
  Error: () => Error8
});
var Error8;
var init_createJobV22 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error8 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJobV2.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJobV2.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJobV2.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports2 = {};
__export(getJobStatus_exports2, {
  Response: () => Response
});
var Response;
var init_getJobStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    Response = schemas_exports.record(
      schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId),
      schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Task).optional()
    );
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts
var CreateJobRequest;
var init_CreateJobRequest = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequest = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfig)
      )
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts
var CreateJobRequestV2;
var init_CreateJobRequestV2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequestV2 = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfigV2)
      ),
      uploadToS3: schemas_exports.boolean().optional()
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/index.ts
var init_requests2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
    init_CreateJobRequest();
    init_CreateJobRequestV2();
  }
});

// src/serialization/resources/remoteGen/client/index.ts
var init_client4 = __esm({
  \\"src/serialization/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_createJob2();
    init_createJobV22();
    init_getJobStatus2();
    init_requests2();
  }
});

// src/serialization/resources/remoteGen/index.ts
var remoteGen_exports2 = {};
__export(remoteGen_exports2, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  createJob: () => createJob_exports2,
  createJobV2: () => createJobV2_exports2,
  getJobStatus: () => getJobStatus_exports2
});
var init_remoteGen2 = __esm({
  \\"src/serialization/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types2();
    init_client4();
  }
});

// src/serialization/resources/index.ts
var init_resources2 = __esm({
  \\"src/serialization/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen2();
    init_types2();
    init_requests2();
  }
});

// src/serialization/index.ts
var serialization_exports = {};
__export(serialization_exports, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  remoteGen: () => remoteGen_exports2
});
var init_serialization = __esm({
  \\"src/serialization/index.ts\\"() {
    init_resources2();
  }
});
init_serialization();
export {
  CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails,
  CreateJobRequest,
  CreateJobRequestV2,
  CreateJobResponse,
  FailedTaskStatus,
  FinishedTaskStatus,
  GeneratorConfig,
  GeneratorConfigV2,
  GeneratorIdAndVersion,
  GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode,
  GithubPublishInfo2 as GithubPublishInfo,
  InsufficientPermissionsDetails,
  LogLevel2 as LogLevel,
  MavenCoordinate,
  MavenOutput,
  MavenOutputWithOptionalCreds,
  NpmCoordinate,
  NpmOutput,
  NpmOutputWithOptionalToken,
  OutputMode2 as OutputMode,
  Package,
  PackageCoordinate2 as PackageCoordinate,
  PackagePublishStatus2 as PackagePublishStatus,
  PostmanOutput,
  PublishOutputMode,
  PublishOutputModeV22 as PublishOutputModeV2,
  PypiCoordinate,
  RegistryOverrides,
  RemoteGenJobId2 as RemoteGenJobId,
  RemoteGenTaskId2 as RemoteGenTaskId,
  Task,
  TaskLog,
  TaskStatus2 as TaskStatus,
  UsernamePassword,
  remoteGen_exports2 as remoteGen
};
",
                    "name": "serialization.js",
                    "type": "file",
                  },
                ],
                "name": "esm",
                "type": "directory",
              },
            ],
            "name": "browser",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "\\"use strict\\";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module2) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module2.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module2.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module2.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module2.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module2) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module2.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module2.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  \\".yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/debug.js\\"(exports, module2) {
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require(\\"debug\\")(\\"follow-redirects\\");
        } catch (error) {
        }
        if (typeof debug !== \\"function\\") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// .yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  \\".yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/index.js\\"(exports, module2) {
    var url = require(\\"url\\");
    var URL = url.URL;
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var Writable = require(\\"stream\\").Writable;
    var assert = require(\\"assert\\");
    var debug = require_debug();
    var events = [\\"abort\\", \\"aborted\\", \\"connect\\", \\"error\\", \\"socket\\", \\"timeout\\"];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      \\"ERR_INVALID_URL\\",
      \\"Invalid URL\\",
      TypeError
    );
    var RedirectionError = createErrorType(
      \\"ERR_FR_REDIRECTION_FAILURE\\",
      \\"Redirected request failed\\"
    );
    var TooManyRedirectsError = createErrorType(
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"Maximum number of redirects exceeded\\"
    );
    var MaxBodyLengthExceededError = createErrorType(
      \\"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\\",
      \\"Request body larger than maxBodyLength limit\\"
    );
    var WriteAfterEndError = createErrorType(
      \\"ERR_STREAM_WRITE_AFTER_END\\",
      \\"write after end\\"
    );
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options);
      this._options = options;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on(\\"response\\", responseCallback);
      }
      var self = this;
      this._onNativeResponse = function(response) {
        self._processResponse(response);
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      abortRequest(this._currentRequest);
      this.emit(\\"abort\\");
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString(data) && !isBuffer(data)) {
        throw new TypeError(\\"data should be a string, Buffer or Uint8Array\\");
      }
      if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit(\\"error\\", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (isFunction(data)) {
        callback = data;
        data = encoding = null;
      } else if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener(\\"timeout\\", socket.destroy);
        socket.addListener(\\"timeout\\", socket.destroy);
      }
      function startTimer(socket) {
        if (self._timeout) {
          clearTimeout(self._timeout);
        }
        self._timeout = setTimeout(function() {
          self.emit(\\"timeout\\");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self._timeout) {
          clearTimeout(self._timeout);
          self._timeout = null;
        }
        self.removeListener(\\"abort\\", clearTimer);
        self.removeListener(\\"error\\", clearTimer);
        self.removeListener(\\"response\\", clearTimer);
        if (callback) {
          self.removeListener(\\"timeout\\", callback);
        }
        if (!self.socket) {
          self._currentRequest.removeListener(\\"socket\\", startTimer);
        }
      }
      if (callback) {
        this.on(\\"timeout\\", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once(\\"socket\\", startTimer);
      }
      this.on(\\"socket\\", destroyOnTimeout);
      this.on(\\"abort\\", clearTimer);
      this.on(\\"error\\", clearTimer);
      this.on(\\"response\\", clearTimer);
      return this;
    };
    [
      \\"flushHeaders\\",
      \\"getHeader\\",
      \\"setNoDelay\\",
      \\"setSocketKeepAlive\\"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    [\\"aborted\\", \\"connection\\", \\"socket\\"].forEach(function(property2) {
      Object.defineProperty(RedirectableRequest.prototype, property2, {
        get: function() {
          return this._currentRequest[property2];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options) {
      if (!options.headers) {
        options.headers = {};
      }
      if (options.host) {
        if (!options.hostname) {
          options.hostname = options.host;
        }
        delete options.host;
      }
      if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf(\\"?\\");
        if (searchPos < 0) {
          options.pathname = options.path;
        } else {
          options.pathname = options.path.substring(0, searchPos);
          options.search = options.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit(\\"error\\", new TypeError(\\"Unsupported protocol \\" + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request._redirectable = this;
      for (var event of events) {
        request.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\\\\//.test(this._options.path) ? url.format(this._options) : (
        // When making a request to a proxy, […]
        // a client MUST send the target URI in absolute-form […].
        this._options.path
      );
      if (this._isRedirect) {
        var i = 0;
        var self = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request === self._currentRequest) {
            if (error) {
              self.emit(\\"error\\", error);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request.finished) {
                request.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self._ended) {
              request.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode
        });
      }
      var location = response.headers.location;
      if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit(\\"response\\", response);
        this._requestBodyBuffers = [];
        return;
      }
      abortRequest(this._currentRequest);
      response.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        this.emit(\\"error\\", new TooManyRedirectsError());
        return;
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign({
          // The Host header was set by nativeProtocol.request
          Host: response.req.getHeader(\\"host\\")
        }, this._options.headers);
      }
      var method = this._options.method;
      if ((statusCode === 301 || statusCode === 302) && this._options.method === \\"POST\\" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = \\"GET\\";
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
      var currentUrlParts = url.parse(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\\\\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl;
      try {
        redirectUrl = url.resolve(currentUrl, location);
      } catch (cause) {
        this.emit(\\"error\\", new RedirectionError({ cause }));
        return;
      }
      debug(\\"redirecting to\\", redirectUrl);
      this._isRedirect = true;
      var redirectUrlParts = url.parse(redirectUrl);
      Object.assign(this._options, redirectUrlParts);
      if (redirectUrlParts.protocol !== currentUrlParts.protocol && redirectUrlParts.protocol !== \\"https:\\" || redirectUrlParts.host !== currentHost && !isSubdomain(redirectUrlParts.host, currentHost)) {
        removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);
      }
      if (isFunction(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        try {
          beforeRedirect(this._options, responseDetails, requestDetails);
        } catch (err) {
          this.emit(\\"error\\", err);
          return;
        }
        this._sanitizeOptions(this._options);
      }
      try {
        this._performRequest();
      } catch (cause) {
        this.emit(\\"error\\", new RedirectionError({ cause }));
      }
    };
    function wrap(protocols) {
      var exports2 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + \\":\\";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports2[scheme] = Object.create(nativeProtocol);
        function request(input, options, callback) {
          if (isString(input)) {
            var parsed;
            try {
              parsed = urlToOptions(new URL(input));
            } catch (err) {
              parsed = url.parse(input);
            }
            if (!isString(parsed.protocol)) {
              throw new InvalidUrlError({ input });
            }
            input = parsed;
          } else if (URL && input instanceof URL) {
            input = urlToOptions(input);
          } else {
            callback = options;
            options = input;
            input = { protocol };
          }
          if (isFunction(options)) {
            callback = options;
            options = null;
          }
          options = Object.assign({
            maxRedirects: exports2.maxRedirects,
            maxBodyLength: exports2.maxBodyLength
          }, input, options);
          options.nativeProtocols = nativeProtocols;
          if (!isString(options.host) && !isString(options.hostname)) {
            options.hostname = \\"::1\\";
          }
          assert.equal(options.protocol, protocol, \\"protocol mismatch\\");
          debug(\\"options\\", options);
          return new RedirectableRequest(options, callback);
        }
        function get(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request, configurable: true, enumerable: true, writable: true },
          get: { value: get, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports2;
    }
    function noop() {
    }
    function urlToOptions(urlObject) {
      var options = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith(\\"[\\") ? (
          /* istanbul ignore next */
          urlObject.hostname.slice(1, -1)
        ) : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href
      };
      if (urlObject.port !== \\"\\") {
        options.port = Number(urlObject.port);
      }
      return options;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue === null || typeof lastValue === \\"undefined\\" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        Error.captureStackTrace(this, this.constructor);
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + \\": \\" + this.cause.message : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      CustomError.prototype.constructor = CustomError;
      CustomError.prototype.name = \\"Error [\\" + code + \\"]\\";
      return CustomError;
    }
    function abortRequest(request) {
      for (var event of events) {
        request.removeListener(event, eventHandlers[event]);
      }
      request.on(\\"error\\", noop);
      request.abort();
    }
    function isSubdomain(subdomain, domain) {
      assert(isString(subdomain) && isString(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === \\".\\" && subdomain.endsWith(domain);
    }
    function isString(value) {
      return typeof value === \\"string\\" || value instanceof String;
    }
    function isFunction(value) {
      return typeof value === \\"function\\";
    }
    function isBuffer(value) {
      return typeof value === \\"object\\" && \\"length\\" in value;
    }
    module2.exports = wrap({ http, https });
    module2.exports.wrap = wrap;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module2) {
    module2.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/http.js
var require_http = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/http.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var buildFullPath = require_buildFullPath();
    var buildURL = require_buildURL();
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var httpFollow = require_follow_redirects().http;
    var httpsFollow = require_follow_redirects().https;
    var url = require(\\"url\\");
    var zlib = require(\\"zlib\\");
    var VERSION = require_data().version;
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var isHttps = /https:?/;
    var supportedProtocols = [\\"http:\\", \\"https:\\", \\"file:\\"];
    function setProxy(options, proxy, location) {
      options.hostname = proxy.host;
      options.host = proxy.host;
      options.port = proxy.port;
      options.path = location;
      if (proxy.auth) {
        var base64 = Buffer.from(proxy.auth.username + \\":\\" + proxy.auth.password, \\"utf8\\").toString(\\"base64\\");
        options.headers[\\"Proxy-Authorization\\"] = \\"Basic \\" + base64;
      }
      options.beforeRedirect = function beforeRedirect(redirection) {
        redirection.headers.host = redirection.host;
        setProxy(redirection, proxy, redirection.href);
      };
    }
    module2.exports = function httpAdapter(config) {
      return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        var resolve = function resolve2(value) {
          done();
          resolvePromise(value);
        };
        var rejected = false;
        var reject = function reject2(value) {
          done();
          rejected = true;
          rejectPromise(value);
        };
        var data = config.data;
        var headers = config.headers;
        var headerNames = {};
        Object.keys(headers).forEach(function storeLowerName(name) {
          headerNames[name.toLowerCase()] = name;
        });
        if (\\"user-agent\\" in headerNames) {
          if (!headers[headerNames[\\"user-agent\\"]]) {
            delete headers[headerNames[\\"user-agent\\"]];
          }
        } else {
          headers[\\"User-Agent\\"] = \\"axios/\\" + VERSION;
        }
        if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {
          Object.assign(headers, data.getHeaders());
        } else if (data && !utils.isStream(data)) {
          if (Buffer.isBuffer(data)) {
          } else if (utils.isArrayBuffer(data)) {
            data = Buffer.from(new Uint8Array(data));
          } else if (utils.isString(data)) {
            data = Buffer.from(data, \\"utf-8\\");
          } else {
            return reject(new AxiosError2(
              \\"Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream\\",
              AxiosError2.ERR_BAD_REQUEST,
              config
            ));
          }
          if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {
            return reject(new AxiosError2(
              \\"Request body larger than maxBodyLength limit\\",
              AxiosError2.ERR_BAD_REQUEST,
              config
            ));
          }
          if (!headerNames[\\"content-length\\"]) {
            headers[\\"Content-Length\\"] = data.length;
          }
        }
        var auth = void 0;
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password || \\"\\";
          auth = username + \\":\\" + password;
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        var parsed = url.parse(fullPath);
        var protocol = parsed.protocol || supportedProtocols[0];
        if (supportedProtocols.indexOf(protocol) === -1) {
          return reject(new AxiosError2(
            \\"Unsupported protocol \\" + protocol,
            AxiosError2.ERR_BAD_REQUEST,
            config
          ));
        }
        if (!auth && parsed.auth) {
          var urlAuth = parsed.auth.split(\\":\\");
          var urlUsername = urlAuth[0] || \\"\\";
          var urlPassword = urlAuth[1] || \\"\\";
          auth = urlUsername + \\":\\" + urlPassword;
        }
        if (auth && headerNames.authorization) {
          delete headers[headerNames.authorization];
        }
        var isHttpsRequest = isHttps.test(protocol);
        var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;
        try {
          buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\\\?/, \\"\\");
        } catch (err) {
          var customErr = new Error(err.message);
          customErr.config = config;
          customErr.url = config.url;
          customErr.exists = true;
          reject(customErr);
        }
        var options = {
          path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\\\?/, \\"\\"),
          method: config.method.toUpperCase(),
          headers,
          agent,
          agents: { http: config.httpAgent, https: config.httpsAgent },
          auth
        };
        if (config.socketPath) {
          options.socketPath = config.socketPath;
        } else {
          options.hostname = parsed.hostname;
          options.port = parsed.port;
        }
        var proxy = config.proxy;
        if (!proxy && proxy !== false) {
          var proxyEnv = protocol.slice(0, -1) + \\"_proxy\\";
          var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
          if (proxyUrl) {
            var parsedProxyUrl = url.parse(proxyUrl);
            var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
            var shouldProxy = true;
            if (noProxyEnv) {
              var noProxy = noProxyEnv.split(\\",\\").map(function trim(s) {
                return s.trim();
              });
              shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
                if (!proxyElement) {
                  return false;
                }
                if (proxyElement === \\"*\\") {
                  return true;
                }
                if (proxyElement[0] === \\".\\" && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
                  return true;
                }
                return parsed.hostname === proxyElement;
              });
            }
            if (shouldProxy) {
              proxy = {
                host: parsedProxyUrl.hostname,
                port: parsedProxyUrl.port,
                protocol: parsedProxyUrl.protocol
              };
              if (parsedProxyUrl.auth) {
                var proxyUrlAuth = parsedProxyUrl.auth.split(\\":\\");
                proxy.auth = {
                  username: proxyUrlAuth[0],
                  password: proxyUrlAuth[1]
                };
              }
            }
          }
        }
        if (proxy) {
          options.headers.host = parsed.hostname + (parsed.port ? \\":\\" + parsed.port : \\"\\");
          setProxy(options, proxy, protocol + \\"//\\" + parsed.hostname + (parsed.port ? \\":\\" + parsed.port : \\"\\") + options.path);
        }
        var transport;
        var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);
        if (config.transport) {
          transport = config.transport;
        } else if (config.maxRedirects === 0) {
          transport = isHttpsProxy ? https : http;
        } else {
          if (config.maxRedirects) {
            options.maxRedirects = config.maxRedirects;
          }
          if (config.beforeRedirect) {
            options.beforeRedirect = config.beforeRedirect;
          }
          transport = isHttpsProxy ? httpsFollow : httpFollow;
        }
        if (config.maxBodyLength > -1) {
          options.maxBodyLength = config.maxBodyLength;
        }
        if (config.insecureHTTPParser) {
          options.insecureHTTPParser = config.insecureHTTPParser;
        }
        var req = transport.request(options, function handleResponse(res) {
          if (req.aborted)
            return;
          var stream = res;
          var lastRequest = res.req || req;
          if (res.statusCode !== 204 && lastRequest.method !== \\"HEAD\\" && config.decompress !== false) {
            switch (res.headers[\\"content-encoding\\"]) {
              case \\"gzip\\":
              case \\"compress\\":
              case \\"deflate\\":
                stream = stream.pipe(zlib.createUnzip());
                delete res.headers[\\"content-encoding\\"];
                break;
            }
          }
          var response = {
            status: res.statusCode,
            statusText: res.statusMessage,
            headers: res.headers,
            config,
            request: lastRequest
          };
          if (config.responseType === \\"stream\\") {
            response.data = stream;
            settle(resolve, reject, response);
          } else {
            var responseBuffer = [];
            var totalResponseBytes = 0;
            stream.on(\\"data\\", function handleStreamData(chunk) {
              responseBuffer.push(chunk);
              totalResponseBytes += chunk.length;
              if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
                rejected = true;
                stream.destroy();
                reject(new AxiosError2(
                  \\"maxContentLength size of \\" + config.maxContentLength + \\" exceeded\\",
                  AxiosError2.ERR_BAD_RESPONSE,
                  config,
                  lastRequest
                ));
              }
            });
            stream.on(\\"aborted\\", function handlerStreamAborted() {
              if (rejected) {
                return;
              }
              stream.destroy();
              reject(new AxiosError2(
                \\"maxContentLength size of \\" + config.maxContentLength + \\" exceeded\\",
                AxiosError2.ERR_BAD_RESPONSE,
                config,
                lastRequest
              ));
            });
            stream.on(\\"error\\", function handleStreamError(err) {
              if (req.aborted)
                return;
              reject(AxiosError2.from(err, null, config, lastRequest));
            });
            stream.on(\\"end\\", function handleStreamEnd() {
              try {
                var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);
                if (config.responseType !== \\"arraybuffer\\") {
                  responseData = responseData.toString(config.responseEncoding);
                  if (!config.responseEncoding || config.responseEncoding === \\"utf8\\") {
                    responseData = utils.stripBOM(responseData);
                  }
                }
                response.data = responseData;
              } catch (err) {
                reject(AxiosError2.from(err, null, config, response.request, response));
              }
              settle(resolve, reject, response);
            });
          }
        });
        req.on(\\"error\\", function handleRequestError(err) {
          reject(AxiosError2.from(err, null, config, req));
        });
        req.on(\\"socket\\", function handleRequestSocket(socket) {
          socket.setKeepAlive(true, 1e3 * 60);
        });
        if (config.timeout) {
          var timeout = parseInt(config.timeout, 10);
          if (isNaN(timeout)) {
            reject(new AxiosError2(
              \\"error trying to parse \`config.timeout\` to int\\",
              AxiosError2.ERR_BAD_OPTION_VALUE,
              config,
              req
            ));
            return;
          }
          req.setTimeout(timeout, function handleRequestTimeout() {
            req.abort();
            var transitional = config.transitional || transitionalDefaults;
            reject(new AxiosError2(
              \\"timeout of \\" + timeout + \\"ms exceeded\\",
              transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
              config,
              req
            ));
          });
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (req.aborted)
              return;
            req.abort();
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isStream(data)) {
          data.on(\\"error\\", function handleStreamError(err) {
            reject(AxiosError2.from(err, config, null, req));
          }).pipe(req);
        } else {
          req.end(data);
        }
      });
    };
  }
});

// .yarn/cache/delayed-stream-npm-1.0.0-c5a4c4cc02-46fe6e83e2.zip/node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  \\".yarn/cache/delayed-stream-npm-1.0.0-c5a4c4cc02-46fe6e83e2.zip/node_modules/delayed-stream/lib/delayed_stream.js\\"(exports, module2) {
    var Stream = require(\\"stream\\").Stream;
    var util = require(\\"util\\");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option in options) {
        delayedStream[option] = options[option];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on(\\"error\\", function() {
      });
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, \\"readable\\", {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = true;
      this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this));
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === \\"data\\") {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message = \\"DelayedStream#maxDataSize of \\" + this.maxDataSize + \\" bytes exceeded.\\";
      this.emit(\\"error\\", new Error(message));
    };
  }
});

// .yarn/cache/combined-stream-npm-1.0.8-dc14d4a63a-49fa4aeb49.zip/node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  \\".yarn/cache/combined-stream-npm-1.0.8-dc14d4a63a-49fa4aeb49.zip/node_modules/combined-stream/lib/combined_stream.js\\"(exports, module2) {
    var util = require(\\"util\\");
    var Stream = require(\\"stream\\").Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options) {
      var combinedStream = new this();
      options = options || {};
      for (var option in options) {
        combinedStream[option] = options[option];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream) {
      return typeof stream !== \\"function\\" && typeof stream !== \\"string\\" && typeof stream !== \\"boolean\\" && typeof stream !== \\"number\\" && !Buffer.isBuffer(stream);
    };
    CombinedStream.prototype.append = function(stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams
          });
          stream.on(\\"data\\", this._checkDataSize.bind(this));
          stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
          stream.pause();
        }
      }
      this._streams.push(stream);
      return this;
    };
    CombinedStream.prototype.pipe = function(dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function() {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream = this._streams.shift();
      if (typeof stream == \\"undefined\\") {
        this.end();
        return;
      }
      if (typeof stream !== \\"function\\") {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(function(stream2) {
        var isStreamLike = CombinedStream.isStreamLike(stream2);
        if (isStreamLike) {
          stream2.on(\\"data\\", this._checkDataSize.bind(this));
          this._handleErrors(stream2);
        }
        this._pipeNext(stream2);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on(\\"end\\", this._getNext.bind(this));
        stream.pipe(this, { end: false });
        return;
      }
      var value = stream;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream) {
      var self = this;
      stream.on(\\"error\\", function(err) {
        self._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit(\\"data\\", data);
    };
    CombinedStream.prototype.pause = function() {
      if (!this.pauseStreams) {
        return;
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == \\"function\\")
        this._currentStream.pause();
      this.emit(\\"pause\\");
    };
    CombinedStream.prototype.resume = function() {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == \\"function\\")
        this._currentStream.resume();
      this.emit(\\"resume\\");
    };
    CombinedStream.prototype.end = function() {
      this._reset();
      this.emit(\\"end\\");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset();
      this.emit(\\"close\\");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message = \\"DelayedStream#maxDataSize of \\" + this.maxDataSize + \\" bytes exceeded.\\";
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self = this;
      this._streams.forEach(function(stream) {
        if (!stream.dataSize) {
          return;
        }
        self.dataSize += stream.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset();
      this.emit(\\"error\\", err);
    };
  }
});

// .yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/db.json
var require_db = __commonJS({
  \\".yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/db.json\\"(exports, module2) {
    module2.exports = {
      \\"application/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"application/3gpdash-qoe-report+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/3gpp-ims+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/3gpphal+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/3gpphalforms+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/a2l\\": {
        source: \\"iana\\"
      },
      \\"application/ace+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/activemessage\\": {
        source: \\"iana\\"
      },
      \\"application/activity+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-costmap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-costmapfilter+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-directory+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointcost+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointcostparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointprop+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointpropparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-error+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-networkmap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-networkmapfilter+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-updatestreamcontrol+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-updatestreamparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/aml\\": {
        source: \\"iana\\"
      },
      \\"application/andrew-inset\\": {
        source: \\"iana\\",
        extensions: [\\"ez\\"]
      },
      \\"application/applefile\\": {
        source: \\"iana\\"
      },
      \\"application/applixware\\": {
        source: \\"apache\\",
        extensions: [\\"aw\\"]
      },
      \\"application/at+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/atf\\": {
        source: \\"iana\\"
      },
      \\"application/atfx\\": {
        source: \\"iana\\"
      },
      \\"application/atom+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atom\\"]
      },
      \\"application/atomcat+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomcat\\"]
      },
      \\"application/atomdeleted+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomdeleted\\"]
      },
      \\"application/atomicmail\\": {
        source: \\"iana\\"
      },
      \\"application/atomsvc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomsvc\\"]
      },
      \\"application/atsc-dwd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dwd\\"]
      },
      \\"application/atsc-dynamic-event-message\\": {
        source: \\"iana\\"
      },
      \\"application/atsc-held+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"held\\"]
      },
      \\"application/atsc-rdt+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/atsc-rsat+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rsat\\"]
      },
      \\"application/atxml\\": {
        source: \\"iana\\"
      },
      \\"application/auth-policy+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/bacnet-xdd+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/batch-smtp\\": {
        source: \\"iana\\"
      },
      \\"application/bdoc\\": {
        compressible: false,
        extensions: [\\"bdoc\\"]
      },
      \\"application/beep+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/calendar+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/calendar+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xcs\\"]
      },
      \\"application/call-completion\\": {
        source: \\"iana\\"
      },
      \\"application/cals-1840\\": {
        source: \\"iana\\"
      },
      \\"application/captive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cbor\\": {
        source: \\"iana\\"
      },
      \\"application/cbor-seq\\": {
        source: \\"iana\\"
      },
      \\"application/cccex\\": {
        source: \\"iana\\"
      },
      \\"application/ccmp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ccxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ccxml\\"]
      },
      \\"application/cdfx+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cdfx\\"]
      },
      \\"application/cdmi-capability\\": {
        source: \\"iana\\",
        extensions: [\\"cdmia\\"]
      },
      \\"application/cdmi-container\\": {
        source: \\"iana\\",
        extensions: [\\"cdmic\\"]
      },
      \\"application/cdmi-domain\\": {
        source: \\"iana\\",
        extensions: [\\"cdmid\\"]
      },
      \\"application/cdmi-object\\": {
        source: \\"iana\\",
        extensions: [\\"cdmio\\"]
      },
      \\"application/cdmi-queue\\": {
        source: \\"iana\\",
        extensions: [\\"cdmiq\\"]
      },
      \\"application/cdni\\": {
        source: \\"iana\\"
      },
      \\"application/cea\\": {
        source: \\"iana\\"
      },
      \\"application/cea-2018+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cellml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cfw\\": {
        source: \\"iana\\"
      },
      \\"application/city+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/clr\\": {
        source: \\"iana\\"
      },
      \\"application/clue+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/clue_info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cms\\": {
        source: \\"iana\\"
      },
      \\"application/cnrp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/coap-group+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/coap-payload\\": {
        source: \\"iana\\"
      },
      \\"application/commonground\\": {
        source: \\"iana\\"
      },
      \\"application/conference-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cose\\": {
        source: \\"iana\\"
      },
      \\"application/cose-key\\": {
        source: \\"iana\\"
      },
      \\"application/cose-key-set\\": {
        source: \\"iana\\"
      },
      \\"application/cpl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cpl\\"]
      },
      \\"application/csrattrs\\": {
        source: \\"iana\\"
      },
      \\"application/csta+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cstadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/csvm+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cu-seeme\\": {
        source: \\"apache\\",
        extensions: [\\"cu\\"]
      },
      \\"application/cwt\\": {
        source: \\"iana\\"
      },
      \\"application/cybercash\\": {
        source: \\"iana\\"
      },
      \\"application/dart\\": {
        compressible: true
      },
      \\"application/dash+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpd\\"]
      },
      \\"application/dash-patch+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpp\\"]
      },
      \\"application/dashdelta\\": {
        source: \\"iana\\"
      },
      \\"application/davmount+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"davmount\\"]
      },
      \\"application/dca-rft\\": {
        source: \\"iana\\"
      },
      \\"application/dcd\\": {
        source: \\"iana\\"
      },
      \\"application/dec-dx\\": {
        source: \\"iana\\"
      },
      \\"application/dialog-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dicom\\": {
        source: \\"iana\\"
      },
      \\"application/dicom+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dicom+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dii\\": {
        source: \\"iana\\"
      },
      \\"application/dit\\": {
        source: \\"iana\\"
      },
      \\"application/dns\\": {
        source: \\"iana\\"
      },
      \\"application/dns+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dns-message\\": {
        source: \\"iana\\"
      },
      \\"application/docbook+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"dbk\\"]
      },
      \\"application/dots+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/dskpp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dssc+der\\": {
        source: \\"iana\\",
        extensions: [\\"dssc\\"]
      },
      \\"application/dssc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdssc\\"]
      },
      \\"application/dvcs\\": {
        source: \\"iana\\"
      },
      \\"application/ecmascript\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"es\\", \\"ecma\\"]
      },
      \\"application/edi-consent\\": {
        source: \\"iana\\"
      },
      \\"application/edi-x12\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/edifact\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/efi\\": {
        source: \\"iana\\"
      },
      \\"application/elm+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/elm+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.cap+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/emergencycalldata.comment+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.deviceinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.ecall.msd\\": {
        source: \\"iana\\"
      },
      \\"application/emergencycalldata.providerinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.serviceinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.subscriberinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.veds+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emma+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"emma\\"]
      },
      \\"application/emotionml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"emotionml\\"]
      },
      \\"application/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"application/epp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/epub+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"epub\\"]
      },
      \\"application/eshop\\": {
        source: \\"iana\\"
      },
      \\"application/exi\\": {
        source: \\"iana\\",
        extensions: [\\"exi\\"]
      },
      \\"application/expect-ct-report+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/express\\": {
        source: \\"iana\\",
        extensions: [\\"exp\\"]
      },
      \\"application/fastinfoset\\": {
        source: \\"iana\\"
      },
      \\"application/fastsoap\\": {
        source: \\"iana\\"
      },
      \\"application/fdt+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"fdt\\"]
      },
      \\"application/fhir+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/fhir+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/fido.trusted-apps+json\\": {
        compressible: true
      },
      \\"application/fits\\": {
        source: \\"iana\\"
      },
      \\"application/flexfec\\": {
        source: \\"iana\\"
      },
      \\"application/font-sfnt\\": {
        source: \\"iana\\"
      },
      \\"application/font-tdpfr\\": {
        source: \\"iana\\",
        extensions: [\\"pfr\\"]
      },
      \\"application/font-woff\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/framework-attributes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/geo+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"geojson\\"]
      },
      \\"application/geo+json-seq\\": {
        source: \\"iana\\"
      },
      \\"application/geopackage+sqlite3\\": {
        source: \\"iana\\"
      },
      \\"application/geoxacml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/gltf-buffer\\": {
        source: \\"iana\\"
      },
      \\"application/gml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"gml\\"]
      },
      \\"application/gpx+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"gpx\\"]
      },
      \\"application/gxf\\": {
        source: \\"apache\\",
        extensions: [\\"gxf\\"]
      },
      \\"application/gzip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"gz\\"]
      },
      \\"application/h224\\": {
        source: \\"iana\\"
      },
      \\"application/held+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/hjson\\": {
        extensions: [\\"hjson\\"]
      },
      \\"application/http\\": {
        source: \\"iana\\"
      },
      \\"application/hyperstudio\\": {
        source: \\"iana\\",
        extensions: [\\"stk\\"]
      },
      \\"application/ibe-key-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ibe-pkg-reply+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ibe-pp-data\\": {
        source: \\"iana\\"
      },
      \\"application/iges\\": {
        source: \\"iana\\"
      },
      \\"application/im-iscomposing+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/index\\": {
        source: \\"iana\\"
      },
      \\"application/index.cmd\\": {
        source: \\"iana\\"
      },
      \\"application/index.obj\\": {
        source: \\"iana\\"
      },
      \\"application/index.response\\": {
        source: \\"iana\\"
      },
      \\"application/index.vnd\\": {
        source: \\"iana\\"
      },
      \\"application/inkml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ink\\", \\"inkml\\"]
      },
      \\"application/iotp\\": {
        source: \\"iana\\"
      },
      \\"application/ipfix\\": {
        source: \\"iana\\",
        extensions: [\\"ipfix\\"]
      },
      \\"application/ipp\\": {
        source: \\"iana\\"
      },
      \\"application/isup\\": {
        source: \\"iana\\"
      },
      \\"application/its+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"its\\"]
      },
      \\"application/java-archive\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"jar\\", \\"war\\", \\"ear\\"]
      },
      \\"application/java-serialized-object\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"ser\\"]
      },
      \\"application/java-vm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"class\\"]
      },
      \\"application/javascript\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"js\\", \\"mjs\\"]
      },
      \\"application/jf2feed+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jose\\": {
        source: \\"iana\\"
      },
      \\"application/jose+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jrd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jscalendar+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"json\\", \\"map\\"]
      },
      \\"application/json-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/json-seq\\": {
        source: \\"iana\\"
      },
      \\"application/json5\\": {
        extensions: [\\"json5\\"]
      },
      \\"application/jsonml+json\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"jsonml\\"]
      },
      \\"application/jwk+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jwk-set+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jwt\\": {
        source: \\"iana\\"
      },
      \\"application/kpml-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/kpml-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ld+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"jsonld\\"]
      },
      \\"application/lgr+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lgr\\"]
      },
      \\"application/link-format\\": {
        source: \\"iana\\"
      },
      \\"application/load-control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/lost+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lostxml\\"]
      },
      \\"application/lostsync+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/lpf+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/lxf\\": {
        source: \\"iana\\"
      },
      \\"application/mac-binhex40\\": {
        source: \\"iana\\",
        extensions: [\\"hqx\\"]
      },
      \\"application/mac-compactpro\\": {
        source: \\"apache\\",
        extensions: [\\"cpt\\"]
      },
      \\"application/macwriteii\\": {
        source: \\"iana\\"
      },
      \\"application/mads+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mads\\"]
      },
      \\"application/manifest+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"webmanifest\\"]
      },
      \\"application/marc\\": {
        source: \\"iana\\",
        extensions: [\\"mrc\\"]
      },
      \\"application/marcxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mrcx\\"]
      },
      \\"application/mathematica\\": {
        source: \\"iana\\",
        extensions: [\\"ma\\", \\"nb\\", \\"mb\\"]
      },
      \\"application/mathml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mathml\\"]
      },
      \\"application/mathml-content+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mathml-presentation+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-associated-procedure-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-deregister+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-envelope+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-msk+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-msk-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-protection-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-reception-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-register+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-register-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-schedule+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-user-service-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbox\\": {
        source: \\"iana\\",
        extensions: [\\"mbox\\"]
      },
      \\"application/media-policy-dataset+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpf\\"]
      },
      \\"application/media_control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mediaservercontrol+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mscml\\"]
      },
      \\"application/merge-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/metalink+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"metalink\\"]
      },
      \\"application/metalink4+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"meta4\\"]
      },
      \\"application/mets+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mets\\"]
      },
      \\"application/mf4\\": {
        source: \\"iana\\"
      },
      \\"application/mikey\\": {
        source: \\"iana\\"
      },
      \\"application/mipc\\": {
        source: \\"iana\\"
      },
      \\"application/missing-blocks+cbor-seq\\": {
        source: \\"iana\\"
      },
      \\"application/mmt-aei+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"maei\\"]
      },
      \\"application/mmt-usd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"musd\\"]
      },
      \\"application/mods+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mods\\"]
      },
      \\"application/moss-keys\\": {
        source: \\"iana\\"
      },
      \\"application/moss-signature\\": {
        source: \\"iana\\"
      },
      \\"application/mosskey-data\\": {
        source: \\"iana\\"
      },
      \\"application/mosskey-request\\": {
        source: \\"iana\\"
      },
      \\"application/mp21\\": {
        source: \\"iana\\",
        extensions: [\\"m21\\", \\"mp21\\"]
      },
      \\"application/mp4\\": {
        source: \\"iana\\",
        extensions: [\\"mp4s\\", \\"m4p\\"]
      },
      \\"application/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"application/mpeg4-iod\\": {
        source: \\"iana\\"
      },
      \\"application/mpeg4-iod-xmt\\": {
        source: \\"iana\\"
      },
      \\"application/mrb-consumer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mrb-publish+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/msc-ivr+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/msc-mixer+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/msword\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"doc\\", \\"dot\\"]
      },
      \\"application/mud+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/multipart-core\\": {
        source: \\"iana\\"
      },
      \\"application/mxf\\": {
        source: \\"iana\\",
        extensions: [\\"mxf\\"]
      },
      \\"application/n-quads\\": {
        source: \\"iana\\",
        extensions: [\\"nq\\"]
      },
      \\"application/n-triples\\": {
        source: \\"iana\\",
        extensions: [\\"nt\\"]
      },
      \\"application/nasdata\\": {
        source: \\"iana\\"
      },
      \\"application/news-checkgroups\\": {
        source: \\"iana\\",
        charset: \\"US-ASCII\\"
      },
      \\"application/news-groupinfo\\": {
        source: \\"iana\\",
        charset: \\"US-ASCII\\"
      },
      \\"application/news-transmission\\": {
        source: \\"iana\\"
      },
      \\"application/nlsml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/node\\": {
        source: \\"iana\\",
        extensions: [\\"cjs\\"]
      },
      \\"application/nss\\": {
        source: \\"iana\\"
      },
      \\"application/oauth-authz-req+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/oblivious-dns-message\\": {
        source: \\"iana\\"
      },
      \\"application/ocsp-request\\": {
        source: \\"iana\\"
      },
      \\"application/ocsp-response\\": {
        source: \\"iana\\"
      },
      \\"application/octet-stream\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"bin\\", \\"dms\\", \\"lrf\\", \\"mar\\", \\"so\\", \\"dist\\", \\"distz\\", \\"pkg\\", \\"bpk\\", \\"dump\\", \\"elc\\", \\"deploy\\", \\"exe\\", \\"dll\\", \\"deb\\", \\"dmg\\", \\"iso\\", \\"img\\", \\"msi\\", \\"msp\\", \\"msm\\", \\"buffer\\"]
      },
      \\"application/oda\\": {
        source: \\"iana\\",
        extensions: [\\"oda\\"]
      },
      \\"application/odm+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/odx\\": {
        source: \\"iana\\"
      },
      \\"application/oebps-package+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"opf\\"]
      },
      \\"application/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ogx\\"]
      },
      \\"application/omdoc+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"omdoc\\"]
      },
      \\"application/onenote\\": {
        source: \\"apache\\",
        extensions: [\\"onetoc\\", \\"onetoc2\\", \\"onetmp\\", \\"onepkg\\"]
      },
      \\"application/opc-nodeset+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/oscore\\": {
        source: \\"iana\\"
      },
      \\"application/oxps\\": {
        source: \\"iana\\",
        extensions: [\\"oxps\\"]
      },
      \\"application/p21\\": {
        source: \\"iana\\"
      },
      \\"application/p21+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/p2p-overlay+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"relo\\"]
      },
      \\"application/parityfec\\": {
        source: \\"iana\\"
      },
      \\"application/passport\\": {
        source: \\"iana\\"
      },
      \\"application/patch-ops-error+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xer\\"]
      },
      \\"application/pdf\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pdf\\"]
      },
      \\"application/pdx\\": {
        source: \\"iana\\"
      },
      \\"application/pem-certificate-chain\\": {
        source: \\"iana\\"
      },
      \\"application/pgp-encrypted\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pgp\\"]
      },
      \\"application/pgp-keys\\": {
        source: \\"iana\\",
        extensions: [\\"asc\\"]
      },
      \\"application/pgp-signature\\": {
        source: \\"iana\\",
        extensions: [\\"asc\\", \\"sig\\"]
      },
      \\"application/pics-rules\\": {
        source: \\"apache\\",
        extensions: [\\"prf\\"]
      },
      \\"application/pidf+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/pidf-diff+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/pkcs10\\": {
        source: \\"iana\\",
        extensions: [\\"p10\\"]
      },
      \\"application/pkcs12\\": {
        source: \\"iana\\"
      },
      \\"application/pkcs7-mime\\": {
        source: \\"iana\\",
        extensions: [\\"p7m\\", \\"p7c\\"]
      },
      \\"application/pkcs7-signature\\": {
        source: \\"iana\\",
        extensions: [\\"p7s\\"]
      },
      \\"application/pkcs8\\": {
        source: \\"iana\\",
        extensions: [\\"p8\\"]
      },
      \\"application/pkcs8-encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/pkix-attr-cert\\": {
        source: \\"iana\\",
        extensions: [\\"ac\\"]
      },
      \\"application/pkix-cert\\": {
        source: \\"iana\\",
        extensions: [\\"cer\\"]
      },
      \\"application/pkix-crl\\": {
        source: \\"iana\\",
        extensions: [\\"crl\\"]
      },
      \\"application/pkix-pkipath\\": {
        source: \\"iana\\",
        extensions: [\\"pkipath\\"]
      },
      \\"application/pkixcmp\\": {
        source: \\"iana\\",
        extensions: [\\"pki\\"]
      },
      \\"application/pls+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"pls\\"]
      },
      \\"application/poc-settings+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/postscript\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ai\\", \\"eps\\", \\"ps\\"]
      },
      \\"application/ppsp-tracker+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/problem+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/problem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/provenance+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"provx\\"]
      },
      \\"application/prs.alvestrand.titrax-sheet\\": {
        source: \\"iana\\"
      },
      \\"application/prs.cww\\": {
        source: \\"iana\\",
        extensions: [\\"cww\\"]
      },
      \\"application/prs.cyn\\": {
        source: \\"iana\\",
        charset: \\"7-BIT\\"
      },
      \\"application/prs.hpub+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/prs.nprend\\": {
        source: \\"iana\\"
      },
      \\"application/prs.plucker\\": {
        source: \\"iana\\"
      },
      \\"application/prs.rdf-xml-crypt\\": {
        source: \\"iana\\"
      },
      \\"application/prs.xsf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/pskc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"pskcxml\\"]
      },
      \\"application/pvd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/qsig\\": {
        source: \\"iana\\"
      },
      \\"application/raml+yaml\\": {
        compressible: true,
        extensions: [\\"raml\\"]
      },
      \\"application/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"application/rdap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/rdf+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rdf\\", \\"owl\\"]
      },
      \\"application/reginfo+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rif\\"]
      },
      \\"application/relax-ng-compact-syntax\\": {
        source: \\"iana\\",
        extensions: [\\"rnc\\"]
      },
      \\"application/remote-printing\\": {
        source: \\"iana\\"
      },
      \\"application/reputon+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/resource-lists+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rl\\"]
      },
      \\"application/resource-lists-diff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rld\\"]
      },
      \\"application/rfc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/riscos\\": {
        source: \\"iana\\"
      },
      \\"application/rlmi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/rls-services+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rs\\"]
      },
      \\"application/route-apd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rapd\\"]
      },
      \\"application/route-s-tsid+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sls\\"]
      },
      \\"application/route-usd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rusd\\"]
      },
      \\"application/rpki-ghostbusters\\": {
        source: \\"iana\\",
        extensions: [\\"gbr\\"]
      },
      \\"application/rpki-manifest\\": {
        source: \\"iana\\",
        extensions: [\\"mft\\"]
      },
      \\"application/rpki-publication\\": {
        source: \\"iana\\"
      },
      \\"application/rpki-roa\\": {
        source: \\"iana\\",
        extensions: [\\"roa\\"]
      },
      \\"application/rpki-updown\\": {
        source: \\"iana\\"
      },
      \\"application/rsd+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"rsd\\"]
      },
      \\"application/rss+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"rss\\"]
      },
      \\"application/rtf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtf\\"]
      },
      \\"application/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"application/rtx\\": {
        source: \\"iana\\"
      },
      \\"application/samlassertion+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/samlmetadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sarif+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sarif-external-properties+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sbe\\": {
        source: \\"iana\\"
      },
      \\"application/sbml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sbml\\"]
      },
      \\"application/scaip+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/scim+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/scvp-cv-request\\": {
        source: \\"iana\\",
        extensions: [\\"scq\\"]
      },
      \\"application/scvp-cv-response\\": {
        source: \\"iana\\",
        extensions: [\\"scs\\"]
      },
      \\"application/scvp-vp-request\\": {
        source: \\"iana\\",
        extensions: [\\"spq\\"]
      },
      \\"application/scvp-vp-response\\": {
        source: \\"iana\\",
        extensions: [\\"spp\\"]
      },
      \\"application/sdp\\": {
        source: \\"iana\\",
        extensions: [\\"sdp\\"]
      },
      \\"application/secevent+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/senml+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/senml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/senml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"senmlx\\"]
      },
      \\"application/senml-etch+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/senml-etch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/senml-exi\\": {
        source: \\"iana\\"
      },
      \\"application/sensml+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/sensml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sensml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sensmlx\\"]
      },
      \\"application/sensml-exi\\": {
        source: \\"iana\\"
      },
      \\"application/sep+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sep-exi\\": {
        source: \\"iana\\"
      },
      \\"application/session-info\\": {
        source: \\"iana\\"
      },
      \\"application/set-payment\\": {
        source: \\"iana\\"
      },
      \\"application/set-payment-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"setpay\\"]
      },
      \\"application/set-registration\\": {
        source: \\"iana\\"
      },
      \\"application/set-registration-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"setreg\\"]
      },
      \\"application/sgml\\": {
        source: \\"iana\\"
      },
      \\"application/sgml-open-catalog\\": {
        source: \\"iana\\"
      },
      \\"application/shf+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"shf\\"]
      },
      \\"application/sieve\\": {
        source: \\"iana\\",
        extensions: [\\"siv\\", \\"sieve\\"]
      },
      \\"application/simple-filter+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/simple-message-summary\\": {
        source: \\"iana\\"
      },
      \\"application/simplesymbolcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/sipc\\": {
        source: \\"iana\\"
      },
      \\"application/slate\\": {
        source: \\"iana\\"
      },
      \\"application/smil\\": {
        source: \\"iana\\"
      },
      \\"application/smil+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"smi\\", \\"smil\\"]
      },
      \\"application/smpte336m\\": {
        source: \\"iana\\"
      },
      \\"application/soap+fastinfoset\\": {
        source: \\"iana\\"
      },
      \\"application/soap+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sparql-query\\": {
        source: \\"iana\\",
        extensions: [\\"rq\\"]
      },
      \\"application/sparql-results+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"srx\\"]
      },
      \\"application/spdx+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/spirits-event+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sql\\": {
        source: \\"iana\\"
      },
      \\"application/srgs\\": {
        source: \\"iana\\",
        extensions: [\\"gram\\"]
      },
      \\"application/srgs+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"grxml\\"]
      },
      \\"application/sru+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sru\\"]
      },
      \\"application/ssdl+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ssdl\\"]
      },
      \\"application/ssml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ssml\\"]
      },
      \\"application/stix+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/swid+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"swidtag\\"]
      },
      \\"application/tamp-apex-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-apex-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-community-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-community-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-error\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-sequence-adjust\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-sequence-adjust-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-status-query\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-status-response\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tar\\": {
        compressible: true
      },
      \\"application/taxii+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/td+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/tei+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tei\\", \\"teicorpus\\"]
      },
      \\"application/tetra_isi\\": {
        source: \\"iana\\"
      },
      \\"application/thraud+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tfi\\"]
      },
      \\"application/timestamp-query\\": {
        source: \\"iana\\"
      },
      \\"application/timestamp-reply\\": {
        source: \\"iana\\"
      },
      \\"application/timestamped-data\\": {
        source: \\"iana\\",
        extensions: [\\"tsd\\"]
      },
      \\"application/tlsrpt+gzip\\": {
        source: \\"iana\\"
      },
      \\"application/tlsrpt+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/tnauthlist\\": {
        source: \\"iana\\"
      },
      \\"application/token-introspection+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/toml\\": {
        compressible: true,
        extensions: [\\"toml\\"]
      },
      \\"application/trickle-ice-sdpfrag\\": {
        source: \\"iana\\"
      },
      \\"application/trig\\": {
        source: \\"iana\\",
        extensions: [\\"trig\\"]
      },
      \\"application/ttml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ttml\\"]
      },
      \\"application/tve-trigger\\": {
        source: \\"iana\\"
      },
      \\"application/tzif\\": {
        source: \\"iana\\"
      },
      \\"application/tzif-leap\\": {
        source: \\"iana\\"
      },
      \\"application/ubjson\\": {
        compressible: false,
        extensions: [\\"ubj\\"]
      },
      \\"application/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"application/urc-grpsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/urc-ressheet+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rsheet\\"]
      },
      \\"application/urc-targetdesc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"td\\"]
      },
      \\"application/urc-uisocketdesc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vcard+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vcard+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vemmi\\": {
        source: \\"iana\\"
      },
      \\"application/vividence.scriptfile\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.1000minds.decision-model+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"1km\\"]
      },
      \\"application/vnd.3gpp-prose+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp-prose-pc3ch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp-v2x-local-service-information\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.5gnas\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.access-transfer-events+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.bsf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.gmop+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.gtpc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.interworking-data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.lpp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mc-signalling-ear\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-payload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-signalling\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-floor-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-location-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-signed+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-ue-init-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-affiliation-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-location-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-transmission-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mid-call+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.ngap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.pfcp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.pic-bw-large\\": {
        source: \\"iana\\",
        extensions: [\\"plb\\"]
      },
      \\"application/vnd.3gpp.pic-bw-small\\": {
        source: \\"iana\\",
        extensions: [\\"psb\\"]
      },
      \\"application/vnd.3gpp.pic-bw-var\\": {
        source: \\"iana\\",
        extensions: [\\"pvb\\"]
      },
      \\"application/vnd.3gpp.s1ap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.sms+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.srvcc-ext+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.srvcc-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.state-and-event-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.ussd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp2.bcmcsinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp2.sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp2.tcap\\": {
        source: \\"iana\\",
        extensions: [\\"tcap\\"]
      },
      \\"application/vnd.3lightssoftware.imagescal\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3m.post-it-notes\\": {
        source: \\"iana\\",
        extensions: [\\"pwn\\"]
      },
      \\"application/vnd.accpac.simply.aso\\": {
        source: \\"iana\\",
        extensions: [\\"aso\\"]
      },
      \\"application/vnd.accpac.simply.imp\\": {
        source: \\"iana\\",
        extensions: [\\"imp\\"]
      },
      \\"application/vnd.acucobol\\": {
        source: \\"iana\\",
        extensions: [\\"acu\\"]
      },
      \\"application/vnd.acucorp\\": {
        source: \\"iana\\",
        extensions: [\\"atc\\", \\"acutc\\"]
      },
      \\"application/vnd.adobe.air-application-installer-package+zip\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"air\\"]
      },
      \\"application/vnd.adobe.flash.movie\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.adobe.formscentral.fcdt\\": {
        source: \\"iana\\",
        extensions: [\\"fcdt\\"]
      },
      \\"application/vnd.adobe.fxp\\": {
        source: \\"iana\\",
        extensions: [\\"fxp\\", \\"fxpl\\"]
      },
      \\"application/vnd.adobe.partial-upload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.adobe.xdp+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdp\\"]
      },
      \\"application/vnd.adobe.xfdf\\": {
        source: \\"iana\\",
        extensions: [\\"xfdf\\"]
      },
      \\"application/vnd.aether.imp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.afplinedata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.afplinedata-pagedef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.cmoca-cmresource\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-charset\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-codedfont\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-codepage\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-cmtable\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-formdef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-mediummap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-objectcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-overlay\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-pagesegment\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.age\\": {
        source: \\"iana\\",
        extensions: [\\"age\\"]
      },
      \\"application/vnd.ah-barcode\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ahead.space\\": {
        source: \\"iana\\",
        extensions: [\\"ahead\\"]
      },
      \\"application/vnd.airzip.filesecure.azf\\": {
        source: \\"iana\\",
        extensions: [\\"azf\\"]
      },
      \\"application/vnd.airzip.filesecure.azs\\": {
        source: \\"iana\\",
        extensions: [\\"azs\\"]
      },
      \\"application/vnd.amadeus+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.amazon.ebook\\": {
        source: \\"apache\\",
        extensions: [\\"azw\\"]
      },
      \\"application/vnd.amazon.mobi8-ebook\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.americandynamics.acc\\": {
        source: \\"iana\\",
        extensions: [\\"acc\\"]
      },
      \\"application/vnd.amiga.ami\\": {
        source: \\"iana\\",
        extensions: [\\"ami\\"]
      },
      \\"application/vnd.amundsen.maze+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.android.ota\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.android.package-archive\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"apk\\"]
      },
      \\"application/vnd.anki\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.anser-web-certificate-issue-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"cii\\"]
      },
      \\"application/vnd.anser-web-funds-transfer-initiation\\": {
        source: \\"apache\\",
        extensions: [\\"fti\\"]
      },
      \\"application/vnd.antix.game-component\\": {
        source: \\"iana\\",
        extensions: [\\"atx\\"]
      },
      \\"application/vnd.apache.arrow.file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.arrow.stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.binary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.compact\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.json\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.api+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.aplextor.warrp+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.apothekende.reservation+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.apple.installer+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpkg\\"]
      },
      \\"application/vnd.apple.keynote\\": {
        source: \\"iana\\",
        extensions: [\\"key\\"]
      },
      \\"application/vnd.apple.mpegurl\\": {
        source: \\"iana\\",
        extensions: [\\"m3u8\\"]
      },
      \\"application/vnd.apple.numbers\\": {
        source: \\"iana\\",
        extensions: [\\"numbers\\"]
      },
      \\"application/vnd.apple.pages\\": {
        source: \\"iana\\",
        extensions: [\\"pages\\"]
      },
      \\"application/vnd.apple.pkpass\\": {
        compressible: false,
        extensions: [\\"pkpass\\"]
      },
      \\"application/vnd.arastra.swi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.aristanetworks.swi\\": {
        source: \\"iana\\",
        extensions: [\\"swi\\"]
      },
      \\"application/vnd.artisan+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.artsquare\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.astraea-software.iota\\": {
        source: \\"iana\\",
        extensions: [\\"iota\\"]
      },
      \\"application/vnd.audiograph\\": {
        source: \\"iana\\",
        extensions: [\\"aep\\"]
      },
      \\"application/vnd.autopackage\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.avalon+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.avistar+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.balsamiq.bmml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"bmml\\"]
      },
      \\"application/vnd.balsamiq.bmpr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.banana-accounting\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.error\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.msg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.msg+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.bekitzur-stech+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.bint.med-content\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.biopax.rdf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.blink-idb-value-wrapper\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.blueice.multipass\\": {
        source: \\"iana\\",
        extensions: [\\"mpm\\"]
      },
      \\"application/vnd.bluetooth.ep.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bluetooth.le.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bmi\\": {
        source: \\"iana\\",
        extensions: [\\"bmi\\"]
      },
      \\"application/vnd.bpf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bpf3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.businessobjects\\": {
        source: \\"iana\\",
        extensions: [\\"rep\\"]
      },
      \\"application/vnd.byu.uapi+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cab-jscript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.canon-cpdl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.canon-lips\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.capasystems-pg+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cendio.thinlinc.clientconf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.century-systems.tcp_stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.chemdraw+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cdxml\\"]
      },
      \\"application/vnd.chess-pgn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.chipnuts.karaoke-mmd\\": {
        source: \\"iana\\",
        extensions: [\\"mmd\\"]
      },
      \\"application/vnd.ciedi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cinderella\\": {
        source: \\"iana\\",
        extensions: [\\"cdy\\"]
      },
      \\"application/vnd.cirpack.isdn-ext\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.citationstyles.style+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"csl\\"]
      },
      \\"application/vnd.claymore\\": {
        source: \\"iana\\",
        extensions: [\\"cla\\"]
      },
      \\"application/vnd.cloanto.rp9\\": {
        source: \\"iana\\",
        extensions: [\\"rp9\\"]
      },
      \\"application/vnd.clonk.c4group\\": {
        source: \\"iana\\",
        extensions: [\\"c4g\\", \\"c4d\\", \\"c4f\\", \\"c4p\\", \\"c4u\\"]
      },
      \\"application/vnd.cluetrust.cartomobile-config\\": {
        source: \\"iana\\",
        extensions: [\\"c11amc\\"]
      },
      \\"application/vnd.cluetrust.cartomobile-config-pkg\\": {
        source: \\"iana\\",
        extensions: [\\"c11amz\\"]
      },
      \\"application/vnd.coffeescript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.document\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.document-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.presentation\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.presentation-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.spreadsheet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.spreadsheet-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collection+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.collection.doc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.collection.next+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.comicbook+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.comicbook-rar\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.commerce-battelle\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.commonspace\\": {
        source: \\"iana\\",
        extensions: [\\"csp\\"]
      },
      \\"application/vnd.contact.cmsg\\": {
        source: \\"iana\\",
        extensions: [\\"cdbcmsg\\"]
      },
      \\"application/vnd.coreos.ignition+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cosmocaller\\": {
        source: \\"iana\\",
        extensions: [\\"cmc\\"]
      },
      \\"application/vnd.crick.clicker\\": {
        source: \\"iana\\",
        extensions: [\\"clkx\\"]
      },
      \\"application/vnd.crick.clicker.keyboard\\": {
        source: \\"iana\\",
        extensions: [\\"clkk\\"]
      },
      \\"application/vnd.crick.clicker.palette\\": {
        source: \\"iana\\",
        extensions: [\\"clkp\\"]
      },
      \\"application/vnd.crick.clicker.template\\": {
        source: \\"iana\\",
        extensions: [\\"clkt\\"]
      },
      \\"application/vnd.crick.clicker.wordbank\\": {
        source: \\"iana\\",
        extensions: [\\"clkw\\"]
      },
      \\"application/vnd.criticaltools.wbs+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wbs\\"]
      },
      \\"application/vnd.cryptii.pipe+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.crypto-shade-file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cryptomator.encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cryptomator.vault\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ctc-posml\\": {
        source: \\"iana\\",
        extensions: [\\"pml\\"]
      },
      \\"application/vnd.ctct.ws+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cups-pdf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-postscript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-ppd\\": {
        source: \\"iana\\",
        extensions: [\\"ppd\\"]
      },
      \\"application/vnd.cups-raster\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-raw\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.curl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.curl.car\\": {
        source: \\"apache\\",
        extensions: [\\"car\\"]
      },
      \\"application/vnd.curl.pcurl\\": {
        source: \\"apache\\",
        extensions: [\\"pcurl\\"]
      },
      \\"application/vnd.cyan.dean.root+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cybank\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cyclonedx+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cyclonedx+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.d2l.coursepackage1p0+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.d3m-dataset\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.d3m-problem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dart\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dart\\"]
      },
      \\"application/vnd.data-vision.rdz\\": {
        source: \\"iana\\",
        extensions: [\\"rdz\\"]
      },
      \\"application/vnd.datapackage+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dataresource+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dbf\\": {
        source: \\"iana\\",
        extensions: [\\"dbf\\"]
      },
      \\"application/vnd.debian.binary-package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dece.data\\": {
        source: \\"iana\\",
        extensions: [\\"uvf\\", \\"uvvf\\", \\"uvd\\", \\"uvvd\\"]
      },
      \\"application/vnd.dece.ttml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uvt\\", \\"uvvt\\"]
      },
      \\"application/vnd.dece.unspecified\\": {
        source: \\"iana\\",
        extensions: [\\"uvx\\", \\"uvvx\\"]
      },
      \\"application/vnd.dece.zip\\": {
        source: \\"iana\\",
        extensions: [\\"uvz\\", \\"uvvz\\"]
      },
      \\"application/vnd.denovo.fcselayout-link\\": {
        source: \\"iana\\",
        extensions: [\\"fe_launch\\"]
      },
      \\"application/vnd.desmume.movie\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dir-bi.plate-dl-nosuffix\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dm.delegation+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dna\\": {
        source: \\"iana\\",
        extensions: [\\"dna\\"]
      },
      \\"application/vnd.document+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dolby.mlp\\": {
        source: \\"apache\\",
        extensions: [\\"mlp\\"]
      },
      \\"application/vnd.dolby.mobile.1\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dolby.mobile.2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.doremir.scorecloud-binary-document\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dpgraph\\": {
        source: \\"iana\\",
        extensions: [\\"dpg\\"]
      },
      \\"application/vnd.dreamfactory\\": {
        source: \\"iana\\",
        extensions: [\\"dfac\\"]
      },
      \\"application/vnd.drive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ds-keypoint\\": {
        source: \\"apache\\",
        extensions: [\\"kpxx\\"]
      },
      \\"application/vnd.dtg.local\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dtg.local.flash\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dtg.local.html\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ait\\": {
        source: \\"iana\\",
        extensions: [\\"ait\\"]
      },
      \\"application/vnd.dvb.dvbisl+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.dvbj\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.esgcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcdftnotifaccess\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgaccess\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgaccess2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgpdd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcroaming\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.iptv.alfec-base\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.iptv.alfec-enhancement\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.notif-aggregate-root+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-container+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-generic+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-msglist+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-registration-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-registration-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-init+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.pfr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.service\\": {
        source: \\"iana\\",
        extensions: [\\"svc\\"]
      },
      \\"application/vnd.dxr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dynageo\\": {
        source: \\"iana\\",
        extensions: [\\"geo\\"]
      },
      \\"application/vnd.dzr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.easykaraoke.cdgdownload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecdis-update\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecip.rlp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eclipse.ditto+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ecowin.chart\\": {
        source: \\"iana\\",
        extensions: [\\"mag\\"]
      },
      \\"application/vnd.ecowin.filerequest\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.fileupdate\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.series\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.seriesrequest\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.seriesupdate\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.efi.img\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.efi.iso\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.emclient.accessrequest+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.enliven\\": {
        source: \\"iana\\",
        extensions: [\\"nml\\"]
      },
      \\"application/vnd.enphase.envoy\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eprints.data+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.epson.esf\\": {
        source: \\"iana\\",
        extensions: [\\"esf\\"]
      },
      \\"application/vnd.epson.msf\\": {
        source: \\"iana\\",
        extensions: [\\"msf\\"]
      },
      \\"application/vnd.epson.quickanime\\": {
        source: \\"iana\\",
        extensions: [\\"qam\\"]
      },
      \\"application/vnd.epson.salt\\": {
        source: \\"iana\\",
        extensions: [\\"slt\\"]
      },
      \\"application/vnd.epson.ssf\\": {
        source: \\"iana\\",
        extensions: [\\"ssf\\"]
      },
      \\"application/vnd.ericsson.quickcall\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.espass-espass+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.eszigno3+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"es3\\", \\"et3\\"]
      },
      \\"application/vnd.etsi.aoc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.asic-e+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.etsi.asic-s+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.etsi.cug+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvcommand+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvdiscovery+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-bc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-cod+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-npvr+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvservice+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsync+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvueprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.mcid+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.mheg5\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.etsi.overload-control-policy-dataset+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.pstn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.sci+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.simservs+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.timestamp-token\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.etsi.tsl+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.tsl.der\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eu.kasparian.car+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.eudora.data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.profile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.settings\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.theme\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.exstream-empower+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.exstream-package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ezpix-album\\": {
        source: \\"iana\\",
        extensions: [\\"ez2\\"]
      },
      \\"application/vnd.ezpix-package\\": {
        source: \\"iana\\",
        extensions: [\\"ez3\\"]
      },
      \\"application/vnd.f-secure.mobile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.familysearch.gedcom+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.fastcopy-disk-image\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fdf\\": {
        source: \\"iana\\",
        extensions: [\\"fdf\\"]
      },
      \\"application/vnd.fdsn.mseed\\": {
        source: \\"iana\\",
        extensions: [\\"mseed\\"]
      },
      \\"application/vnd.fdsn.seed\\": {
        source: \\"iana\\",
        extensions: [\\"seed\\", \\"dataless\\"]
      },
      \\"application/vnd.ffsns\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ficlab.flb+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.filmit.zfc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fints\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.firemonkeys.cloudcell\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.flographit\\": {
        source: \\"iana\\",
        extensions: [\\"gph\\"]
      },
      \\"application/vnd.fluxtime.clip\\": {
        source: \\"iana\\",
        extensions: [\\"ftc\\"]
      },
      \\"application/vnd.font-fontforge-sfd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.framemaker\\": {
        source: \\"iana\\",
        extensions: [\\"fm\\", \\"frame\\", \\"maker\\", \\"book\\"]
      },
      \\"application/vnd.frogans.fnc\\": {
        source: \\"iana\\",
        extensions: [\\"fnc\\"]
      },
      \\"application/vnd.frogans.ltf\\": {
        source: \\"iana\\",
        extensions: [\\"ltf\\"]
      },
      \\"application/vnd.fsc.weblaunch\\": {
        source: \\"iana\\",
        extensions: [\\"fsc\\"]
      },
      \\"application/vnd.fujifilm.fb.docuworks\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.docuworks.binder\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.docuworks.container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.jfi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.fujitsu.oasys\\": {
        source: \\"iana\\",
        extensions: [\\"oas\\"]
      },
      \\"application/vnd.fujitsu.oasys2\\": {
        source: \\"iana\\",
        extensions: [\\"oa2\\"]
      },
      \\"application/vnd.fujitsu.oasys3\\": {
        source: \\"iana\\",
        extensions: [\\"oa3\\"]
      },
      \\"application/vnd.fujitsu.oasysgp\\": {
        source: \\"iana\\",
        extensions: [\\"fg5\\"]
      },
      \\"application/vnd.fujitsu.oasysprs\\": {
        source: \\"iana\\",
        extensions: [\\"bh2\\"]
      },
      \\"application/vnd.fujixerox.art-ex\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.art4\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.ddd\\": {
        source: \\"iana\\",
        extensions: [\\"ddd\\"]
      },
      \\"application/vnd.fujixerox.docuworks\\": {
        source: \\"iana\\",
        extensions: [\\"xdw\\"]
      },
      \\"application/vnd.fujixerox.docuworks.binder\\": {
        source: \\"iana\\",
        extensions: [\\"xbd\\"]
      },
      \\"application/vnd.fujixerox.docuworks.container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.hbpl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fut-misnet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.futoin+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.futoin+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.fuzzysheet\\": {
        source: \\"iana\\",
        extensions: [\\"fzs\\"]
      },
      \\"application/vnd.genomatix.tuxedo\\": {
        source: \\"iana\\",
        extensions: [\\"txd\\"]
      },
      \\"application/vnd.gentics.grd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geo+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geocube+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geogebra.file\\": {
        source: \\"iana\\",
        extensions: [\\"ggb\\"]
      },
      \\"application/vnd.geogebra.slides\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.geogebra.tool\\": {
        source: \\"iana\\",
        extensions: [\\"ggt\\"]
      },
      \\"application/vnd.geometry-explorer\\": {
        source: \\"iana\\",
        extensions: [\\"gex\\", \\"gre\\"]
      },
      \\"application/vnd.geonext\\": {
        source: \\"iana\\",
        extensions: [\\"gxt\\"]
      },
      \\"application/vnd.geoplan\\": {
        source: \\"iana\\",
        extensions: [\\"g2w\\"]
      },
      \\"application/vnd.geospace\\": {
        source: \\"iana\\",
        extensions: [\\"g3w\\"]
      },
      \\"application/vnd.gerber\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.globalplatform.card-content-mgt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.globalplatform.card-content-mgt-response\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.gmx\\": {
        source: \\"iana\\",
        extensions: [\\"gmx\\"]
      },
      \\"application/vnd.google-apps.document\\": {
        compressible: false,
        extensions: [\\"gdoc\\"]
      },
      \\"application/vnd.google-apps.presentation\\": {
        compressible: false,
        extensions: [\\"gslides\\"]
      },
      \\"application/vnd.google-apps.spreadsheet\\": {
        compressible: false,
        extensions: [\\"gsheet\\"]
      },
      \\"application/vnd.google-earth.kml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"kml\\"]
      },
      \\"application/vnd.google-earth.kmz\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"kmz\\"]
      },
      \\"application/vnd.gov.sk.e-form+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.gov.sk.e-form+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.gov.sk.xmldatacontainer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.grafeq\\": {
        source: \\"iana\\",
        extensions: [\\"gqf\\", \\"gqs\\"]
      },
      \\"application/vnd.gridmp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.groove-account\\": {
        source: \\"iana\\",
        extensions: [\\"gac\\"]
      },
      \\"application/vnd.groove-help\\": {
        source: \\"iana\\",
        extensions: [\\"ghf\\"]
      },
      \\"application/vnd.groove-identity-message\\": {
        source: \\"iana\\",
        extensions: [\\"gim\\"]
      },
      \\"application/vnd.groove-injector\\": {
        source: \\"iana\\",
        extensions: [\\"grv\\"]
      },
      \\"application/vnd.groove-tool-message\\": {
        source: \\"iana\\",
        extensions: [\\"gtm\\"]
      },
      \\"application/vnd.groove-tool-template\\": {
        source: \\"iana\\",
        extensions: [\\"tpl\\"]
      },
      \\"application/vnd.groove-vcard\\": {
        source: \\"iana\\",
        extensions: [\\"vcg\\"]
      },
      \\"application/vnd.hal+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hal+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"hal\\"]
      },
      \\"application/vnd.handheld-entertainment+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"zmm\\"]
      },
      \\"application/vnd.hbci\\": {
        source: \\"iana\\",
        extensions: [\\"hbci\\"]
      },
      \\"application/vnd.hc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hcl-bireports\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.hdt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.heroku+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hhe.lesson-player\\": {
        source: \\"iana\\",
        extensions: [\\"les\\"]
      },
      \\"application/vnd.hl7cda+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.hl7v2+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.hp-hpgl\\": {
        source: \\"iana\\",
        extensions: [\\"hpgl\\"]
      },
      \\"application/vnd.hp-hpid\\": {
        source: \\"iana\\",
        extensions: [\\"hpid\\"]
      },
      \\"application/vnd.hp-hps\\": {
        source: \\"iana\\",
        extensions: [\\"hps\\"]
      },
      \\"application/vnd.hp-jlyt\\": {
        source: \\"iana\\",
        extensions: [\\"jlt\\"]
      },
      \\"application/vnd.hp-pcl\\": {
        source: \\"iana\\",
        extensions: [\\"pcl\\"]
      },
      \\"application/vnd.hp-pclxl\\": {
        source: \\"iana\\",
        extensions: [\\"pclxl\\"]
      },
      \\"application/vnd.httphone\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.hydrostatix.sof-data\\": {
        source: \\"iana\\",
        extensions: [\\"sfd-hdstx\\"]
      },
      \\"application/vnd.hyper+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hyper-item+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hyperdrive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hzn-3d-crossword\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.afplinedata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.electronic-media\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.minipay\\": {
        source: \\"iana\\",
        extensions: [\\"mpy\\"]
      },
      \\"application/vnd.ibm.modcap\\": {
        source: \\"iana\\",
        extensions: [\\"afp\\", \\"listafp\\", \\"list3820\\"]
      },
      \\"application/vnd.ibm.rights-management\\": {
        source: \\"iana\\",
        extensions: [\\"irm\\"]
      },
      \\"application/vnd.ibm.secure-container\\": {
        source: \\"iana\\",
        extensions: [\\"sc\\"]
      },
      \\"application/vnd.iccprofile\\": {
        source: \\"iana\\",
        extensions: [\\"icc\\", \\"icm\\"]
      },
      \\"application/vnd.ieee.1905\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.igloader\\": {
        source: \\"iana\\",
        extensions: [\\"igl\\"]
      },
      \\"application/vnd.imagemeter.folder+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.imagemeter.image+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.immervision-ivp\\": {
        source: \\"iana\\",
        extensions: [\\"ivp\\"]
      },
      \\"application/vnd.immervision-ivu\\": {
        source: \\"iana\\",
        extensions: [\\"ivu\\"]
      },
      \\"application/vnd.ims.imsccv1p1\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.imsccv1p2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.imsccv1p3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.lis.v2.result+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolconsumerprofile+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolproxy+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolproxy.id+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolsettings+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolsettings.simple+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.informedcontrol.rms+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.informix-visionary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.infotech.project\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.infotech.project+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.innopath.wamp.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.insors.igm\\": {
        source: \\"iana\\",
        extensions: [\\"igm\\"]
      },
      \\"application/vnd.intercon.formnet\\": {
        source: \\"iana\\",
        extensions: [\\"xpw\\", \\"xpx\\"]
      },
      \\"application/vnd.intergeo\\": {
        source: \\"iana\\",
        extensions: [\\"i2g\\"]
      },
      \\"application/vnd.intertrust.digibox\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.intertrust.nncp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.intu.qbo\\": {
        source: \\"iana\\",
        extensions: [\\"qbo\\"]
      },
      \\"application/vnd.intu.qfx\\": {
        source: \\"iana\\",
        extensions: [\\"qfx\\"]
      },
      \\"application/vnd.iptc.g2.catalogitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.conceptitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.knowledgeitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.newsitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.newsmessage+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.packageitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.planningitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ipunplugged.rcprofile\\": {
        source: \\"iana\\",
        extensions: [\\"rcprofile\\"]
      },
      \\"application/vnd.irepository.package+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"irp\\"]
      },
      \\"application/vnd.is-xpr\\": {
        source: \\"iana\\",
        extensions: [\\"xpr\\"]
      },
      \\"application/vnd.isac.fcs\\": {
        source: \\"iana\\",
        extensions: [\\"fcs\\"]
      },
      \\"application/vnd.iso11783-10+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.jam\\": {
        source: \\"iana\\",
        extensions: [\\"jam\\"]
      },
      \\"application/vnd.japannet-directory-service\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-jpnstore-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-payment-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-registration\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-registration-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-setstore-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-verification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-verification-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.jcp.javame.midlet-rms\\": {
        source: \\"iana\\",
        extensions: [\\"rms\\"]
      },
      \\"application/vnd.jisp\\": {
        source: \\"iana\\",
        extensions: [\\"jisp\\"]
      },
      \\"application/vnd.joost.joda-archive\\": {
        source: \\"iana\\",
        extensions: [\\"joda\\"]
      },
      \\"application/vnd.jsk.isdn-ngn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.kahootz\\": {
        source: \\"iana\\",
        extensions: [\\"ktz\\", \\"ktr\\"]
      },
      \\"application/vnd.kde.karbon\\": {
        source: \\"iana\\",
        extensions: [\\"karbon\\"]
      },
      \\"application/vnd.kde.kchart\\": {
        source: \\"iana\\",
        extensions: [\\"chrt\\"]
      },
      \\"application/vnd.kde.kformula\\": {
        source: \\"iana\\",
        extensions: [\\"kfo\\"]
      },
      \\"application/vnd.kde.kivio\\": {
        source: \\"iana\\",
        extensions: [\\"flw\\"]
      },
      \\"application/vnd.kde.kontour\\": {
        source: \\"iana\\",
        extensions: [\\"kon\\"]
      },
      \\"application/vnd.kde.kpresenter\\": {
        source: \\"iana\\",
        extensions: [\\"kpr\\", \\"kpt\\"]
      },
      \\"application/vnd.kde.kspread\\": {
        source: \\"iana\\",
        extensions: [\\"ksp\\"]
      },
      \\"application/vnd.kde.kword\\": {
        source: \\"iana\\",
        extensions: [\\"kwd\\", \\"kwt\\"]
      },
      \\"application/vnd.kenameaapp\\": {
        source: \\"iana\\",
        extensions: [\\"htke\\"]
      },
      \\"application/vnd.kidspiration\\": {
        source: \\"iana\\",
        extensions: [\\"kia\\"]
      },
      \\"application/vnd.kinar\\": {
        source: \\"iana\\",
        extensions: [\\"kne\\", \\"knp\\"]
      },
      \\"application/vnd.koan\\": {
        source: \\"iana\\",
        extensions: [\\"skp\\", \\"skd\\", \\"skt\\", \\"skm\\"]
      },
      \\"application/vnd.kodak-descriptor\\": {
        source: \\"iana\\",
        extensions: [\\"sse\\"]
      },
      \\"application/vnd.las\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.las.las+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.las.las+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lasxml\\"]
      },
      \\"application/vnd.laszip\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.leap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.liberty-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.llamagraphics.life-balance.desktop\\": {
        source: \\"iana\\",
        extensions: [\\"lbd\\"]
      },
      \\"application/vnd.llamagraphics.life-balance.exchange+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lbe\\"]
      },
      \\"application/vnd.logipipe.circuit+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.loom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.lotus-1-2-3\\": {
        source: \\"iana\\",
        extensions: [\\"123\\"]
      },
      \\"application/vnd.lotus-approach\\": {
        source: \\"iana\\",
        extensions: [\\"apr\\"]
      },
      \\"application/vnd.lotus-freelance\\": {
        source: \\"iana\\",
        extensions: [\\"pre\\"]
      },
      \\"application/vnd.lotus-notes\\": {
        source: \\"iana\\",
        extensions: [\\"nsf\\"]
      },
      \\"application/vnd.lotus-organizer\\": {
        source: \\"iana\\",
        extensions: [\\"org\\"]
      },
      \\"application/vnd.lotus-screencam\\": {
        source: \\"iana\\",
        extensions: [\\"scm\\"]
      },
      \\"application/vnd.lotus-wordpro\\": {
        source: \\"iana\\",
        extensions: [\\"lwp\\"]
      },
      \\"application/vnd.macports.portpkg\\": {
        source: \\"iana\\",
        extensions: [\\"portpkg\\"]
      },
      \\"application/vnd.mapbox-vector-tile\\": {
        source: \\"iana\\",
        extensions: [\\"mvt\\"]
      },
      \\"application/vnd.marlin.drm.actiontoken+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.conftoken+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.license+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.mdcf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mason+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.maxar.archive.3tz+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.maxmind.maxmind-db\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mcd\\": {
        source: \\"iana\\",
        extensions: [\\"mcd\\"]
      },
      \\"application/vnd.medcalcdata\\": {
        source: \\"iana\\",
        extensions: [\\"mc1\\"]
      },
      \\"application/vnd.mediastation.cdkey\\": {
        source: \\"iana\\",
        extensions: [\\"cdkey\\"]
      },
      \\"application/vnd.meridian-slingshot\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mfer\\": {
        source: \\"iana\\",
        extensions: [\\"mwf\\"]
      },
      \\"application/vnd.mfmp\\": {
        source: \\"iana\\",
        extensions: [\\"mfm\\"]
      },
      \\"application/vnd.micro+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.micrografx.flo\\": {
        source: \\"iana\\",
        extensions: [\\"flo\\"]
      },
      \\"application/vnd.micrografx.igx\\": {
        source: \\"iana\\",
        extensions: [\\"igx\\"]
      },
      \\"application/vnd.microsoft.portable-executable\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.microsoft.windows.thumbnail-cache\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.miele+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.mif\\": {
        source: \\"iana\\",
        extensions: [\\"mif\\"]
      },
      \\"application/vnd.minisoft-hp3000-save\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mitsubishi.misty-guard.trustweb\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mobius.daf\\": {
        source: \\"iana\\",
        extensions: [\\"daf\\"]
      },
      \\"application/vnd.mobius.dis\\": {
        source: \\"iana\\",
        extensions: [\\"dis\\"]
      },
      \\"application/vnd.mobius.mbk\\": {
        source: \\"iana\\",
        extensions: [\\"mbk\\"]
      },
      \\"application/vnd.mobius.mqy\\": {
        source: \\"iana\\",
        extensions: [\\"mqy\\"]
      },
      \\"application/vnd.mobius.msl\\": {
        source: \\"iana\\",
        extensions: [\\"msl\\"]
      },
      \\"application/vnd.mobius.plc\\": {
        source: \\"iana\\",
        extensions: [\\"plc\\"]
      },
      \\"application/vnd.mobius.txf\\": {
        source: \\"iana\\",
        extensions: [\\"txf\\"]
      },
      \\"application/vnd.mophun.application\\": {
        source: \\"iana\\",
        extensions: [\\"mpn\\"]
      },
      \\"application/vnd.mophun.certificate\\": {
        source: \\"iana\\",
        extensions: [\\"mpc\\"]
      },
      \\"application/vnd.motorola.flexsuite\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.adsi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.fis\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.gotap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.kmr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.ttc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.wem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.iprm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mozilla.xul+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xul\\"]
      },
      \\"application/vnd.ms-3mfdocument\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-artgalry\\": {
        source: \\"iana\\",
        extensions: [\\"cil\\"]
      },
      \\"application/vnd.ms-asf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-cab-compressed\\": {
        source: \\"iana\\",
        extensions: [\\"cab\\"]
      },
      \\"application/vnd.ms-color.iccprofile\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.ms-excel\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xls\\", \\"xlm\\", \\"xla\\", \\"xlc\\", \\"xlt\\", \\"xlw\\"]
      },
      \\"application/vnd.ms-excel.addin.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlam\\"]
      },
      \\"application/vnd.ms-excel.sheet.binary.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlsb\\"]
      },
      \\"application/vnd.ms-excel.sheet.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlsm\\"]
      },
      \\"application/vnd.ms-excel.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xltm\\"]
      },
      \\"application/vnd.ms-fontobject\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"eot\\"]
      },
      \\"application/vnd.ms-htmlhelp\\": {
        source: \\"iana\\",
        extensions: [\\"chm\\"]
      },
      \\"application/vnd.ms-ims\\": {
        source: \\"iana\\",
        extensions: [\\"ims\\"]
      },
      \\"application/vnd.ms-lrm\\": {
        source: \\"iana\\",
        extensions: [\\"lrm\\"]
      },
      \\"application/vnd.ms-office.activex+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-officetheme\\": {
        source: \\"iana\\",
        extensions: [\\"thmx\\"]
      },
      \\"application/vnd.ms-opentype\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/vnd.ms-outlook\\": {
        compressible: false,
        extensions: [\\"msg\\"]
      },
      \\"application/vnd.ms-package.obfuscated-opentype\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.ms-pki.seccat\\": {
        source: \\"apache\\",
        extensions: [\\"cat\\"]
      },
      \\"application/vnd.ms-pki.stl\\": {
        source: \\"apache\\",
        extensions: [\\"stl\\"]
      },
      \\"application/vnd.ms-playready.initiator+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-powerpoint\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ppt\\", \\"pps\\", \\"pot\\"]
      },
      \\"application/vnd.ms-powerpoint.addin.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"ppam\\"]
      },
      \\"application/vnd.ms-powerpoint.presentation.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"pptm\\"]
      },
      \\"application/vnd.ms-powerpoint.slide.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"sldm\\"]
      },
      \\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"ppsm\\"]
      },
      \\"application/vnd.ms-powerpoint.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"potm\\"]
      },
      \\"application/vnd.ms-printdevicecapabilities+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-printing.printticket+xml\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/vnd.ms-printschematicket+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-project\\": {
        source: \\"iana\\",
        extensions: [\\"mpp\\", \\"mpt\\"]
      },
      \\"application/vnd.ms-tnef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.devicepairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.nwprinting.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.printerpairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.wsd.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.lic-chlg-req\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.lic-resp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.meter-chlg-req\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.meter-resp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-word.document.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"docm\\"]
      },
      \\"application/vnd.ms-word.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"dotm\\"]
      },
      \\"application/vnd.ms-works\\": {
        source: \\"iana\\",
        extensions: [\\"wps\\", \\"wks\\", \\"wcm\\", \\"wdb\\"]
      },
      \\"application/vnd.ms-wpl\\": {
        source: \\"iana\\",
        extensions: [\\"wpl\\"]
      },
      \\"application/vnd.ms-xpsdocument\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xps\\"]
      },
      \\"application/vnd.msa-disk-image\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mseq\\": {
        source: \\"iana\\",
        extensions: [\\"mseq\\"]
      },
      \\"application/vnd.msign\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.multiad.creator\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.multiad.creator.cif\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.music-niff\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.musician\\": {
        source: \\"iana\\",
        extensions: [\\"mus\\"]
      },
      \\"application/vnd.muvee.style\\": {
        source: \\"iana\\",
        extensions: [\\"msty\\"]
      },
      \\"application/vnd.mynfc\\": {
        source: \\"iana\\",
        extensions: [\\"taglet\\"]
      },
      \\"application/vnd.nacamar.ybrid+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ncd.control\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ncd.reference\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nearst.inv+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nebumind.line\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nervana\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.netfpx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.neurolanguage.nlu\\": {
        source: \\"iana\\",
        extensions: [\\"nlu\\"]
      },
      \\"application/vnd.nimn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nintendo.nitro.rom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nintendo.snes.rom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nitf\\": {
        source: \\"iana\\",
        extensions: [\\"ntf\\", \\"nitf\\"]
      },
      \\"application/vnd.noblenet-directory\\": {
        source: \\"iana\\",
        extensions: [\\"nnd\\"]
      },
      \\"application/vnd.noblenet-sealer\\": {
        source: \\"iana\\",
        extensions: [\\"nns\\"]
      },
      \\"application/vnd.noblenet-web\\": {
        source: \\"iana\\",
        extensions: [\\"nnw\\"]
      },
      \\"application/vnd.nokia.catalogs\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.conml+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.conml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.iptv.config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.isds-radio-presets\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.landmark+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.landmark+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.landmarkcollection+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.n-gage.ac+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ac\\"]
      },
      \\"application/vnd.nokia.n-gage.data\\": {
        source: \\"iana\\",
        extensions: [\\"ngdat\\"]
      },
      \\"application/vnd.nokia.n-gage.symbian.install\\": {
        source: \\"iana\\",
        extensions: [\\"n-gage\\"]
      },
      \\"application/vnd.nokia.ncd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.pcd+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.pcd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.radio-preset\\": {
        source: \\"iana\\",
        extensions: [\\"rpst\\"]
      },
      \\"application/vnd.nokia.radio-presets\\": {
        source: \\"iana\\",
        extensions: [\\"rpss\\"]
      },
      \\"application/vnd.novadigm.edm\\": {
        source: \\"iana\\",
        extensions: [\\"edm\\"]
      },
      \\"application/vnd.novadigm.edx\\": {
        source: \\"iana\\",
        extensions: [\\"edx\\"]
      },
      \\"application/vnd.novadigm.ext\\": {
        source: \\"iana\\",
        extensions: [\\"ext\\"]
      },
      \\"application/vnd.ntt-local.content-share\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.file-transfer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.ogw_remote-access\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.sip-ta_remote\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.sip-ta_tcp_stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oasis.opendocument.chart\\": {
        source: \\"iana\\",
        extensions: [\\"odc\\"]
      },
      \\"application/vnd.oasis.opendocument.chart-template\\": {
        source: \\"iana\\",
        extensions: [\\"otc\\"]
      },
      \\"application/vnd.oasis.opendocument.database\\": {
        source: \\"iana\\",
        extensions: [\\"odb\\"]
      },
      \\"application/vnd.oasis.opendocument.formula\\": {
        source: \\"iana\\",
        extensions: [\\"odf\\"]
      },
      \\"application/vnd.oasis.opendocument.formula-template\\": {
        source: \\"iana\\",
        extensions: [\\"odft\\"]
      },
      \\"application/vnd.oasis.opendocument.graphics\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odg\\"]
      },
      \\"application/vnd.oasis.opendocument.graphics-template\\": {
        source: \\"iana\\",
        extensions: [\\"otg\\"]
      },
      \\"application/vnd.oasis.opendocument.image\\": {
        source: \\"iana\\",
        extensions: [\\"odi\\"]
      },
      \\"application/vnd.oasis.opendocument.image-template\\": {
        source: \\"iana\\",
        extensions: [\\"oti\\"]
      },
      \\"application/vnd.oasis.opendocument.presentation\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odp\\"]
      },
      \\"application/vnd.oasis.opendocument.presentation-template\\": {
        source: \\"iana\\",
        extensions: [\\"otp\\"]
      },
      \\"application/vnd.oasis.opendocument.spreadsheet\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ods\\"]
      },
      \\"application/vnd.oasis.opendocument.spreadsheet-template\\": {
        source: \\"iana\\",
        extensions: [\\"ots\\"]
      },
      \\"application/vnd.oasis.opendocument.text\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odt\\"]
      },
      \\"application/vnd.oasis.opendocument.text-master\\": {
        source: \\"iana\\",
        extensions: [\\"odm\\"]
      },
      \\"application/vnd.oasis.opendocument.text-template\\": {
        source: \\"iana\\",
        extensions: [\\"ott\\"]
      },
      \\"application/vnd.oasis.opendocument.text-web\\": {
        source: \\"iana\\",
        extensions: [\\"oth\\"]
      },
      \\"application/vnd.obn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ocf+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oci.image.manifest.v1+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oftn.l10n+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.contentaccessdownload+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.contentaccessstreaming+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.cspg-hexbinary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oipf.dae.svg+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.dae.xhtml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.mippvcontrolmessage+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.pae.gem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oipf.spdiscovery+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.spdlist+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.ueprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.userprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.olpc-sugar\\": {
        source: \\"iana\\",
        extensions: [\\"xo\\"]
      },
      \\"application/vnd.oma-scws-config\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma-scws-http-request\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma-scws-http-response\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.associated-procedure-parameter+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.drm-trigger+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.imd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.ltkm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.notification+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.provisioningtrigger\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.sgboot\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.sgdd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.sgdu\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.simple-symbol-container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.smartcard-trigger+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.sprov+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.stkm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.cab-address-book+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-feature-handler+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-pcc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-subs-invite+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-user-prefs+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.dcd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.dcdc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.dd2+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dd2\\"]
      },
      \\"application/vnd.oma.drm.risd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.group-usage-list+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.lwm2m+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.lwm2m+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.lwm2m+tlv\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.pal+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.detailed-progress-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.final-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.groups+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.invocation-descriptor+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.optimized-progress-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.push\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.scidm.messages+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.xcap-directory+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.omads-email+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omads-file+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omads-folder+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omaloc-supl-init\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepager\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertamp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertamx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertat\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertatp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertatx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openblox.game+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"obgx\\"]
      },
      \\"application/vnd.openblox.game-binary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openeye.oeb\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openofficeorg.extension\\": {
        source: \\"apache\\",
        extensions: [\\"oxt\\"]
      },
      \\"application/vnd.openstreetmap.data+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"osm\\"]
      },
      \\"application/vnd.opentimestamps.ots\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openxmlformats-officedocument.custom-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawing+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.extended-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presentation\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pptx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slide\\": {
        source: \\"iana\\",
        extensions: [\\"sldx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\\": {
        source: \\"iana\\",
        extensions: [\\"ppsx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.template\\": {
        source: \\"iana\\",
        extensions: [\\"potx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xlsx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\\": {
        source: \\"iana\\",
        extensions: [\\"xltx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.theme+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.themeoverride+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.vmldrawing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"docx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\\": {
        source: \\"iana\\",
        extensions: [\\"dotx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.core-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.relationships+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oracle.resource+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.orange.indata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osa.netdeploy\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osgeo.mapguide.package\\": {
        source: \\"iana\\",
        extensions: [\\"mgp\\"]
      },
      \\"application/vnd.osgi.bundle\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osgi.dp\\": {
        source: \\"iana\\",
        extensions: [\\"dp\\"]
      },
      \\"application/vnd.osgi.subsystem\\": {
        source: \\"iana\\",
        extensions: [\\"esa\\"]
      },
      \\"application/vnd.otps.ct-kip+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oxli.countgraph\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pagerduty+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.palm\\": {
        source: \\"iana\\",
        extensions: [\\"pdb\\", \\"pqa\\", \\"oprc\\"]
      },
      \\"application/vnd.panoply\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.paos.xml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.patentdive\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.patientecommsdoc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pawaafile\\": {
        source: \\"iana\\",
        extensions: [\\"paw\\"]
      },
      \\"application/vnd.pcos\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pg.format\\": {
        source: \\"iana\\",
        extensions: [\\"str\\"]
      },
      \\"application/vnd.pg.osasli\\": {
        source: \\"iana\\",
        extensions: [\\"ei6\\"]
      },
      \\"application/vnd.piaccess.application-licence\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.picsel\\": {
        source: \\"iana\\",
        extensions: [\\"efif\\"]
      },
      \\"application/vnd.pmi.widget\\": {
        source: \\"iana\\",
        extensions: [\\"wg\\"]
      },
      \\"application/vnd.poc.group-advertisement+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.pocketlearn\\": {
        source: \\"iana\\",
        extensions: [\\"plf\\"]
      },
      \\"application/vnd.powerbuilder6\\": {
        source: \\"iana\\",
        extensions: [\\"pbd\\"]
      },
      \\"application/vnd.powerbuilder6-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder7\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder7-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder75\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder75-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.preminet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.previewsystems.box\\": {
        source: \\"iana\\",
        extensions: [\\"box\\"]
      },
      \\"application/vnd.proteus.magazine\\": {
        source: \\"iana\\",
        extensions: [\\"mgz\\"]
      },
      \\"application/vnd.psfs\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.publishare-delta-tree\\": {
        source: \\"iana\\",
        extensions: [\\"qps\\"]
      },
      \\"application/vnd.pvi.ptid1\\": {
        source: \\"iana\\",
        extensions: [\\"ptid\\"]
      },
      \\"application/vnd.pwg-multiplexed\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pwg-xhtml-print+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.qualcomm.brew-app-res\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.quarantainenet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.quark.quarkxpress\\": {
        source: \\"iana\\",
        extensions: [\\"qxd\\", \\"qxt\\", \\"qwd\\", \\"qwt\\", \\"qxl\\", \\"qxb\\"]
      },
      \\"application/vnd.quobject-quoxdocument\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.radisys.moml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-conf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-conn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-dialog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-stream+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-conf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-base+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-fax-detect+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-group+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-speech+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-transform+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.rainstor.data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.rapid\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.rar\\": {
        source: \\"iana\\",
        extensions: [\\"rar\\"]
      },
      \\"application/vnd.realvnc.bed\\": {
        source: \\"iana\\",
        extensions: [\\"bed\\"]
      },
      \\"application/vnd.recordare.musicxml\\": {
        source: \\"iana\\",
        extensions: [\\"mxl\\"]
      },
      \\"application/vnd.recordare.musicxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"musicxml\\"]
      },
      \\"application/vnd.renlearn.rlprint\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.resilient.logic\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.restful+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.rig.cryptonote\\": {
        source: \\"iana\\",
        extensions: [\\"cryptonote\\"]
      },
      \\"application/vnd.rim.cod\\": {
        source: \\"apache\\",
        extensions: [\\"cod\\"]
      },
      \\"application/vnd.rn-realmedia\\": {
        source: \\"apache\\",
        extensions: [\\"rm\\"]
      },
      \\"application/vnd.rn-realmedia-vbr\\": {
        source: \\"apache\\",
        extensions: [\\"rmvb\\"]
      },
      \\"application/vnd.route66.link66+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"link66\\"]
      },
      \\"application/vnd.rs-274x\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ruckus.download\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.s3sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sailingtracker.track\\": {
        source: \\"iana\\",
        extensions: [\\"st\\"]
      },
      \\"application/vnd.sar\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sbm.cid\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sbm.mid2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.scribus\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.3df\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.csf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.doc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.eml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.mht\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.net\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.ppt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.tiff\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.xls\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealedmedia.softseal.html\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealedmedia.softseal.pdf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.seemail\\": {
        source: \\"iana\\",
        extensions: [\\"see\\"]
      },
      \\"application/vnd.seis+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.sema\\": {
        source: \\"iana\\",
        extensions: [\\"sema\\"]
      },
      \\"application/vnd.semd\\": {
        source: \\"iana\\",
        extensions: [\\"semd\\"]
      },
      \\"application/vnd.semf\\": {
        source: \\"iana\\",
        extensions: [\\"semf\\"]
      },
      \\"application/vnd.shade-save-file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.shana.informed.formdata\\": {
        source: \\"iana\\",
        extensions: [\\"ifm\\"]
      },
      \\"application/vnd.shana.informed.formtemplate\\": {
        source: \\"iana\\",
        extensions: [\\"itp\\"]
      },
      \\"application/vnd.shana.informed.interchange\\": {
        source: \\"iana\\",
        extensions: [\\"iif\\"]
      },
      \\"application/vnd.shana.informed.package\\": {
        source: \\"iana\\",
        extensions: [\\"ipk\\"]
      },
      \\"application/vnd.shootproof+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.shopkick+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.shp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.shx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sigrok.session\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.simtech-mindmapper\\": {
        source: \\"iana\\",
        extensions: [\\"twd\\", \\"twds\\"]
      },
      \\"application/vnd.siren+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.smaf\\": {
        source: \\"iana\\",
        extensions: [\\"mmf\\"]
      },
      \\"application/vnd.smart.notebook\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.smart.teacher\\": {
        source: \\"iana\\",
        extensions: [\\"teacher\\"]
      },
      \\"application/vnd.snesdev-page-table\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.software602.filler.form+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"fo\\"]
      },
      \\"application/vnd.software602.filler.form-xml-zip\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.solent.sdkm+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sdkm\\", \\"sdkd\\"]
      },
      \\"application/vnd.spotfire.dxp\\": {
        source: \\"iana\\",
        extensions: [\\"dxp\\"]
      },
      \\"application/vnd.spotfire.sfs\\": {
        source: \\"iana\\",
        extensions: [\\"sfs\\"]
      },
      \\"application/vnd.sqlite3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-cod\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-dtf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-ntf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.stardivision.calc\\": {
        source: \\"apache\\",
        extensions: [\\"sdc\\"]
      },
      \\"application/vnd.stardivision.draw\\": {
        source: \\"apache\\",
        extensions: [\\"sda\\"]
      },
      \\"application/vnd.stardivision.impress\\": {
        source: \\"apache\\",
        extensions: [\\"sdd\\"]
      },
      \\"application/vnd.stardivision.math\\": {
        source: \\"apache\\",
        extensions: [\\"smf\\"]
      },
      \\"application/vnd.stardivision.writer\\": {
        source: \\"apache\\",
        extensions: [\\"sdw\\", \\"vor\\"]
      },
      \\"application/vnd.stardivision.writer-global\\": {
        source: \\"apache\\",
        extensions: [\\"sgl\\"]
      },
      \\"application/vnd.stepmania.package\\": {
        source: \\"iana\\",
        extensions: [\\"smzip\\"]
      },
      \\"application/vnd.stepmania.stepchart\\": {
        source: \\"iana\\",
        extensions: [\\"sm\\"]
      },
      \\"application/vnd.street-stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sun.wadl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wadl\\"]
      },
      \\"application/vnd.sun.xml.calc\\": {
        source: \\"apache\\",
        extensions: [\\"sxc\\"]
      },
      \\"application/vnd.sun.xml.calc.template\\": {
        source: \\"apache\\",
        extensions: [\\"stc\\"]
      },
      \\"application/vnd.sun.xml.draw\\": {
        source: \\"apache\\",
        extensions: [\\"sxd\\"]
      },
      \\"application/vnd.sun.xml.draw.template\\": {
        source: \\"apache\\",
        extensions: [\\"std\\"]
      },
      \\"application/vnd.sun.xml.impress\\": {
        source: \\"apache\\",
        extensions: [\\"sxi\\"]
      },
      \\"application/vnd.sun.xml.impress.template\\": {
        source: \\"apache\\",
        extensions: [\\"sti\\"]
      },
      \\"application/vnd.sun.xml.math\\": {
        source: \\"apache\\",
        extensions: [\\"sxm\\"]
      },
      \\"application/vnd.sun.xml.writer\\": {
        source: \\"apache\\",
        extensions: [\\"sxw\\"]
      },
      \\"application/vnd.sun.xml.writer.global\\": {
        source: \\"apache\\",
        extensions: [\\"sxg\\"]
      },
      \\"application/vnd.sun.xml.writer.template\\": {
        source: \\"apache\\",
        extensions: [\\"stw\\"]
      },
      \\"application/vnd.sus-calendar\\": {
        source: \\"iana\\",
        extensions: [\\"sus\\", \\"susp\\"]
      },
      \\"application/vnd.svd\\": {
        source: \\"iana\\",
        extensions: [\\"svd\\"]
      },
      \\"application/vnd.swiftview-ics\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sycle+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.syft+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.symbian.install\\": {
        source: \\"apache\\",
        extensions: [\\"sis\\", \\"sisx\\"]
      },
      \\"application/vnd.syncml+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"xsm\\"]
      },
      \\"application/vnd.syncml.dm+wbxml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"bdm\\"]
      },
      \\"application/vnd.syncml.dm+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"xdm\\"]
      },
      \\"application/vnd.syncml.dm.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmddf+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmddf+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"ddf\\"]
      },
      \\"application/vnd.syncml.dmtnds+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmtnds+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.syncml.ds.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.tableschema+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tao.intent-module-archive\\": {
        source: \\"iana\\",
        extensions: [\\"tao\\"]
      },
      \\"application/vnd.tcpdump.pcap\\": {
        source: \\"iana\\",
        extensions: [\\"pcap\\", \\"cap\\", \\"dmp\\"]
      },
      \\"application/vnd.think-cell.ppttc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tmd.mediaflex.api+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.tmobile-livetv\\": {
        source: \\"iana\\",
        extensions: [\\"tmo\\"]
      },
      \\"application/vnd.tri.onesource\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.trid.tpt\\": {
        source: \\"iana\\",
        extensions: [\\"tpt\\"]
      },
      \\"application/vnd.triscape.mxs\\": {
        source: \\"iana\\",
        extensions: [\\"mxs\\"]
      },
      \\"application/vnd.trueapp\\": {
        source: \\"iana\\",
        extensions: [\\"tra\\"]
      },
      \\"application/vnd.truedoc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ubisoft.webplayer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ufdl\\": {
        source: \\"iana\\",
        extensions: [\\"ufd\\", \\"ufdl\\"]
      },
      \\"application/vnd.uiq.theme\\": {
        source: \\"iana\\",
        extensions: [\\"utz\\"]
      },
      \\"application/vnd.umajin\\": {
        source: \\"iana\\",
        extensions: [\\"umj\\"]
      },
      \\"application/vnd.unity\\": {
        source: \\"iana\\",
        extensions: [\\"unityweb\\"]
      },
      \\"application/vnd.uoml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uoml\\"]
      },
      \\"application/vnd.uplanet.alert\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.alert-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.bearer-choice\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.bearer-choice-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.cacheop\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.cacheop-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.channel\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.channel-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.list\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.list-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.listcmd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.listcmd-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.signal\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uri-map\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.valve.source.material\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vcx\\": {
        source: \\"iana\\",
        extensions: [\\"vcx\\"]
      },
      \\"application/vnd.vd-study\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vectorworks\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vel+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.verimatrix.vcas\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.veritone.aion+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.veryant.thin\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ves.encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vidsoft.vidconference\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.visio\\": {
        source: \\"iana\\",
        extensions: [\\"vsd\\", \\"vst\\", \\"vss\\", \\"vsw\\"]
      },
      \\"application/vnd.visionary\\": {
        source: \\"iana\\",
        extensions: [\\"vis\\"]
      },
      \\"application/vnd.vividence.scriptfile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vsf\\": {
        source: \\"iana\\",
        extensions: [\\"vsf\\"]
      },
      \\"application/vnd.wap.sic\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wap.slc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wap.wbxml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"wbxml\\"]
      },
      \\"application/vnd.wap.wmlc\\": {
        source: \\"iana\\",
        extensions: [\\"wmlc\\"]
      },
      \\"application/vnd.wap.wmlscriptc\\": {
        source: \\"iana\\",
        extensions: [\\"wmlsc\\"]
      },
      \\"application/vnd.webturbo\\": {
        source: \\"iana\\",
        extensions: [\\"wtb\\"]
      },
      \\"application/vnd.wfa.dpp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wfa.p2p\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wfa.wsc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.windows.devicepairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wmc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wmf.bootstrap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.mathematica\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.mathematica.package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.player\\": {
        source: \\"iana\\",
        extensions: [\\"nbp\\"]
      },
      \\"application/vnd.wordperfect\\": {
        source: \\"iana\\",
        extensions: [\\"wpd\\"]
      },
      \\"application/vnd.wqd\\": {
        source: \\"iana\\",
        extensions: [\\"wqd\\"]
      },
      \\"application/vnd.wrq-hp3000-labelled\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wt.stf\\": {
        source: \\"iana\\",
        extensions: [\\"stf\\"]
      },
      \\"application/vnd.wv.csp+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wv.csp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.wv.ssp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xacml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xara\\": {
        source: \\"iana\\",
        extensions: [\\"xar\\"]
      },
      \\"application/vnd.xfdl\\": {
        source: \\"iana\\",
        extensions: [\\"xfdl\\"]
      },
      \\"application/vnd.xfdl.webform\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xmpie.cpkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.dpkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.plan\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.ppkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.xlim\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.hv-dic\\": {
        source: \\"iana\\",
        extensions: [\\"hvd\\"]
      },
      \\"application/vnd.yamaha.hv-script\\": {
        source: \\"iana\\",
        extensions: [\\"hvs\\"]
      },
      \\"application/vnd.yamaha.hv-voice\\": {
        source: \\"iana\\",
        extensions: [\\"hvp\\"]
      },
      \\"application/vnd.yamaha.openscoreformat\\": {
        source: \\"iana\\",
        extensions: [\\"osf\\"]
      },
      \\"application/vnd.yamaha.openscoreformat.osfpvg+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"osfpvg\\"]
      },
      \\"application/vnd.yamaha.remote-setup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.smaf-audio\\": {
        source: \\"iana\\",
        extensions: [\\"saf\\"]
      },
      \\"application/vnd.yamaha.smaf-phrase\\": {
        source: \\"iana\\",
        extensions: [\\"spf\\"]
      },
      \\"application/vnd.yamaha.through-ngn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.tunnel-udpencap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yaoweme\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yellowriver-custom-menu\\": {
        source: \\"iana\\",
        extensions: [\\"cmp\\"]
      },
      \\"application/vnd.youtube.yt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.zul\\": {
        source: \\"iana\\",
        extensions: [\\"zir\\", \\"zirz\\"]
      },
      \\"application/vnd.zzazz.deck+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"zaz\\"]
      },
      \\"application/voicexml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"vxml\\"]
      },
      \\"application/voucher-cms+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vq-rtcpxr\\": {
        source: \\"iana\\"
      },
      \\"application/wasm\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wasm\\"]
      },
      \\"application/watcherinfo+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wif\\"]
      },
      \\"application/webpush-options+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/whoispp-query\\": {
        source: \\"iana\\"
      },
      \\"application/whoispp-response\\": {
        source: \\"iana\\"
      },
      \\"application/widget\\": {
        source: \\"iana\\",
        extensions: [\\"wgt\\"]
      },
      \\"application/winhlp\\": {
        source: \\"apache\\",
        extensions: [\\"hlp\\"]
      },
      \\"application/wita\\": {
        source: \\"iana\\"
      },
      \\"application/wordperfect5.1\\": {
        source: \\"iana\\"
      },
      \\"application/wsdl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wsdl\\"]
      },
      \\"application/wspolicy+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wspolicy\\"]
      },
      \\"application/x-7z-compressed\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"7z\\"]
      },
      \\"application/x-abiword\\": {
        source: \\"apache\\",
        extensions: [\\"abw\\"]
      },
      \\"application/x-ace-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"ace\\"]
      },
      \\"application/x-amf\\": {
        source: \\"apache\\"
      },
      \\"application/x-apple-diskimage\\": {
        source: \\"apache\\",
        extensions: [\\"dmg\\"]
      },
      \\"application/x-arj\\": {
        compressible: false,
        extensions: [\\"arj\\"]
      },
      \\"application/x-authorware-bin\\": {
        source: \\"apache\\",
        extensions: [\\"aab\\", \\"x32\\", \\"u32\\", \\"vox\\"]
      },
      \\"application/x-authorware-map\\": {
        source: \\"apache\\",
        extensions: [\\"aam\\"]
      },
      \\"application/x-authorware-seg\\": {
        source: \\"apache\\",
        extensions: [\\"aas\\"]
      },
      \\"application/x-bcpio\\": {
        source: \\"apache\\",
        extensions: [\\"bcpio\\"]
      },
      \\"application/x-bdoc\\": {
        compressible: false,
        extensions: [\\"bdoc\\"]
      },
      \\"application/x-bittorrent\\": {
        source: \\"apache\\",
        extensions: [\\"torrent\\"]
      },
      \\"application/x-blorb\\": {
        source: \\"apache\\",
        extensions: [\\"blb\\", \\"blorb\\"]
      },
      \\"application/x-bzip\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"bz\\"]
      },
      \\"application/x-bzip2\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"bz2\\", \\"boz\\"]
      },
      \\"application/x-cbr\\": {
        source: \\"apache\\",
        extensions: [\\"cbr\\", \\"cba\\", \\"cbt\\", \\"cbz\\", \\"cb7\\"]
      },
      \\"application/x-cdlink\\": {
        source: \\"apache\\",
        extensions: [\\"vcd\\"]
      },
      \\"application/x-cfs-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"cfs\\"]
      },
      \\"application/x-chat\\": {
        source: \\"apache\\",
        extensions: [\\"chat\\"]
      },
      \\"application/x-chess-pgn\\": {
        source: \\"apache\\",
        extensions: [\\"pgn\\"]
      },
      \\"application/x-chrome-extension\\": {
        extensions: [\\"crx\\"]
      },
      \\"application/x-cocoa\\": {
        source: \\"nginx\\",
        extensions: [\\"cco\\"]
      },
      \\"application/x-compress\\": {
        source: \\"apache\\"
      },
      \\"application/x-conference\\": {
        source: \\"apache\\",
        extensions: [\\"nsc\\"]
      },
      \\"application/x-cpio\\": {
        source: \\"apache\\",
        extensions: [\\"cpio\\"]
      },
      \\"application/x-csh\\": {
        source: \\"apache\\",
        extensions: [\\"csh\\"]
      },
      \\"application/x-deb\\": {
        compressible: false
      },
      \\"application/x-debian-package\\": {
        source: \\"apache\\",
        extensions: [\\"deb\\", \\"udeb\\"]
      },
      \\"application/x-dgc-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"dgc\\"]
      },
      \\"application/x-director\\": {
        source: \\"apache\\",
        extensions: [\\"dir\\", \\"dcr\\", \\"dxr\\", \\"cst\\", \\"cct\\", \\"cxt\\", \\"w3d\\", \\"fgd\\", \\"swa\\"]
      },
      \\"application/x-doom\\": {
        source: \\"apache\\",
        extensions: [\\"wad\\"]
      },
      \\"application/x-dtbncx+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ncx\\"]
      },
      \\"application/x-dtbook+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"dtb\\"]
      },
      \\"application/x-dtbresource+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"res\\"]
      },
      \\"application/x-dvi\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"dvi\\"]
      },
      \\"application/x-envoy\\": {
        source: \\"apache\\",
        extensions: [\\"evy\\"]
      },
      \\"application/x-eva\\": {
        source: \\"apache\\",
        extensions: [\\"eva\\"]
      },
      \\"application/x-font-bdf\\": {
        source: \\"apache\\",
        extensions: [\\"bdf\\"]
      },
      \\"application/x-font-dos\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-framemaker\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-ghostscript\\": {
        source: \\"apache\\",
        extensions: [\\"gsf\\"]
      },
      \\"application/x-font-libgrx\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-linux-psf\\": {
        source: \\"apache\\",
        extensions: [\\"psf\\"]
      },
      \\"application/x-font-pcf\\": {
        source: \\"apache\\",
        extensions: [\\"pcf\\"]
      },
      \\"application/x-font-snf\\": {
        source: \\"apache\\",
        extensions: [\\"snf\\"]
      },
      \\"application/x-font-speedo\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-sunos-news\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-type1\\": {
        source: \\"apache\\",
        extensions: [\\"pfa\\", \\"pfb\\", \\"pfm\\", \\"afm\\"]
      },
      \\"application/x-font-vfont\\": {
        source: \\"apache\\"
      },
      \\"application/x-freearc\\": {
        source: \\"apache\\",
        extensions: [\\"arc\\"]
      },
      \\"application/x-futuresplash\\": {
        source: \\"apache\\",
        extensions: [\\"spl\\"]
      },
      \\"application/x-gca-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"gca\\"]
      },
      \\"application/x-glulx\\": {
        source: \\"apache\\",
        extensions: [\\"ulx\\"]
      },
      \\"application/x-gnumeric\\": {
        source: \\"apache\\",
        extensions: [\\"gnumeric\\"]
      },
      \\"application/x-gramps-xml\\": {
        source: \\"apache\\",
        extensions: [\\"gramps\\"]
      },
      \\"application/x-gtar\\": {
        source: \\"apache\\",
        extensions: [\\"gtar\\"]
      },
      \\"application/x-gzip\\": {
        source: \\"apache\\"
      },
      \\"application/x-hdf\\": {
        source: \\"apache\\",
        extensions: [\\"hdf\\"]
      },
      \\"application/x-httpd-php\\": {
        compressible: true,
        extensions: [\\"php\\"]
      },
      \\"application/x-install-instructions\\": {
        source: \\"apache\\",
        extensions: [\\"install\\"]
      },
      \\"application/x-iso9660-image\\": {
        source: \\"apache\\",
        extensions: [\\"iso\\"]
      },
      \\"application/x-iwork-keynote-sffkey\\": {
        extensions: [\\"key\\"]
      },
      \\"application/x-iwork-numbers-sffnumbers\\": {
        extensions: [\\"numbers\\"]
      },
      \\"application/x-iwork-pages-sffpages\\": {
        extensions: [\\"pages\\"]
      },
      \\"application/x-java-archive-diff\\": {
        source: \\"nginx\\",
        extensions: [\\"jardiff\\"]
      },
      \\"application/x-java-jnlp-file\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"jnlp\\"]
      },
      \\"application/x-javascript\\": {
        compressible: true
      },
      \\"application/x-keepass2\\": {
        extensions: [\\"kdbx\\"]
      },
      \\"application/x-latex\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"latex\\"]
      },
      \\"application/x-lua-bytecode\\": {
        extensions: [\\"luac\\"]
      },
      \\"application/x-lzh-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"lzh\\", \\"lha\\"]
      },
      \\"application/x-makeself\\": {
        source: \\"nginx\\",
        extensions: [\\"run\\"]
      },
      \\"application/x-mie\\": {
        source: \\"apache\\",
        extensions: [\\"mie\\"]
      },
      \\"application/x-mobipocket-ebook\\": {
        source: \\"apache\\",
        extensions: [\\"prc\\", \\"mobi\\"]
      },
      \\"application/x-mpegurl\\": {
        compressible: false
      },
      \\"application/x-ms-application\\": {
        source: \\"apache\\",
        extensions: [\\"application\\"]
      },
      \\"application/x-ms-shortcut\\": {
        source: \\"apache\\",
        extensions: [\\"lnk\\"]
      },
      \\"application/x-ms-wmd\\": {
        source: \\"apache\\",
        extensions: [\\"wmd\\"]
      },
      \\"application/x-ms-wmz\\": {
        source: \\"apache\\",
        extensions: [\\"wmz\\"]
      },
      \\"application/x-ms-xbap\\": {
        source: \\"apache\\",
        extensions: [\\"xbap\\"]
      },
      \\"application/x-msaccess\\": {
        source: \\"apache\\",
        extensions: [\\"mdb\\"]
      },
      \\"application/x-msbinder\\": {
        source: \\"apache\\",
        extensions: [\\"obd\\"]
      },
      \\"application/x-mscardfile\\": {
        source: \\"apache\\",
        extensions: [\\"crd\\"]
      },
      \\"application/x-msclip\\": {
        source: \\"apache\\",
        extensions: [\\"clp\\"]
      },
      \\"application/x-msdos-program\\": {
        extensions: [\\"exe\\"]
      },
      \\"application/x-msdownload\\": {
        source: \\"apache\\",
        extensions: [\\"exe\\", \\"dll\\", \\"com\\", \\"bat\\", \\"msi\\"]
      },
      \\"application/x-msmediaview\\": {
        source: \\"apache\\",
        extensions: [\\"mvb\\", \\"m13\\", \\"m14\\"]
      },
      \\"application/x-msmetafile\\": {
        source: \\"apache\\",
        extensions: [\\"wmf\\", \\"wmz\\", \\"emf\\", \\"emz\\"]
      },
      \\"application/x-msmoney\\": {
        source: \\"apache\\",
        extensions: [\\"mny\\"]
      },
      \\"application/x-mspublisher\\": {
        source: \\"apache\\",
        extensions: [\\"pub\\"]
      },
      \\"application/x-msschedule\\": {
        source: \\"apache\\",
        extensions: [\\"scd\\"]
      },
      \\"application/x-msterminal\\": {
        source: \\"apache\\",
        extensions: [\\"trm\\"]
      },
      \\"application/x-mswrite\\": {
        source: \\"apache\\",
        extensions: [\\"wri\\"]
      },
      \\"application/x-netcdf\\": {
        source: \\"apache\\",
        extensions: [\\"nc\\", \\"cdf\\"]
      },
      \\"application/x-ns-proxy-autoconfig\\": {
        compressible: true,
        extensions: [\\"pac\\"]
      },
      \\"application/x-nzb\\": {
        source: \\"apache\\",
        extensions: [\\"nzb\\"]
      },
      \\"application/x-perl\\": {
        source: \\"nginx\\",
        extensions: [\\"pl\\", \\"pm\\"]
      },
      \\"application/x-pilot\\": {
        source: \\"nginx\\",
        extensions: [\\"prc\\", \\"pdb\\"]
      },
      \\"application/x-pkcs12\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"p12\\", \\"pfx\\"]
      },
      \\"application/x-pkcs7-certificates\\": {
        source: \\"apache\\",
        extensions: [\\"p7b\\", \\"spc\\"]
      },
      \\"application/x-pkcs7-certreqresp\\": {
        source: \\"apache\\",
        extensions: [\\"p7r\\"]
      },
      \\"application/x-pki-message\\": {
        source: \\"iana\\"
      },
      \\"application/x-rar-compressed\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"rar\\"]
      },
      \\"application/x-redhat-package-manager\\": {
        source: \\"nginx\\",
        extensions: [\\"rpm\\"]
      },
      \\"application/x-research-info-systems\\": {
        source: \\"apache\\",
        extensions: [\\"ris\\"]
      },
      \\"application/x-sea\\": {
        source: \\"nginx\\",
        extensions: [\\"sea\\"]
      },
      \\"application/x-sh\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"sh\\"]
      },
      \\"application/x-shar\\": {
        source: \\"apache\\",
        extensions: [\\"shar\\"]
      },
      \\"application/x-shockwave-flash\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"swf\\"]
      },
      \\"application/x-silverlight-app\\": {
        source: \\"apache\\",
        extensions: [\\"xap\\"]
      },
      \\"application/x-sql\\": {
        source: \\"apache\\",
        extensions: [\\"sql\\"]
      },
      \\"application/x-stuffit\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"sit\\"]
      },
      \\"application/x-stuffitx\\": {
        source: \\"apache\\",
        extensions: [\\"sitx\\"]
      },
      \\"application/x-subrip\\": {
        source: \\"apache\\",
        extensions: [\\"srt\\"]
      },
      \\"application/x-sv4cpio\\": {
        source: \\"apache\\",
        extensions: [\\"sv4cpio\\"]
      },
      \\"application/x-sv4crc\\": {
        source: \\"apache\\",
        extensions: [\\"sv4crc\\"]
      },
      \\"application/x-t3vm-image\\": {
        source: \\"apache\\",
        extensions: [\\"t3\\"]
      },
      \\"application/x-tads\\": {
        source: \\"apache\\",
        extensions: [\\"gam\\"]
      },
      \\"application/x-tar\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"tar\\"]
      },
      \\"application/x-tcl\\": {
        source: \\"apache\\",
        extensions: [\\"tcl\\", \\"tk\\"]
      },
      \\"application/x-tex\\": {
        source: \\"apache\\",
        extensions: [\\"tex\\"]
      },
      \\"application/x-tex-tfm\\": {
        source: \\"apache\\",
        extensions: [\\"tfm\\"]
      },
      \\"application/x-texinfo\\": {
        source: \\"apache\\",
        extensions: [\\"texinfo\\", \\"texi\\"]
      },
      \\"application/x-tgif\\": {
        source: \\"apache\\",
        extensions: [\\"obj\\"]
      },
      \\"application/x-ustar\\": {
        source: \\"apache\\",
        extensions: [\\"ustar\\"]
      },
      \\"application/x-virtualbox-hdd\\": {
        compressible: true,
        extensions: [\\"hdd\\"]
      },
      \\"application/x-virtualbox-ova\\": {
        compressible: true,
        extensions: [\\"ova\\"]
      },
      \\"application/x-virtualbox-ovf\\": {
        compressible: true,
        extensions: [\\"ovf\\"]
      },
      \\"application/x-virtualbox-vbox\\": {
        compressible: true,
        extensions: [\\"vbox\\"]
      },
      \\"application/x-virtualbox-vbox-extpack\\": {
        compressible: false,
        extensions: [\\"vbox-extpack\\"]
      },
      \\"application/x-virtualbox-vdi\\": {
        compressible: true,
        extensions: [\\"vdi\\"]
      },
      \\"application/x-virtualbox-vhd\\": {
        compressible: true,
        extensions: [\\"vhd\\"]
      },
      \\"application/x-virtualbox-vmdk\\": {
        compressible: true,
        extensions: [\\"vmdk\\"]
      },
      \\"application/x-wais-source\\": {
        source: \\"apache\\",
        extensions: [\\"src\\"]
      },
      \\"application/x-web-app-manifest+json\\": {
        compressible: true,
        extensions: [\\"webapp\\"]
      },
      \\"application/x-www-form-urlencoded\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/x-x509-ca-cert\\": {
        source: \\"iana\\",
        extensions: [\\"der\\", \\"crt\\", \\"pem\\"]
      },
      \\"application/x-x509-ca-ra-cert\\": {
        source: \\"iana\\"
      },
      \\"application/x-x509-next-ca-cert\\": {
        source: \\"iana\\"
      },
      \\"application/x-xfig\\": {
        source: \\"apache\\",
        extensions: [\\"fig\\"]
      },
      \\"application/x-xliff+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xlf\\"]
      },
      \\"application/x-xpinstall\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"xpi\\"]
      },
      \\"application/x-xz\\": {
        source: \\"apache\\",
        extensions: [\\"xz\\"]
      },
      \\"application/x-zmachine\\": {
        source: \\"apache\\",
        extensions: [\\"z1\\", \\"z2\\", \\"z3\\", \\"z4\\", \\"z5\\", \\"z6\\", \\"z7\\", \\"z8\\"]
      },
      \\"application/x400-bp\\": {
        source: \\"iana\\"
      },
      \\"application/xacml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xaml+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xaml\\"]
      },
      \\"application/xcap-att+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xav\\"]
      },
      \\"application/xcap-caps+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xca\\"]
      },
      \\"application/xcap-diff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdf\\"]
      },
      \\"application/xcap-el+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xel\\"]
      },
      \\"application/xcap-error+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xcap-ns+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xns\\"]
      },
      \\"application/xcon-conference-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xcon-conference-info-diff+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xenc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xenc\\"]
      },
      \\"application/xhtml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xhtml\\", \\"xht\\"]
      },
      \\"application/xhtml-voice+xml\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/xliff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xlf\\"]
      },
      \\"application/xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xml\\", \\"xsl\\", \\"xsd\\", \\"rng\\"]
      },
      \\"application/xml-dtd\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dtd\\"]
      },
      \\"application/xml-external-parsed-entity\\": {
        source: \\"iana\\"
      },
      \\"application/xml-patch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xmpp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xop+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xop\\"]
      },
      \\"application/xproc+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xpl\\"]
      },
      \\"application/xslt+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xsl\\", \\"xslt\\"]
      },
      \\"application/xspf+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xspf\\"]
      },
      \\"application/xv+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mxml\\", \\"xhvml\\", \\"xvml\\", \\"xvm\\"]
      },
      \\"application/yang\\": {
        source: \\"iana\\",
        extensions: [\\"yang\\"]
      },
      \\"application/yang-data+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-data+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-patch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yin+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"yin\\"]
      },
      \\"application/zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"zip\\"]
      },
      \\"application/zlib\\": {
        source: \\"iana\\"
      },
      \\"application/zstd\\": {
        source: \\"iana\\"
      },
      \\"audio/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"audio/32kadpcm\\": {
        source: \\"iana\\"
      },
      \\"audio/3gpp\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"3gpp\\"]
      },
      \\"audio/3gpp2\\": {
        source: \\"iana\\"
      },
      \\"audio/aac\\": {
        source: \\"iana\\"
      },
      \\"audio/ac3\\": {
        source: \\"iana\\"
      },
      \\"audio/adpcm\\": {
        source: \\"apache\\",
        extensions: [\\"adp\\"]
      },
      \\"audio/amr\\": {
        source: \\"iana\\",
        extensions: [\\"amr\\"]
      },
      \\"audio/amr-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/amr-wb+\\": {
        source: \\"iana\\"
      },
      \\"audio/aptx\\": {
        source: \\"iana\\"
      },
      \\"audio/asc\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac-advanced-lossless\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac-x\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac3\\": {
        source: \\"iana\\"
      },
      \\"audio/basic\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"au\\", \\"snd\\"]
      },
      \\"audio/bv16\\": {
        source: \\"iana\\"
      },
      \\"audio/bv32\\": {
        source: \\"iana\\"
      },
      \\"audio/clearmode\\": {
        source: \\"iana\\"
      },
      \\"audio/cn\\": {
        source: \\"iana\\"
      },
      \\"audio/dat12\\": {
        source: \\"iana\\"
      },
      \\"audio/dls\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es201108\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202050\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202211\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202212\\": {
        source: \\"iana\\"
      },
      \\"audio/dv\\": {
        source: \\"iana\\"
      },
      \\"audio/dvi4\\": {
        source: \\"iana\\"
      },
      \\"audio/eac3\\": {
        source: \\"iana\\"
      },
      \\"audio/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc-qcp\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb1\\": {
        source: \\"iana\\"
      },
      \\"audio/evs\\": {
        source: \\"iana\\"
      },
      \\"audio/flexfec\\": {
        source: \\"iana\\"
      },
      \\"audio/fwdred\\": {
        source: \\"iana\\"
      },
      \\"audio/g711-0\\": {
        source: \\"iana\\"
      },
      \\"audio/g719\\": {
        source: \\"iana\\"
      },
      \\"audio/g722\\": {
        source: \\"iana\\"
      },
      \\"audio/g7221\\": {
        source: \\"iana\\"
      },
      \\"audio/g723\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-16\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-24\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-32\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-40\\": {
        source: \\"iana\\"
      },
      \\"audio/g728\\": {
        source: \\"iana\\"
      },
      \\"audio/g729\\": {
        source: \\"iana\\"
      },
      \\"audio/g7291\\": {
        source: \\"iana\\"
      },
      \\"audio/g729d\\": {
        source: \\"iana\\"
      },
      \\"audio/g729e\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm-efr\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm-hr-08\\": {
        source: \\"iana\\"
      },
      \\"audio/ilbc\\": {
        source: \\"iana\\"
      },
      \\"audio/ip-mr_v2.5\\": {
        source: \\"iana\\"
      },
      \\"audio/isac\\": {
        source: \\"apache\\"
      },
      \\"audio/l16\\": {
        source: \\"iana\\"
      },
      \\"audio/l20\\": {
        source: \\"iana\\"
      },
      \\"audio/l24\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"audio/l8\\": {
        source: \\"iana\\"
      },
      \\"audio/lpc\\": {
        source: \\"iana\\"
      },
      \\"audio/melp\\": {
        source: \\"iana\\"
      },
      \\"audio/melp1200\\": {
        source: \\"iana\\"
      },
      \\"audio/melp2400\\": {
        source: \\"iana\\"
      },
      \\"audio/melp600\\": {
        source: \\"iana\\"
      },
      \\"audio/mhas\\": {
        source: \\"iana\\"
      },
      \\"audio/midi\\": {
        source: \\"apache\\",
        extensions: [\\"mid\\", \\"midi\\", \\"kar\\", \\"rmi\\"]
      },
      \\"audio/mobile-xmf\\": {
        source: \\"iana\\",
        extensions: [\\"mxmf\\"]
      },
      \\"audio/mp3\\": {
        compressible: false,
        extensions: [\\"mp3\\"]
      },
      \\"audio/mp4\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"m4a\\", \\"mp4a\\"]
      },
      \\"audio/mp4a-latm\\": {
        source: \\"iana\\"
      },
      \\"audio/mpa\\": {
        source: \\"iana\\"
      },
      \\"audio/mpa-robust\\": {
        source: \\"iana\\"
      },
      \\"audio/mpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mpga\\", \\"mp2\\", \\"mp2a\\", \\"mp3\\", \\"m2a\\", \\"m3a\\"]
      },
      \\"audio/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"audio/musepack\\": {
        source: \\"apache\\"
      },
      \\"audio/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"oga\\", \\"ogg\\", \\"spx\\", \\"opus\\"]
      },
      \\"audio/opus\\": {
        source: \\"iana\\"
      },
      \\"audio/parityfec\\": {
        source: \\"iana\\"
      },
      \\"audio/pcma\\": {
        source: \\"iana\\"
      },
      \\"audio/pcma-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/pcmu\\": {
        source: \\"iana\\"
      },
      \\"audio/pcmu-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/prs.sid\\": {
        source: \\"iana\\"
      },
      \\"audio/qcelp\\": {
        source: \\"iana\\"
      },
      \\"audio/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"audio/red\\": {
        source: \\"iana\\"
      },
      \\"audio/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"audio/rtp-midi\\": {
        source: \\"iana\\"
      },
      \\"audio/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"audio/rtx\\": {
        source: \\"iana\\"
      },
      \\"audio/s3m\\": {
        source: \\"apache\\",
        extensions: [\\"s3m\\"]
      },
      \\"audio/scip\\": {
        source: \\"iana\\"
      },
      \\"audio/silk\\": {
        source: \\"apache\\",
        extensions: [\\"sil\\"]
      },
      \\"audio/smv\\": {
        source: \\"iana\\"
      },
      \\"audio/smv-qcp\\": {
        source: \\"iana\\"
      },
      \\"audio/smv0\\": {
        source: \\"iana\\"
      },
      \\"audio/sofa\\": {
        source: \\"iana\\"
      },
      \\"audio/sp-midi\\": {
        source: \\"iana\\"
      },
      \\"audio/speex\\": {
        source: \\"iana\\"
      },
      \\"audio/t140c\\": {
        source: \\"iana\\"
      },
      \\"audio/t38\\": {
        source: \\"iana\\"
      },
      \\"audio/telephone-event\\": {
        source: \\"iana\\"
      },
      \\"audio/tetra_acelp\\": {
        source: \\"iana\\"
      },
      \\"audio/tetra_acelp_bb\\": {
        source: \\"iana\\"
      },
      \\"audio/tone\\": {
        source: \\"iana\\"
      },
      \\"audio/tsvcis\\": {
        source: \\"iana\\"
      },
      \\"audio/uemclip\\": {
        source: \\"iana\\"
      },
      \\"audio/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"audio/usac\\": {
        source: \\"iana\\"
      },
      \\"audio/vdvi\\": {
        source: \\"iana\\"
      },
      \\"audio/vmr-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.3gpp.iufp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.4sb\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.audiokoz\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.celp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cisco.nse\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cmles.radio-events\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cns.anp1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cns.inf1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dece.audio\\": {
        source: \\"iana\\",
        extensions: [\\"uva\\", \\"uvva\\"]
      },
      \\"audio/vnd.digital-winds\\": {
        source: \\"iana\\",
        extensions: [\\"eol\\"]
      },
      \\"audio/vnd.dlna.adts\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.heaac.1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.heaac.2\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.mlp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.mps\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2x\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2z\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pulse.1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dra\\": {
        source: \\"iana\\",
        extensions: [\\"dra\\"]
      },
      \\"audio/vnd.dts\\": {
        source: \\"iana\\",
        extensions: [\\"dts\\"]
      },
      \\"audio/vnd.dts.hd\\": {
        source: \\"iana\\",
        extensions: [\\"dtshd\\"]
      },
      \\"audio/vnd.dts.uhd\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dvb.file\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.everad.plj\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.hns.audio\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.lucent.voice\\": {
        source: \\"iana\\",
        extensions: [\\"lvp\\"]
      },
      \\"audio/vnd.ms-playready.media.pya\\": {
        source: \\"iana\\",
        extensions: [\\"pya\\"]
      },
      \\"audio/vnd.nokia.mobile-xmf\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.nortel.vbk\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.nuera.ecelp4800\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp4800\\"]
      },
      \\"audio/vnd.nuera.ecelp7470\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp7470\\"]
      },
      \\"audio/vnd.nuera.ecelp9600\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp9600\\"]
      },
      \\"audio/vnd.octel.sbc\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.presonus.multitrack\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.qcelp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.rhetorex.32kadpcm\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.rip\\": {
        source: \\"iana\\",
        extensions: [\\"rip\\"]
      },
      \\"audio/vnd.rn-realaudio\\": {
        compressible: false
      },
      \\"audio/vnd.sealedmedia.softseal.mpeg\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.vmx.cvsd\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.wave\\": {
        compressible: false
      },
      \\"audio/vorbis\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"audio/vorbis-config\\": {
        source: \\"iana\\"
      },
      \\"audio/wav\\": {
        compressible: false,
        extensions: [\\"wav\\"]
      },
      \\"audio/wave\\": {
        compressible: false,
        extensions: [\\"wav\\"]
      },
      \\"audio/webm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"weba\\"]
      },
      \\"audio/x-aac\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"aac\\"]
      },
      \\"audio/x-aiff\\": {
        source: \\"apache\\",
        extensions: [\\"aif\\", \\"aiff\\", \\"aifc\\"]
      },
      \\"audio/x-caf\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"caf\\"]
      },
      \\"audio/x-flac\\": {
        source: \\"apache\\",
        extensions: [\\"flac\\"]
      },
      \\"audio/x-m4a\\": {
        source: \\"nginx\\",
        extensions: [\\"m4a\\"]
      },
      \\"audio/x-matroska\\": {
        source: \\"apache\\",
        extensions: [\\"mka\\"]
      },
      \\"audio/x-mpegurl\\": {
        source: \\"apache\\",
        extensions: [\\"m3u\\"]
      },
      \\"audio/x-ms-wax\\": {
        source: \\"apache\\",
        extensions: [\\"wax\\"]
      },
      \\"audio/x-ms-wma\\": {
        source: \\"apache\\",
        extensions: [\\"wma\\"]
      },
      \\"audio/x-pn-realaudio\\": {
        source: \\"apache\\",
        extensions: [\\"ram\\", \\"ra\\"]
      },
      \\"audio/x-pn-realaudio-plugin\\": {
        source: \\"apache\\",
        extensions: [\\"rmp\\"]
      },
      \\"audio/x-realaudio\\": {
        source: \\"nginx\\",
        extensions: [\\"ra\\"]
      },
      \\"audio/x-tta\\": {
        source: \\"apache\\"
      },
      \\"audio/x-wav\\": {
        source: \\"apache\\",
        extensions: [\\"wav\\"]
      },
      \\"audio/xm\\": {
        source: \\"apache\\",
        extensions: [\\"xm\\"]
      },
      \\"chemical/x-cdx\\": {
        source: \\"apache\\",
        extensions: [\\"cdx\\"]
      },
      \\"chemical/x-cif\\": {
        source: \\"apache\\",
        extensions: [\\"cif\\"]
      },
      \\"chemical/x-cmdf\\": {
        source: \\"apache\\",
        extensions: [\\"cmdf\\"]
      },
      \\"chemical/x-cml\\": {
        source: \\"apache\\",
        extensions: [\\"cml\\"]
      },
      \\"chemical/x-csml\\": {
        source: \\"apache\\",
        extensions: [\\"csml\\"]
      },
      \\"chemical/x-pdb\\": {
        source: \\"apache\\"
      },
      \\"chemical/x-xyz\\": {
        source: \\"apache\\",
        extensions: [\\"xyz\\"]
      },
      \\"font/collection\\": {
        source: \\"iana\\",
        extensions: [\\"ttc\\"]
      },
      \\"font/otf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"otf\\"]
      },
      \\"font/sfnt\\": {
        source: \\"iana\\"
      },
      \\"font/ttf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ttf\\"]
      },
      \\"font/woff\\": {
        source: \\"iana\\",
        extensions: [\\"woff\\"]
      },
      \\"font/woff2\\": {
        source: \\"iana\\",
        extensions: [\\"woff2\\"]
      },
      \\"image/aces\\": {
        source: \\"iana\\",
        extensions: [\\"exr\\"]
      },
      \\"image/apng\\": {
        compressible: false,
        extensions: [\\"apng\\"]
      },
      \\"image/avci\\": {
        source: \\"iana\\",
        extensions: [\\"avci\\"]
      },
      \\"image/avcs\\": {
        source: \\"iana\\",
        extensions: [\\"avcs\\"]
      },
      \\"image/avif\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"avif\\"]
      },
      \\"image/bmp\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"bmp\\"]
      },
      \\"image/cgm\\": {
        source: \\"iana\\",
        extensions: [\\"cgm\\"]
      },
      \\"image/dicom-rle\\": {
        source: \\"iana\\",
        extensions: [\\"drle\\"]
      },
      \\"image/emf\\": {
        source: \\"iana\\",
        extensions: [\\"emf\\"]
      },
      \\"image/fits\\": {
        source: \\"iana\\",
        extensions: [\\"fits\\"]
      },
      \\"image/g3fax\\": {
        source: \\"iana\\",
        extensions: [\\"g3\\"]
      },
      \\"image/gif\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"gif\\"]
      },
      \\"image/heic\\": {
        source: \\"iana\\",
        extensions: [\\"heic\\"]
      },
      \\"image/heic-sequence\\": {
        source: \\"iana\\",
        extensions: [\\"heics\\"]
      },
      \\"image/heif\\": {
        source: \\"iana\\",
        extensions: [\\"heif\\"]
      },
      \\"image/heif-sequence\\": {
        source: \\"iana\\",
        extensions: [\\"heifs\\"]
      },
      \\"image/hej2k\\": {
        source: \\"iana\\",
        extensions: [\\"hej2\\"]
      },
      \\"image/hsj2\\": {
        source: \\"iana\\",
        extensions: [\\"hsj2\\"]
      },
      \\"image/ief\\": {
        source: \\"iana\\",
        extensions: [\\"ief\\"]
      },
      \\"image/jls\\": {
        source: \\"iana\\",
        extensions: [\\"jls\\"]
      },
      \\"image/jp2\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jp2\\", \\"jpg2\\"]
      },
      \\"image/jpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpeg\\", \\"jpg\\", \\"jpe\\"]
      },
      \\"image/jph\\": {
        source: \\"iana\\",
        extensions: [\\"jph\\"]
      },
      \\"image/jphc\\": {
        source: \\"iana\\",
        extensions: [\\"jhc\\"]
      },
      \\"image/jpm\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpm\\"]
      },
      \\"image/jpx\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpx\\", \\"jpf\\"]
      },
      \\"image/jxr\\": {
        source: \\"iana\\",
        extensions: [\\"jxr\\"]
      },
      \\"image/jxra\\": {
        source: \\"iana\\",
        extensions: [\\"jxra\\"]
      },
      \\"image/jxrs\\": {
        source: \\"iana\\",
        extensions: [\\"jxrs\\"]
      },
      \\"image/jxs\\": {
        source: \\"iana\\",
        extensions: [\\"jxs\\"]
      },
      \\"image/jxsc\\": {
        source: \\"iana\\",
        extensions: [\\"jxsc\\"]
      },
      \\"image/jxsi\\": {
        source: \\"iana\\",
        extensions: [\\"jxsi\\"]
      },
      \\"image/jxss\\": {
        source: \\"iana\\",
        extensions: [\\"jxss\\"]
      },
      \\"image/ktx\\": {
        source: \\"iana\\",
        extensions: [\\"ktx\\"]
      },
      \\"image/ktx2\\": {
        source: \\"iana\\",
        extensions: [\\"ktx2\\"]
      },
      \\"image/naplps\\": {
        source: \\"iana\\"
      },
      \\"image/pjpeg\\": {
        compressible: false
      },
      \\"image/png\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"png\\"]
      },
      \\"image/prs.btif\\": {
        source: \\"iana\\",
        extensions: [\\"btif\\"]
      },
      \\"image/prs.pti\\": {
        source: \\"iana\\",
        extensions: [\\"pti\\"]
      },
      \\"image/pwg-raster\\": {
        source: \\"iana\\"
      },
      \\"image/sgi\\": {
        source: \\"apache\\",
        extensions: [\\"sgi\\"]
      },
      \\"image/svg+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"svg\\", \\"svgz\\"]
      },
      \\"image/t38\\": {
        source: \\"iana\\",
        extensions: [\\"t38\\"]
      },
      \\"image/tiff\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"tif\\", \\"tiff\\"]
      },
      \\"image/tiff-fx\\": {
        source: \\"iana\\",
        extensions: [\\"tfx\\"]
      },
      \\"image/vnd.adobe.photoshop\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"psd\\"]
      },
      \\"image/vnd.airzip.accelerator.azv\\": {
        source: \\"iana\\",
        extensions: [\\"azv\\"]
      },
      \\"image/vnd.cns.inf2\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.dece.graphic\\": {
        source: \\"iana\\",
        extensions: [\\"uvi\\", \\"uvvi\\", \\"uvg\\", \\"uvvg\\"]
      },
      \\"image/vnd.djvu\\": {
        source: \\"iana\\",
        extensions: [\\"djvu\\", \\"djv\\"]
      },
      \\"image/vnd.dvb.subtitle\\": {
        source: \\"iana\\",
        extensions: [\\"sub\\"]
      },
      \\"image/vnd.dwg\\": {
        source: \\"iana\\",
        extensions: [\\"dwg\\"]
      },
      \\"image/vnd.dxf\\": {
        source: \\"iana\\",
        extensions: [\\"dxf\\"]
      },
      \\"image/vnd.fastbidsheet\\": {
        source: \\"iana\\",
        extensions: [\\"fbs\\"]
      },
      \\"image/vnd.fpx\\": {
        source: \\"iana\\",
        extensions: [\\"fpx\\"]
      },
      \\"image/vnd.fst\\": {
        source: \\"iana\\",
        extensions: [\\"fst\\"]
      },
      \\"image/vnd.fujixerox.edmics-mmr\\": {
        source: \\"iana\\",
        extensions: [\\"mmr\\"]
      },
      \\"image/vnd.fujixerox.edmics-rlc\\": {
        source: \\"iana\\",
        extensions: [\\"rlc\\"]
      },
      \\"image/vnd.globalgraphics.pgb\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.microsoft.icon\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ico\\"]
      },
      \\"image/vnd.mix\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.mozilla.apng\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.ms-dds\\": {
        compressible: true,
        extensions: [\\"dds\\"]
      },
      \\"image/vnd.ms-modi\\": {
        source: \\"iana\\",
        extensions: [\\"mdi\\"]
      },
      \\"image/vnd.ms-photo\\": {
        source: \\"apache\\",
        extensions: [\\"wdp\\"]
      },
      \\"image/vnd.net-fpx\\": {
        source: \\"iana\\",
        extensions: [\\"npx\\"]
      },
      \\"image/vnd.pco.b16\\": {
        source: \\"iana\\",
        extensions: [\\"b16\\"]
      },
      \\"image/vnd.radiance\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealed.png\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealedmedia.softseal.gif\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealedmedia.softseal.jpg\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.svf\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.tencent.tap\\": {
        source: \\"iana\\",
        extensions: [\\"tap\\"]
      },
      \\"image/vnd.valve.source.texture\\": {
        source: \\"iana\\",
        extensions: [\\"vtf\\"]
      },
      \\"image/vnd.wap.wbmp\\": {
        source: \\"iana\\",
        extensions: [\\"wbmp\\"]
      },
      \\"image/vnd.xiff\\": {
        source: \\"iana\\",
        extensions: [\\"xif\\"]
      },
      \\"image/vnd.zbrush.pcx\\": {
        source: \\"iana\\",
        extensions: [\\"pcx\\"]
      },
      \\"image/webp\\": {
        source: \\"apache\\",
        extensions: [\\"webp\\"]
      },
      \\"image/wmf\\": {
        source: \\"iana\\",
        extensions: [\\"wmf\\"]
      },
      \\"image/x-3ds\\": {
        source: \\"apache\\",
        extensions: [\\"3ds\\"]
      },
      \\"image/x-cmu-raster\\": {
        source: \\"apache\\",
        extensions: [\\"ras\\"]
      },
      \\"image/x-cmx\\": {
        source: \\"apache\\",
        extensions: [\\"cmx\\"]
      },
      \\"image/x-freehand\\": {
        source: \\"apache\\",
        extensions: [\\"fh\\", \\"fhc\\", \\"fh4\\", \\"fh5\\", \\"fh7\\"]
      },
      \\"image/x-icon\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ico\\"]
      },
      \\"image/x-jng\\": {
        source: \\"nginx\\",
        extensions: [\\"jng\\"]
      },
      \\"image/x-mrsid-image\\": {
        source: \\"apache\\",
        extensions: [\\"sid\\"]
      },
      \\"image/x-ms-bmp\\": {
        source: \\"nginx\\",
        compressible: true,
        extensions: [\\"bmp\\"]
      },
      \\"image/x-pcx\\": {
        source: \\"apache\\",
        extensions: [\\"pcx\\"]
      },
      \\"image/x-pict\\": {
        source: \\"apache\\",
        extensions: [\\"pic\\", \\"pct\\"]
      },
      \\"image/x-portable-anymap\\": {
        source: \\"apache\\",
        extensions: [\\"pnm\\"]
      },
      \\"image/x-portable-bitmap\\": {
        source: \\"apache\\",
        extensions: [\\"pbm\\"]
      },
      \\"image/x-portable-graymap\\": {
        source: \\"apache\\",
        extensions: [\\"pgm\\"]
      },
      \\"image/x-portable-pixmap\\": {
        source: \\"apache\\",
        extensions: [\\"ppm\\"]
      },
      \\"image/x-rgb\\": {
        source: \\"apache\\",
        extensions: [\\"rgb\\"]
      },
      \\"image/x-tga\\": {
        source: \\"apache\\",
        extensions: [\\"tga\\"]
      },
      \\"image/x-xbitmap\\": {
        source: \\"apache\\",
        extensions: [\\"xbm\\"]
      },
      \\"image/x-xcf\\": {
        compressible: false
      },
      \\"image/x-xpixmap\\": {
        source: \\"apache\\",
        extensions: [\\"xpm\\"]
      },
      \\"image/x-xwindowdump\\": {
        source: \\"apache\\",
        extensions: [\\"xwd\\"]
      },
      \\"message/cpim\\": {
        source: \\"iana\\"
      },
      \\"message/delivery-status\\": {
        source: \\"iana\\"
      },
      \\"message/disposition-notification\\": {
        source: \\"iana\\",
        extensions: [
          \\"disposition-notification\\"
        ]
      },
      \\"message/external-body\\": {
        source: \\"iana\\"
      },
      \\"message/feedback-report\\": {
        source: \\"iana\\"
      },
      \\"message/global\\": {
        source: \\"iana\\",
        extensions: [\\"u8msg\\"]
      },
      \\"message/global-delivery-status\\": {
        source: \\"iana\\",
        extensions: [\\"u8dsn\\"]
      },
      \\"message/global-disposition-notification\\": {
        source: \\"iana\\",
        extensions: [\\"u8mdn\\"]
      },
      \\"message/global-headers\\": {
        source: \\"iana\\",
        extensions: [\\"u8hdr\\"]
      },
      \\"message/http\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"message/imdn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"message/news\\": {
        source: \\"iana\\"
      },
      \\"message/partial\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"message/rfc822\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"eml\\", \\"mime\\"]
      },
      \\"message/s-http\\": {
        source: \\"iana\\"
      },
      \\"message/sip\\": {
        source: \\"iana\\"
      },
      \\"message/sipfrag\\": {
        source: \\"iana\\"
      },
      \\"message/tracking-status\\": {
        source: \\"iana\\"
      },
      \\"message/vnd.si.simp\\": {
        source: \\"iana\\"
      },
      \\"message/vnd.wfa.wsc\\": {
        source: \\"iana\\",
        extensions: [\\"wsc\\"]
      },
      \\"model/3mf\\": {
        source: \\"iana\\",
        extensions: [\\"3mf\\"]
      },
      \\"model/e57\\": {
        source: \\"iana\\"
      },
      \\"model/gltf+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"gltf\\"]
      },
      \\"model/gltf-binary\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"glb\\"]
      },
      \\"model/iges\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"igs\\", \\"iges\\"]
      },
      \\"model/mesh\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"msh\\", \\"mesh\\", \\"silo\\"]
      },
      \\"model/mtl\\": {
        source: \\"iana\\",
        extensions: [\\"mtl\\"]
      },
      \\"model/obj\\": {
        source: \\"iana\\",
        extensions: [\\"obj\\"]
      },
      \\"model/step\\": {
        source: \\"iana\\"
      },
      \\"model/step+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"stpx\\"]
      },
      \\"model/step+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"stpz\\"]
      },
      \\"model/step-xml+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"stpxz\\"]
      },
      \\"model/stl\\": {
        source: \\"iana\\",
        extensions: [\\"stl\\"]
      },
      \\"model/vnd.collada+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dae\\"]
      },
      \\"model/vnd.dwf\\": {
        source: \\"iana\\",
        extensions: [\\"dwf\\"]
      },
      \\"model/vnd.flatland.3dml\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.gdl\\": {
        source: \\"iana\\",
        extensions: [\\"gdl\\"]
      },
      \\"model/vnd.gs-gdl\\": {
        source: \\"apache\\"
      },
      \\"model/vnd.gs.gdl\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.gtw\\": {
        source: \\"iana\\",
        extensions: [\\"gtw\\"]
      },
      \\"model/vnd.moml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"model/vnd.mts\\": {
        source: \\"iana\\",
        extensions: [\\"mts\\"]
      },
      \\"model/vnd.opengex\\": {
        source: \\"iana\\",
        extensions: [\\"ogex\\"]
      },
      \\"model/vnd.parasolid.transmit.binary\\": {
        source: \\"iana\\",
        extensions: [\\"x_b\\"]
      },
      \\"model/vnd.parasolid.transmit.text\\": {
        source: \\"iana\\",
        extensions: [\\"x_t\\"]
      },
      \\"model/vnd.pytha.pyox\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.rosette.annotated-data-model\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.sap.vds\\": {
        source: \\"iana\\",
        extensions: [\\"vds\\"]
      },
      \\"model/vnd.usdz+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"usdz\\"]
      },
      \\"model/vnd.valve.source.compiled-map\\": {
        source: \\"iana\\",
        extensions: [\\"bsp\\"]
      },
      \\"model/vnd.vtu\\": {
        source: \\"iana\\",
        extensions: [\\"vtu\\"]
      },
      \\"model/vrml\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"wrl\\", \\"vrml\\"]
      },
      \\"model/x3d+binary\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"x3db\\", \\"x3dbz\\"]
      },
      \\"model/x3d+fastinfoset\\": {
        source: \\"iana\\",
        extensions: [\\"x3db\\"]
      },
      \\"model/x3d+vrml\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"x3dv\\", \\"x3dvz\\"]
      },
      \\"model/x3d+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"x3d\\", \\"x3dz\\"]
      },
      \\"model/x3d-vrml\\": {
        source: \\"iana\\",
        extensions: [\\"x3dv\\"]
      },
      \\"multipart/alternative\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/appledouble\\": {
        source: \\"iana\\"
      },
      \\"multipart/byteranges\\": {
        source: \\"iana\\"
      },
      \\"multipart/digest\\": {
        source: \\"iana\\"
      },
      \\"multipart/encrypted\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/form-data\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/header-set\\": {
        source: \\"iana\\"
      },
      \\"multipart/mixed\\": {
        source: \\"iana\\"
      },
      \\"multipart/multilingual\\": {
        source: \\"iana\\"
      },
      \\"multipart/parallel\\": {
        source: \\"iana\\"
      },
      \\"multipart/related\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/report\\": {
        source: \\"iana\\"
      },
      \\"multipart/signed\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/vnd.bint.med-plus\\": {
        source: \\"iana\\"
      },
      \\"multipart/voice-message\\": {
        source: \\"iana\\"
      },
      \\"multipart/x-mixed-replace\\": {
        source: \\"iana\\"
      },
      \\"text/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"text/cache-manifest\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"appcache\\", \\"manifest\\"]
      },
      \\"text/calendar\\": {
        source: \\"iana\\",
        extensions: [\\"ics\\", \\"ifb\\"]
      },
      \\"text/calender\\": {
        compressible: true
      },
      \\"text/cmd\\": {
        compressible: true
      },
      \\"text/coffeescript\\": {
        extensions: [\\"coffee\\", \\"litcoffee\\"]
      },
      \\"text/cql\\": {
        source: \\"iana\\"
      },
      \\"text/cql-expression\\": {
        source: \\"iana\\"
      },
      \\"text/cql-identifier\\": {
        source: \\"iana\\"
      },
      \\"text/css\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"css\\"]
      },
      \\"text/csv\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"csv\\"]
      },
      \\"text/csv-schema\\": {
        source: \\"iana\\"
      },
      \\"text/directory\\": {
        source: \\"iana\\"
      },
      \\"text/dns\\": {
        source: \\"iana\\"
      },
      \\"text/ecmascript\\": {
        source: \\"iana\\"
      },
      \\"text/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"text/enriched\\": {
        source: \\"iana\\"
      },
      \\"text/fhirpath\\": {
        source: \\"iana\\"
      },
      \\"text/flexfec\\": {
        source: \\"iana\\"
      },
      \\"text/fwdred\\": {
        source: \\"iana\\"
      },
      \\"text/gff3\\": {
        source: \\"iana\\"
      },
      \\"text/grammar-ref-list\\": {
        source: \\"iana\\"
      },
      \\"text/html\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"html\\", \\"htm\\", \\"shtml\\"]
      },
      \\"text/jade\\": {
        extensions: [\\"jade\\"]
      },
      \\"text/javascript\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"text/jcr-cnd\\": {
        source: \\"iana\\"
      },
      \\"text/jsx\\": {
        compressible: true,
        extensions: [\\"jsx\\"]
      },
      \\"text/less\\": {
        compressible: true,
        extensions: [\\"less\\"]
      },
      \\"text/markdown\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"markdown\\", \\"md\\"]
      },
      \\"text/mathml\\": {
        source: \\"nginx\\",
        extensions: [\\"mml\\"]
      },
      \\"text/mdx\\": {
        compressible: true,
        extensions: [\\"mdx\\"]
      },
      \\"text/mizar\\": {
        source: \\"iana\\"
      },
      \\"text/n3\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"n3\\"]
      },
      \\"text/parameters\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/parityfec\\": {
        source: \\"iana\\"
      },
      \\"text/plain\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"txt\\", \\"text\\", \\"conf\\", \\"def\\", \\"list\\", \\"log\\", \\"in\\", \\"ini\\"]
      },
      \\"text/provenance-notation\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/prs.fallenstein.rst\\": {
        source: \\"iana\\"
      },
      \\"text/prs.lines.tag\\": {
        source: \\"iana\\",
        extensions: [\\"dsc\\"]
      },
      \\"text/prs.prop.logic\\": {
        source: \\"iana\\"
      },
      \\"text/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"text/red\\": {
        source: \\"iana\\"
      },
      \\"text/rfc822-headers\\": {
        source: \\"iana\\"
      },
      \\"text/richtext\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtx\\"]
      },
      \\"text/rtf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtf\\"]
      },
      \\"text/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"text/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"text/rtx\\": {
        source: \\"iana\\"
      },
      \\"text/sgml\\": {
        source: \\"iana\\",
        extensions: [\\"sgml\\", \\"sgm\\"]
      },
      \\"text/shaclc\\": {
        source: \\"iana\\"
      },
      \\"text/shex\\": {
        source: \\"iana\\",
        extensions: [\\"shex\\"]
      },
      \\"text/slim\\": {
        extensions: [\\"slim\\", \\"slm\\"]
      },
      \\"text/spdx\\": {
        source: \\"iana\\",
        extensions: [\\"spdx\\"]
      },
      \\"text/strings\\": {
        source: \\"iana\\"
      },
      \\"text/stylus\\": {
        extensions: [\\"stylus\\", \\"styl\\"]
      },
      \\"text/t140\\": {
        source: \\"iana\\"
      },
      \\"text/tab-separated-values\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tsv\\"]
      },
      \\"text/troff\\": {
        source: \\"iana\\",
        extensions: [\\"t\\", \\"tr\\", \\"roff\\", \\"man\\", \\"me\\", \\"ms\\"]
      },
      \\"text/turtle\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"ttl\\"]
      },
      \\"text/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"text/uri-list\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uri\\", \\"uris\\", \\"urls\\"]
      },
      \\"text/vcard\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"vcard\\"]
      },
      \\"text/vnd.a\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.abc\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.ascii-art\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.curl\\": {
        source: \\"iana\\",
        extensions: [\\"curl\\"]
      },
      \\"text/vnd.curl.dcurl\\": {
        source: \\"apache\\",
        extensions: [\\"dcurl\\"]
      },
      \\"text/vnd.curl.mcurl\\": {
        source: \\"apache\\",
        extensions: [\\"mcurl\\"]
      },
      \\"text/vnd.curl.scurl\\": {
        source: \\"apache\\",
        extensions: [\\"scurl\\"]
      },
      \\"text/vnd.debian.copyright\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.dmclientscript\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.dvb.subtitle\\": {
        source: \\"iana\\",
        extensions: [\\"sub\\"]
      },
      \\"text/vnd.esmertec.theme-descriptor\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.familysearch.gedcom\\": {
        source: \\"iana\\",
        extensions: [\\"ged\\"]
      },
      \\"text/vnd.ficlab.flt\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.fly\\": {
        source: \\"iana\\",
        extensions: [\\"fly\\"]
      },
      \\"text/vnd.fmi.flexstor\\": {
        source: \\"iana\\",
        extensions: [\\"flx\\"]
      },
      \\"text/vnd.gml\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.graphviz\\": {
        source: \\"iana\\",
        extensions: [\\"gv\\"]
      },
      \\"text/vnd.hans\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.hgl\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.in3d.3dml\\": {
        source: \\"iana\\",
        extensions: [\\"3dml\\"]
      },
      \\"text/vnd.in3d.spot\\": {
        source: \\"iana\\",
        extensions: [\\"spot\\"]
      },
      \\"text/vnd.iptc.newsml\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.iptc.nitf\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.latex-z\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.motorola.reflex\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.ms-mediapackage\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.net2phone.commcenter.command\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.radisys.msml-basic-layout\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.senx.warpscript\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.si.uricatalogue\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.sosi\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.sun.j2me.app-descriptor\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"jad\\"]
      },
      \\"text/vnd.trolltech.linguist\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.wap.si\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.wap.sl\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.wap.wml\\": {
        source: \\"iana\\",
        extensions: [\\"wml\\"]
      },
      \\"text/vnd.wap.wmlscript\\": {
        source: \\"iana\\",
        extensions: [\\"wmls\\"]
      },
      \\"text/vtt\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"vtt\\"]
      },
      \\"text/x-asm\\": {
        source: \\"apache\\",
        extensions: [\\"s\\", \\"asm\\"]
      },
      \\"text/x-c\\": {
        source: \\"apache\\",
        extensions: [\\"c\\", \\"cc\\", \\"cxx\\", \\"cpp\\", \\"h\\", \\"hh\\", \\"dic\\"]
      },
      \\"text/x-component\\": {
        source: \\"nginx\\",
        extensions: [\\"htc\\"]
      },
      \\"text/x-fortran\\": {
        source: \\"apache\\",
        extensions: [\\"f\\", \\"for\\", \\"f77\\", \\"f90\\"]
      },
      \\"text/x-gwt-rpc\\": {
        compressible: true
      },
      \\"text/x-handlebars-template\\": {
        extensions: [\\"hbs\\"]
      },
      \\"text/x-java-source\\": {
        source: \\"apache\\",
        extensions: [\\"java\\"]
      },
      \\"text/x-jquery-tmpl\\": {
        compressible: true
      },
      \\"text/x-lua\\": {
        extensions: [\\"lua\\"]
      },
      \\"text/x-markdown\\": {
        compressible: true,
        extensions: [\\"mkd\\"]
      },
      \\"text/x-nfo\\": {
        source: \\"apache\\",
        extensions: [\\"nfo\\"]
      },
      \\"text/x-opml\\": {
        source: \\"apache\\",
        extensions: [\\"opml\\"]
      },
      \\"text/x-org\\": {
        compressible: true,
        extensions: [\\"org\\"]
      },
      \\"text/x-pascal\\": {
        source: \\"apache\\",
        extensions: [\\"p\\", \\"pas\\"]
      },
      \\"text/x-processing\\": {
        compressible: true,
        extensions: [\\"pde\\"]
      },
      \\"text/x-sass\\": {
        extensions: [\\"sass\\"]
      },
      \\"text/x-scss\\": {
        extensions: [\\"scss\\"]
      },
      \\"text/x-setext\\": {
        source: \\"apache\\",
        extensions: [\\"etx\\"]
      },
      \\"text/x-sfv\\": {
        source: \\"apache\\",
        extensions: [\\"sfv\\"]
      },
      \\"text/x-suse-ymp\\": {
        compressible: true,
        extensions: [\\"ymp\\"]
      },
      \\"text/x-uuencode\\": {
        source: \\"apache\\",
        extensions: [\\"uu\\"]
      },
      \\"text/x-vcalendar\\": {
        source: \\"apache\\",
        extensions: [\\"vcs\\"]
      },
      \\"text/x-vcard\\": {
        source: \\"apache\\",
        extensions: [\\"vcf\\"]
      },
      \\"text/xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xml\\"]
      },
      \\"text/xml-external-parsed-entity\\": {
        source: \\"iana\\"
      },
      \\"text/yaml\\": {
        compressible: true,
        extensions: [\\"yaml\\", \\"yml\\"]
      },
      \\"video/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"video/3gpp\\": {
        source: \\"iana\\",
        extensions: [\\"3gp\\", \\"3gpp\\"]
      },
      \\"video/3gpp-tt\\": {
        source: \\"iana\\"
      },
      \\"video/3gpp2\\": {
        source: \\"iana\\",
        extensions: [\\"3g2\\"]
      },
      \\"video/av1\\": {
        source: \\"iana\\"
      },
      \\"video/bmpeg\\": {
        source: \\"iana\\"
      },
      \\"video/bt656\\": {
        source: \\"iana\\"
      },
      \\"video/celb\\": {
        source: \\"iana\\"
      },
      \\"video/dv\\": {
        source: \\"iana\\"
      },
      \\"video/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"video/ffv1\\": {
        source: \\"iana\\"
      },
      \\"video/flexfec\\": {
        source: \\"iana\\"
      },
      \\"video/h261\\": {
        source: \\"iana\\",
        extensions: [\\"h261\\"]
      },
      \\"video/h263\\": {
        source: \\"iana\\",
        extensions: [\\"h263\\"]
      },
      \\"video/h263-1998\\": {
        source: \\"iana\\"
      },
      \\"video/h263-2000\\": {
        source: \\"iana\\"
      },
      \\"video/h264\\": {
        source: \\"iana\\",
        extensions: [\\"h264\\"]
      },
      \\"video/h264-rcdo\\": {
        source: \\"iana\\"
      },
      \\"video/h264-svc\\": {
        source: \\"iana\\"
      },
      \\"video/h265\\": {
        source: \\"iana\\"
      },
      \\"video/iso.segment\\": {
        source: \\"iana\\",
        extensions: [\\"m4s\\"]
      },
      \\"video/jpeg\\": {
        source: \\"iana\\",
        extensions: [\\"jpgv\\"]
      },
      \\"video/jpeg2000\\": {
        source: \\"iana\\"
      },
      \\"video/jpm\\": {
        source: \\"apache\\",
        extensions: [\\"jpm\\", \\"jpgm\\"]
      },
      \\"video/jxsv\\": {
        source: \\"iana\\"
      },
      \\"video/mj2\\": {
        source: \\"iana\\",
        extensions: [\\"mj2\\", \\"mjp2\\"]
      },
      \\"video/mp1s\\": {
        source: \\"iana\\"
      },
      \\"video/mp2p\\": {
        source: \\"iana\\"
      },
      \\"video/mp2t\\": {
        source: \\"iana\\",
        extensions: [\\"ts\\"]
      },
      \\"video/mp4\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mp4\\", \\"mp4v\\", \\"mpg4\\"]
      },
      \\"video/mp4v-es\\": {
        source: \\"iana\\"
      },
      \\"video/mpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mpeg\\", \\"mpg\\", \\"mpe\\", \\"m1v\\", \\"m2v\\"]
      },
      \\"video/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"video/mpv\\": {
        source: \\"iana\\"
      },
      \\"video/nv\\": {
        source: \\"iana\\"
      },
      \\"video/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ogv\\"]
      },
      \\"video/parityfec\\": {
        source: \\"iana\\"
      },
      \\"video/pointer\\": {
        source: \\"iana\\"
      },
      \\"video/quicktime\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"qt\\", \\"mov\\"]
      },
      \\"video/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"video/raw\\": {
        source: \\"iana\\"
      },
      \\"video/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"video/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"video/rtx\\": {
        source: \\"iana\\"
      },
      \\"video/scip\\": {
        source: \\"iana\\"
      },
      \\"video/smpte291\\": {
        source: \\"iana\\"
      },
      \\"video/smpte292m\\": {
        source: \\"iana\\"
      },
      \\"video/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"video/vc1\\": {
        source: \\"iana\\"
      },
      \\"video/vc2\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.cctv\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dece.hd\\": {
        source: \\"iana\\",
        extensions: [\\"uvh\\", \\"uvvh\\"]
      },
      \\"video/vnd.dece.mobile\\": {
        source: \\"iana\\",
        extensions: [\\"uvm\\", \\"uvvm\\"]
      },
      \\"video/vnd.dece.mp4\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dece.pd\\": {
        source: \\"iana\\",
        extensions: [\\"uvp\\", \\"uvvp\\"]
      },
      \\"video/vnd.dece.sd\\": {
        source: \\"iana\\",
        extensions: [\\"uvs\\", \\"uvvs\\"]
      },
      \\"video/vnd.dece.video\\": {
        source: \\"iana\\",
        extensions: [\\"uvv\\", \\"uvvv\\"]
      },
      \\"video/vnd.directv.mpeg\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.directv.mpeg-tts\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dlna.mpeg-tts\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dvb.file\\": {
        source: \\"iana\\",
        extensions: [\\"dvb\\"]
      },
      \\"video/vnd.fvt\\": {
        source: \\"iana\\",
        extensions: [\\"fvt\\"]
      },
      \\"video/vnd.hns.video\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.1dparityfec-1010\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.1dparityfec-2005\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.2dparityfec-1010\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.2dparityfec-2005\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.ttsavc\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.ttsmpeg2\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.motorola.video\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.motorola.videop\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.mpegurl\\": {
        source: \\"iana\\",
        extensions: [\\"mxu\\", \\"m4u\\"]
      },
      \\"video/vnd.ms-playready.media.pyv\\": {
        source: \\"iana\\",
        extensions: [\\"pyv\\"]
      },
      \\"video/vnd.nokia.interleaved-multimedia\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.nokia.mp4vr\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.nokia.videovoip\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.objectvideo\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.radgamettools.bink\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.radgamettools.smacker\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.mpeg1\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.mpeg4\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.swf\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealedmedia.softseal.mov\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.uvvu.mp4\\": {
        source: \\"iana\\",
        extensions: [\\"uvu\\", \\"uvvu\\"]
      },
      \\"video/vnd.vivo\\": {
        source: \\"iana\\",
        extensions: [\\"viv\\"]
      },
      \\"video/vnd.youtube.yt\\": {
        source: \\"iana\\"
      },
      \\"video/vp8\\": {
        source: \\"iana\\"
      },
      \\"video/vp9\\": {
        source: \\"iana\\"
      },
      \\"video/webm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"webm\\"]
      },
      \\"video/x-f4v\\": {
        source: \\"apache\\",
        extensions: [\\"f4v\\"]
      },
      \\"video/x-fli\\": {
        source: \\"apache\\",
        extensions: [\\"fli\\"]
      },
      \\"video/x-flv\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"flv\\"]
      },
      \\"video/x-m4v\\": {
        source: \\"apache\\",
        extensions: [\\"m4v\\"]
      },
      \\"video/x-matroska\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"mkv\\", \\"mk3d\\", \\"mks\\"]
      },
      \\"video/x-mng\\": {
        source: \\"apache\\",
        extensions: [\\"mng\\"]
      },
      \\"video/x-ms-asf\\": {
        source: \\"apache\\",
        extensions: [\\"asf\\", \\"asx\\"]
      },
      \\"video/x-ms-vob\\": {
        source: \\"apache\\",
        extensions: [\\"vob\\"]
      },
      \\"video/x-ms-wm\\": {
        source: \\"apache\\",
        extensions: [\\"wm\\"]
      },
      \\"video/x-ms-wmv\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"wmv\\"]
      },
      \\"video/x-ms-wmx\\": {
        source: \\"apache\\",
        extensions: [\\"wmx\\"]
      },
      \\"video/x-ms-wvx\\": {
        source: \\"apache\\",
        extensions: [\\"wvx\\"]
      },
      \\"video/x-msvideo\\": {
        source: \\"apache\\",
        extensions: [\\"avi\\"]
      },
      \\"video/x-sgi-movie\\": {
        source: \\"apache\\",
        extensions: [\\"movie\\"]
      },
      \\"video/x-smv\\": {
        source: \\"apache\\",
        extensions: [\\"smv\\"]
      },
      \\"x-conference/x-cooltalk\\": {
        source: \\"apache\\",
        extensions: [\\"ice\\"]
      },
      \\"x-shader/x-fragment\\": {
        compressible: true
      },
      \\"x-shader/x-vertex\\": {
        compressible: true
      }
    };
  }
});

// .yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  \\".yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/index.js\\"(exports, module2) {
    module2.exports = require_db();
  }
});

// .yarn/cache/mime-types-npm-2.1.35-dd9ea9f3e2-89a5b7f1de.zip/node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  \\".yarn/cache/mime-types-npm-2.1.35-dd9ea9f3e2-89a5b7f1de.zip/node_modules/mime-types/index.js\\"(exports) {
    \\"use strict\\";
    var db = require_mime_db();
    var extname = require(\\"path\\").extname;
    var EXTRACT_TYPE_REGEXP = /^\\\\s*([^;\\\\s]*)(?:;|\\\\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\\\\//i;
    exports.charset = charset;
    exports.charsets = { lookup: charset };
    exports.contentType = contentType;
    exports.extension = extension;
    exports.extensions = /* @__PURE__ */ Object.create(null);
    exports.lookup = lookup;
    exports.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports.extensions, exports.types);
    function charset(type) {
      if (!type || typeof type !== \\"string\\") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return \\"UTF-8\\";
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== \\"string\\") {
        return false;
      }
      var mime = str.indexOf(\\"/\\") === -1 ? exports.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf(\\"charset\\") === -1) {
        var charset2 = exports.charset(mime);
        if (charset2)
          mime += \\"; charset=\\" + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== \\"string\\") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== \\"string\\") {
        return false;
      }
      var extension2 = extname(\\"x.\\" + path).toLowerCase().substr(1);
      if (!extension2) {
        return false;
      }
      return exports.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = [\\"nginx\\", \\"apache\\", void 0, \\"iana\\"];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to = preference.indexOf(mime.source);
            if (types[extension2] !== \\"application/octet-stream\\" && (from > to || from === to && types[extension2].substr(0, 12) === \\"application/\\")) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/defer.js\\"(exports, module2) {
    module2.exports = defer;
    function defer(fn) {
      var nextTick = typeof setImmediate == \\"function\\" ? setImmediate : typeof process == \\"object\\" && typeof process.nextTick == \\"function\\" ? process.nextTick : null;
      if (nextTick) {
        nextTick(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/async.js\\"(exports, module2) {
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function() {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/abort.js\\"(exports, module2) {
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == \\"function\\") {
        this.jobs[key]();
      }
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/iterate.js\\"(exports, module2) {
    var async = require_async();
    var abort = require_abort();
    module2.exports = iterate;
    function iterate(list2, iterator, state, callback) {
      var key = state[\\"keyedList\\"] ? state[\\"keyedList\\"][state.index] : state.index;
      state.jobs[key] = runJob(iterator, key, list2[key], function(error, output) {
        if (!(key in state.jobs)) {
          return;
        }
        delete state.jobs[key];
        if (error) {
          abort(state);
        } else {
          state.results[key] = output;
        }
        callback(error, state.results);
      });
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/state.js\\"(exports, module2) {
    module2.exports = state;
    function state(list2, sortMethod) {
      var isNamedList = !Array.isArray(list2), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list2) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list2).length : list2.length
      };
      if (sortMethod) {
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
          return sortMethod(list2[a], list2[b]);
        });
      }
      return initState;
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/terminator.js\\"(exports, module2) {
    var abort = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/parallel.js\\"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list2, iterator, callback) {
      var state = initState(list2);
      while (state.index < (state[\\"keyedList\\"] || list2).length) {
        iterate(list2, iterator, state, function(error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serialOrdered.js\\"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list2, iterator, sortMethod, callback) {
      var state = initState(list2, sortMethod);
      iterate(list2, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state[\\"keyedList\\"] || list2).length) {
          iterate(list2, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serial.js
var require_serial = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serial.js\\"(exports, module2) {
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list2, iterator, callback) {
      return serialOrdered(list2, iterator, null, callback);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/index.js\\"(exports, module2) {
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// .yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  \\".yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/populate.js\\"(exports, module2) {
    module2.exports = function(dst, src) {
      Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  }
});

// .yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  \\".yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/form_data.js\\"(exports, module2) {
    var CombinedStream = require_combined_stream();
    var util = require(\\"util\\");
    var path = require(\\"path\\");
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var parseUrl = require(\\"url\\").parse;
    var fs = require(\\"fs\\");
    var Stream = require(\\"stream\\").Stream;
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var populate = require_populate();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option in options) {
        this[option] = options[option];
      }
    }
    FormData2.LINE_BREAK = \\"\\\\r\\\\n\\";
    FormData2.DEFAULT_CONTENT_TYPE = \\"application/octet-stream\\";
    FormData2.prototype.append = function(field, value, options) {
      options = options || {};
      if (typeof options == \\"string\\") {
        options = { filename: options };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == \\"number\\") {
        value = \\"\\" + value;
      }
      if (util.isArray(value)) {
        this._error(new Error(\\"Arrays are not supported.\\"));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options);
    };
    FormData2.prototype._trackLength = function(header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === \\"string\\") {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength += Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (!value || !value.path && !(value.readable && value.hasOwnProperty(\\"httpVersion\\")) && !(value instanceof Stream)) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function(value, callback) {
      if (value.hasOwnProperty(\\"fd\\")) {
        if (value.end != void 0 && value.end != Infinity && value.start != void 0) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs.stat(value.path, function(err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty(\\"httpVersion\\")) {
        callback(null, +value.headers[\\"content-length\\"]);
      } else if (value.hasOwnProperty(\\"httpModule\\")) {
        value.on(\\"response\\", function(response) {
          value.pause();
          callback(null, +response.headers[\\"content-length\\"]);
        });
        value.resume();
      } else {
        callback(\\"Unknown stream\\");
      }
    };
    FormData2.prototype._multiPartHeader = function(field, value, options) {
      if (typeof options.header == \\"string\\") {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = \\"\\";
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        \\"Content-Disposition\\": [\\"form-data\\", 'name=\\"' + field + '\\"'].concat(contentDisposition || []),
        // if no content type. allow it to be empty array
        \\"Content-Type\\": [].concat(contentType || [])
      };
      if (typeof options.header == \\"object\\") {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (!headers.hasOwnProperty(prop))
          continue;
        header = headers[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + \\": \\" + header.join(\\"; \\") + FormData2.LINE_BREAK;
        }
      }
      return \\"--\\" + this.getBoundary() + FormData2.LINE_BREAK + contents + FormData2.LINE_BREAK;
    };
    FormData2.prototype._getContentDisposition = function(value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === \\"string\\") {
        filename = path.normalize(options.filepath).replace(/\\\\\\\\/g, \\"/\\");
      } else if (options.filename || value.name || value.path) {
        filename = path.basename(options.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty(\\"httpVersion\\")) {
        filename = path.basename(value.client._httpMessage.path || \\"\\");
      }
      if (filename) {
        contentDisposition = 'filename=\\"' + filename + '\\"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function(value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (!contentType && value.readable && value.hasOwnProperty(\\"httpVersion\\")) {
        contentType = value.headers[\\"content-type\\"];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == \\"object\\") {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function() {
      return function(next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function() {
      return \\"--\\" + this.getBoundary() + \\"--\\" + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function(userHeaders) {
      var header;
      var formHeaders = {
        \\"content-type\\": \\"multipart/form-data; boundary=\\" + this.getBoundary()
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function() {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function() {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== \\"function\\") {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
          }
          if (typeof this._streams[i] !== \\"string\\" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData2.LINE_BREAK)]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function() {
      var boundary = \\"--------------------------\\";
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(new Error(\\"Cannot calculate proper length in synchronous way.\\"));
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function() {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        });
        cb(null, knownLength);
      });
    };
    FormData2.prototype.submit = function(params, cb) {
      var request, options, defaults = { method: \\"post\\" };
      if (typeof params == \\"string\\") {
        params = parseUrl(params);
        options = populate({
          port: params.port,
          path: params.pathname,
          host: params.hostname,
          protocol: params.protocol
        }, defaults);
      } else {
        options = populate(params, defaults);
        if (!options.port) {
          options.port = options.protocol == \\"https:\\" ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == \\"https:\\") {
        request = https.request(options);
      } else {
        request = http.request(options);
      }
      this.getLength(function(err, length) {
        if (err && err !== \\"Unknown stream\\") {
          this._error(err);
          return;
        }
        if (length) {
          request.setHeader(\\"Content-Length\\", length);
        }
        this.pipe(request);
        if (cb) {
          var onResponse;
          var callback = function(error, responce) {
            request.removeListener(\\"error\\", callback);
            request.removeListener(\\"response\\", onResponse);
            return cb.call(this, error, responce);
          };
          onResponse = callback.bind(this, null);
          request.on(\\"error\\", callback);
          request.on(\\"response\\", onResponse);
        }
      }.bind(this));
      return request;
    };
    FormData2.prototype._error = function(err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit(\\"error\\", err);
      }
    };
    FormData2.prototype.toString = function() {
      return \\"[object FormData]\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/env/FormData.js
var require_FormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/env/FormData.js\\"(exports, module2) {
    module2.exports = require_form_data();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_http();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_FormData()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module2.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module2) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module2.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module2.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module2) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module2.exports = axios2;
    module2.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module2) {
    module2.exports = require_axios();
  }
});

// src/core/index.ts
var core_exports = {};
__export(core_exports, {
  Supplier: () => Supplier,
  fetcher: () => fetcher,
  serialization: () => schemas_exports
});
module.exports = __toCommonJS(core_exports);

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});

// src/core/schemas/Schema.ts
var SchemaType = {
  DATE: \\"date\\",
  ENUM: \\"enum\\",
  LIST: \\"list\\",
  STRING_LITERAL: \\"stringLiteral\\",
  OBJECT: \\"object\\",
  ANY: \\"any\\",
  BOOLEAN: \\"boolean\\",
  NUMBER: \\"number\\",
  STRING: \\"string\\",
  UNKNOWN: \\"unknown\\",
  RECORD: \\"record\\",
  SET: \\"set\\",
  UNION: \\"union\\",
  OPTIONAL: \\"optional\\"
};

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError = class extends Error {
  constructor(errors) {
    super(errors.map(stringifyValidationError).join(\\"; \\"));
    this.errors = errors;
    Object.setPrototypeOf(this, JsonError.prototype);
  }
};

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError = class extends Error {
  constructor(errors) {
    super(errors.map(stringifyValidationError).join(\\"; \\"));
    this.errors = errors;
    Object.setPrototypeOf(this, ParseError.prototype);
  }
};

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/builders/date/date.ts
var ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}

// src/core/schemas/utils/isPlainObject.ts
var NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: (opts == null ? void 0 : opts.allowUnknownKeys) ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: (opts == null ? void 0 : opts.allowUnknownKeys) ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}

// src/core/schemas/builders/primitives/any.ts
var any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));

// src/core/schemas/builders/primitives/boolean.ts
var boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
  if (typeof value === \\"boolean\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a boolean\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/number.ts
var number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
  if (typeof value === \\"number\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a number\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/string.ts
var string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
  if (typeof value === \\"string\\") {
    return {
      ok: true,
      value
    };
  } else {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \\"Not a string\\"
        }
      ]
    };
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        (opts == null ? void 0 : opts.allowUnknownKeys) ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        (opts == null ? void 0 : opts.allowUnknownKeys) ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}

// src/core/fetcher/Fetcher.ts
var import_axios = __toESM(require_axios2());
var fetcher = async (args) => {
  const headers = {
    \\"Content-Type\\": \\"application/json\\"
  };
  if (args.headers != null) {
    for (const [key, value] of Object.entries(args.headers)) {
      if (value != null) {
        headers[key] = value;
      }
    }
  }
  try {
    const response = await (0, import_axios.default)({
      url: args.url,
      params: args.queryParameters,
      method: args.method,
      headers,
      data: args.body,
      validateStatus: () => true,
      transformResponse: (response2) => response2,
      timeout: args.timeoutMs ?? 6e4,
      transitional: {
        clarifyTimeoutError: true
      },
      withCredentials: args.withCredentials
    });
    let body;
    if (response.data != null && response.data.length > 0) {
      try {
        body = JSON.parse(response.data) ?? void 0;
      } catch {
        return {
          ok: false,
          error: {
            reason: \\"non-json\\",
            statusCode: response.status,
            rawBody: response.data
          }
        };
      }
    }
    if (response.status >= 200 && response.status < 300) {
      return {
        ok: true,
        body
      };
    } else {
      return {
        ok: false,
        error: {
          reason: \\"status-code\\",
          statusCode: response.status,
          body
        }
      };
    }
  } catch (error) {
    if (error.code === \\"ETIMEDOUT\\") {
      return {
        ok: false,
        error: {
          reason: \\"timeout\\"
        }
      };
    }
    return {
      ok: false,
      error: {
        reason: \\"unknown\\",
        errorMessage: error.message
      }
    };
  }
};

// src/core/fetcher/Supplier.ts
var Supplier = {
  get: async (supplier) => {
    if (typeof supplier === \\"function\\") {
      return supplier();
    } else {
      return supplier;
    }
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Supplier,
  fetcher,
  serialization
});
/*! Bundled license information:

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
*/
",
                "name": "core.js",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

// src/api/resources/remoteGen/types/RemoteGenJobId.ts
function RemoteGenJobId(value) {
  return value;
}
var init_RemoteGenJobId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/RemoteGenTaskId.ts
function RemoteGenTaskId(value) {
  return value;
}
var init_RemoteGenTaskId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts
var init_GeneratorIdAndVersion = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfig.ts
var init_GeneratorConfig = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfigV2.ts
var init_GeneratorConfigV2 = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/OutputMode.ts
var OutputMode;
var init_OutputMode = __esm({
  \\"src/api/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    OutputMode = {
      publish: (value) => {
        return {
          ...value,
          type: \\"publish\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      publishV2: (value) => {
        return {
          publishV2: value,
          type: \\"publishV2\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      downloadFiles: () => {
        return {
          type: \\"downloadFiles\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      github: (value) => {
        return {
          ...value,
          type: \\"github\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"publish\\":
            return visitor.publish(value);
          case \\"publishV2\\":
            return visitor.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return visitor.downloadFiles();
          case \\"github\\":
            return visitor.github(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/PublishOutputMode.ts
var init_PublishOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV2;
var init_PublishOutputModeV2 = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    PublishOutputModeV2 = {
      npmOverride: (value) => {
        return {
          npmOverride: value,
          type: \\"npmOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      mavenOverride: (value) => {
        return {
          mavenOverride: value,
          type: \\"mavenOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return visitor.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return visitor.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/RegistryOverrides.ts
var init_RegistryOverrides = __esm({
  \\"src/api/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorOutputs.ts
var init_GeneratorOutputs = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/NpmOutput.ts
var init_NpmOutput = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutput.ts
var init_MavenOutput = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PostmanOutput.ts
var init_PostmanOutput = __esm({
  \\"src/api/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubOutputMode.ts
var init_GithubOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo;
var init_GithubPublishInfo = __esm({
  \\"src/api/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    GithubPublishInfo = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var init_NpmOutputWithOptionalToken = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var init_MavenOutputWithOptionalCreds = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/UsernamePassword.ts
var init_UsernamePassword = __esm({
  \\"src/api/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/Task.ts
var init_Task = __esm({
  \\"src/api/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskStatus.ts
var TaskStatus;
var init_TaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    TaskStatus = {
      notStarted: () => {
        return {
          type: \\"notStarted\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      running: () => {
        return {
          type: \\"running\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      failed: (value) => {
        return {
          ...value,
          type: \\"failed\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      finished: (value) => {
        return {
          ...value,
          type: \\"finished\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"notStarted\\":
            return visitor.notStarted();
          case \\"running\\":
            return visitor.running();
          case \\"failed\\":
            return visitor.failed(value);
          case \\"finished\\":
            return visitor.finished(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/FailedTaskStatus.ts
var init_FailedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/FinishedTaskStatus.ts
var init_FinishedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskLog.ts
var init_TaskLog = __esm({
  \\"src/api/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/LogLevel.ts
var LogLevel;
var init_LogLevel = __esm({
  \\"src/api/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    LogLevel = {
      Debug: \\"DEBUG\\",
      Info: \\"INFO\\",
      Warn: \\"WARN\\",
      Error: \\"ERROR\\"
    };
  }
});

// src/api/resources/remoteGen/types/Package.ts
var init_Package = __esm({
  \\"src/api/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus;
var init_PackagePublishStatus = __esm({
  \\"src/api/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    PackagePublishStatus = {
      NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\",
      Publishing: \\"PUBLISHING\\",
      Published: \\"PUBLISHED\\",
      FailedToPublish: \\"FAILED_TO_PUBLISH\\"
    };
  }
});

// src/api/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate;
var init_PackageCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    PackageCoordinate = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      pypi: (value) => {
        return {
          ...value,
          type: \\"pypi\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"pypi\\":
            return visitor.pypi(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmCoordinate.ts
var init_NpmCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenCoordinate.ts
var init_MavenCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PypiCoordinate.ts
var init_PypiCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CreateJobResponse.ts
var init_CreateJobResponse = __esm({
  \\"src/api/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var init_GeneratorsDoNotExistErrorBodyType = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var init_CannotPublishToNpmScopeDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var init_CannotPublishToMavenGroupDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var init_InsufficientPermissionsDetails = __esm({
  \\"src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/index.ts
var init_types = __esm({
  \\"src/api/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId();
    init_RemoteGenTaskId();
    init_GeneratorIdAndVersion();
    init_GeneratorConfig();
    init_GeneratorConfigV2();
    init_OutputMode();
    init_PublishOutputMode();
    init_PublishOutputModeV2();
    init_RegistryOverrides();
    init_GeneratorOutputs();
    init_NpmOutput();
    init_MavenOutput();
    init_PostmanOutput();
    init_GithubOutputMode();
    init_GithubPublishInfo();
    init_NpmOutputWithOptionalToken();
    init_MavenOutputWithOptionalCreds();
    init_UsernamePassword();
    init_Task();
    init_TaskStatus();
    init_FailedTaskStatus();
    init_FinishedTaskStatus();
    init_TaskLog();
    init_LogLevel();
    init_Package();
    init_PackagePublishStatus();
    init_PackageCoordinate();
    init_NpmCoordinate();
    init_MavenCoordinate();
    init_PypiCoordinate();
    init_CreateJobResponse();
    init_GeneratorsDoNotExistErrorBodyType();
    init_CannotPublishToNpmScopeDetails();
    init_CannotPublishToMavenGroupDetails();
    init_InsufficientPermissionsDetails();
  }
});

// src/api/resources/remoteGen/client/requests/index.ts
var init_requests = __esm({
  \\"src/api/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/client/createJob.ts
var createJob_exports = {};
__export(createJob_exports, {
  Error: () => Error2
});
var Error2;
var init_createJob = __esm({
  \\"src/api/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    Error2 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports = {};
__export(createJobV2_exports, {
  Error: () => Error3
});
var Error3;
var init_createJobV2 = __esm({
  \\"src/api/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    Error3 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports = {};
__export(getJobStatus_exports, {
  Error: () => Error4
});
var Error4;
var init_getJobStatus = __esm({
  \\"src/api/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    Error4 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.getJobStatus.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/index.ts
var init_client = __esm({
  \\"src/api/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_requests();
    init_createJob();
    init_createJobV2();
    init_getJobStatus();
  }
});

// src/api/resources/remoteGen/index.ts
var remoteGen_exports = {};
__export(remoteGen_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  createJob: () => createJob_exports,
  createJobV2: () => createJobV2_exports,
  getJobStatus: () => getJobStatus_exports
});
var init_remoteGen = __esm({
  \\"src/api/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types();
    init_client();
  }
});

// src/api/resources/fiddle/client/test.ts
var test_exports = {};
__export(test_exports, {
  Error: () => Error5
});
var Error5;
var init_test = __esm({
  \\"src/api/resources/fiddle/client/test.ts\\"() {
    \\"use strict\\";
    init_src();
    Error5 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.fiddle.test.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/fiddle/client/index.ts
var init_client2 = __esm({
  \\"src/api/resources/fiddle/client/index.ts\\"() {
    \\"use strict\\";
    init_test();
  }
});

// src/api/resources/fiddle/index.ts
var fiddle_exports = {};
__export(fiddle_exports, {
  test: () => test_exports
});
var init_fiddle = __esm({
  \\"src/api/resources/fiddle/index.ts\\"() {
    \\"use strict\\";
    init_client2();
  }
});

// src/api/resources/health/client/status.ts
var status_exports = {};
__export(status_exports, {
  Error: () => Error6
});
var Error6;
var init_status = __esm({
  \\"src/api/resources/health/client/status.ts\\"() {
    \\"use strict\\";
    init_src();
    Error6 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.health.status.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/health/client/index.ts
var init_client3 = __esm({
  \\"src/api/resources/health/client/index.ts\\"() {
    \\"use strict\\";
    init_status();
  }
});

// src/api/resources/health/index.ts
var health_exports = {};
__export(health_exports, {
  status: () => status_exports
});
var init_health = __esm({
  \\"src/api/resources/health/index.ts\\"() {
    \\"use strict\\";
    init_client3();
  }
});

// src/api/resources/index.ts
var init_resources = __esm({
  \\"src/api/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen();
    init_types();
    init_fiddle();
    init_health();
    init_requests();
  }
});

// src/api/index.ts
var api_exports = {};
__export(api_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  fiddle: () => fiddle_exports,
  health: () => health_exports,
  remoteGen: () => remoteGen_exports
});
var init_api = __esm({
  \\"src/api/index.ts\\"() {
    \\"use strict\\";
    init_resources();
  }
});

// src/core/schemas/Schema.ts
var SchemaType;
var init_Schema = __esm({
  \\"src/core/schemas/Schema.ts\\"() {
    \\"use strict\\";
    SchemaType = {
      DATE: \\"date\\",
      ENUM: \\"enum\\",
      LIST: \\"list\\",
      STRING_LITERAL: \\"stringLiteral\\",
      OBJECT: \\"object\\",
      ANY: \\"any\\",
      BOOLEAN: \\"boolean\\",
      NUMBER: \\"number\\",
      STRING: \\"string\\",
      UNKNOWN: \\"unknown\\",
      RECORD: \\"record\\",
      SET: \\"set\\",
      UNION: \\"union\\",
      OPTIONAL: \\"optional\\"
    };
  }
});

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
var init_stringifyValidationErrors = __esm({
  \\"src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError;
var init_JsonError = __esm({
  \\"src/core/schemas/builders/schema-utils/JsonError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    JsonError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError;
var init_ParseError = __esm({
  \\"src/core/schemas/builders/schema-utils/ParseError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    ParseError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_getSchemaUtils = __esm({
  \\"src/core/schemas/builders/schema-utils/getSchemaUtils.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/schema-utils/index.ts
var init_schema_utils = __esm({
  \\"src/core/schemas/builders/schema-utils/index.ts\\"() {
    \\"use strict\\";
    init_getSchemaUtils();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/date/date.ts
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var ISO_8601_REGEX;
var init_date = __esm({
  \\"src/core/schemas/builders/date/date.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
    ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
  }
});

// src/core/schemas/builders/date/index.ts
var init_date2 = __esm({
  \\"src/core/schemas/builders/date/index.ts\\"() {
    \\"use strict\\";
    init_date();
  }
});

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}
var init_createIdentitySchemaCreator = __esm({
  \\"src/core/schemas/utils/createIdentitySchemaCreator.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_enum = __esm({
  \\"src/core/schemas/builders/enum/enum.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/enum/index.ts
var init_enum2 = __esm({
  \\"src/core/schemas/builders/enum/index.ts\\"() {
    \\"use strict\\";
    init_enum();
  }
});

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}
var init_lazy = __esm({
  \\"src/core/schemas/builders/lazy/lazy.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}
var init_entries = __esm({
  \\"src/core/schemas/utils/entries.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
var init_filterObject = __esm({
  \\"src/core/schemas/utils/filterObject.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/isPlainObject.ts
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}
var NOT_AN_OBJECT_ERROR_MESSAGE;
var init_isPlainObject = __esm({
  \\"src/core/schemas/utils/isPlainObject.ts\\"() {
    \\"use strict\\";
    NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
  }
});

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}
var init_keys = __esm({
  \\"src/core/schemas/utils/keys.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}
var init_partition = __esm({
  \\"src/core/schemas/utils/partition.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}
var init_getObjectLikeUtils = __esm({
  \\"src/core/schemas/builders/object-like/getObjectLikeUtils.ts\\"() {
    \\"use strict\\";
    init_filterObject();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/object-like/index.ts
var init_object_like = __esm({
  \\"src/core/schemas/builders/object-like/index.ts\\"() {
    \\"use strict\\";
    init_getObjectLikeUtils();
  }
});

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}
var init_property = __esm({
  \\"src/core/schemas/builders/object/property.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: (opts == null ? void 0 : opts.allowUnknownKeys) ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: (opts == null ? void 0 : opts.allowUnknownKeys) ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}
var init_object = __esm({
  \\"src/core/schemas/builders/object/object.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_filterObject();
    init_isPlainObject();
    init_keys();
    init_partition();
    init_object_like();
    init_schema_utils();
    init_property();
  }
});

// src/core/schemas/builders/object/index.ts
var init_object2 = __esm({
  \\"src/core/schemas/builders/object/index.ts\\"() {
    \\"use strict\\";
    init_object();
    init_property();
  }
});

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
var init_lazyObject = __esm({
  \\"src/core/schemas/builders/lazy/lazyObject.ts\\"() {
    \\"use strict\\";
    init_object2();
    init_object_like();
    init_schema_utils();
    init_lazy();
  }
});

// src/core/schemas/builders/lazy/index.ts
var init_lazy2 = __esm({
  \\"src/core/schemas/builders/lazy/index.ts\\"() {
    \\"use strict\\";
    init_lazy();
    init_lazyObject();
  }
});

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}
var init_list = __esm({
  \\"src/core/schemas/builders/list/list.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
  }
});

// src/core/schemas/builders/list/index.ts
var init_list2 = __esm({
  \\"src/core/schemas/builders/list/index.ts\\"() {
    \\"use strict\\";
    init_list();
  }
});

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_stringLiteral = __esm({
  \\"src/core/schemas/builders/literals/stringLiteral.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/literals/index.ts
var init_literals = __esm({
  \\"src/core/schemas/builders/literals/index.ts\\"() {
    \\"use strict\\";
    init_stringLiteral();
  }
});

// src/core/schemas/builders/primitives/any.ts
var any;
var init_any = __esm({
  \\"src/core/schemas/builders/primitives/any.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/boolean.ts
var boolean;
var init_boolean = __esm({
  \\"src/core/schemas/builders/primitives/boolean.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
      if (typeof value === \\"boolean\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a boolean\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/number.ts
var number;
var init_number = __esm({
  \\"src/core/schemas/builders/primitives/number.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
      if (typeof value === \\"number\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a number\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/string.ts
var string;
var init_string = __esm({
  \\"src/core/schemas/builders/primitives/string.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
      if (typeof value === \\"string\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a string\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown;
var init_unknown = __esm({
  \\"src/core/schemas/builders/primitives/unknown.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/index.ts
var init_primitives = __esm({
  \\"src/core/schemas/builders/primitives/index.ts\\"() {
    \\"use strict\\";
    init_any();
    init_boolean();
    init_number();
    init_string();
    init_unknown();
  }
});

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}
var init_record = __esm({
  \\"src/core/schemas/builders/record/record.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/record/index.ts
var init_record2 = __esm({
  \\"src/core/schemas/builders/record/index.ts\\"() {
    \\"use strict\\";
    init_record();
  }
});

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_set = __esm({
  \\"src/core/schemas/builders/set/set.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_list2();
    init_schema_utils();
  }
});

// src/core/schemas/builders/set/index.ts
var init_set2 = __esm({
  \\"src/core/schemas/builders/set/index.ts\\"() {
    \\"use strict\\";
    init_set();
  }
});

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}
var init_discriminant = __esm({
  \\"src/core/schemas/builders/union/discriminant.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        (opts == null ? void 0 : opts.allowUnknownKeys) ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        (opts == null ? void 0 : opts.allowUnknownKeys) ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}
var init_union = __esm({
  \\"src/core/schemas/builders/union/union.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_isPlainObject();
    init_keys();
    init_enum2();
    init_object_like();
    init_schema_utils();
  }
});

// src/core/schemas/builders/union/index.ts
var init_union2 = __esm({
  \\"src/core/schemas/builders/union/index.ts\\"() {
    \\"use strict\\";
    init_discriminant();
    init_union();
  }
});

// src/core/schemas/builders/index.ts
var init_builders = __esm({
  \\"src/core/schemas/builders/index.ts\\"() {
    \\"use strict\\";
    init_date2();
    init_enum2();
    init_lazy2();
    init_list2();
    init_literals();
    init_object2();
    init_object_like();
    init_primitives();
    init_record2();
    init_schema_utils();
    init_set2();
    init_union2();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});
var init_schemas = __esm({
  \\"src/core/schemas/index.ts\\"() {
    \\"use strict\\";
    init_builders();
    init_Schema();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module2) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module2.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module2.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module2.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module2.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module2) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module2.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module2.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  \\".yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/debug.js\\"(exports, module2) {
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require(\\"debug\\")(\\"follow-redirects\\");
        } catch (error) {
        }
        if (typeof debug !== \\"function\\") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// .yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  \\".yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/index.js\\"(exports, module2) {
    var url = require(\\"url\\");
    var URL = url.URL;
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var Writable = require(\\"stream\\").Writable;
    var assert = require(\\"assert\\");
    var debug = require_debug();
    var events = [\\"abort\\", \\"aborted\\", \\"connect\\", \\"error\\", \\"socket\\", \\"timeout\\"];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      \\"ERR_INVALID_URL\\",
      \\"Invalid URL\\",
      TypeError
    );
    var RedirectionError = createErrorType(
      \\"ERR_FR_REDIRECTION_FAILURE\\",
      \\"Redirected request failed\\"
    );
    var TooManyRedirectsError = createErrorType(
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"Maximum number of redirects exceeded\\"
    );
    var MaxBodyLengthExceededError = createErrorType(
      \\"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\\",
      \\"Request body larger than maxBodyLength limit\\"
    );
    var WriteAfterEndError = createErrorType(
      \\"ERR_STREAM_WRITE_AFTER_END\\",
      \\"write after end\\"
    );
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options);
      this._options = options;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on(\\"response\\", responseCallback);
      }
      var self = this;
      this._onNativeResponse = function(response) {
        self._processResponse(response);
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      abortRequest(this._currentRequest);
      this.emit(\\"abort\\");
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString(data) && !isBuffer(data)) {
        throw new TypeError(\\"data should be a string, Buffer or Uint8Array\\");
      }
      if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit(\\"error\\", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (isFunction(data)) {
        callback = data;
        data = encoding = null;
      } else if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener(\\"timeout\\", socket.destroy);
        socket.addListener(\\"timeout\\", socket.destroy);
      }
      function startTimer(socket) {
        if (self._timeout) {
          clearTimeout(self._timeout);
        }
        self._timeout = setTimeout(function() {
          self.emit(\\"timeout\\");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self._timeout) {
          clearTimeout(self._timeout);
          self._timeout = null;
        }
        self.removeListener(\\"abort\\", clearTimer);
        self.removeListener(\\"error\\", clearTimer);
        self.removeListener(\\"response\\", clearTimer);
        if (callback) {
          self.removeListener(\\"timeout\\", callback);
        }
        if (!self.socket) {
          self._currentRequest.removeListener(\\"socket\\", startTimer);
        }
      }
      if (callback) {
        this.on(\\"timeout\\", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once(\\"socket\\", startTimer);
      }
      this.on(\\"socket\\", destroyOnTimeout);
      this.on(\\"abort\\", clearTimer);
      this.on(\\"error\\", clearTimer);
      this.on(\\"response\\", clearTimer);
      return this;
    };
    [
      \\"flushHeaders\\",
      \\"getHeader\\",
      \\"setNoDelay\\",
      \\"setSocketKeepAlive\\"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    [\\"aborted\\", \\"connection\\", \\"socket\\"].forEach(function(property2) {
      Object.defineProperty(RedirectableRequest.prototype, property2, {
        get: function() {
          return this._currentRequest[property2];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options) {
      if (!options.headers) {
        options.headers = {};
      }
      if (options.host) {
        if (!options.hostname) {
          options.hostname = options.host;
        }
        delete options.host;
      }
      if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf(\\"?\\");
        if (searchPos < 0) {
          options.pathname = options.path;
        } else {
          options.pathname = options.path.substring(0, searchPos);
          options.search = options.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit(\\"error\\", new TypeError(\\"Unsupported protocol \\" + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request._redirectable = this;
      for (var event of events) {
        request.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\\\\//.test(this._options.path) ? url.format(this._options) : (
        // When making a request to a proxy, […]
        // a client MUST send the target URI in absolute-form […].
        this._options.path
      );
      if (this._isRedirect) {
        var i = 0;
        var self = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request === self._currentRequest) {
            if (error) {
              self.emit(\\"error\\", error);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request.finished) {
                request.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self._ended) {
              request.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode
        });
      }
      var location = response.headers.location;
      if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit(\\"response\\", response);
        this._requestBodyBuffers = [];
        return;
      }
      abortRequest(this._currentRequest);
      response.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        this.emit(\\"error\\", new TooManyRedirectsError());
        return;
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign({
          // The Host header was set by nativeProtocol.request
          Host: response.req.getHeader(\\"host\\")
        }, this._options.headers);
      }
      var method = this._options.method;
      if ((statusCode === 301 || statusCode === 302) && this._options.method === \\"POST\\" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = \\"GET\\";
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
      var currentUrlParts = url.parse(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\\\\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl;
      try {
        redirectUrl = url.resolve(currentUrl, location);
      } catch (cause) {
        this.emit(\\"error\\", new RedirectionError({ cause }));
        return;
      }
      debug(\\"redirecting to\\", redirectUrl);
      this._isRedirect = true;
      var redirectUrlParts = url.parse(redirectUrl);
      Object.assign(this._options, redirectUrlParts);
      if (redirectUrlParts.protocol !== currentUrlParts.protocol && redirectUrlParts.protocol !== \\"https:\\" || redirectUrlParts.host !== currentHost && !isSubdomain(redirectUrlParts.host, currentHost)) {
        removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);
      }
      if (isFunction(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        try {
          beforeRedirect(this._options, responseDetails, requestDetails);
        } catch (err) {
          this.emit(\\"error\\", err);
          return;
        }
        this._sanitizeOptions(this._options);
      }
      try {
        this._performRequest();
      } catch (cause) {
        this.emit(\\"error\\", new RedirectionError({ cause }));
      }
    };
    function wrap(protocols) {
      var exports2 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + \\":\\";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports2[scheme] = Object.create(nativeProtocol);
        function request(input, options, callback) {
          if (isString(input)) {
            var parsed;
            try {
              parsed = urlToOptions(new URL(input));
            } catch (err) {
              parsed = url.parse(input);
            }
            if (!isString(parsed.protocol)) {
              throw new InvalidUrlError({ input });
            }
            input = parsed;
          } else if (URL && input instanceof URL) {
            input = urlToOptions(input);
          } else {
            callback = options;
            options = input;
            input = { protocol };
          }
          if (isFunction(options)) {
            callback = options;
            options = null;
          }
          options = Object.assign({
            maxRedirects: exports2.maxRedirects,
            maxBodyLength: exports2.maxBodyLength
          }, input, options);
          options.nativeProtocols = nativeProtocols;
          if (!isString(options.host) && !isString(options.hostname)) {
            options.hostname = \\"::1\\";
          }
          assert.equal(options.protocol, protocol, \\"protocol mismatch\\");
          debug(\\"options\\", options);
          return new RedirectableRequest(options, callback);
        }
        function get(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request, configurable: true, enumerable: true, writable: true },
          get: { value: get, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports2;
    }
    function noop() {
    }
    function urlToOptions(urlObject) {
      var options = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith(\\"[\\") ? (
          /* istanbul ignore next */
          urlObject.hostname.slice(1, -1)
        ) : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href
      };
      if (urlObject.port !== \\"\\") {
        options.port = Number(urlObject.port);
      }
      return options;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue === null || typeof lastValue === \\"undefined\\" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        Error.captureStackTrace(this, this.constructor);
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + \\": \\" + this.cause.message : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      CustomError.prototype.constructor = CustomError;
      CustomError.prototype.name = \\"Error [\\" + code + \\"]\\";
      return CustomError;
    }
    function abortRequest(request) {
      for (var event of events) {
        request.removeListener(event, eventHandlers[event]);
      }
      request.on(\\"error\\", noop);
      request.abort();
    }
    function isSubdomain(subdomain, domain) {
      assert(isString(subdomain) && isString(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === \\".\\" && subdomain.endsWith(domain);
    }
    function isString(value) {
      return typeof value === \\"string\\" || value instanceof String;
    }
    function isFunction(value) {
      return typeof value === \\"function\\";
    }
    function isBuffer(value) {
      return typeof value === \\"object\\" && \\"length\\" in value;
    }
    module2.exports = wrap({ http, https });
    module2.exports.wrap = wrap;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module2) {
    module2.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/http.js
var require_http = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/http.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var buildFullPath = require_buildFullPath();
    var buildURL = require_buildURL();
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var httpFollow = require_follow_redirects().http;
    var httpsFollow = require_follow_redirects().https;
    var url = require(\\"url\\");
    var zlib = require(\\"zlib\\");
    var VERSION = require_data().version;
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var isHttps = /https:?/;
    var supportedProtocols = [\\"http:\\", \\"https:\\", \\"file:\\"];
    function setProxy(options, proxy, location) {
      options.hostname = proxy.host;
      options.host = proxy.host;
      options.port = proxy.port;
      options.path = location;
      if (proxy.auth) {
        var base64 = Buffer.from(proxy.auth.username + \\":\\" + proxy.auth.password, \\"utf8\\").toString(\\"base64\\");
        options.headers[\\"Proxy-Authorization\\"] = \\"Basic \\" + base64;
      }
      options.beforeRedirect = function beforeRedirect(redirection) {
        redirection.headers.host = redirection.host;
        setProxy(redirection, proxy, redirection.href);
      };
    }
    module2.exports = function httpAdapter(config) {
      return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        var resolve = function resolve2(value) {
          done();
          resolvePromise(value);
        };
        var rejected = false;
        var reject = function reject2(value) {
          done();
          rejected = true;
          rejectPromise(value);
        };
        var data = config.data;
        var headers = config.headers;
        var headerNames = {};
        Object.keys(headers).forEach(function storeLowerName(name) {
          headerNames[name.toLowerCase()] = name;
        });
        if (\\"user-agent\\" in headerNames) {
          if (!headers[headerNames[\\"user-agent\\"]]) {
            delete headers[headerNames[\\"user-agent\\"]];
          }
        } else {
          headers[\\"User-Agent\\"] = \\"axios/\\" + VERSION;
        }
        if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {
          Object.assign(headers, data.getHeaders());
        } else if (data && !utils.isStream(data)) {
          if (Buffer.isBuffer(data)) {
          } else if (utils.isArrayBuffer(data)) {
            data = Buffer.from(new Uint8Array(data));
          } else if (utils.isString(data)) {
            data = Buffer.from(data, \\"utf-8\\");
          } else {
            return reject(new AxiosError2(
              \\"Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream\\",
              AxiosError2.ERR_BAD_REQUEST,
              config
            ));
          }
          if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {
            return reject(new AxiosError2(
              \\"Request body larger than maxBodyLength limit\\",
              AxiosError2.ERR_BAD_REQUEST,
              config
            ));
          }
          if (!headerNames[\\"content-length\\"]) {
            headers[\\"Content-Length\\"] = data.length;
          }
        }
        var auth = void 0;
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password || \\"\\";
          auth = username + \\":\\" + password;
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        var parsed = url.parse(fullPath);
        var protocol = parsed.protocol || supportedProtocols[0];
        if (supportedProtocols.indexOf(protocol) === -1) {
          return reject(new AxiosError2(
            \\"Unsupported protocol \\" + protocol,
            AxiosError2.ERR_BAD_REQUEST,
            config
          ));
        }
        if (!auth && parsed.auth) {
          var urlAuth = parsed.auth.split(\\":\\");
          var urlUsername = urlAuth[0] || \\"\\";
          var urlPassword = urlAuth[1] || \\"\\";
          auth = urlUsername + \\":\\" + urlPassword;
        }
        if (auth && headerNames.authorization) {
          delete headers[headerNames.authorization];
        }
        var isHttpsRequest = isHttps.test(protocol);
        var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;
        try {
          buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\\\?/, \\"\\");
        } catch (err) {
          var customErr = new Error(err.message);
          customErr.config = config;
          customErr.url = config.url;
          customErr.exists = true;
          reject(customErr);
        }
        var options = {
          path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\\\?/, \\"\\"),
          method: config.method.toUpperCase(),
          headers,
          agent,
          agents: { http: config.httpAgent, https: config.httpsAgent },
          auth
        };
        if (config.socketPath) {
          options.socketPath = config.socketPath;
        } else {
          options.hostname = parsed.hostname;
          options.port = parsed.port;
        }
        var proxy = config.proxy;
        if (!proxy && proxy !== false) {
          var proxyEnv = protocol.slice(0, -1) + \\"_proxy\\";
          var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
          if (proxyUrl) {
            var parsedProxyUrl = url.parse(proxyUrl);
            var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
            var shouldProxy = true;
            if (noProxyEnv) {
              var noProxy = noProxyEnv.split(\\",\\").map(function trim(s) {
                return s.trim();
              });
              shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
                if (!proxyElement) {
                  return false;
                }
                if (proxyElement === \\"*\\") {
                  return true;
                }
                if (proxyElement[0] === \\".\\" && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
                  return true;
                }
                return parsed.hostname === proxyElement;
              });
            }
            if (shouldProxy) {
              proxy = {
                host: parsedProxyUrl.hostname,
                port: parsedProxyUrl.port,
                protocol: parsedProxyUrl.protocol
              };
              if (parsedProxyUrl.auth) {
                var proxyUrlAuth = parsedProxyUrl.auth.split(\\":\\");
                proxy.auth = {
                  username: proxyUrlAuth[0],
                  password: proxyUrlAuth[1]
                };
              }
            }
          }
        }
        if (proxy) {
          options.headers.host = parsed.hostname + (parsed.port ? \\":\\" + parsed.port : \\"\\");
          setProxy(options, proxy, protocol + \\"//\\" + parsed.hostname + (parsed.port ? \\":\\" + parsed.port : \\"\\") + options.path);
        }
        var transport;
        var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);
        if (config.transport) {
          transport = config.transport;
        } else if (config.maxRedirects === 0) {
          transport = isHttpsProxy ? https : http;
        } else {
          if (config.maxRedirects) {
            options.maxRedirects = config.maxRedirects;
          }
          if (config.beforeRedirect) {
            options.beforeRedirect = config.beforeRedirect;
          }
          transport = isHttpsProxy ? httpsFollow : httpFollow;
        }
        if (config.maxBodyLength > -1) {
          options.maxBodyLength = config.maxBodyLength;
        }
        if (config.insecureHTTPParser) {
          options.insecureHTTPParser = config.insecureHTTPParser;
        }
        var req = transport.request(options, function handleResponse(res) {
          if (req.aborted)
            return;
          var stream = res;
          var lastRequest = res.req || req;
          if (res.statusCode !== 204 && lastRequest.method !== \\"HEAD\\" && config.decompress !== false) {
            switch (res.headers[\\"content-encoding\\"]) {
              case \\"gzip\\":
              case \\"compress\\":
              case \\"deflate\\":
                stream = stream.pipe(zlib.createUnzip());
                delete res.headers[\\"content-encoding\\"];
                break;
            }
          }
          var response = {
            status: res.statusCode,
            statusText: res.statusMessage,
            headers: res.headers,
            config,
            request: lastRequest
          };
          if (config.responseType === \\"stream\\") {
            response.data = stream;
            settle(resolve, reject, response);
          } else {
            var responseBuffer = [];
            var totalResponseBytes = 0;
            stream.on(\\"data\\", function handleStreamData(chunk) {
              responseBuffer.push(chunk);
              totalResponseBytes += chunk.length;
              if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
                rejected = true;
                stream.destroy();
                reject(new AxiosError2(
                  \\"maxContentLength size of \\" + config.maxContentLength + \\" exceeded\\",
                  AxiosError2.ERR_BAD_RESPONSE,
                  config,
                  lastRequest
                ));
              }
            });
            stream.on(\\"aborted\\", function handlerStreamAborted() {
              if (rejected) {
                return;
              }
              stream.destroy();
              reject(new AxiosError2(
                \\"maxContentLength size of \\" + config.maxContentLength + \\" exceeded\\",
                AxiosError2.ERR_BAD_RESPONSE,
                config,
                lastRequest
              ));
            });
            stream.on(\\"error\\", function handleStreamError(err) {
              if (req.aborted)
                return;
              reject(AxiosError2.from(err, null, config, lastRequest));
            });
            stream.on(\\"end\\", function handleStreamEnd() {
              try {
                var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);
                if (config.responseType !== \\"arraybuffer\\") {
                  responseData = responseData.toString(config.responseEncoding);
                  if (!config.responseEncoding || config.responseEncoding === \\"utf8\\") {
                    responseData = utils.stripBOM(responseData);
                  }
                }
                response.data = responseData;
              } catch (err) {
                reject(AxiosError2.from(err, null, config, response.request, response));
              }
              settle(resolve, reject, response);
            });
          }
        });
        req.on(\\"error\\", function handleRequestError(err) {
          reject(AxiosError2.from(err, null, config, req));
        });
        req.on(\\"socket\\", function handleRequestSocket(socket) {
          socket.setKeepAlive(true, 1e3 * 60);
        });
        if (config.timeout) {
          var timeout = parseInt(config.timeout, 10);
          if (isNaN(timeout)) {
            reject(new AxiosError2(
              \\"error trying to parse \`config.timeout\` to int\\",
              AxiosError2.ERR_BAD_OPTION_VALUE,
              config,
              req
            ));
            return;
          }
          req.setTimeout(timeout, function handleRequestTimeout() {
            req.abort();
            var transitional = config.transitional || transitionalDefaults;
            reject(new AxiosError2(
              \\"timeout of \\" + timeout + \\"ms exceeded\\",
              transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
              config,
              req
            ));
          });
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (req.aborted)
              return;
            req.abort();
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isStream(data)) {
          data.on(\\"error\\", function handleStreamError(err) {
            reject(AxiosError2.from(err, config, null, req));
          }).pipe(req);
        } else {
          req.end(data);
        }
      });
    };
  }
});

// .yarn/cache/delayed-stream-npm-1.0.0-c5a4c4cc02-46fe6e83e2.zip/node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  \\".yarn/cache/delayed-stream-npm-1.0.0-c5a4c4cc02-46fe6e83e2.zip/node_modules/delayed-stream/lib/delayed_stream.js\\"(exports, module2) {
    var Stream = require(\\"stream\\").Stream;
    var util = require(\\"util\\");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option in options) {
        delayedStream[option] = options[option];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on(\\"error\\", function() {
      });
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, \\"readable\\", {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = true;
      this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this));
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === \\"data\\") {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message = \\"DelayedStream#maxDataSize of \\" + this.maxDataSize + \\" bytes exceeded.\\";
      this.emit(\\"error\\", new Error(message));
    };
  }
});

// .yarn/cache/combined-stream-npm-1.0.8-dc14d4a63a-49fa4aeb49.zip/node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  \\".yarn/cache/combined-stream-npm-1.0.8-dc14d4a63a-49fa4aeb49.zip/node_modules/combined-stream/lib/combined_stream.js\\"(exports, module2) {
    var util = require(\\"util\\");
    var Stream = require(\\"stream\\").Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options) {
      var combinedStream = new this();
      options = options || {};
      for (var option in options) {
        combinedStream[option] = options[option];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream) {
      return typeof stream !== \\"function\\" && typeof stream !== \\"string\\" && typeof stream !== \\"boolean\\" && typeof stream !== \\"number\\" && !Buffer.isBuffer(stream);
    };
    CombinedStream.prototype.append = function(stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams
          });
          stream.on(\\"data\\", this._checkDataSize.bind(this));
          stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
          stream.pause();
        }
      }
      this._streams.push(stream);
      return this;
    };
    CombinedStream.prototype.pipe = function(dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function() {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream = this._streams.shift();
      if (typeof stream == \\"undefined\\") {
        this.end();
        return;
      }
      if (typeof stream !== \\"function\\") {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(function(stream2) {
        var isStreamLike = CombinedStream.isStreamLike(stream2);
        if (isStreamLike) {
          stream2.on(\\"data\\", this._checkDataSize.bind(this));
          this._handleErrors(stream2);
        }
        this._pipeNext(stream2);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on(\\"end\\", this._getNext.bind(this));
        stream.pipe(this, { end: false });
        return;
      }
      var value = stream;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream) {
      var self = this;
      stream.on(\\"error\\", function(err) {
        self._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit(\\"data\\", data);
    };
    CombinedStream.prototype.pause = function() {
      if (!this.pauseStreams) {
        return;
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == \\"function\\")
        this._currentStream.pause();
      this.emit(\\"pause\\");
    };
    CombinedStream.prototype.resume = function() {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == \\"function\\")
        this._currentStream.resume();
      this.emit(\\"resume\\");
    };
    CombinedStream.prototype.end = function() {
      this._reset();
      this.emit(\\"end\\");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset();
      this.emit(\\"close\\");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message = \\"DelayedStream#maxDataSize of \\" + this.maxDataSize + \\" bytes exceeded.\\";
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self = this;
      this._streams.forEach(function(stream) {
        if (!stream.dataSize) {
          return;
        }
        self.dataSize += stream.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset();
      this.emit(\\"error\\", err);
    };
  }
});

// .yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/db.json
var require_db = __commonJS({
  \\".yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/db.json\\"(exports, module2) {
    module2.exports = {
      \\"application/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"application/3gpdash-qoe-report+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/3gpp-ims+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/3gpphal+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/3gpphalforms+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/a2l\\": {
        source: \\"iana\\"
      },
      \\"application/ace+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/activemessage\\": {
        source: \\"iana\\"
      },
      \\"application/activity+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-costmap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-costmapfilter+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-directory+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointcost+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointcostparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointprop+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointpropparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-error+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-networkmap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-networkmapfilter+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-updatestreamcontrol+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-updatestreamparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/aml\\": {
        source: \\"iana\\"
      },
      \\"application/andrew-inset\\": {
        source: \\"iana\\",
        extensions: [\\"ez\\"]
      },
      \\"application/applefile\\": {
        source: \\"iana\\"
      },
      \\"application/applixware\\": {
        source: \\"apache\\",
        extensions: [\\"aw\\"]
      },
      \\"application/at+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/atf\\": {
        source: \\"iana\\"
      },
      \\"application/atfx\\": {
        source: \\"iana\\"
      },
      \\"application/atom+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atom\\"]
      },
      \\"application/atomcat+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomcat\\"]
      },
      \\"application/atomdeleted+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomdeleted\\"]
      },
      \\"application/atomicmail\\": {
        source: \\"iana\\"
      },
      \\"application/atomsvc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomsvc\\"]
      },
      \\"application/atsc-dwd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dwd\\"]
      },
      \\"application/atsc-dynamic-event-message\\": {
        source: \\"iana\\"
      },
      \\"application/atsc-held+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"held\\"]
      },
      \\"application/atsc-rdt+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/atsc-rsat+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rsat\\"]
      },
      \\"application/atxml\\": {
        source: \\"iana\\"
      },
      \\"application/auth-policy+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/bacnet-xdd+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/batch-smtp\\": {
        source: \\"iana\\"
      },
      \\"application/bdoc\\": {
        compressible: false,
        extensions: [\\"bdoc\\"]
      },
      \\"application/beep+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/calendar+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/calendar+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xcs\\"]
      },
      \\"application/call-completion\\": {
        source: \\"iana\\"
      },
      \\"application/cals-1840\\": {
        source: \\"iana\\"
      },
      \\"application/captive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cbor\\": {
        source: \\"iana\\"
      },
      \\"application/cbor-seq\\": {
        source: \\"iana\\"
      },
      \\"application/cccex\\": {
        source: \\"iana\\"
      },
      \\"application/ccmp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ccxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ccxml\\"]
      },
      \\"application/cdfx+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cdfx\\"]
      },
      \\"application/cdmi-capability\\": {
        source: \\"iana\\",
        extensions: [\\"cdmia\\"]
      },
      \\"application/cdmi-container\\": {
        source: \\"iana\\",
        extensions: [\\"cdmic\\"]
      },
      \\"application/cdmi-domain\\": {
        source: \\"iana\\",
        extensions: [\\"cdmid\\"]
      },
      \\"application/cdmi-object\\": {
        source: \\"iana\\",
        extensions: [\\"cdmio\\"]
      },
      \\"application/cdmi-queue\\": {
        source: \\"iana\\",
        extensions: [\\"cdmiq\\"]
      },
      \\"application/cdni\\": {
        source: \\"iana\\"
      },
      \\"application/cea\\": {
        source: \\"iana\\"
      },
      \\"application/cea-2018+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cellml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cfw\\": {
        source: \\"iana\\"
      },
      \\"application/city+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/clr\\": {
        source: \\"iana\\"
      },
      \\"application/clue+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/clue_info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cms\\": {
        source: \\"iana\\"
      },
      \\"application/cnrp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/coap-group+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/coap-payload\\": {
        source: \\"iana\\"
      },
      \\"application/commonground\\": {
        source: \\"iana\\"
      },
      \\"application/conference-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cose\\": {
        source: \\"iana\\"
      },
      \\"application/cose-key\\": {
        source: \\"iana\\"
      },
      \\"application/cose-key-set\\": {
        source: \\"iana\\"
      },
      \\"application/cpl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cpl\\"]
      },
      \\"application/csrattrs\\": {
        source: \\"iana\\"
      },
      \\"application/csta+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cstadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/csvm+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cu-seeme\\": {
        source: \\"apache\\",
        extensions: [\\"cu\\"]
      },
      \\"application/cwt\\": {
        source: \\"iana\\"
      },
      \\"application/cybercash\\": {
        source: \\"iana\\"
      },
      \\"application/dart\\": {
        compressible: true
      },
      \\"application/dash+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpd\\"]
      },
      \\"application/dash-patch+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpp\\"]
      },
      \\"application/dashdelta\\": {
        source: \\"iana\\"
      },
      \\"application/davmount+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"davmount\\"]
      },
      \\"application/dca-rft\\": {
        source: \\"iana\\"
      },
      \\"application/dcd\\": {
        source: \\"iana\\"
      },
      \\"application/dec-dx\\": {
        source: \\"iana\\"
      },
      \\"application/dialog-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dicom\\": {
        source: \\"iana\\"
      },
      \\"application/dicom+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dicom+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dii\\": {
        source: \\"iana\\"
      },
      \\"application/dit\\": {
        source: \\"iana\\"
      },
      \\"application/dns\\": {
        source: \\"iana\\"
      },
      \\"application/dns+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dns-message\\": {
        source: \\"iana\\"
      },
      \\"application/docbook+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"dbk\\"]
      },
      \\"application/dots+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/dskpp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dssc+der\\": {
        source: \\"iana\\",
        extensions: [\\"dssc\\"]
      },
      \\"application/dssc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdssc\\"]
      },
      \\"application/dvcs\\": {
        source: \\"iana\\"
      },
      \\"application/ecmascript\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"es\\", \\"ecma\\"]
      },
      \\"application/edi-consent\\": {
        source: \\"iana\\"
      },
      \\"application/edi-x12\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/edifact\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/efi\\": {
        source: \\"iana\\"
      },
      \\"application/elm+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/elm+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.cap+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/emergencycalldata.comment+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.deviceinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.ecall.msd\\": {
        source: \\"iana\\"
      },
      \\"application/emergencycalldata.providerinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.serviceinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.subscriberinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.veds+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emma+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"emma\\"]
      },
      \\"application/emotionml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"emotionml\\"]
      },
      \\"application/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"application/epp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/epub+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"epub\\"]
      },
      \\"application/eshop\\": {
        source: \\"iana\\"
      },
      \\"application/exi\\": {
        source: \\"iana\\",
        extensions: [\\"exi\\"]
      },
      \\"application/expect-ct-report+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/express\\": {
        source: \\"iana\\",
        extensions: [\\"exp\\"]
      },
      \\"application/fastinfoset\\": {
        source: \\"iana\\"
      },
      \\"application/fastsoap\\": {
        source: \\"iana\\"
      },
      \\"application/fdt+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"fdt\\"]
      },
      \\"application/fhir+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/fhir+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/fido.trusted-apps+json\\": {
        compressible: true
      },
      \\"application/fits\\": {
        source: \\"iana\\"
      },
      \\"application/flexfec\\": {
        source: \\"iana\\"
      },
      \\"application/font-sfnt\\": {
        source: \\"iana\\"
      },
      \\"application/font-tdpfr\\": {
        source: \\"iana\\",
        extensions: [\\"pfr\\"]
      },
      \\"application/font-woff\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/framework-attributes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/geo+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"geojson\\"]
      },
      \\"application/geo+json-seq\\": {
        source: \\"iana\\"
      },
      \\"application/geopackage+sqlite3\\": {
        source: \\"iana\\"
      },
      \\"application/geoxacml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/gltf-buffer\\": {
        source: \\"iana\\"
      },
      \\"application/gml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"gml\\"]
      },
      \\"application/gpx+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"gpx\\"]
      },
      \\"application/gxf\\": {
        source: \\"apache\\",
        extensions: [\\"gxf\\"]
      },
      \\"application/gzip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"gz\\"]
      },
      \\"application/h224\\": {
        source: \\"iana\\"
      },
      \\"application/held+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/hjson\\": {
        extensions: [\\"hjson\\"]
      },
      \\"application/http\\": {
        source: \\"iana\\"
      },
      \\"application/hyperstudio\\": {
        source: \\"iana\\",
        extensions: [\\"stk\\"]
      },
      \\"application/ibe-key-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ibe-pkg-reply+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ibe-pp-data\\": {
        source: \\"iana\\"
      },
      \\"application/iges\\": {
        source: \\"iana\\"
      },
      \\"application/im-iscomposing+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/index\\": {
        source: \\"iana\\"
      },
      \\"application/index.cmd\\": {
        source: \\"iana\\"
      },
      \\"application/index.obj\\": {
        source: \\"iana\\"
      },
      \\"application/index.response\\": {
        source: \\"iana\\"
      },
      \\"application/index.vnd\\": {
        source: \\"iana\\"
      },
      \\"application/inkml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ink\\", \\"inkml\\"]
      },
      \\"application/iotp\\": {
        source: \\"iana\\"
      },
      \\"application/ipfix\\": {
        source: \\"iana\\",
        extensions: [\\"ipfix\\"]
      },
      \\"application/ipp\\": {
        source: \\"iana\\"
      },
      \\"application/isup\\": {
        source: \\"iana\\"
      },
      \\"application/its+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"its\\"]
      },
      \\"application/java-archive\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"jar\\", \\"war\\", \\"ear\\"]
      },
      \\"application/java-serialized-object\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"ser\\"]
      },
      \\"application/java-vm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"class\\"]
      },
      \\"application/javascript\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"js\\", \\"mjs\\"]
      },
      \\"application/jf2feed+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jose\\": {
        source: \\"iana\\"
      },
      \\"application/jose+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jrd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jscalendar+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"json\\", \\"map\\"]
      },
      \\"application/json-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/json-seq\\": {
        source: \\"iana\\"
      },
      \\"application/json5\\": {
        extensions: [\\"json5\\"]
      },
      \\"application/jsonml+json\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"jsonml\\"]
      },
      \\"application/jwk+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jwk-set+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jwt\\": {
        source: \\"iana\\"
      },
      \\"application/kpml-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/kpml-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ld+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"jsonld\\"]
      },
      \\"application/lgr+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lgr\\"]
      },
      \\"application/link-format\\": {
        source: \\"iana\\"
      },
      \\"application/load-control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/lost+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lostxml\\"]
      },
      \\"application/lostsync+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/lpf+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/lxf\\": {
        source: \\"iana\\"
      },
      \\"application/mac-binhex40\\": {
        source: \\"iana\\",
        extensions: [\\"hqx\\"]
      },
      \\"application/mac-compactpro\\": {
        source: \\"apache\\",
        extensions: [\\"cpt\\"]
      },
      \\"application/macwriteii\\": {
        source: \\"iana\\"
      },
      \\"application/mads+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mads\\"]
      },
      \\"application/manifest+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"webmanifest\\"]
      },
      \\"application/marc\\": {
        source: \\"iana\\",
        extensions: [\\"mrc\\"]
      },
      \\"application/marcxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mrcx\\"]
      },
      \\"application/mathematica\\": {
        source: \\"iana\\",
        extensions: [\\"ma\\", \\"nb\\", \\"mb\\"]
      },
      \\"application/mathml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mathml\\"]
      },
      \\"application/mathml-content+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mathml-presentation+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-associated-procedure-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-deregister+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-envelope+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-msk+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-msk-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-protection-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-reception-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-register+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-register-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-schedule+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-user-service-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbox\\": {
        source: \\"iana\\",
        extensions: [\\"mbox\\"]
      },
      \\"application/media-policy-dataset+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpf\\"]
      },
      \\"application/media_control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mediaservercontrol+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mscml\\"]
      },
      \\"application/merge-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/metalink+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"metalink\\"]
      },
      \\"application/metalink4+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"meta4\\"]
      },
      \\"application/mets+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mets\\"]
      },
      \\"application/mf4\\": {
        source: \\"iana\\"
      },
      \\"application/mikey\\": {
        source: \\"iana\\"
      },
      \\"application/mipc\\": {
        source: \\"iana\\"
      },
      \\"application/missing-blocks+cbor-seq\\": {
        source: \\"iana\\"
      },
      \\"application/mmt-aei+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"maei\\"]
      },
      \\"application/mmt-usd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"musd\\"]
      },
      \\"application/mods+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mods\\"]
      },
      \\"application/moss-keys\\": {
        source: \\"iana\\"
      },
      \\"application/moss-signature\\": {
        source: \\"iana\\"
      },
      \\"application/mosskey-data\\": {
        source: \\"iana\\"
      },
      \\"application/mosskey-request\\": {
        source: \\"iana\\"
      },
      \\"application/mp21\\": {
        source: \\"iana\\",
        extensions: [\\"m21\\", \\"mp21\\"]
      },
      \\"application/mp4\\": {
        source: \\"iana\\",
        extensions: [\\"mp4s\\", \\"m4p\\"]
      },
      \\"application/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"application/mpeg4-iod\\": {
        source: \\"iana\\"
      },
      \\"application/mpeg4-iod-xmt\\": {
        source: \\"iana\\"
      },
      \\"application/mrb-consumer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mrb-publish+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/msc-ivr+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/msc-mixer+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/msword\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"doc\\", \\"dot\\"]
      },
      \\"application/mud+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/multipart-core\\": {
        source: \\"iana\\"
      },
      \\"application/mxf\\": {
        source: \\"iana\\",
        extensions: [\\"mxf\\"]
      },
      \\"application/n-quads\\": {
        source: \\"iana\\",
        extensions: [\\"nq\\"]
      },
      \\"application/n-triples\\": {
        source: \\"iana\\",
        extensions: [\\"nt\\"]
      },
      \\"application/nasdata\\": {
        source: \\"iana\\"
      },
      \\"application/news-checkgroups\\": {
        source: \\"iana\\",
        charset: \\"US-ASCII\\"
      },
      \\"application/news-groupinfo\\": {
        source: \\"iana\\",
        charset: \\"US-ASCII\\"
      },
      \\"application/news-transmission\\": {
        source: \\"iana\\"
      },
      \\"application/nlsml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/node\\": {
        source: \\"iana\\",
        extensions: [\\"cjs\\"]
      },
      \\"application/nss\\": {
        source: \\"iana\\"
      },
      \\"application/oauth-authz-req+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/oblivious-dns-message\\": {
        source: \\"iana\\"
      },
      \\"application/ocsp-request\\": {
        source: \\"iana\\"
      },
      \\"application/ocsp-response\\": {
        source: \\"iana\\"
      },
      \\"application/octet-stream\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"bin\\", \\"dms\\", \\"lrf\\", \\"mar\\", \\"so\\", \\"dist\\", \\"distz\\", \\"pkg\\", \\"bpk\\", \\"dump\\", \\"elc\\", \\"deploy\\", \\"exe\\", \\"dll\\", \\"deb\\", \\"dmg\\", \\"iso\\", \\"img\\", \\"msi\\", \\"msp\\", \\"msm\\", \\"buffer\\"]
      },
      \\"application/oda\\": {
        source: \\"iana\\",
        extensions: [\\"oda\\"]
      },
      \\"application/odm+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/odx\\": {
        source: \\"iana\\"
      },
      \\"application/oebps-package+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"opf\\"]
      },
      \\"application/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ogx\\"]
      },
      \\"application/omdoc+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"omdoc\\"]
      },
      \\"application/onenote\\": {
        source: \\"apache\\",
        extensions: [\\"onetoc\\", \\"onetoc2\\", \\"onetmp\\", \\"onepkg\\"]
      },
      \\"application/opc-nodeset+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/oscore\\": {
        source: \\"iana\\"
      },
      \\"application/oxps\\": {
        source: \\"iana\\",
        extensions: [\\"oxps\\"]
      },
      \\"application/p21\\": {
        source: \\"iana\\"
      },
      \\"application/p21+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/p2p-overlay+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"relo\\"]
      },
      \\"application/parityfec\\": {
        source: \\"iana\\"
      },
      \\"application/passport\\": {
        source: \\"iana\\"
      },
      \\"application/patch-ops-error+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xer\\"]
      },
      \\"application/pdf\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pdf\\"]
      },
      \\"application/pdx\\": {
        source: \\"iana\\"
      },
      \\"application/pem-certificate-chain\\": {
        source: \\"iana\\"
      },
      \\"application/pgp-encrypted\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pgp\\"]
      },
      \\"application/pgp-keys\\": {
        source: \\"iana\\",
        extensions: [\\"asc\\"]
      },
      \\"application/pgp-signature\\": {
        source: \\"iana\\",
        extensions: [\\"asc\\", \\"sig\\"]
      },
      \\"application/pics-rules\\": {
        source: \\"apache\\",
        extensions: [\\"prf\\"]
      },
      \\"application/pidf+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/pidf-diff+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/pkcs10\\": {
        source: \\"iana\\",
        extensions: [\\"p10\\"]
      },
      \\"application/pkcs12\\": {
        source: \\"iana\\"
      },
      \\"application/pkcs7-mime\\": {
        source: \\"iana\\",
        extensions: [\\"p7m\\", \\"p7c\\"]
      },
      \\"application/pkcs7-signature\\": {
        source: \\"iana\\",
        extensions: [\\"p7s\\"]
      },
      \\"application/pkcs8\\": {
        source: \\"iana\\",
        extensions: [\\"p8\\"]
      },
      \\"application/pkcs8-encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/pkix-attr-cert\\": {
        source: \\"iana\\",
        extensions: [\\"ac\\"]
      },
      \\"application/pkix-cert\\": {
        source: \\"iana\\",
        extensions: [\\"cer\\"]
      },
      \\"application/pkix-crl\\": {
        source: \\"iana\\",
        extensions: [\\"crl\\"]
      },
      \\"application/pkix-pkipath\\": {
        source: \\"iana\\",
        extensions: [\\"pkipath\\"]
      },
      \\"application/pkixcmp\\": {
        source: \\"iana\\",
        extensions: [\\"pki\\"]
      },
      \\"application/pls+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"pls\\"]
      },
      \\"application/poc-settings+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/postscript\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ai\\", \\"eps\\", \\"ps\\"]
      },
      \\"application/ppsp-tracker+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/problem+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/problem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/provenance+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"provx\\"]
      },
      \\"application/prs.alvestrand.titrax-sheet\\": {
        source: \\"iana\\"
      },
      \\"application/prs.cww\\": {
        source: \\"iana\\",
        extensions: [\\"cww\\"]
      },
      \\"application/prs.cyn\\": {
        source: \\"iana\\",
        charset: \\"7-BIT\\"
      },
      \\"application/prs.hpub+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/prs.nprend\\": {
        source: \\"iana\\"
      },
      \\"application/prs.plucker\\": {
        source: \\"iana\\"
      },
      \\"application/prs.rdf-xml-crypt\\": {
        source: \\"iana\\"
      },
      \\"application/prs.xsf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/pskc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"pskcxml\\"]
      },
      \\"application/pvd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/qsig\\": {
        source: \\"iana\\"
      },
      \\"application/raml+yaml\\": {
        compressible: true,
        extensions: [\\"raml\\"]
      },
      \\"application/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"application/rdap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/rdf+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rdf\\", \\"owl\\"]
      },
      \\"application/reginfo+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rif\\"]
      },
      \\"application/relax-ng-compact-syntax\\": {
        source: \\"iana\\",
        extensions: [\\"rnc\\"]
      },
      \\"application/remote-printing\\": {
        source: \\"iana\\"
      },
      \\"application/reputon+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/resource-lists+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rl\\"]
      },
      \\"application/resource-lists-diff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rld\\"]
      },
      \\"application/rfc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/riscos\\": {
        source: \\"iana\\"
      },
      \\"application/rlmi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/rls-services+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rs\\"]
      },
      \\"application/route-apd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rapd\\"]
      },
      \\"application/route-s-tsid+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sls\\"]
      },
      \\"application/route-usd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rusd\\"]
      },
      \\"application/rpki-ghostbusters\\": {
        source: \\"iana\\",
        extensions: [\\"gbr\\"]
      },
      \\"application/rpki-manifest\\": {
        source: \\"iana\\",
        extensions: [\\"mft\\"]
      },
      \\"application/rpki-publication\\": {
        source: \\"iana\\"
      },
      \\"application/rpki-roa\\": {
        source: \\"iana\\",
        extensions: [\\"roa\\"]
      },
      \\"application/rpki-updown\\": {
        source: \\"iana\\"
      },
      \\"application/rsd+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"rsd\\"]
      },
      \\"application/rss+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"rss\\"]
      },
      \\"application/rtf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtf\\"]
      },
      \\"application/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"application/rtx\\": {
        source: \\"iana\\"
      },
      \\"application/samlassertion+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/samlmetadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sarif+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sarif-external-properties+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sbe\\": {
        source: \\"iana\\"
      },
      \\"application/sbml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sbml\\"]
      },
      \\"application/scaip+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/scim+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/scvp-cv-request\\": {
        source: \\"iana\\",
        extensions: [\\"scq\\"]
      },
      \\"application/scvp-cv-response\\": {
        source: \\"iana\\",
        extensions: [\\"scs\\"]
      },
      \\"application/scvp-vp-request\\": {
        source: \\"iana\\",
        extensions: [\\"spq\\"]
      },
      \\"application/scvp-vp-response\\": {
        source: \\"iana\\",
        extensions: [\\"spp\\"]
      },
      \\"application/sdp\\": {
        source: \\"iana\\",
        extensions: [\\"sdp\\"]
      },
      \\"application/secevent+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/senml+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/senml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/senml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"senmlx\\"]
      },
      \\"application/senml-etch+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/senml-etch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/senml-exi\\": {
        source: \\"iana\\"
      },
      \\"application/sensml+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/sensml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sensml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sensmlx\\"]
      },
      \\"application/sensml-exi\\": {
        source: \\"iana\\"
      },
      \\"application/sep+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sep-exi\\": {
        source: \\"iana\\"
      },
      \\"application/session-info\\": {
        source: \\"iana\\"
      },
      \\"application/set-payment\\": {
        source: \\"iana\\"
      },
      \\"application/set-payment-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"setpay\\"]
      },
      \\"application/set-registration\\": {
        source: \\"iana\\"
      },
      \\"application/set-registration-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"setreg\\"]
      },
      \\"application/sgml\\": {
        source: \\"iana\\"
      },
      \\"application/sgml-open-catalog\\": {
        source: \\"iana\\"
      },
      \\"application/shf+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"shf\\"]
      },
      \\"application/sieve\\": {
        source: \\"iana\\",
        extensions: [\\"siv\\", \\"sieve\\"]
      },
      \\"application/simple-filter+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/simple-message-summary\\": {
        source: \\"iana\\"
      },
      \\"application/simplesymbolcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/sipc\\": {
        source: \\"iana\\"
      },
      \\"application/slate\\": {
        source: \\"iana\\"
      },
      \\"application/smil\\": {
        source: \\"iana\\"
      },
      \\"application/smil+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"smi\\", \\"smil\\"]
      },
      \\"application/smpte336m\\": {
        source: \\"iana\\"
      },
      \\"application/soap+fastinfoset\\": {
        source: \\"iana\\"
      },
      \\"application/soap+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sparql-query\\": {
        source: \\"iana\\",
        extensions: [\\"rq\\"]
      },
      \\"application/sparql-results+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"srx\\"]
      },
      \\"application/spdx+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/spirits-event+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sql\\": {
        source: \\"iana\\"
      },
      \\"application/srgs\\": {
        source: \\"iana\\",
        extensions: [\\"gram\\"]
      },
      \\"application/srgs+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"grxml\\"]
      },
      \\"application/sru+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sru\\"]
      },
      \\"application/ssdl+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ssdl\\"]
      },
      \\"application/ssml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ssml\\"]
      },
      \\"application/stix+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/swid+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"swidtag\\"]
      },
      \\"application/tamp-apex-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-apex-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-community-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-community-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-error\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-sequence-adjust\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-sequence-adjust-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-status-query\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-status-response\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tar\\": {
        compressible: true
      },
      \\"application/taxii+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/td+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/tei+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tei\\", \\"teicorpus\\"]
      },
      \\"application/tetra_isi\\": {
        source: \\"iana\\"
      },
      \\"application/thraud+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tfi\\"]
      },
      \\"application/timestamp-query\\": {
        source: \\"iana\\"
      },
      \\"application/timestamp-reply\\": {
        source: \\"iana\\"
      },
      \\"application/timestamped-data\\": {
        source: \\"iana\\",
        extensions: [\\"tsd\\"]
      },
      \\"application/tlsrpt+gzip\\": {
        source: \\"iana\\"
      },
      \\"application/tlsrpt+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/tnauthlist\\": {
        source: \\"iana\\"
      },
      \\"application/token-introspection+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/toml\\": {
        compressible: true,
        extensions: [\\"toml\\"]
      },
      \\"application/trickle-ice-sdpfrag\\": {
        source: \\"iana\\"
      },
      \\"application/trig\\": {
        source: \\"iana\\",
        extensions: [\\"trig\\"]
      },
      \\"application/ttml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ttml\\"]
      },
      \\"application/tve-trigger\\": {
        source: \\"iana\\"
      },
      \\"application/tzif\\": {
        source: \\"iana\\"
      },
      \\"application/tzif-leap\\": {
        source: \\"iana\\"
      },
      \\"application/ubjson\\": {
        compressible: false,
        extensions: [\\"ubj\\"]
      },
      \\"application/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"application/urc-grpsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/urc-ressheet+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rsheet\\"]
      },
      \\"application/urc-targetdesc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"td\\"]
      },
      \\"application/urc-uisocketdesc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vcard+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vcard+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vemmi\\": {
        source: \\"iana\\"
      },
      \\"application/vividence.scriptfile\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.1000minds.decision-model+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"1km\\"]
      },
      \\"application/vnd.3gpp-prose+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp-prose-pc3ch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp-v2x-local-service-information\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.5gnas\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.access-transfer-events+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.bsf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.gmop+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.gtpc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.interworking-data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.lpp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mc-signalling-ear\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-payload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-signalling\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-floor-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-location-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-signed+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-ue-init-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-affiliation-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-location-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-transmission-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mid-call+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.ngap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.pfcp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.pic-bw-large\\": {
        source: \\"iana\\",
        extensions: [\\"plb\\"]
      },
      \\"application/vnd.3gpp.pic-bw-small\\": {
        source: \\"iana\\",
        extensions: [\\"psb\\"]
      },
      \\"application/vnd.3gpp.pic-bw-var\\": {
        source: \\"iana\\",
        extensions: [\\"pvb\\"]
      },
      \\"application/vnd.3gpp.s1ap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.sms+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.srvcc-ext+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.srvcc-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.state-and-event-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.ussd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp2.bcmcsinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp2.sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp2.tcap\\": {
        source: \\"iana\\",
        extensions: [\\"tcap\\"]
      },
      \\"application/vnd.3lightssoftware.imagescal\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3m.post-it-notes\\": {
        source: \\"iana\\",
        extensions: [\\"pwn\\"]
      },
      \\"application/vnd.accpac.simply.aso\\": {
        source: \\"iana\\",
        extensions: [\\"aso\\"]
      },
      \\"application/vnd.accpac.simply.imp\\": {
        source: \\"iana\\",
        extensions: [\\"imp\\"]
      },
      \\"application/vnd.acucobol\\": {
        source: \\"iana\\",
        extensions: [\\"acu\\"]
      },
      \\"application/vnd.acucorp\\": {
        source: \\"iana\\",
        extensions: [\\"atc\\", \\"acutc\\"]
      },
      \\"application/vnd.adobe.air-application-installer-package+zip\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"air\\"]
      },
      \\"application/vnd.adobe.flash.movie\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.adobe.formscentral.fcdt\\": {
        source: \\"iana\\",
        extensions: [\\"fcdt\\"]
      },
      \\"application/vnd.adobe.fxp\\": {
        source: \\"iana\\",
        extensions: [\\"fxp\\", \\"fxpl\\"]
      },
      \\"application/vnd.adobe.partial-upload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.adobe.xdp+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdp\\"]
      },
      \\"application/vnd.adobe.xfdf\\": {
        source: \\"iana\\",
        extensions: [\\"xfdf\\"]
      },
      \\"application/vnd.aether.imp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.afplinedata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.afplinedata-pagedef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.cmoca-cmresource\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-charset\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-codedfont\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-codepage\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-cmtable\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-formdef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-mediummap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-objectcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-overlay\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-pagesegment\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.age\\": {
        source: \\"iana\\",
        extensions: [\\"age\\"]
      },
      \\"application/vnd.ah-barcode\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ahead.space\\": {
        source: \\"iana\\",
        extensions: [\\"ahead\\"]
      },
      \\"application/vnd.airzip.filesecure.azf\\": {
        source: \\"iana\\",
        extensions: [\\"azf\\"]
      },
      \\"application/vnd.airzip.filesecure.azs\\": {
        source: \\"iana\\",
        extensions: [\\"azs\\"]
      },
      \\"application/vnd.amadeus+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.amazon.ebook\\": {
        source: \\"apache\\",
        extensions: [\\"azw\\"]
      },
      \\"application/vnd.amazon.mobi8-ebook\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.americandynamics.acc\\": {
        source: \\"iana\\",
        extensions: [\\"acc\\"]
      },
      \\"application/vnd.amiga.ami\\": {
        source: \\"iana\\",
        extensions: [\\"ami\\"]
      },
      \\"application/vnd.amundsen.maze+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.android.ota\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.android.package-archive\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"apk\\"]
      },
      \\"application/vnd.anki\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.anser-web-certificate-issue-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"cii\\"]
      },
      \\"application/vnd.anser-web-funds-transfer-initiation\\": {
        source: \\"apache\\",
        extensions: [\\"fti\\"]
      },
      \\"application/vnd.antix.game-component\\": {
        source: \\"iana\\",
        extensions: [\\"atx\\"]
      },
      \\"application/vnd.apache.arrow.file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.arrow.stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.binary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.compact\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.json\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.api+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.aplextor.warrp+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.apothekende.reservation+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.apple.installer+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpkg\\"]
      },
      \\"application/vnd.apple.keynote\\": {
        source: \\"iana\\",
        extensions: [\\"key\\"]
      },
      \\"application/vnd.apple.mpegurl\\": {
        source: \\"iana\\",
        extensions: [\\"m3u8\\"]
      },
      \\"application/vnd.apple.numbers\\": {
        source: \\"iana\\",
        extensions: [\\"numbers\\"]
      },
      \\"application/vnd.apple.pages\\": {
        source: \\"iana\\",
        extensions: [\\"pages\\"]
      },
      \\"application/vnd.apple.pkpass\\": {
        compressible: false,
        extensions: [\\"pkpass\\"]
      },
      \\"application/vnd.arastra.swi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.aristanetworks.swi\\": {
        source: \\"iana\\",
        extensions: [\\"swi\\"]
      },
      \\"application/vnd.artisan+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.artsquare\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.astraea-software.iota\\": {
        source: \\"iana\\",
        extensions: [\\"iota\\"]
      },
      \\"application/vnd.audiograph\\": {
        source: \\"iana\\",
        extensions: [\\"aep\\"]
      },
      \\"application/vnd.autopackage\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.avalon+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.avistar+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.balsamiq.bmml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"bmml\\"]
      },
      \\"application/vnd.balsamiq.bmpr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.banana-accounting\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.error\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.msg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.msg+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.bekitzur-stech+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.bint.med-content\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.biopax.rdf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.blink-idb-value-wrapper\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.blueice.multipass\\": {
        source: \\"iana\\",
        extensions: [\\"mpm\\"]
      },
      \\"application/vnd.bluetooth.ep.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bluetooth.le.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bmi\\": {
        source: \\"iana\\",
        extensions: [\\"bmi\\"]
      },
      \\"application/vnd.bpf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bpf3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.businessobjects\\": {
        source: \\"iana\\",
        extensions: [\\"rep\\"]
      },
      \\"application/vnd.byu.uapi+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cab-jscript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.canon-cpdl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.canon-lips\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.capasystems-pg+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cendio.thinlinc.clientconf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.century-systems.tcp_stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.chemdraw+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cdxml\\"]
      },
      \\"application/vnd.chess-pgn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.chipnuts.karaoke-mmd\\": {
        source: \\"iana\\",
        extensions: [\\"mmd\\"]
      },
      \\"application/vnd.ciedi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cinderella\\": {
        source: \\"iana\\",
        extensions: [\\"cdy\\"]
      },
      \\"application/vnd.cirpack.isdn-ext\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.citationstyles.style+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"csl\\"]
      },
      \\"application/vnd.claymore\\": {
        source: \\"iana\\",
        extensions: [\\"cla\\"]
      },
      \\"application/vnd.cloanto.rp9\\": {
        source: \\"iana\\",
        extensions: [\\"rp9\\"]
      },
      \\"application/vnd.clonk.c4group\\": {
        source: \\"iana\\",
        extensions: [\\"c4g\\", \\"c4d\\", \\"c4f\\", \\"c4p\\", \\"c4u\\"]
      },
      \\"application/vnd.cluetrust.cartomobile-config\\": {
        source: \\"iana\\",
        extensions: [\\"c11amc\\"]
      },
      \\"application/vnd.cluetrust.cartomobile-config-pkg\\": {
        source: \\"iana\\",
        extensions: [\\"c11amz\\"]
      },
      \\"application/vnd.coffeescript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.document\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.document-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.presentation\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.presentation-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.spreadsheet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.spreadsheet-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collection+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.collection.doc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.collection.next+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.comicbook+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.comicbook-rar\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.commerce-battelle\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.commonspace\\": {
        source: \\"iana\\",
        extensions: [\\"csp\\"]
      },
      \\"application/vnd.contact.cmsg\\": {
        source: \\"iana\\",
        extensions: [\\"cdbcmsg\\"]
      },
      \\"application/vnd.coreos.ignition+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cosmocaller\\": {
        source: \\"iana\\",
        extensions: [\\"cmc\\"]
      },
      \\"application/vnd.crick.clicker\\": {
        source: \\"iana\\",
        extensions: [\\"clkx\\"]
      },
      \\"application/vnd.crick.clicker.keyboard\\": {
        source: \\"iana\\",
        extensions: [\\"clkk\\"]
      },
      \\"application/vnd.crick.clicker.palette\\": {
        source: \\"iana\\",
        extensions: [\\"clkp\\"]
      },
      \\"application/vnd.crick.clicker.template\\": {
        source: \\"iana\\",
        extensions: [\\"clkt\\"]
      },
      \\"application/vnd.crick.clicker.wordbank\\": {
        source: \\"iana\\",
        extensions: [\\"clkw\\"]
      },
      \\"application/vnd.criticaltools.wbs+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wbs\\"]
      },
      \\"application/vnd.cryptii.pipe+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.crypto-shade-file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cryptomator.encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cryptomator.vault\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ctc-posml\\": {
        source: \\"iana\\",
        extensions: [\\"pml\\"]
      },
      \\"application/vnd.ctct.ws+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cups-pdf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-postscript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-ppd\\": {
        source: \\"iana\\",
        extensions: [\\"ppd\\"]
      },
      \\"application/vnd.cups-raster\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-raw\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.curl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.curl.car\\": {
        source: \\"apache\\",
        extensions: [\\"car\\"]
      },
      \\"application/vnd.curl.pcurl\\": {
        source: \\"apache\\",
        extensions: [\\"pcurl\\"]
      },
      \\"application/vnd.cyan.dean.root+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cybank\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cyclonedx+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cyclonedx+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.d2l.coursepackage1p0+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.d3m-dataset\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.d3m-problem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dart\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dart\\"]
      },
      \\"application/vnd.data-vision.rdz\\": {
        source: \\"iana\\",
        extensions: [\\"rdz\\"]
      },
      \\"application/vnd.datapackage+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dataresource+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dbf\\": {
        source: \\"iana\\",
        extensions: [\\"dbf\\"]
      },
      \\"application/vnd.debian.binary-package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dece.data\\": {
        source: \\"iana\\",
        extensions: [\\"uvf\\", \\"uvvf\\", \\"uvd\\", \\"uvvd\\"]
      },
      \\"application/vnd.dece.ttml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uvt\\", \\"uvvt\\"]
      },
      \\"application/vnd.dece.unspecified\\": {
        source: \\"iana\\",
        extensions: [\\"uvx\\", \\"uvvx\\"]
      },
      \\"application/vnd.dece.zip\\": {
        source: \\"iana\\",
        extensions: [\\"uvz\\", \\"uvvz\\"]
      },
      \\"application/vnd.denovo.fcselayout-link\\": {
        source: \\"iana\\",
        extensions: [\\"fe_launch\\"]
      },
      \\"application/vnd.desmume.movie\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dir-bi.plate-dl-nosuffix\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dm.delegation+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dna\\": {
        source: \\"iana\\",
        extensions: [\\"dna\\"]
      },
      \\"application/vnd.document+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dolby.mlp\\": {
        source: \\"apache\\",
        extensions: [\\"mlp\\"]
      },
      \\"application/vnd.dolby.mobile.1\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dolby.mobile.2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.doremir.scorecloud-binary-document\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dpgraph\\": {
        source: \\"iana\\",
        extensions: [\\"dpg\\"]
      },
      \\"application/vnd.dreamfactory\\": {
        source: \\"iana\\",
        extensions: [\\"dfac\\"]
      },
      \\"application/vnd.drive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ds-keypoint\\": {
        source: \\"apache\\",
        extensions: [\\"kpxx\\"]
      },
      \\"application/vnd.dtg.local\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dtg.local.flash\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dtg.local.html\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ait\\": {
        source: \\"iana\\",
        extensions: [\\"ait\\"]
      },
      \\"application/vnd.dvb.dvbisl+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.dvbj\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.esgcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcdftnotifaccess\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgaccess\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgaccess2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgpdd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcroaming\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.iptv.alfec-base\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.iptv.alfec-enhancement\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.notif-aggregate-root+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-container+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-generic+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-msglist+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-registration-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-registration-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-init+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.pfr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.service\\": {
        source: \\"iana\\",
        extensions: [\\"svc\\"]
      },
      \\"application/vnd.dxr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dynageo\\": {
        source: \\"iana\\",
        extensions: [\\"geo\\"]
      },
      \\"application/vnd.dzr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.easykaraoke.cdgdownload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecdis-update\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecip.rlp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eclipse.ditto+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ecowin.chart\\": {
        source: \\"iana\\",
        extensions: [\\"mag\\"]
      },
      \\"application/vnd.ecowin.filerequest\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.fileupdate\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.series\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.seriesrequest\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.seriesupdate\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.efi.img\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.efi.iso\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.emclient.accessrequest+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.enliven\\": {
        source: \\"iana\\",
        extensions: [\\"nml\\"]
      },
      \\"application/vnd.enphase.envoy\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eprints.data+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.epson.esf\\": {
        source: \\"iana\\",
        extensions: [\\"esf\\"]
      },
      \\"application/vnd.epson.msf\\": {
        source: \\"iana\\",
        extensions: [\\"msf\\"]
      },
      \\"application/vnd.epson.quickanime\\": {
        source: \\"iana\\",
        extensions: [\\"qam\\"]
      },
      \\"application/vnd.epson.salt\\": {
        source: \\"iana\\",
        extensions: [\\"slt\\"]
      },
      \\"application/vnd.epson.ssf\\": {
        source: \\"iana\\",
        extensions: [\\"ssf\\"]
      },
      \\"application/vnd.ericsson.quickcall\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.espass-espass+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.eszigno3+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"es3\\", \\"et3\\"]
      },
      \\"application/vnd.etsi.aoc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.asic-e+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.etsi.asic-s+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.etsi.cug+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvcommand+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvdiscovery+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-bc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-cod+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-npvr+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvservice+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsync+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvueprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.mcid+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.mheg5\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.etsi.overload-control-policy-dataset+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.pstn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.sci+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.simservs+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.timestamp-token\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.etsi.tsl+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.tsl.der\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eu.kasparian.car+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.eudora.data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.profile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.settings\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.theme\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.exstream-empower+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.exstream-package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ezpix-album\\": {
        source: \\"iana\\",
        extensions: [\\"ez2\\"]
      },
      \\"application/vnd.ezpix-package\\": {
        source: \\"iana\\",
        extensions: [\\"ez3\\"]
      },
      \\"application/vnd.f-secure.mobile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.familysearch.gedcom+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.fastcopy-disk-image\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fdf\\": {
        source: \\"iana\\",
        extensions: [\\"fdf\\"]
      },
      \\"application/vnd.fdsn.mseed\\": {
        source: \\"iana\\",
        extensions: [\\"mseed\\"]
      },
      \\"application/vnd.fdsn.seed\\": {
        source: \\"iana\\",
        extensions: [\\"seed\\", \\"dataless\\"]
      },
      \\"application/vnd.ffsns\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ficlab.flb+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.filmit.zfc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fints\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.firemonkeys.cloudcell\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.flographit\\": {
        source: \\"iana\\",
        extensions: [\\"gph\\"]
      },
      \\"application/vnd.fluxtime.clip\\": {
        source: \\"iana\\",
        extensions: [\\"ftc\\"]
      },
      \\"application/vnd.font-fontforge-sfd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.framemaker\\": {
        source: \\"iana\\",
        extensions: [\\"fm\\", \\"frame\\", \\"maker\\", \\"book\\"]
      },
      \\"application/vnd.frogans.fnc\\": {
        source: \\"iana\\",
        extensions: [\\"fnc\\"]
      },
      \\"application/vnd.frogans.ltf\\": {
        source: \\"iana\\",
        extensions: [\\"ltf\\"]
      },
      \\"application/vnd.fsc.weblaunch\\": {
        source: \\"iana\\",
        extensions: [\\"fsc\\"]
      },
      \\"application/vnd.fujifilm.fb.docuworks\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.docuworks.binder\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.docuworks.container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.jfi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.fujitsu.oasys\\": {
        source: \\"iana\\",
        extensions: [\\"oas\\"]
      },
      \\"application/vnd.fujitsu.oasys2\\": {
        source: \\"iana\\",
        extensions: [\\"oa2\\"]
      },
      \\"application/vnd.fujitsu.oasys3\\": {
        source: \\"iana\\",
        extensions: [\\"oa3\\"]
      },
      \\"application/vnd.fujitsu.oasysgp\\": {
        source: \\"iana\\",
        extensions: [\\"fg5\\"]
      },
      \\"application/vnd.fujitsu.oasysprs\\": {
        source: \\"iana\\",
        extensions: [\\"bh2\\"]
      },
      \\"application/vnd.fujixerox.art-ex\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.art4\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.ddd\\": {
        source: \\"iana\\",
        extensions: [\\"ddd\\"]
      },
      \\"application/vnd.fujixerox.docuworks\\": {
        source: \\"iana\\",
        extensions: [\\"xdw\\"]
      },
      \\"application/vnd.fujixerox.docuworks.binder\\": {
        source: \\"iana\\",
        extensions: [\\"xbd\\"]
      },
      \\"application/vnd.fujixerox.docuworks.container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.hbpl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fut-misnet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.futoin+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.futoin+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.fuzzysheet\\": {
        source: \\"iana\\",
        extensions: [\\"fzs\\"]
      },
      \\"application/vnd.genomatix.tuxedo\\": {
        source: \\"iana\\",
        extensions: [\\"txd\\"]
      },
      \\"application/vnd.gentics.grd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geo+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geocube+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geogebra.file\\": {
        source: \\"iana\\",
        extensions: [\\"ggb\\"]
      },
      \\"application/vnd.geogebra.slides\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.geogebra.tool\\": {
        source: \\"iana\\",
        extensions: [\\"ggt\\"]
      },
      \\"application/vnd.geometry-explorer\\": {
        source: \\"iana\\",
        extensions: [\\"gex\\", \\"gre\\"]
      },
      \\"application/vnd.geonext\\": {
        source: \\"iana\\",
        extensions: [\\"gxt\\"]
      },
      \\"application/vnd.geoplan\\": {
        source: \\"iana\\",
        extensions: [\\"g2w\\"]
      },
      \\"application/vnd.geospace\\": {
        source: \\"iana\\",
        extensions: [\\"g3w\\"]
      },
      \\"application/vnd.gerber\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.globalplatform.card-content-mgt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.globalplatform.card-content-mgt-response\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.gmx\\": {
        source: \\"iana\\",
        extensions: [\\"gmx\\"]
      },
      \\"application/vnd.google-apps.document\\": {
        compressible: false,
        extensions: [\\"gdoc\\"]
      },
      \\"application/vnd.google-apps.presentation\\": {
        compressible: false,
        extensions: [\\"gslides\\"]
      },
      \\"application/vnd.google-apps.spreadsheet\\": {
        compressible: false,
        extensions: [\\"gsheet\\"]
      },
      \\"application/vnd.google-earth.kml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"kml\\"]
      },
      \\"application/vnd.google-earth.kmz\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"kmz\\"]
      },
      \\"application/vnd.gov.sk.e-form+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.gov.sk.e-form+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.gov.sk.xmldatacontainer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.grafeq\\": {
        source: \\"iana\\",
        extensions: [\\"gqf\\", \\"gqs\\"]
      },
      \\"application/vnd.gridmp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.groove-account\\": {
        source: \\"iana\\",
        extensions: [\\"gac\\"]
      },
      \\"application/vnd.groove-help\\": {
        source: \\"iana\\",
        extensions: [\\"ghf\\"]
      },
      \\"application/vnd.groove-identity-message\\": {
        source: \\"iana\\",
        extensions: [\\"gim\\"]
      },
      \\"application/vnd.groove-injector\\": {
        source: \\"iana\\",
        extensions: [\\"grv\\"]
      },
      \\"application/vnd.groove-tool-message\\": {
        source: \\"iana\\",
        extensions: [\\"gtm\\"]
      },
      \\"application/vnd.groove-tool-template\\": {
        source: \\"iana\\",
        extensions: [\\"tpl\\"]
      },
      \\"application/vnd.groove-vcard\\": {
        source: \\"iana\\",
        extensions: [\\"vcg\\"]
      },
      \\"application/vnd.hal+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hal+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"hal\\"]
      },
      \\"application/vnd.handheld-entertainment+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"zmm\\"]
      },
      \\"application/vnd.hbci\\": {
        source: \\"iana\\",
        extensions: [\\"hbci\\"]
      },
      \\"application/vnd.hc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hcl-bireports\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.hdt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.heroku+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hhe.lesson-player\\": {
        source: \\"iana\\",
        extensions: [\\"les\\"]
      },
      \\"application/vnd.hl7cda+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.hl7v2+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.hp-hpgl\\": {
        source: \\"iana\\",
        extensions: [\\"hpgl\\"]
      },
      \\"application/vnd.hp-hpid\\": {
        source: \\"iana\\",
        extensions: [\\"hpid\\"]
      },
      \\"application/vnd.hp-hps\\": {
        source: \\"iana\\",
        extensions: [\\"hps\\"]
      },
      \\"application/vnd.hp-jlyt\\": {
        source: \\"iana\\",
        extensions: [\\"jlt\\"]
      },
      \\"application/vnd.hp-pcl\\": {
        source: \\"iana\\",
        extensions: [\\"pcl\\"]
      },
      \\"application/vnd.hp-pclxl\\": {
        source: \\"iana\\",
        extensions: [\\"pclxl\\"]
      },
      \\"application/vnd.httphone\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.hydrostatix.sof-data\\": {
        source: \\"iana\\",
        extensions: [\\"sfd-hdstx\\"]
      },
      \\"application/vnd.hyper+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hyper-item+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hyperdrive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hzn-3d-crossword\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.afplinedata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.electronic-media\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.minipay\\": {
        source: \\"iana\\",
        extensions: [\\"mpy\\"]
      },
      \\"application/vnd.ibm.modcap\\": {
        source: \\"iana\\",
        extensions: [\\"afp\\", \\"listafp\\", \\"list3820\\"]
      },
      \\"application/vnd.ibm.rights-management\\": {
        source: \\"iana\\",
        extensions: [\\"irm\\"]
      },
      \\"application/vnd.ibm.secure-container\\": {
        source: \\"iana\\",
        extensions: [\\"sc\\"]
      },
      \\"application/vnd.iccprofile\\": {
        source: \\"iana\\",
        extensions: [\\"icc\\", \\"icm\\"]
      },
      \\"application/vnd.ieee.1905\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.igloader\\": {
        source: \\"iana\\",
        extensions: [\\"igl\\"]
      },
      \\"application/vnd.imagemeter.folder+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.imagemeter.image+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.immervision-ivp\\": {
        source: \\"iana\\",
        extensions: [\\"ivp\\"]
      },
      \\"application/vnd.immervision-ivu\\": {
        source: \\"iana\\",
        extensions: [\\"ivu\\"]
      },
      \\"application/vnd.ims.imsccv1p1\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.imsccv1p2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.imsccv1p3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.lis.v2.result+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolconsumerprofile+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolproxy+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolproxy.id+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolsettings+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolsettings.simple+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.informedcontrol.rms+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.informix-visionary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.infotech.project\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.infotech.project+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.innopath.wamp.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.insors.igm\\": {
        source: \\"iana\\",
        extensions: [\\"igm\\"]
      },
      \\"application/vnd.intercon.formnet\\": {
        source: \\"iana\\",
        extensions: [\\"xpw\\", \\"xpx\\"]
      },
      \\"application/vnd.intergeo\\": {
        source: \\"iana\\",
        extensions: [\\"i2g\\"]
      },
      \\"application/vnd.intertrust.digibox\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.intertrust.nncp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.intu.qbo\\": {
        source: \\"iana\\",
        extensions: [\\"qbo\\"]
      },
      \\"application/vnd.intu.qfx\\": {
        source: \\"iana\\",
        extensions: [\\"qfx\\"]
      },
      \\"application/vnd.iptc.g2.catalogitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.conceptitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.knowledgeitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.newsitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.newsmessage+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.packageitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.planningitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ipunplugged.rcprofile\\": {
        source: \\"iana\\",
        extensions: [\\"rcprofile\\"]
      },
      \\"application/vnd.irepository.package+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"irp\\"]
      },
      \\"application/vnd.is-xpr\\": {
        source: \\"iana\\",
        extensions: [\\"xpr\\"]
      },
      \\"application/vnd.isac.fcs\\": {
        source: \\"iana\\",
        extensions: [\\"fcs\\"]
      },
      \\"application/vnd.iso11783-10+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.jam\\": {
        source: \\"iana\\",
        extensions: [\\"jam\\"]
      },
      \\"application/vnd.japannet-directory-service\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-jpnstore-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-payment-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-registration\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-registration-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-setstore-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-verification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-verification-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.jcp.javame.midlet-rms\\": {
        source: \\"iana\\",
        extensions: [\\"rms\\"]
      },
      \\"application/vnd.jisp\\": {
        source: \\"iana\\",
        extensions: [\\"jisp\\"]
      },
      \\"application/vnd.joost.joda-archive\\": {
        source: \\"iana\\",
        extensions: [\\"joda\\"]
      },
      \\"application/vnd.jsk.isdn-ngn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.kahootz\\": {
        source: \\"iana\\",
        extensions: [\\"ktz\\", \\"ktr\\"]
      },
      \\"application/vnd.kde.karbon\\": {
        source: \\"iana\\",
        extensions: [\\"karbon\\"]
      },
      \\"application/vnd.kde.kchart\\": {
        source: \\"iana\\",
        extensions: [\\"chrt\\"]
      },
      \\"application/vnd.kde.kformula\\": {
        source: \\"iana\\",
        extensions: [\\"kfo\\"]
      },
      \\"application/vnd.kde.kivio\\": {
        source: \\"iana\\",
        extensions: [\\"flw\\"]
      },
      \\"application/vnd.kde.kontour\\": {
        source: \\"iana\\",
        extensions: [\\"kon\\"]
      },
      \\"application/vnd.kde.kpresenter\\": {
        source: \\"iana\\",
        extensions: [\\"kpr\\", \\"kpt\\"]
      },
      \\"application/vnd.kde.kspread\\": {
        source: \\"iana\\",
        extensions: [\\"ksp\\"]
      },
      \\"application/vnd.kde.kword\\": {
        source: \\"iana\\",
        extensions: [\\"kwd\\", \\"kwt\\"]
      },
      \\"application/vnd.kenameaapp\\": {
        source: \\"iana\\",
        extensions: [\\"htke\\"]
      },
      \\"application/vnd.kidspiration\\": {
        source: \\"iana\\",
        extensions: [\\"kia\\"]
      },
      \\"application/vnd.kinar\\": {
        source: \\"iana\\",
        extensions: [\\"kne\\", \\"knp\\"]
      },
      \\"application/vnd.koan\\": {
        source: \\"iana\\",
        extensions: [\\"skp\\", \\"skd\\", \\"skt\\", \\"skm\\"]
      },
      \\"application/vnd.kodak-descriptor\\": {
        source: \\"iana\\",
        extensions: [\\"sse\\"]
      },
      \\"application/vnd.las\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.las.las+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.las.las+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lasxml\\"]
      },
      \\"application/vnd.laszip\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.leap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.liberty-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.llamagraphics.life-balance.desktop\\": {
        source: \\"iana\\",
        extensions: [\\"lbd\\"]
      },
      \\"application/vnd.llamagraphics.life-balance.exchange+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lbe\\"]
      },
      \\"application/vnd.logipipe.circuit+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.loom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.lotus-1-2-3\\": {
        source: \\"iana\\",
        extensions: [\\"123\\"]
      },
      \\"application/vnd.lotus-approach\\": {
        source: \\"iana\\",
        extensions: [\\"apr\\"]
      },
      \\"application/vnd.lotus-freelance\\": {
        source: \\"iana\\",
        extensions: [\\"pre\\"]
      },
      \\"application/vnd.lotus-notes\\": {
        source: \\"iana\\",
        extensions: [\\"nsf\\"]
      },
      \\"application/vnd.lotus-organizer\\": {
        source: \\"iana\\",
        extensions: [\\"org\\"]
      },
      \\"application/vnd.lotus-screencam\\": {
        source: \\"iana\\",
        extensions: [\\"scm\\"]
      },
      \\"application/vnd.lotus-wordpro\\": {
        source: \\"iana\\",
        extensions: [\\"lwp\\"]
      },
      \\"application/vnd.macports.portpkg\\": {
        source: \\"iana\\",
        extensions: [\\"portpkg\\"]
      },
      \\"application/vnd.mapbox-vector-tile\\": {
        source: \\"iana\\",
        extensions: [\\"mvt\\"]
      },
      \\"application/vnd.marlin.drm.actiontoken+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.conftoken+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.license+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.mdcf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mason+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.maxar.archive.3tz+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.maxmind.maxmind-db\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mcd\\": {
        source: \\"iana\\",
        extensions: [\\"mcd\\"]
      },
      \\"application/vnd.medcalcdata\\": {
        source: \\"iana\\",
        extensions: [\\"mc1\\"]
      },
      \\"application/vnd.mediastation.cdkey\\": {
        source: \\"iana\\",
        extensions: [\\"cdkey\\"]
      },
      \\"application/vnd.meridian-slingshot\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mfer\\": {
        source: \\"iana\\",
        extensions: [\\"mwf\\"]
      },
      \\"application/vnd.mfmp\\": {
        source: \\"iana\\",
        extensions: [\\"mfm\\"]
      },
      \\"application/vnd.micro+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.micrografx.flo\\": {
        source: \\"iana\\",
        extensions: [\\"flo\\"]
      },
      \\"application/vnd.micrografx.igx\\": {
        source: \\"iana\\",
        extensions: [\\"igx\\"]
      },
      \\"application/vnd.microsoft.portable-executable\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.microsoft.windows.thumbnail-cache\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.miele+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.mif\\": {
        source: \\"iana\\",
        extensions: [\\"mif\\"]
      },
      \\"application/vnd.minisoft-hp3000-save\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mitsubishi.misty-guard.trustweb\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mobius.daf\\": {
        source: \\"iana\\",
        extensions: [\\"daf\\"]
      },
      \\"application/vnd.mobius.dis\\": {
        source: \\"iana\\",
        extensions: [\\"dis\\"]
      },
      \\"application/vnd.mobius.mbk\\": {
        source: \\"iana\\",
        extensions: [\\"mbk\\"]
      },
      \\"application/vnd.mobius.mqy\\": {
        source: \\"iana\\",
        extensions: [\\"mqy\\"]
      },
      \\"application/vnd.mobius.msl\\": {
        source: \\"iana\\",
        extensions: [\\"msl\\"]
      },
      \\"application/vnd.mobius.plc\\": {
        source: \\"iana\\",
        extensions: [\\"plc\\"]
      },
      \\"application/vnd.mobius.txf\\": {
        source: \\"iana\\",
        extensions: [\\"txf\\"]
      },
      \\"application/vnd.mophun.application\\": {
        source: \\"iana\\",
        extensions: [\\"mpn\\"]
      },
      \\"application/vnd.mophun.certificate\\": {
        source: \\"iana\\",
        extensions: [\\"mpc\\"]
      },
      \\"application/vnd.motorola.flexsuite\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.adsi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.fis\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.gotap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.kmr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.ttc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.wem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.iprm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mozilla.xul+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xul\\"]
      },
      \\"application/vnd.ms-3mfdocument\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-artgalry\\": {
        source: \\"iana\\",
        extensions: [\\"cil\\"]
      },
      \\"application/vnd.ms-asf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-cab-compressed\\": {
        source: \\"iana\\",
        extensions: [\\"cab\\"]
      },
      \\"application/vnd.ms-color.iccprofile\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.ms-excel\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xls\\", \\"xlm\\", \\"xla\\", \\"xlc\\", \\"xlt\\", \\"xlw\\"]
      },
      \\"application/vnd.ms-excel.addin.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlam\\"]
      },
      \\"application/vnd.ms-excel.sheet.binary.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlsb\\"]
      },
      \\"application/vnd.ms-excel.sheet.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlsm\\"]
      },
      \\"application/vnd.ms-excel.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xltm\\"]
      },
      \\"application/vnd.ms-fontobject\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"eot\\"]
      },
      \\"application/vnd.ms-htmlhelp\\": {
        source: \\"iana\\",
        extensions: [\\"chm\\"]
      },
      \\"application/vnd.ms-ims\\": {
        source: \\"iana\\",
        extensions: [\\"ims\\"]
      },
      \\"application/vnd.ms-lrm\\": {
        source: \\"iana\\",
        extensions: [\\"lrm\\"]
      },
      \\"application/vnd.ms-office.activex+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-officetheme\\": {
        source: \\"iana\\",
        extensions: [\\"thmx\\"]
      },
      \\"application/vnd.ms-opentype\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/vnd.ms-outlook\\": {
        compressible: false,
        extensions: [\\"msg\\"]
      },
      \\"application/vnd.ms-package.obfuscated-opentype\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.ms-pki.seccat\\": {
        source: \\"apache\\",
        extensions: [\\"cat\\"]
      },
      \\"application/vnd.ms-pki.stl\\": {
        source: \\"apache\\",
        extensions: [\\"stl\\"]
      },
      \\"application/vnd.ms-playready.initiator+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-powerpoint\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ppt\\", \\"pps\\", \\"pot\\"]
      },
      \\"application/vnd.ms-powerpoint.addin.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"ppam\\"]
      },
      \\"application/vnd.ms-powerpoint.presentation.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"pptm\\"]
      },
      \\"application/vnd.ms-powerpoint.slide.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"sldm\\"]
      },
      \\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"ppsm\\"]
      },
      \\"application/vnd.ms-powerpoint.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"potm\\"]
      },
      \\"application/vnd.ms-printdevicecapabilities+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-printing.printticket+xml\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/vnd.ms-printschematicket+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-project\\": {
        source: \\"iana\\",
        extensions: [\\"mpp\\", \\"mpt\\"]
      },
      \\"application/vnd.ms-tnef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.devicepairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.nwprinting.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.printerpairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.wsd.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.lic-chlg-req\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.lic-resp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.meter-chlg-req\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.meter-resp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-word.document.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"docm\\"]
      },
      \\"application/vnd.ms-word.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"dotm\\"]
      },
      \\"application/vnd.ms-works\\": {
        source: \\"iana\\",
        extensions: [\\"wps\\", \\"wks\\", \\"wcm\\", \\"wdb\\"]
      },
      \\"application/vnd.ms-wpl\\": {
        source: \\"iana\\",
        extensions: [\\"wpl\\"]
      },
      \\"application/vnd.ms-xpsdocument\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xps\\"]
      },
      \\"application/vnd.msa-disk-image\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mseq\\": {
        source: \\"iana\\",
        extensions: [\\"mseq\\"]
      },
      \\"application/vnd.msign\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.multiad.creator\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.multiad.creator.cif\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.music-niff\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.musician\\": {
        source: \\"iana\\",
        extensions: [\\"mus\\"]
      },
      \\"application/vnd.muvee.style\\": {
        source: \\"iana\\",
        extensions: [\\"msty\\"]
      },
      \\"application/vnd.mynfc\\": {
        source: \\"iana\\",
        extensions: [\\"taglet\\"]
      },
      \\"application/vnd.nacamar.ybrid+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ncd.control\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ncd.reference\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nearst.inv+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nebumind.line\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nervana\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.netfpx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.neurolanguage.nlu\\": {
        source: \\"iana\\",
        extensions: [\\"nlu\\"]
      },
      \\"application/vnd.nimn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nintendo.nitro.rom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nintendo.snes.rom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nitf\\": {
        source: \\"iana\\",
        extensions: [\\"ntf\\", \\"nitf\\"]
      },
      \\"application/vnd.noblenet-directory\\": {
        source: \\"iana\\",
        extensions: [\\"nnd\\"]
      },
      \\"application/vnd.noblenet-sealer\\": {
        source: \\"iana\\",
        extensions: [\\"nns\\"]
      },
      \\"application/vnd.noblenet-web\\": {
        source: \\"iana\\",
        extensions: [\\"nnw\\"]
      },
      \\"application/vnd.nokia.catalogs\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.conml+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.conml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.iptv.config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.isds-radio-presets\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.landmark+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.landmark+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.landmarkcollection+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.n-gage.ac+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ac\\"]
      },
      \\"application/vnd.nokia.n-gage.data\\": {
        source: \\"iana\\",
        extensions: [\\"ngdat\\"]
      },
      \\"application/vnd.nokia.n-gage.symbian.install\\": {
        source: \\"iana\\",
        extensions: [\\"n-gage\\"]
      },
      \\"application/vnd.nokia.ncd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.pcd+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.pcd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.radio-preset\\": {
        source: \\"iana\\",
        extensions: [\\"rpst\\"]
      },
      \\"application/vnd.nokia.radio-presets\\": {
        source: \\"iana\\",
        extensions: [\\"rpss\\"]
      },
      \\"application/vnd.novadigm.edm\\": {
        source: \\"iana\\",
        extensions: [\\"edm\\"]
      },
      \\"application/vnd.novadigm.edx\\": {
        source: \\"iana\\",
        extensions: [\\"edx\\"]
      },
      \\"application/vnd.novadigm.ext\\": {
        source: \\"iana\\",
        extensions: [\\"ext\\"]
      },
      \\"application/vnd.ntt-local.content-share\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.file-transfer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.ogw_remote-access\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.sip-ta_remote\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.sip-ta_tcp_stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oasis.opendocument.chart\\": {
        source: \\"iana\\",
        extensions: [\\"odc\\"]
      },
      \\"application/vnd.oasis.opendocument.chart-template\\": {
        source: \\"iana\\",
        extensions: [\\"otc\\"]
      },
      \\"application/vnd.oasis.opendocument.database\\": {
        source: \\"iana\\",
        extensions: [\\"odb\\"]
      },
      \\"application/vnd.oasis.opendocument.formula\\": {
        source: \\"iana\\",
        extensions: [\\"odf\\"]
      },
      \\"application/vnd.oasis.opendocument.formula-template\\": {
        source: \\"iana\\",
        extensions: [\\"odft\\"]
      },
      \\"application/vnd.oasis.opendocument.graphics\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odg\\"]
      },
      \\"application/vnd.oasis.opendocument.graphics-template\\": {
        source: \\"iana\\",
        extensions: [\\"otg\\"]
      },
      \\"application/vnd.oasis.opendocument.image\\": {
        source: \\"iana\\",
        extensions: [\\"odi\\"]
      },
      \\"application/vnd.oasis.opendocument.image-template\\": {
        source: \\"iana\\",
        extensions: [\\"oti\\"]
      },
      \\"application/vnd.oasis.opendocument.presentation\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odp\\"]
      },
      \\"application/vnd.oasis.opendocument.presentation-template\\": {
        source: \\"iana\\",
        extensions: [\\"otp\\"]
      },
      \\"application/vnd.oasis.opendocument.spreadsheet\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ods\\"]
      },
      \\"application/vnd.oasis.opendocument.spreadsheet-template\\": {
        source: \\"iana\\",
        extensions: [\\"ots\\"]
      },
      \\"application/vnd.oasis.opendocument.text\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odt\\"]
      },
      \\"application/vnd.oasis.opendocument.text-master\\": {
        source: \\"iana\\",
        extensions: [\\"odm\\"]
      },
      \\"application/vnd.oasis.opendocument.text-template\\": {
        source: \\"iana\\",
        extensions: [\\"ott\\"]
      },
      \\"application/vnd.oasis.opendocument.text-web\\": {
        source: \\"iana\\",
        extensions: [\\"oth\\"]
      },
      \\"application/vnd.obn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ocf+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oci.image.manifest.v1+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oftn.l10n+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.contentaccessdownload+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.contentaccessstreaming+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.cspg-hexbinary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oipf.dae.svg+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.dae.xhtml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.mippvcontrolmessage+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.pae.gem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oipf.spdiscovery+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.spdlist+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.ueprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.userprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.olpc-sugar\\": {
        source: \\"iana\\",
        extensions: [\\"xo\\"]
      },
      \\"application/vnd.oma-scws-config\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma-scws-http-request\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma-scws-http-response\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.associated-procedure-parameter+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.drm-trigger+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.imd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.ltkm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.notification+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.provisioningtrigger\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.sgboot\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.sgdd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.sgdu\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.simple-symbol-container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.smartcard-trigger+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.sprov+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.stkm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.cab-address-book+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-feature-handler+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-pcc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-subs-invite+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-user-prefs+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.dcd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.dcdc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.dd2+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dd2\\"]
      },
      \\"application/vnd.oma.drm.risd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.group-usage-list+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.lwm2m+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.lwm2m+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.lwm2m+tlv\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.pal+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.detailed-progress-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.final-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.groups+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.invocation-descriptor+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.optimized-progress-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.push\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.scidm.messages+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.xcap-directory+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.omads-email+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omads-file+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omads-folder+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omaloc-supl-init\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepager\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertamp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertamx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertat\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertatp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertatx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openblox.game+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"obgx\\"]
      },
      \\"application/vnd.openblox.game-binary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openeye.oeb\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openofficeorg.extension\\": {
        source: \\"apache\\",
        extensions: [\\"oxt\\"]
      },
      \\"application/vnd.openstreetmap.data+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"osm\\"]
      },
      \\"application/vnd.opentimestamps.ots\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openxmlformats-officedocument.custom-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawing+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.extended-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presentation\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pptx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slide\\": {
        source: \\"iana\\",
        extensions: [\\"sldx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\\": {
        source: \\"iana\\",
        extensions: [\\"ppsx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.template\\": {
        source: \\"iana\\",
        extensions: [\\"potx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xlsx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\\": {
        source: \\"iana\\",
        extensions: [\\"xltx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.theme+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.themeoverride+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.vmldrawing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"docx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\\": {
        source: \\"iana\\",
        extensions: [\\"dotx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.core-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.relationships+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oracle.resource+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.orange.indata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osa.netdeploy\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osgeo.mapguide.package\\": {
        source: \\"iana\\",
        extensions: [\\"mgp\\"]
      },
      \\"application/vnd.osgi.bundle\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osgi.dp\\": {
        source: \\"iana\\",
        extensions: [\\"dp\\"]
      },
      \\"application/vnd.osgi.subsystem\\": {
        source: \\"iana\\",
        extensions: [\\"esa\\"]
      },
      \\"application/vnd.otps.ct-kip+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oxli.countgraph\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pagerduty+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.palm\\": {
        source: \\"iana\\",
        extensions: [\\"pdb\\", \\"pqa\\", \\"oprc\\"]
      },
      \\"application/vnd.panoply\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.paos.xml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.patentdive\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.patientecommsdoc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pawaafile\\": {
        source: \\"iana\\",
        extensions: [\\"paw\\"]
      },
      \\"application/vnd.pcos\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pg.format\\": {
        source: \\"iana\\",
        extensions: [\\"str\\"]
      },
      \\"application/vnd.pg.osasli\\": {
        source: \\"iana\\",
        extensions: [\\"ei6\\"]
      },
      \\"application/vnd.piaccess.application-licence\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.picsel\\": {
        source: \\"iana\\",
        extensions: [\\"efif\\"]
      },
      \\"application/vnd.pmi.widget\\": {
        source: \\"iana\\",
        extensions: [\\"wg\\"]
      },
      \\"application/vnd.poc.group-advertisement+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.pocketlearn\\": {
        source: \\"iana\\",
        extensions: [\\"plf\\"]
      },
      \\"application/vnd.powerbuilder6\\": {
        source: \\"iana\\",
        extensions: [\\"pbd\\"]
      },
      \\"application/vnd.powerbuilder6-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder7\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder7-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder75\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder75-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.preminet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.previewsystems.box\\": {
        source: \\"iana\\",
        extensions: [\\"box\\"]
      },
      \\"application/vnd.proteus.magazine\\": {
        source: \\"iana\\",
        extensions: [\\"mgz\\"]
      },
      \\"application/vnd.psfs\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.publishare-delta-tree\\": {
        source: \\"iana\\",
        extensions: [\\"qps\\"]
      },
      \\"application/vnd.pvi.ptid1\\": {
        source: \\"iana\\",
        extensions: [\\"ptid\\"]
      },
      \\"application/vnd.pwg-multiplexed\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pwg-xhtml-print+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.qualcomm.brew-app-res\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.quarantainenet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.quark.quarkxpress\\": {
        source: \\"iana\\",
        extensions: [\\"qxd\\", \\"qxt\\", \\"qwd\\", \\"qwt\\", \\"qxl\\", \\"qxb\\"]
      },
      \\"application/vnd.quobject-quoxdocument\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.radisys.moml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-conf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-conn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-dialog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-stream+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-conf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-base+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-fax-detect+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-group+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-speech+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-transform+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.rainstor.data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.rapid\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.rar\\": {
        source: \\"iana\\",
        extensions: [\\"rar\\"]
      },
      \\"application/vnd.realvnc.bed\\": {
        source: \\"iana\\",
        extensions: [\\"bed\\"]
      },
      \\"application/vnd.recordare.musicxml\\": {
        source: \\"iana\\",
        extensions: [\\"mxl\\"]
      },
      \\"application/vnd.recordare.musicxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"musicxml\\"]
      },
      \\"application/vnd.renlearn.rlprint\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.resilient.logic\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.restful+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.rig.cryptonote\\": {
        source: \\"iana\\",
        extensions: [\\"cryptonote\\"]
      },
      \\"application/vnd.rim.cod\\": {
        source: \\"apache\\",
        extensions: [\\"cod\\"]
      },
      \\"application/vnd.rn-realmedia\\": {
        source: \\"apache\\",
        extensions: [\\"rm\\"]
      },
      \\"application/vnd.rn-realmedia-vbr\\": {
        source: \\"apache\\",
        extensions: [\\"rmvb\\"]
      },
      \\"application/vnd.route66.link66+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"link66\\"]
      },
      \\"application/vnd.rs-274x\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ruckus.download\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.s3sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sailingtracker.track\\": {
        source: \\"iana\\",
        extensions: [\\"st\\"]
      },
      \\"application/vnd.sar\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sbm.cid\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sbm.mid2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.scribus\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.3df\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.csf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.doc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.eml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.mht\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.net\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.ppt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.tiff\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.xls\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealedmedia.softseal.html\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealedmedia.softseal.pdf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.seemail\\": {
        source: \\"iana\\",
        extensions: [\\"see\\"]
      },
      \\"application/vnd.seis+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.sema\\": {
        source: \\"iana\\",
        extensions: [\\"sema\\"]
      },
      \\"application/vnd.semd\\": {
        source: \\"iana\\",
        extensions: [\\"semd\\"]
      },
      \\"application/vnd.semf\\": {
        source: \\"iana\\",
        extensions: [\\"semf\\"]
      },
      \\"application/vnd.shade-save-file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.shana.informed.formdata\\": {
        source: \\"iana\\",
        extensions: [\\"ifm\\"]
      },
      \\"application/vnd.shana.informed.formtemplate\\": {
        source: \\"iana\\",
        extensions: [\\"itp\\"]
      },
      \\"application/vnd.shana.informed.interchange\\": {
        source: \\"iana\\",
        extensions: [\\"iif\\"]
      },
      \\"application/vnd.shana.informed.package\\": {
        source: \\"iana\\",
        extensions: [\\"ipk\\"]
      },
      \\"application/vnd.shootproof+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.shopkick+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.shp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.shx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sigrok.session\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.simtech-mindmapper\\": {
        source: \\"iana\\",
        extensions: [\\"twd\\", \\"twds\\"]
      },
      \\"application/vnd.siren+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.smaf\\": {
        source: \\"iana\\",
        extensions: [\\"mmf\\"]
      },
      \\"application/vnd.smart.notebook\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.smart.teacher\\": {
        source: \\"iana\\",
        extensions: [\\"teacher\\"]
      },
      \\"application/vnd.snesdev-page-table\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.software602.filler.form+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"fo\\"]
      },
      \\"application/vnd.software602.filler.form-xml-zip\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.solent.sdkm+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sdkm\\", \\"sdkd\\"]
      },
      \\"application/vnd.spotfire.dxp\\": {
        source: \\"iana\\",
        extensions: [\\"dxp\\"]
      },
      \\"application/vnd.spotfire.sfs\\": {
        source: \\"iana\\",
        extensions: [\\"sfs\\"]
      },
      \\"application/vnd.sqlite3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-cod\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-dtf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-ntf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.stardivision.calc\\": {
        source: \\"apache\\",
        extensions: [\\"sdc\\"]
      },
      \\"application/vnd.stardivision.draw\\": {
        source: \\"apache\\",
        extensions: [\\"sda\\"]
      },
      \\"application/vnd.stardivision.impress\\": {
        source: \\"apache\\",
        extensions: [\\"sdd\\"]
      },
      \\"application/vnd.stardivision.math\\": {
        source: \\"apache\\",
        extensions: [\\"smf\\"]
      },
      \\"application/vnd.stardivision.writer\\": {
        source: \\"apache\\",
        extensions: [\\"sdw\\", \\"vor\\"]
      },
      \\"application/vnd.stardivision.writer-global\\": {
        source: \\"apache\\",
        extensions: [\\"sgl\\"]
      },
      \\"application/vnd.stepmania.package\\": {
        source: \\"iana\\",
        extensions: [\\"smzip\\"]
      },
      \\"application/vnd.stepmania.stepchart\\": {
        source: \\"iana\\",
        extensions: [\\"sm\\"]
      },
      \\"application/vnd.street-stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sun.wadl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wadl\\"]
      },
      \\"application/vnd.sun.xml.calc\\": {
        source: \\"apache\\",
        extensions: [\\"sxc\\"]
      },
      \\"application/vnd.sun.xml.calc.template\\": {
        source: \\"apache\\",
        extensions: [\\"stc\\"]
      },
      \\"application/vnd.sun.xml.draw\\": {
        source: \\"apache\\",
        extensions: [\\"sxd\\"]
      },
      \\"application/vnd.sun.xml.draw.template\\": {
        source: \\"apache\\",
        extensions: [\\"std\\"]
      },
      \\"application/vnd.sun.xml.impress\\": {
        source: \\"apache\\",
        extensions: [\\"sxi\\"]
      },
      \\"application/vnd.sun.xml.impress.template\\": {
        source: \\"apache\\",
        extensions: [\\"sti\\"]
      },
      \\"application/vnd.sun.xml.math\\": {
        source: \\"apache\\",
        extensions: [\\"sxm\\"]
      },
      \\"application/vnd.sun.xml.writer\\": {
        source: \\"apache\\",
        extensions: [\\"sxw\\"]
      },
      \\"application/vnd.sun.xml.writer.global\\": {
        source: \\"apache\\",
        extensions: [\\"sxg\\"]
      },
      \\"application/vnd.sun.xml.writer.template\\": {
        source: \\"apache\\",
        extensions: [\\"stw\\"]
      },
      \\"application/vnd.sus-calendar\\": {
        source: \\"iana\\",
        extensions: [\\"sus\\", \\"susp\\"]
      },
      \\"application/vnd.svd\\": {
        source: \\"iana\\",
        extensions: [\\"svd\\"]
      },
      \\"application/vnd.swiftview-ics\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sycle+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.syft+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.symbian.install\\": {
        source: \\"apache\\",
        extensions: [\\"sis\\", \\"sisx\\"]
      },
      \\"application/vnd.syncml+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"xsm\\"]
      },
      \\"application/vnd.syncml.dm+wbxml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"bdm\\"]
      },
      \\"application/vnd.syncml.dm+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"xdm\\"]
      },
      \\"application/vnd.syncml.dm.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmddf+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmddf+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"ddf\\"]
      },
      \\"application/vnd.syncml.dmtnds+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmtnds+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.syncml.ds.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.tableschema+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tao.intent-module-archive\\": {
        source: \\"iana\\",
        extensions: [\\"tao\\"]
      },
      \\"application/vnd.tcpdump.pcap\\": {
        source: \\"iana\\",
        extensions: [\\"pcap\\", \\"cap\\", \\"dmp\\"]
      },
      \\"application/vnd.think-cell.ppttc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tmd.mediaflex.api+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.tmobile-livetv\\": {
        source: \\"iana\\",
        extensions: [\\"tmo\\"]
      },
      \\"application/vnd.tri.onesource\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.trid.tpt\\": {
        source: \\"iana\\",
        extensions: [\\"tpt\\"]
      },
      \\"application/vnd.triscape.mxs\\": {
        source: \\"iana\\",
        extensions: [\\"mxs\\"]
      },
      \\"application/vnd.trueapp\\": {
        source: \\"iana\\",
        extensions: [\\"tra\\"]
      },
      \\"application/vnd.truedoc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ubisoft.webplayer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ufdl\\": {
        source: \\"iana\\",
        extensions: [\\"ufd\\", \\"ufdl\\"]
      },
      \\"application/vnd.uiq.theme\\": {
        source: \\"iana\\",
        extensions: [\\"utz\\"]
      },
      \\"application/vnd.umajin\\": {
        source: \\"iana\\",
        extensions: [\\"umj\\"]
      },
      \\"application/vnd.unity\\": {
        source: \\"iana\\",
        extensions: [\\"unityweb\\"]
      },
      \\"application/vnd.uoml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uoml\\"]
      },
      \\"application/vnd.uplanet.alert\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.alert-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.bearer-choice\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.bearer-choice-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.cacheop\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.cacheop-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.channel\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.channel-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.list\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.list-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.listcmd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.listcmd-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.signal\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uri-map\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.valve.source.material\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vcx\\": {
        source: \\"iana\\",
        extensions: [\\"vcx\\"]
      },
      \\"application/vnd.vd-study\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vectorworks\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vel+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.verimatrix.vcas\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.veritone.aion+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.veryant.thin\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ves.encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vidsoft.vidconference\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.visio\\": {
        source: \\"iana\\",
        extensions: [\\"vsd\\", \\"vst\\", \\"vss\\", \\"vsw\\"]
      },
      \\"application/vnd.visionary\\": {
        source: \\"iana\\",
        extensions: [\\"vis\\"]
      },
      \\"application/vnd.vividence.scriptfile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vsf\\": {
        source: \\"iana\\",
        extensions: [\\"vsf\\"]
      },
      \\"application/vnd.wap.sic\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wap.slc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wap.wbxml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"wbxml\\"]
      },
      \\"application/vnd.wap.wmlc\\": {
        source: \\"iana\\",
        extensions: [\\"wmlc\\"]
      },
      \\"application/vnd.wap.wmlscriptc\\": {
        source: \\"iana\\",
        extensions: [\\"wmlsc\\"]
      },
      \\"application/vnd.webturbo\\": {
        source: \\"iana\\",
        extensions: [\\"wtb\\"]
      },
      \\"application/vnd.wfa.dpp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wfa.p2p\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wfa.wsc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.windows.devicepairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wmc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wmf.bootstrap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.mathematica\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.mathematica.package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.player\\": {
        source: \\"iana\\",
        extensions: [\\"nbp\\"]
      },
      \\"application/vnd.wordperfect\\": {
        source: \\"iana\\",
        extensions: [\\"wpd\\"]
      },
      \\"application/vnd.wqd\\": {
        source: \\"iana\\",
        extensions: [\\"wqd\\"]
      },
      \\"application/vnd.wrq-hp3000-labelled\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wt.stf\\": {
        source: \\"iana\\",
        extensions: [\\"stf\\"]
      },
      \\"application/vnd.wv.csp+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wv.csp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.wv.ssp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xacml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xara\\": {
        source: \\"iana\\",
        extensions: [\\"xar\\"]
      },
      \\"application/vnd.xfdl\\": {
        source: \\"iana\\",
        extensions: [\\"xfdl\\"]
      },
      \\"application/vnd.xfdl.webform\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xmpie.cpkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.dpkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.plan\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.ppkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.xlim\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.hv-dic\\": {
        source: \\"iana\\",
        extensions: [\\"hvd\\"]
      },
      \\"application/vnd.yamaha.hv-script\\": {
        source: \\"iana\\",
        extensions: [\\"hvs\\"]
      },
      \\"application/vnd.yamaha.hv-voice\\": {
        source: \\"iana\\",
        extensions: [\\"hvp\\"]
      },
      \\"application/vnd.yamaha.openscoreformat\\": {
        source: \\"iana\\",
        extensions: [\\"osf\\"]
      },
      \\"application/vnd.yamaha.openscoreformat.osfpvg+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"osfpvg\\"]
      },
      \\"application/vnd.yamaha.remote-setup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.smaf-audio\\": {
        source: \\"iana\\",
        extensions: [\\"saf\\"]
      },
      \\"application/vnd.yamaha.smaf-phrase\\": {
        source: \\"iana\\",
        extensions: [\\"spf\\"]
      },
      \\"application/vnd.yamaha.through-ngn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.tunnel-udpencap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yaoweme\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yellowriver-custom-menu\\": {
        source: \\"iana\\",
        extensions: [\\"cmp\\"]
      },
      \\"application/vnd.youtube.yt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.zul\\": {
        source: \\"iana\\",
        extensions: [\\"zir\\", \\"zirz\\"]
      },
      \\"application/vnd.zzazz.deck+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"zaz\\"]
      },
      \\"application/voicexml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"vxml\\"]
      },
      \\"application/voucher-cms+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vq-rtcpxr\\": {
        source: \\"iana\\"
      },
      \\"application/wasm\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wasm\\"]
      },
      \\"application/watcherinfo+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wif\\"]
      },
      \\"application/webpush-options+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/whoispp-query\\": {
        source: \\"iana\\"
      },
      \\"application/whoispp-response\\": {
        source: \\"iana\\"
      },
      \\"application/widget\\": {
        source: \\"iana\\",
        extensions: [\\"wgt\\"]
      },
      \\"application/winhlp\\": {
        source: \\"apache\\",
        extensions: [\\"hlp\\"]
      },
      \\"application/wita\\": {
        source: \\"iana\\"
      },
      \\"application/wordperfect5.1\\": {
        source: \\"iana\\"
      },
      \\"application/wsdl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wsdl\\"]
      },
      \\"application/wspolicy+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wspolicy\\"]
      },
      \\"application/x-7z-compressed\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"7z\\"]
      },
      \\"application/x-abiword\\": {
        source: \\"apache\\",
        extensions: [\\"abw\\"]
      },
      \\"application/x-ace-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"ace\\"]
      },
      \\"application/x-amf\\": {
        source: \\"apache\\"
      },
      \\"application/x-apple-diskimage\\": {
        source: \\"apache\\",
        extensions: [\\"dmg\\"]
      },
      \\"application/x-arj\\": {
        compressible: false,
        extensions: [\\"arj\\"]
      },
      \\"application/x-authorware-bin\\": {
        source: \\"apache\\",
        extensions: [\\"aab\\", \\"x32\\", \\"u32\\", \\"vox\\"]
      },
      \\"application/x-authorware-map\\": {
        source: \\"apache\\",
        extensions: [\\"aam\\"]
      },
      \\"application/x-authorware-seg\\": {
        source: \\"apache\\",
        extensions: [\\"aas\\"]
      },
      \\"application/x-bcpio\\": {
        source: \\"apache\\",
        extensions: [\\"bcpio\\"]
      },
      \\"application/x-bdoc\\": {
        compressible: false,
        extensions: [\\"bdoc\\"]
      },
      \\"application/x-bittorrent\\": {
        source: \\"apache\\",
        extensions: [\\"torrent\\"]
      },
      \\"application/x-blorb\\": {
        source: \\"apache\\",
        extensions: [\\"blb\\", \\"blorb\\"]
      },
      \\"application/x-bzip\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"bz\\"]
      },
      \\"application/x-bzip2\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"bz2\\", \\"boz\\"]
      },
      \\"application/x-cbr\\": {
        source: \\"apache\\",
        extensions: [\\"cbr\\", \\"cba\\", \\"cbt\\", \\"cbz\\", \\"cb7\\"]
      },
      \\"application/x-cdlink\\": {
        source: \\"apache\\",
        extensions: [\\"vcd\\"]
      },
      \\"application/x-cfs-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"cfs\\"]
      },
      \\"application/x-chat\\": {
        source: \\"apache\\",
        extensions: [\\"chat\\"]
      },
      \\"application/x-chess-pgn\\": {
        source: \\"apache\\",
        extensions: [\\"pgn\\"]
      },
      \\"application/x-chrome-extension\\": {
        extensions: [\\"crx\\"]
      },
      \\"application/x-cocoa\\": {
        source: \\"nginx\\",
        extensions: [\\"cco\\"]
      },
      \\"application/x-compress\\": {
        source: \\"apache\\"
      },
      \\"application/x-conference\\": {
        source: \\"apache\\",
        extensions: [\\"nsc\\"]
      },
      \\"application/x-cpio\\": {
        source: \\"apache\\",
        extensions: [\\"cpio\\"]
      },
      \\"application/x-csh\\": {
        source: \\"apache\\",
        extensions: [\\"csh\\"]
      },
      \\"application/x-deb\\": {
        compressible: false
      },
      \\"application/x-debian-package\\": {
        source: \\"apache\\",
        extensions: [\\"deb\\", \\"udeb\\"]
      },
      \\"application/x-dgc-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"dgc\\"]
      },
      \\"application/x-director\\": {
        source: \\"apache\\",
        extensions: [\\"dir\\", \\"dcr\\", \\"dxr\\", \\"cst\\", \\"cct\\", \\"cxt\\", \\"w3d\\", \\"fgd\\", \\"swa\\"]
      },
      \\"application/x-doom\\": {
        source: \\"apache\\",
        extensions: [\\"wad\\"]
      },
      \\"application/x-dtbncx+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ncx\\"]
      },
      \\"application/x-dtbook+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"dtb\\"]
      },
      \\"application/x-dtbresource+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"res\\"]
      },
      \\"application/x-dvi\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"dvi\\"]
      },
      \\"application/x-envoy\\": {
        source: \\"apache\\",
        extensions: [\\"evy\\"]
      },
      \\"application/x-eva\\": {
        source: \\"apache\\",
        extensions: [\\"eva\\"]
      },
      \\"application/x-font-bdf\\": {
        source: \\"apache\\",
        extensions: [\\"bdf\\"]
      },
      \\"application/x-font-dos\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-framemaker\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-ghostscript\\": {
        source: \\"apache\\",
        extensions: [\\"gsf\\"]
      },
      \\"application/x-font-libgrx\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-linux-psf\\": {
        source: \\"apache\\",
        extensions: [\\"psf\\"]
      },
      \\"application/x-font-pcf\\": {
        source: \\"apache\\",
        extensions: [\\"pcf\\"]
      },
      \\"application/x-font-snf\\": {
        source: \\"apache\\",
        extensions: [\\"snf\\"]
      },
      \\"application/x-font-speedo\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-sunos-news\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-type1\\": {
        source: \\"apache\\",
        extensions: [\\"pfa\\", \\"pfb\\", \\"pfm\\", \\"afm\\"]
      },
      \\"application/x-font-vfont\\": {
        source: \\"apache\\"
      },
      \\"application/x-freearc\\": {
        source: \\"apache\\",
        extensions: [\\"arc\\"]
      },
      \\"application/x-futuresplash\\": {
        source: \\"apache\\",
        extensions: [\\"spl\\"]
      },
      \\"application/x-gca-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"gca\\"]
      },
      \\"application/x-glulx\\": {
        source: \\"apache\\",
        extensions: [\\"ulx\\"]
      },
      \\"application/x-gnumeric\\": {
        source: \\"apache\\",
        extensions: [\\"gnumeric\\"]
      },
      \\"application/x-gramps-xml\\": {
        source: \\"apache\\",
        extensions: [\\"gramps\\"]
      },
      \\"application/x-gtar\\": {
        source: \\"apache\\",
        extensions: [\\"gtar\\"]
      },
      \\"application/x-gzip\\": {
        source: \\"apache\\"
      },
      \\"application/x-hdf\\": {
        source: \\"apache\\",
        extensions: [\\"hdf\\"]
      },
      \\"application/x-httpd-php\\": {
        compressible: true,
        extensions: [\\"php\\"]
      },
      \\"application/x-install-instructions\\": {
        source: \\"apache\\",
        extensions: [\\"install\\"]
      },
      \\"application/x-iso9660-image\\": {
        source: \\"apache\\",
        extensions: [\\"iso\\"]
      },
      \\"application/x-iwork-keynote-sffkey\\": {
        extensions: [\\"key\\"]
      },
      \\"application/x-iwork-numbers-sffnumbers\\": {
        extensions: [\\"numbers\\"]
      },
      \\"application/x-iwork-pages-sffpages\\": {
        extensions: [\\"pages\\"]
      },
      \\"application/x-java-archive-diff\\": {
        source: \\"nginx\\",
        extensions: [\\"jardiff\\"]
      },
      \\"application/x-java-jnlp-file\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"jnlp\\"]
      },
      \\"application/x-javascript\\": {
        compressible: true
      },
      \\"application/x-keepass2\\": {
        extensions: [\\"kdbx\\"]
      },
      \\"application/x-latex\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"latex\\"]
      },
      \\"application/x-lua-bytecode\\": {
        extensions: [\\"luac\\"]
      },
      \\"application/x-lzh-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"lzh\\", \\"lha\\"]
      },
      \\"application/x-makeself\\": {
        source: \\"nginx\\",
        extensions: [\\"run\\"]
      },
      \\"application/x-mie\\": {
        source: \\"apache\\",
        extensions: [\\"mie\\"]
      },
      \\"application/x-mobipocket-ebook\\": {
        source: \\"apache\\",
        extensions: [\\"prc\\", \\"mobi\\"]
      },
      \\"application/x-mpegurl\\": {
        compressible: false
      },
      \\"application/x-ms-application\\": {
        source: \\"apache\\",
        extensions: [\\"application\\"]
      },
      \\"application/x-ms-shortcut\\": {
        source: \\"apache\\",
        extensions: [\\"lnk\\"]
      },
      \\"application/x-ms-wmd\\": {
        source: \\"apache\\",
        extensions: [\\"wmd\\"]
      },
      \\"application/x-ms-wmz\\": {
        source: \\"apache\\",
        extensions: [\\"wmz\\"]
      },
      \\"application/x-ms-xbap\\": {
        source: \\"apache\\",
        extensions: [\\"xbap\\"]
      },
      \\"application/x-msaccess\\": {
        source: \\"apache\\",
        extensions: [\\"mdb\\"]
      },
      \\"application/x-msbinder\\": {
        source: \\"apache\\",
        extensions: [\\"obd\\"]
      },
      \\"application/x-mscardfile\\": {
        source: \\"apache\\",
        extensions: [\\"crd\\"]
      },
      \\"application/x-msclip\\": {
        source: \\"apache\\",
        extensions: [\\"clp\\"]
      },
      \\"application/x-msdos-program\\": {
        extensions: [\\"exe\\"]
      },
      \\"application/x-msdownload\\": {
        source: \\"apache\\",
        extensions: [\\"exe\\", \\"dll\\", \\"com\\", \\"bat\\", \\"msi\\"]
      },
      \\"application/x-msmediaview\\": {
        source: \\"apache\\",
        extensions: [\\"mvb\\", \\"m13\\", \\"m14\\"]
      },
      \\"application/x-msmetafile\\": {
        source: \\"apache\\",
        extensions: [\\"wmf\\", \\"wmz\\", \\"emf\\", \\"emz\\"]
      },
      \\"application/x-msmoney\\": {
        source: \\"apache\\",
        extensions: [\\"mny\\"]
      },
      \\"application/x-mspublisher\\": {
        source: \\"apache\\",
        extensions: [\\"pub\\"]
      },
      \\"application/x-msschedule\\": {
        source: \\"apache\\",
        extensions: [\\"scd\\"]
      },
      \\"application/x-msterminal\\": {
        source: \\"apache\\",
        extensions: [\\"trm\\"]
      },
      \\"application/x-mswrite\\": {
        source: \\"apache\\",
        extensions: [\\"wri\\"]
      },
      \\"application/x-netcdf\\": {
        source: \\"apache\\",
        extensions: [\\"nc\\", \\"cdf\\"]
      },
      \\"application/x-ns-proxy-autoconfig\\": {
        compressible: true,
        extensions: [\\"pac\\"]
      },
      \\"application/x-nzb\\": {
        source: \\"apache\\",
        extensions: [\\"nzb\\"]
      },
      \\"application/x-perl\\": {
        source: \\"nginx\\",
        extensions: [\\"pl\\", \\"pm\\"]
      },
      \\"application/x-pilot\\": {
        source: \\"nginx\\",
        extensions: [\\"prc\\", \\"pdb\\"]
      },
      \\"application/x-pkcs12\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"p12\\", \\"pfx\\"]
      },
      \\"application/x-pkcs7-certificates\\": {
        source: \\"apache\\",
        extensions: [\\"p7b\\", \\"spc\\"]
      },
      \\"application/x-pkcs7-certreqresp\\": {
        source: \\"apache\\",
        extensions: [\\"p7r\\"]
      },
      \\"application/x-pki-message\\": {
        source: \\"iana\\"
      },
      \\"application/x-rar-compressed\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"rar\\"]
      },
      \\"application/x-redhat-package-manager\\": {
        source: \\"nginx\\",
        extensions: [\\"rpm\\"]
      },
      \\"application/x-research-info-systems\\": {
        source: \\"apache\\",
        extensions: [\\"ris\\"]
      },
      \\"application/x-sea\\": {
        source: \\"nginx\\",
        extensions: [\\"sea\\"]
      },
      \\"application/x-sh\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"sh\\"]
      },
      \\"application/x-shar\\": {
        source: \\"apache\\",
        extensions: [\\"shar\\"]
      },
      \\"application/x-shockwave-flash\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"swf\\"]
      },
      \\"application/x-silverlight-app\\": {
        source: \\"apache\\",
        extensions: [\\"xap\\"]
      },
      \\"application/x-sql\\": {
        source: \\"apache\\",
        extensions: [\\"sql\\"]
      },
      \\"application/x-stuffit\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"sit\\"]
      },
      \\"application/x-stuffitx\\": {
        source: \\"apache\\",
        extensions: [\\"sitx\\"]
      },
      \\"application/x-subrip\\": {
        source: \\"apache\\",
        extensions: [\\"srt\\"]
      },
      \\"application/x-sv4cpio\\": {
        source: \\"apache\\",
        extensions: [\\"sv4cpio\\"]
      },
      \\"application/x-sv4crc\\": {
        source: \\"apache\\",
        extensions: [\\"sv4crc\\"]
      },
      \\"application/x-t3vm-image\\": {
        source: \\"apache\\",
        extensions: [\\"t3\\"]
      },
      \\"application/x-tads\\": {
        source: \\"apache\\",
        extensions: [\\"gam\\"]
      },
      \\"application/x-tar\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"tar\\"]
      },
      \\"application/x-tcl\\": {
        source: \\"apache\\",
        extensions: [\\"tcl\\", \\"tk\\"]
      },
      \\"application/x-tex\\": {
        source: \\"apache\\",
        extensions: [\\"tex\\"]
      },
      \\"application/x-tex-tfm\\": {
        source: \\"apache\\",
        extensions: [\\"tfm\\"]
      },
      \\"application/x-texinfo\\": {
        source: \\"apache\\",
        extensions: [\\"texinfo\\", \\"texi\\"]
      },
      \\"application/x-tgif\\": {
        source: \\"apache\\",
        extensions: [\\"obj\\"]
      },
      \\"application/x-ustar\\": {
        source: \\"apache\\",
        extensions: [\\"ustar\\"]
      },
      \\"application/x-virtualbox-hdd\\": {
        compressible: true,
        extensions: [\\"hdd\\"]
      },
      \\"application/x-virtualbox-ova\\": {
        compressible: true,
        extensions: [\\"ova\\"]
      },
      \\"application/x-virtualbox-ovf\\": {
        compressible: true,
        extensions: [\\"ovf\\"]
      },
      \\"application/x-virtualbox-vbox\\": {
        compressible: true,
        extensions: [\\"vbox\\"]
      },
      \\"application/x-virtualbox-vbox-extpack\\": {
        compressible: false,
        extensions: [\\"vbox-extpack\\"]
      },
      \\"application/x-virtualbox-vdi\\": {
        compressible: true,
        extensions: [\\"vdi\\"]
      },
      \\"application/x-virtualbox-vhd\\": {
        compressible: true,
        extensions: [\\"vhd\\"]
      },
      \\"application/x-virtualbox-vmdk\\": {
        compressible: true,
        extensions: [\\"vmdk\\"]
      },
      \\"application/x-wais-source\\": {
        source: \\"apache\\",
        extensions: [\\"src\\"]
      },
      \\"application/x-web-app-manifest+json\\": {
        compressible: true,
        extensions: [\\"webapp\\"]
      },
      \\"application/x-www-form-urlencoded\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/x-x509-ca-cert\\": {
        source: \\"iana\\",
        extensions: [\\"der\\", \\"crt\\", \\"pem\\"]
      },
      \\"application/x-x509-ca-ra-cert\\": {
        source: \\"iana\\"
      },
      \\"application/x-x509-next-ca-cert\\": {
        source: \\"iana\\"
      },
      \\"application/x-xfig\\": {
        source: \\"apache\\",
        extensions: [\\"fig\\"]
      },
      \\"application/x-xliff+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xlf\\"]
      },
      \\"application/x-xpinstall\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"xpi\\"]
      },
      \\"application/x-xz\\": {
        source: \\"apache\\",
        extensions: [\\"xz\\"]
      },
      \\"application/x-zmachine\\": {
        source: \\"apache\\",
        extensions: [\\"z1\\", \\"z2\\", \\"z3\\", \\"z4\\", \\"z5\\", \\"z6\\", \\"z7\\", \\"z8\\"]
      },
      \\"application/x400-bp\\": {
        source: \\"iana\\"
      },
      \\"application/xacml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xaml+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xaml\\"]
      },
      \\"application/xcap-att+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xav\\"]
      },
      \\"application/xcap-caps+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xca\\"]
      },
      \\"application/xcap-diff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdf\\"]
      },
      \\"application/xcap-el+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xel\\"]
      },
      \\"application/xcap-error+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xcap-ns+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xns\\"]
      },
      \\"application/xcon-conference-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xcon-conference-info-diff+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xenc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xenc\\"]
      },
      \\"application/xhtml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xhtml\\", \\"xht\\"]
      },
      \\"application/xhtml-voice+xml\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/xliff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xlf\\"]
      },
      \\"application/xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xml\\", \\"xsl\\", \\"xsd\\", \\"rng\\"]
      },
      \\"application/xml-dtd\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dtd\\"]
      },
      \\"application/xml-external-parsed-entity\\": {
        source: \\"iana\\"
      },
      \\"application/xml-patch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xmpp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xop+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xop\\"]
      },
      \\"application/xproc+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xpl\\"]
      },
      \\"application/xslt+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xsl\\", \\"xslt\\"]
      },
      \\"application/xspf+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xspf\\"]
      },
      \\"application/xv+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mxml\\", \\"xhvml\\", \\"xvml\\", \\"xvm\\"]
      },
      \\"application/yang\\": {
        source: \\"iana\\",
        extensions: [\\"yang\\"]
      },
      \\"application/yang-data+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-data+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-patch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yin+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"yin\\"]
      },
      \\"application/zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"zip\\"]
      },
      \\"application/zlib\\": {
        source: \\"iana\\"
      },
      \\"application/zstd\\": {
        source: \\"iana\\"
      },
      \\"audio/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"audio/32kadpcm\\": {
        source: \\"iana\\"
      },
      \\"audio/3gpp\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"3gpp\\"]
      },
      \\"audio/3gpp2\\": {
        source: \\"iana\\"
      },
      \\"audio/aac\\": {
        source: \\"iana\\"
      },
      \\"audio/ac3\\": {
        source: \\"iana\\"
      },
      \\"audio/adpcm\\": {
        source: \\"apache\\",
        extensions: [\\"adp\\"]
      },
      \\"audio/amr\\": {
        source: \\"iana\\",
        extensions: [\\"amr\\"]
      },
      \\"audio/amr-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/amr-wb+\\": {
        source: \\"iana\\"
      },
      \\"audio/aptx\\": {
        source: \\"iana\\"
      },
      \\"audio/asc\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac-advanced-lossless\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac-x\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac3\\": {
        source: \\"iana\\"
      },
      \\"audio/basic\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"au\\", \\"snd\\"]
      },
      \\"audio/bv16\\": {
        source: \\"iana\\"
      },
      \\"audio/bv32\\": {
        source: \\"iana\\"
      },
      \\"audio/clearmode\\": {
        source: \\"iana\\"
      },
      \\"audio/cn\\": {
        source: \\"iana\\"
      },
      \\"audio/dat12\\": {
        source: \\"iana\\"
      },
      \\"audio/dls\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es201108\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202050\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202211\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202212\\": {
        source: \\"iana\\"
      },
      \\"audio/dv\\": {
        source: \\"iana\\"
      },
      \\"audio/dvi4\\": {
        source: \\"iana\\"
      },
      \\"audio/eac3\\": {
        source: \\"iana\\"
      },
      \\"audio/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc-qcp\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb1\\": {
        source: \\"iana\\"
      },
      \\"audio/evs\\": {
        source: \\"iana\\"
      },
      \\"audio/flexfec\\": {
        source: \\"iana\\"
      },
      \\"audio/fwdred\\": {
        source: \\"iana\\"
      },
      \\"audio/g711-0\\": {
        source: \\"iana\\"
      },
      \\"audio/g719\\": {
        source: \\"iana\\"
      },
      \\"audio/g722\\": {
        source: \\"iana\\"
      },
      \\"audio/g7221\\": {
        source: \\"iana\\"
      },
      \\"audio/g723\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-16\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-24\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-32\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-40\\": {
        source: \\"iana\\"
      },
      \\"audio/g728\\": {
        source: \\"iana\\"
      },
      \\"audio/g729\\": {
        source: \\"iana\\"
      },
      \\"audio/g7291\\": {
        source: \\"iana\\"
      },
      \\"audio/g729d\\": {
        source: \\"iana\\"
      },
      \\"audio/g729e\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm-efr\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm-hr-08\\": {
        source: \\"iana\\"
      },
      \\"audio/ilbc\\": {
        source: \\"iana\\"
      },
      \\"audio/ip-mr_v2.5\\": {
        source: \\"iana\\"
      },
      \\"audio/isac\\": {
        source: \\"apache\\"
      },
      \\"audio/l16\\": {
        source: \\"iana\\"
      },
      \\"audio/l20\\": {
        source: \\"iana\\"
      },
      \\"audio/l24\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"audio/l8\\": {
        source: \\"iana\\"
      },
      \\"audio/lpc\\": {
        source: \\"iana\\"
      },
      \\"audio/melp\\": {
        source: \\"iana\\"
      },
      \\"audio/melp1200\\": {
        source: \\"iana\\"
      },
      \\"audio/melp2400\\": {
        source: \\"iana\\"
      },
      \\"audio/melp600\\": {
        source: \\"iana\\"
      },
      \\"audio/mhas\\": {
        source: \\"iana\\"
      },
      \\"audio/midi\\": {
        source: \\"apache\\",
        extensions: [\\"mid\\", \\"midi\\", \\"kar\\", \\"rmi\\"]
      },
      \\"audio/mobile-xmf\\": {
        source: \\"iana\\",
        extensions: [\\"mxmf\\"]
      },
      \\"audio/mp3\\": {
        compressible: false,
        extensions: [\\"mp3\\"]
      },
      \\"audio/mp4\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"m4a\\", \\"mp4a\\"]
      },
      \\"audio/mp4a-latm\\": {
        source: \\"iana\\"
      },
      \\"audio/mpa\\": {
        source: \\"iana\\"
      },
      \\"audio/mpa-robust\\": {
        source: \\"iana\\"
      },
      \\"audio/mpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mpga\\", \\"mp2\\", \\"mp2a\\", \\"mp3\\", \\"m2a\\", \\"m3a\\"]
      },
      \\"audio/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"audio/musepack\\": {
        source: \\"apache\\"
      },
      \\"audio/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"oga\\", \\"ogg\\", \\"spx\\", \\"opus\\"]
      },
      \\"audio/opus\\": {
        source: \\"iana\\"
      },
      \\"audio/parityfec\\": {
        source: \\"iana\\"
      },
      \\"audio/pcma\\": {
        source: \\"iana\\"
      },
      \\"audio/pcma-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/pcmu\\": {
        source: \\"iana\\"
      },
      \\"audio/pcmu-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/prs.sid\\": {
        source: \\"iana\\"
      },
      \\"audio/qcelp\\": {
        source: \\"iana\\"
      },
      \\"audio/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"audio/red\\": {
        source: \\"iana\\"
      },
      \\"audio/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"audio/rtp-midi\\": {
        source: \\"iana\\"
      },
      \\"audio/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"audio/rtx\\": {
        source: \\"iana\\"
      },
      \\"audio/s3m\\": {
        source: \\"apache\\",
        extensions: [\\"s3m\\"]
      },
      \\"audio/scip\\": {
        source: \\"iana\\"
      },
      \\"audio/silk\\": {
        source: \\"apache\\",
        extensions: [\\"sil\\"]
      },
      \\"audio/smv\\": {
        source: \\"iana\\"
      },
      \\"audio/smv-qcp\\": {
        source: \\"iana\\"
      },
      \\"audio/smv0\\": {
        source: \\"iana\\"
      },
      \\"audio/sofa\\": {
        source: \\"iana\\"
      },
      \\"audio/sp-midi\\": {
        source: \\"iana\\"
      },
      \\"audio/speex\\": {
        source: \\"iana\\"
      },
      \\"audio/t140c\\": {
        source: \\"iana\\"
      },
      \\"audio/t38\\": {
        source: \\"iana\\"
      },
      \\"audio/telephone-event\\": {
        source: \\"iana\\"
      },
      \\"audio/tetra_acelp\\": {
        source: \\"iana\\"
      },
      \\"audio/tetra_acelp_bb\\": {
        source: \\"iana\\"
      },
      \\"audio/tone\\": {
        source: \\"iana\\"
      },
      \\"audio/tsvcis\\": {
        source: \\"iana\\"
      },
      \\"audio/uemclip\\": {
        source: \\"iana\\"
      },
      \\"audio/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"audio/usac\\": {
        source: \\"iana\\"
      },
      \\"audio/vdvi\\": {
        source: \\"iana\\"
      },
      \\"audio/vmr-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.3gpp.iufp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.4sb\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.audiokoz\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.celp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cisco.nse\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cmles.radio-events\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cns.anp1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cns.inf1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dece.audio\\": {
        source: \\"iana\\",
        extensions: [\\"uva\\", \\"uvva\\"]
      },
      \\"audio/vnd.digital-winds\\": {
        source: \\"iana\\",
        extensions: [\\"eol\\"]
      },
      \\"audio/vnd.dlna.adts\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.heaac.1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.heaac.2\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.mlp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.mps\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2x\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2z\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pulse.1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dra\\": {
        source: \\"iana\\",
        extensions: [\\"dra\\"]
      },
      \\"audio/vnd.dts\\": {
        source: \\"iana\\",
        extensions: [\\"dts\\"]
      },
      \\"audio/vnd.dts.hd\\": {
        source: \\"iana\\",
        extensions: [\\"dtshd\\"]
      },
      \\"audio/vnd.dts.uhd\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dvb.file\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.everad.plj\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.hns.audio\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.lucent.voice\\": {
        source: \\"iana\\",
        extensions: [\\"lvp\\"]
      },
      \\"audio/vnd.ms-playready.media.pya\\": {
        source: \\"iana\\",
        extensions: [\\"pya\\"]
      },
      \\"audio/vnd.nokia.mobile-xmf\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.nortel.vbk\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.nuera.ecelp4800\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp4800\\"]
      },
      \\"audio/vnd.nuera.ecelp7470\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp7470\\"]
      },
      \\"audio/vnd.nuera.ecelp9600\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp9600\\"]
      },
      \\"audio/vnd.octel.sbc\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.presonus.multitrack\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.qcelp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.rhetorex.32kadpcm\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.rip\\": {
        source: \\"iana\\",
        extensions: [\\"rip\\"]
      },
      \\"audio/vnd.rn-realaudio\\": {
        compressible: false
      },
      \\"audio/vnd.sealedmedia.softseal.mpeg\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.vmx.cvsd\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.wave\\": {
        compressible: false
      },
      \\"audio/vorbis\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"audio/vorbis-config\\": {
        source: \\"iana\\"
      },
      \\"audio/wav\\": {
        compressible: false,
        extensions: [\\"wav\\"]
      },
      \\"audio/wave\\": {
        compressible: false,
        extensions: [\\"wav\\"]
      },
      \\"audio/webm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"weba\\"]
      },
      \\"audio/x-aac\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"aac\\"]
      },
      \\"audio/x-aiff\\": {
        source: \\"apache\\",
        extensions: [\\"aif\\", \\"aiff\\", \\"aifc\\"]
      },
      \\"audio/x-caf\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"caf\\"]
      },
      \\"audio/x-flac\\": {
        source: \\"apache\\",
        extensions: [\\"flac\\"]
      },
      \\"audio/x-m4a\\": {
        source: \\"nginx\\",
        extensions: [\\"m4a\\"]
      },
      \\"audio/x-matroska\\": {
        source: \\"apache\\",
        extensions: [\\"mka\\"]
      },
      \\"audio/x-mpegurl\\": {
        source: \\"apache\\",
        extensions: [\\"m3u\\"]
      },
      \\"audio/x-ms-wax\\": {
        source: \\"apache\\",
        extensions: [\\"wax\\"]
      },
      \\"audio/x-ms-wma\\": {
        source: \\"apache\\",
        extensions: [\\"wma\\"]
      },
      \\"audio/x-pn-realaudio\\": {
        source: \\"apache\\",
        extensions: [\\"ram\\", \\"ra\\"]
      },
      \\"audio/x-pn-realaudio-plugin\\": {
        source: \\"apache\\",
        extensions: [\\"rmp\\"]
      },
      \\"audio/x-realaudio\\": {
        source: \\"nginx\\",
        extensions: [\\"ra\\"]
      },
      \\"audio/x-tta\\": {
        source: \\"apache\\"
      },
      \\"audio/x-wav\\": {
        source: \\"apache\\",
        extensions: [\\"wav\\"]
      },
      \\"audio/xm\\": {
        source: \\"apache\\",
        extensions: [\\"xm\\"]
      },
      \\"chemical/x-cdx\\": {
        source: \\"apache\\",
        extensions: [\\"cdx\\"]
      },
      \\"chemical/x-cif\\": {
        source: \\"apache\\",
        extensions: [\\"cif\\"]
      },
      \\"chemical/x-cmdf\\": {
        source: \\"apache\\",
        extensions: [\\"cmdf\\"]
      },
      \\"chemical/x-cml\\": {
        source: \\"apache\\",
        extensions: [\\"cml\\"]
      },
      \\"chemical/x-csml\\": {
        source: \\"apache\\",
        extensions: [\\"csml\\"]
      },
      \\"chemical/x-pdb\\": {
        source: \\"apache\\"
      },
      \\"chemical/x-xyz\\": {
        source: \\"apache\\",
        extensions: [\\"xyz\\"]
      },
      \\"font/collection\\": {
        source: \\"iana\\",
        extensions: [\\"ttc\\"]
      },
      \\"font/otf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"otf\\"]
      },
      \\"font/sfnt\\": {
        source: \\"iana\\"
      },
      \\"font/ttf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ttf\\"]
      },
      \\"font/woff\\": {
        source: \\"iana\\",
        extensions: [\\"woff\\"]
      },
      \\"font/woff2\\": {
        source: \\"iana\\",
        extensions: [\\"woff2\\"]
      },
      \\"image/aces\\": {
        source: \\"iana\\",
        extensions: [\\"exr\\"]
      },
      \\"image/apng\\": {
        compressible: false,
        extensions: [\\"apng\\"]
      },
      \\"image/avci\\": {
        source: \\"iana\\",
        extensions: [\\"avci\\"]
      },
      \\"image/avcs\\": {
        source: \\"iana\\",
        extensions: [\\"avcs\\"]
      },
      \\"image/avif\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"avif\\"]
      },
      \\"image/bmp\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"bmp\\"]
      },
      \\"image/cgm\\": {
        source: \\"iana\\",
        extensions: [\\"cgm\\"]
      },
      \\"image/dicom-rle\\": {
        source: \\"iana\\",
        extensions: [\\"drle\\"]
      },
      \\"image/emf\\": {
        source: \\"iana\\",
        extensions: [\\"emf\\"]
      },
      \\"image/fits\\": {
        source: \\"iana\\",
        extensions: [\\"fits\\"]
      },
      \\"image/g3fax\\": {
        source: \\"iana\\",
        extensions: [\\"g3\\"]
      },
      \\"image/gif\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"gif\\"]
      },
      \\"image/heic\\": {
        source: \\"iana\\",
        extensions: [\\"heic\\"]
      },
      \\"image/heic-sequence\\": {
        source: \\"iana\\",
        extensions: [\\"heics\\"]
      },
      \\"image/heif\\": {
        source: \\"iana\\",
        extensions: [\\"heif\\"]
      },
      \\"image/heif-sequence\\": {
        source: \\"iana\\",
        extensions: [\\"heifs\\"]
      },
      \\"image/hej2k\\": {
        source: \\"iana\\",
        extensions: [\\"hej2\\"]
      },
      \\"image/hsj2\\": {
        source: \\"iana\\",
        extensions: [\\"hsj2\\"]
      },
      \\"image/ief\\": {
        source: \\"iana\\",
        extensions: [\\"ief\\"]
      },
      \\"image/jls\\": {
        source: \\"iana\\",
        extensions: [\\"jls\\"]
      },
      \\"image/jp2\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jp2\\", \\"jpg2\\"]
      },
      \\"image/jpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpeg\\", \\"jpg\\", \\"jpe\\"]
      },
      \\"image/jph\\": {
        source: \\"iana\\",
        extensions: [\\"jph\\"]
      },
      \\"image/jphc\\": {
        source: \\"iana\\",
        extensions: [\\"jhc\\"]
      },
      \\"image/jpm\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpm\\"]
      },
      \\"image/jpx\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpx\\", \\"jpf\\"]
      },
      \\"image/jxr\\": {
        source: \\"iana\\",
        extensions: [\\"jxr\\"]
      },
      \\"image/jxra\\": {
        source: \\"iana\\",
        extensions: [\\"jxra\\"]
      },
      \\"image/jxrs\\": {
        source: \\"iana\\",
        extensions: [\\"jxrs\\"]
      },
      \\"image/jxs\\": {
        source: \\"iana\\",
        extensions: [\\"jxs\\"]
      },
      \\"image/jxsc\\": {
        source: \\"iana\\",
        extensions: [\\"jxsc\\"]
      },
      \\"image/jxsi\\": {
        source: \\"iana\\",
        extensions: [\\"jxsi\\"]
      },
      \\"image/jxss\\": {
        source: \\"iana\\",
        extensions: [\\"jxss\\"]
      },
      \\"image/ktx\\": {
        source: \\"iana\\",
        extensions: [\\"ktx\\"]
      },
      \\"image/ktx2\\": {
        source: \\"iana\\",
        extensions: [\\"ktx2\\"]
      },
      \\"image/naplps\\": {
        source: \\"iana\\"
      },
      \\"image/pjpeg\\": {
        compressible: false
      },
      \\"image/png\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"png\\"]
      },
      \\"image/prs.btif\\": {
        source: \\"iana\\",
        extensions: [\\"btif\\"]
      },
      \\"image/prs.pti\\": {
        source: \\"iana\\",
        extensions: [\\"pti\\"]
      },
      \\"image/pwg-raster\\": {
        source: \\"iana\\"
      },
      \\"image/sgi\\": {
        source: \\"apache\\",
        extensions: [\\"sgi\\"]
      },
      \\"image/svg+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"svg\\", \\"svgz\\"]
      },
      \\"image/t38\\": {
        source: \\"iana\\",
        extensions: [\\"t38\\"]
      },
      \\"image/tiff\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"tif\\", \\"tiff\\"]
      },
      \\"image/tiff-fx\\": {
        source: \\"iana\\",
        extensions: [\\"tfx\\"]
      },
      \\"image/vnd.adobe.photoshop\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"psd\\"]
      },
      \\"image/vnd.airzip.accelerator.azv\\": {
        source: \\"iana\\",
        extensions: [\\"azv\\"]
      },
      \\"image/vnd.cns.inf2\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.dece.graphic\\": {
        source: \\"iana\\",
        extensions: [\\"uvi\\", \\"uvvi\\", \\"uvg\\", \\"uvvg\\"]
      },
      \\"image/vnd.djvu\\": {
        source: \\"iana\\",
        extensions: [\\"djvu\\", \\"djv\\"]
      },
      \\"image/vnd.dvb.subtitle\\": {
        source: \\"iana\\",
        extensions: [\\"sub\\"]
      },
      \\"image/vnd.dwg\\": {
        source: \\"iana\\",
        extensions: [\\"dwg\\"]
      },
      \\"image/vnd.dxf\\": {
        source: \\"iana\\",
        extensions: [\\"dxf\\"]
      },
      \\"image/vnd.fastbidsheet\\": {
        source: \\"iana\\",
        extensions: [\\"fbs\\"]
      },
      \\"image/vnd.fpx\\": {
        source: \\"iana\\",
        extensions: [\\"fpx\\"]
      },
      \\"image/vnd.fst\\": {
        source: \\"iana\\",
        extensions: [\\"fst\\"]
      },
      \\"image/vnd.fujixerox.edmics-mmr\\": {
        source: \\"iana\\",
        extensions: [\\"mmr\\"]
      },
      \\"image/vnd.fujixerox.edmics-rlc\\": {
        source: \\"iana\\",
        extensions: [\\"rlc\\"]
      },
      \\"image/vnd.globalgraphics.pgb\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.microsoft.icon\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ico\\"]
      },
      \\"image/vnd.mix\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.mozilla.apng\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.ms-dds\\": {
        compressible: true,
        extensions: [\\"dds\\"]
      },
      \\"image/vnd.ms-modi\\": {
        source: \\"iana\\",
        extensions: [\\"mdi\\"]
      },
      \\"image/vnd.ms-photo\\": {
        source: \\"apache\\",
        extensions: [\\"wdp\\"]
      },
      \\"image/vnd.net-fpx\\": {
        source: \\"iana\\",
        extensions: [\\"npx\\"]
      },
      \\"image/vnd.pco.b16\\": {
        source: \\"iana\\",
        extensions: [\\"b16\\"]
      },
      \\"image/vnd.radiance\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealed.png\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealedmedia.softseal.gif\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealedmedia.softseal.jpg\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.svf\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.tencent.tap\\": {
        source: \\"iana\\",
        extensions: [\\"tap\\"]
      },
      \\"image/vnd.valve.source.texture\\": {
        source: \\"iana\\",
        extensions: [\\"vtf\\"]
      },
      \\"image/vnd.wap.wbmp\\": {
        source: \\"iana\\",
        extensions: [\\"wbmp\\"]
      },
      \\"image/vnd.xiff\\": {
        source: \\"iana\\",
        extensions: [\\"xif\\"]
      },
      \\"image/vnd.zbrush.pcx\\": {
        source: \\"iana\\",
        extensions: [\\"pcx\\"]
      },
      \\"image/webp\\": {
        source: \\"apache\\",
        extensions: [\\"webp\\"]
      },
      \\"image/wmf\\": {
        source: \\"iana\\",
        extensions: [\\"wmf\\"]
      },
      \\"image/x-3ds\\": {
        source: \\"apache\\",
        extensions: [\\"3ds\\"]
      },
      \\"image/x-cmu-raster\\": {
        source: \\"apache\\",
        extensions: [\\"ras\\"]
      },
      \\"image/x-cmx\\": {
        source: \\"apache\\",
        extensions: [\\"cmx\\"]
      },
      \\"image/x-freehand\\": {
        source: \\"apache\\",
        extensions: [\\"fh\\", \\"fhc\\", \\"fh4\\", \\"fh5\\", \\"fh7\\"]
      },
      \\"image/x-icon\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ico\\"]
      },
      \\"image/x-jng\\": {
        source: \\"nginx\\",
        extensions: [\\"jng\\"]
      },
      \\"image/x-mrsid-image\\": {
        source: \\"apache\\",
        extensions: [\\"sid\\"]
      },
      \\"image/x-ms-bmp\\": {
        source: \\"nginx\\",
        compressible: true,
        extensions: [\\"bmp\\"]
      },
      \\"image/x-pcx\\": {
        source: \\"apache\\",
        extensions: [\\"pcx\\"]
      },
      \\"image/x-pict\\": {
        source: \\"apache\\",
        extensions: [\\"pic\\", \\"pct\\"]
      },
      \\"image/x-portable-anymap\\": {
        source: \\"apache\\",
        extensions: [\\"pnm\\"]
      },
      \\"image/x-portable-bitmap\\": {
        source: \\"apache\\",
        extensions: [\\"pbm\\"]
      },
      \\"image/x-portable-graymap\\": {
        source: \\"apache\\",
        extensions: [\\"pgm\\"]
      },
      \\"image/x-portable-pixmap\\": {
        source: \\"apache\\",
        extensions: [\\"ppm\\"]
      },
      \\"image/x-rgb\\": {
        source: \\"apache\\",
        extensions: [\\"rgb\\"]
      },
      \\"image/x-tga\\": {
        source: \\"apache\\",
        extensions: [\\"tga\\"]
      },
      \\"image/x-xbitmap\\": {
        source: \\"apache\\",
        extensions: [\\"xbm\\"]
      },
      \\"image/x-xcf\\": {
        compressible: false
      },
      \\"image/x-xpixmap\\": {
        source: \\"apache\\",
        extensions: [\\"xpm\\"]
      },
      \\"image/x-xwindowdump\\": {
        source: \\"apache\\",
        extensions: [\\"xwd\\"]
      },
      \\"message/cpim\\": {
        source: \\"iana\\"
      },
      \\"message/delivery-status\\": {
        source: \\"iana\\"
      },
      \\"message/disposition-notification\\": {
        source: \\"iana\\",
        extensions: [
          \\"disposition-notification\\"
        ]
      },
      \\"message/external-body\\": {
        source: \\"iana\\"
      },
      \\"message/feedback-report\\": {
        source: \\"iana\\"
      },
      \\"message/global\\": {
        source: \\"iana\\",
        extensions: [\\"u8msg\\"]
      },
      \\"message/global-delivery-status\\": {
        source: \\"iana\\",
        extensions: [\\"u8dsn\\"]
      },
      \\"message/global-disposition-notification\\": {
        source: \\"iana\\",
        extensions: [\\"u8mdn\\"]
      },
      \\"message/global-headers\\": {
        source: \\"iana\\",
        extensions: [\\"u8hdr\\"]
      },
      \\"message/http\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"message/imdn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"message/news\\": {
        source: \\"iana\\"
      },
      \\"message/partial\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"message/rfc822\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"eml\\", \\"mime\\"]
      },
      \\"message/s-http\\": {
        source: \\"iana\\"
      },
      \\"message/sip\\": {
        source: \\"iana\\"
      },
      \\"message/sipfrag\\": {
        source: \\"iana\\"
      },
      \\"message/tracking-status\\": {
        source: \\"iana\\"
      },
      \\"message/vnd.si.simp\\": {
        source: \\"iana\\"
      },
      \\"message/vnd.wfa.wsc\\": {
        source: \\"iana\\",
        extensions: [\\"wsc\\"]
      },
      \\"model/3mf\\": {
        source: \\"iana\\",
        extensions: [\\"3mf\\"]
      },
      \\"model/e57\\": {
        source: \\"iana\\"
      },
      \\"model/gltf+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"gltf\\"]
      },
      \\"model/gltf-binary\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"glb\\"]
      },
      \\"model/iges\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"igs\\", \\"iges\\"]
      },
      \\"model/mesh\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"msh\\", \\"mesh\\", \\"silo\\"]
      },
      \\"model/mtl\\": {
        source: \\"iana\\",
        extensions: [\\"mtl\\"]
      },
      \\"model/obj\\": {
        source: \\"iana\\",
        extensions: [\\"obj\\"]
      },
      \\"model/step\\": {
        source: \\"iana\\"
      },
      \\"model/step+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"stpx\\"]
      },
      \\"model/step+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"stpz\\"]
      },
      \\"model/step-xml+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"stpxz\\"]
      },
      \\"model/stl\\": {
        source: \\"iana\\",
        extensions: [\\"stl\\"]
      },
      \\"model/vnd.collada+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dae\\"]
      },
      \\"model/vnd.dwf\\": {
        source: \\"iana\\",
        extensions: [\\"dwf\\"]
      },
      \\"model/vnd.flatland.3dml\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.gdl\\": {
        source: \\"iana\\",
        extensions: [\\"gdl\\"]
      },
      \\"model/vnd.gs-gdl\\": {
        source: \\"apache\\"
      },
      \\"model/vnd.gs.gdl\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.gtw\\": {
        source: \\"iana\\",
        extensions: [\\"gtw\\"]
      },
      \\"model/vnd.moml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"model/vnd.mts\\": {
        source: \\"iana\\",
        extensions: [\\"mts\\"]
      },
      \\"model/vnd.opengex\\": {
        source: \\"iana\\",
        extensions: [\\"ogex\\"]
      },
      \\"model/vnd.parasolid.transmit.binary\\": {
        source: \\"iana\\",
        extensions: [\\"x_b\\"]
      },
      \\"model/vnd.parasolid.transmit.text\\": {
        source: \\"iana\\",
        extensions: [\\"x_t\\"]
      },
      \\"model/vnd.pytha.pyox\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.rosette.annotated-data-model\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.sap.vds\\": {
        source: \\"iana\\",
        extensions: [\\"vds\\"]
      },
      \\"model/vnd.usdz+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"usdz\\"]
      },
      \\"model/vnd.valve.source.compiled-map\\": {
        source: \\"iana\\",
        extensions: [\\"bsp\\"]
      },
      \\"model/vnd.vtu\\": {
        source: \\"iana\\",
        extensions: [\\"vtu\\"]
      },
      \\"model/vrml\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"wrl\\", \\"vrml\\"]
      },
      \\"model/x3d+binary\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"x3db\\", \\"x3dbz\\"]
      },
      \\"model/x3d+fastinfoset\\": {
        source: \\"iana\\",
        extensions: [\\"x3db\\"]
      },
      \\"model/x3d+vrml\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"x3dv\\", \\"x3dvz\\"]
      },
      \\"model/x3d+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"x3d\\", \\"x3dz\\"]
      },
      \\"model/x3d-vrml\\": {
        source: \\"iana\\",
        extensions: [\\"x3dv\\"]
      },
      \\"multipart/alternative\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/appledouble\\": {
        source: \\"iana\\"
      },
      \\"multipart/byteranges\\": {
        source: \\"iana\\"
      },
      \\"multipart/digest\\": {
        source: \\"iana\\"
      },
      \\"multipart/encrypted\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/form-data\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/header-set\\": {
        source: \\"iana\\"
      },
      \\"multipart/mixed\\": {
        source: \\"iana\\"
      },
      \\"multipart/multilingual\\": {
        source: \\"iana\\"
      },
      \\"multipart/parallel\\": {
        source: \\"iana\\"
      },
      \\"multipart/related\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/report\\": {
        source: \\"iana\\"
      },
      \\"multipart/signed\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/vnd.bint.med-plus\\": {
        source: \\"iana\\"
      },
      \\"multipart/voice-message\\": {
        source: \\"iana\\"
      },
      \\"multipart/x-mixed-replace\\": {
        source: \\"iana\\"
      },
      \\"text/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"text/cache-manifest\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"appcache\\", \\"manifest\\"]
      },
      \\"text/calendar\\": {
        source: \\"iana\\",
        extensions: [\\"ics\\", \\"ifb\\"]
      },
      \\"text/calender\\": {
        compressible: true
      },
      \\"text/cmd\\": {
        compressible: true
      },
      \\"text/coffeescript\\": {
        extensions: [\\"coffee\\", \\"litcoffee\\"]
      },
      \\"text/cql\\": {
        source: \\"iana\\"
      },
      \\"text/cql-expression\\": {
        source: \\"iana\\"
      },
      \\"text/cql-identifier\\": {
        source: \\"iana\\"
      },
      \\"text/css\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"css\\"]
      },
      \\"text/csv\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"csv\\"]
      },
      \\"text/csv-schema\\": {
        source: \\"iana\\"
      },
      \\"text/directory\\": {
        source: \\"iana\\"
      },
      \\"text/dns\\": {
        source: \\"iana\\"
      },
      \\"text/ecmascript\\": {
        source: \\"iana\\"
      },
      \\"text/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"text/enriched\\": {
        source: \\"iana\\"
      },
      \\"text/fhirpath\\": {
        source: \\"iana\\"
      },
      \\"text/flexfec\\": {
        source: \\"iana\\"
      },
      \\"text/fwdred\\": {
        source: \\"iana\\"
      },
      \\"text/gff3\\": {
        source: \\"iana\\"
      },
      \\"text/grammar-ref-list\\": {
        source: \\"iana\\"
      },
      \\"text/html\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"html\\", \\"htm\\", \\"shtml\\"]
      },
      \\"text/jade\\": {
        extensions: [\\"jade\\"]
      },
      \\"text/javascript\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"text/jcr-cnd\\": {
        source: \\"iana\\"
      },
      \\"text/jsx\\": {
        compressible: true,
        extensions: [\\"jsx\\"]
      },
      \\"text/less\\": {
        compressible: true,
        extensions: [\\"less\\"]
      },
      \\"text/markdown\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"markdown\\", \\"md\\"]
      },
      \\"text/mathml\\": {
        source: \\"nginx\\",
        extensions: [\\"mml\\"]
      },
      \\"text/mdx\\": {
        compressible: true,
        extensions: [\\"mdx\\"]
      },
      \\"text/mizar\\": {
        source: \\"iana\\"
      },
      \\"text/n3\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"n3\\"]
      },
      \\"text/parameters\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/parityfec\\": {
        source: \\"iana\\"
      },
      \\"text/plain\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"txt\\", \\"text\\", \\"conf\\", \\"def\\", \\"list\\", \\"log\\", \\"in\\", \\"ini\\"]
      },
      \\"text/provenance-notation\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/prs.fallenstein.rst\\": {
        source: \\"iana\\"
      },
      \\"text/prs.lines.tag\\": {
        source: \\"iana\\",
        extensions: [\\"dsc\\"]
      },
      \\"text/prs.prop.logic\\": {
        source: \\"iana\\"
      },
      \\"text/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"text/red\\": {
        source: \\"iana\\"
      },
      \\"text/rfc822-headers\\": {
        source: \\"iana\\"
      },
      \\"text/richtext\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtx\\"]
      },
      \\"text/rtf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtf\\"]
      },
      \\"text/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"text/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"text/rtx\\": {
        source: \\"iana\\"
      },
      \\"text/sgml\\": {
        source: \\"iana\\",
        extensions: [\\"sgml\\", \\"sgm\\"]
      },
      \\"text/shaclc\\": {
        source: \\"iana\\"
      },
      \\"text/shex\\": {
        source: \\"iana\\",
        extensions: [\\"shex\\"]
      },
      \\"text/slim\\": {
        extensions: [\\"slim\\", \\"slm\\"]
      },
      \\"text/spdx\\": {
        source: \\"iana\\",
        extensions: [\\"spdx\\"]
      },
      \\"text/strings\\": {
        source: \\"iana\\"
      },
      \\"text/stylus\\": {
        extensions: [\\"stylus\\", \\"styl\\"]
      },
      \\"text/t140\\": {
        source: \\"iana\\"
      },
      \\"text/tab-separated-values\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tsv\\"]
      },
      \\"text/troff\\": {
        source: \\"iana\\",
        extensions: [\\"t\\", \\"tr\\", \\"roff\\", \\"man\\", \\"me\\", \\"ms\\"]
      },
      \\"text/turtle\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"ttl\\"]
      },
      \\"text/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"text/uri-list\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uri\\", \\"uris\\", \\"urls\\"]
      },
      \\"text/vcard\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"vcard\\"]
      },
      \\"text/vnd.a\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.abc\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.ascii-art\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.curl\\": {
        source: \\"iana\\",
        extensions: [\\"curl\\"]
      },
      \\"text/vnd.curl.dcurl\\": {
        source: \\"apache\\",
        extensions: [\\"dcurl\\"]
      },
      \\"text/vnd.curl.mcurl\\": {
        source: \\"apache\\",
        extensions: [\\"mcurl\\"]
      },
      \\"text/vnd.curl.scurl\\": {
        source: \\"apache\\",
        extensions: [\\"scurl\\"]
      },
      \\"text/vnd.debian.copyright\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.dmclientscript\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.dvb.subtitle\\": {
        source: \\"iana\\",
        extensions: [\\"sub\\"]
      },
      \\"text/vnd.esmertec.theme-descriptor\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.familysearch.gedcom\\": {
        source: \\"iana\\",
        extensions: [\\"ged\\"]
      },
      \\"text/vnd.ficlab.flt\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.fly\\": {
        source: \\"iana\\",
        extensions: [\\"fly\\"]
      },
      \\"text/vnd.fmi.flexstor\\": {
        source: \\"iana\\",
        extensions: [\\"flx\\"]
      },
      \\"text/vnd.gml\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.graphviz\\": {
        source: \\"iana\\",
        extensions: [\\"gv\\"]
      },
      \\"text/vnd.hans\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.hgl\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.in3d.3dml\\": {
        source: \\"iana\\",
        extensions: [\\"3dml\\"]
      },
      \\"text/vnd.in3d.spot\\": {
        source: \\"iana\\",
        extensions: [\\"spot\\"]
      },
      \\"text/vnd.iptc.newsml\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.iptc.nitf\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.latex-z\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.motorola.reflex\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.ms-mediapackage\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.net2phone.commcenter.command\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.radisys.msml-basic-layout\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.senx.warpscript\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.si.uricatalogue\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.sosi\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.sun.j2me.app-descriptor\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"jad\\"]
      },
      \\"text/vnd.trolltech.linguist\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.wap.si\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.wap.sl\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.wap.wml\\": {
        source: \\"iana\\",
        extensions: [\\"wml\\"]
      },
      \\"text/vnd.wap.wmlscript\\": {
        source: \\"iana\\",
        extensions: [\\"wmls\\"]
      },
      \\"text/vtt\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"vtt\\"]
      },
      \\"text/x-asm\\": {
        source: \\"apache\\",
        extensions: [\\"s\\", \\"asm\\"]
      },
      \\"text/x-c\\": {
        source: \\"apache\\",
        extensions: [\\"c\\", \\"cc\\", \\"cxx\\", \\"cpp\\", \\"h\\", \\"hh\\", \\"dic\\"]
      },
      \\"text/x-component\\": {
        source: \\"nginx\\",
        extensions: [\\"htc\\"]
      },
      \\"text/x-fortran\\": {
        source: \\"apache\\",
        extensions: [\\"f\\", \\"for\\", \\"f77\\", \\"f90\\"]
      },
      \\"text/x-gwt-rpc\\": {
        compressible: true
      },
      \\"text/x-handlebars-template\\": {
        extensions: [\\"hbs\\"]
      },
      \\"text/x-java-source\\": {
        source: \\"apache\\",
        extensions: [\\"java\\"]
      },
      \\"text/x-jquery-tmpl\\": {
        compressible: true
      },
      \\"text/x-lua\\": {
        extensions: [\\"lua\\"]
      },
      \\"text/x-markdown\\": {
        compressible: true,
        extensions: [\\"mkd\\"]
      },
      \\"text/x-nfo\\": {
        source: \\"apache\\",
        extensions: [\\"nfo\\"]
      },
      \\"text/x-opml\\": {
        source: \\"apache\\",
        extensions: [\\"opml\\"]
      },
      \\"text/x-org\\": {
        compressible: true,
        extensions: [\\"org\\"]
      },
      \\"text/x-pascal\\": {
        source: \\"apache\\",
        extensions: [\\"p\\", \\"pas\\"]
      },
      \\"text/x-processing\\": {
        compressible: true,
        extensions: [\\"pde\\"]
      },
      \\"text/x-sass\\": {
        extensions: [\\"sass\\"]
      },
      \\"text/x-scss\\": {
        extensions: [\\"scss\\"]
      },
      \\"text/x-setext\\": {
        source: \\"apache\\",
        extensions: [\\"etx\\"]
      },
      \\"text/x-sfv\\": {
        source: \\"apache\\",
        extensions: [\\"sfv\\"]
      },
      \\"text/x-suse-ymp\\": {
        compressible: true,
        extensions: [\\"ymp\\"]
      },
      \\"text/x-uuencode\\": {
        source: \\"apache\\",
        extensions: [\\"uu\\"]
      },
      \\"text/x-vcalendar\\": {
        source: \\"apache\\",
        extensions: [\\"vcs\\"]
      },
      \\"text/x-vcard\\": {
        source: \\"apache\\",
        extensions: [\\"vcf\\"]
      },
      \\"text/xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xml\\"]
      },
      \\"text/xml-external-parsed-entity\\": {
        source: \\"iana\\"
      },
      \\"text/yaml\\": {
        compressible: true,
        extensions: [\\"yaml\\", \\"yml\\"]
      },
      \\"video/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"video/3gpp\\": {
        source: \\"iana\\",
        extensions: [\\"3gp\\", \\"3gpp\\"]
      },
      \\"video/3gpp-tt\\": {
        source: \\"iana\\"
      },
      \\"video/3gpp2\\": {
        source: \\"iana\\",
        extensions: [\\"3g2\\"]
      },
      \\"video/av1\\": {
        source: \\"iana\\"
      },
      \\"video/bmpeg\\": {
        source: \\"iana\\"
      },
      \\"video/bt656\\": {
        source: \\"iana\\"
      },
      \\"video/celb\\": {
        source: \\"iana\\"
      },
      \\"video/dv\\": {
        source: \\"iana\\"
      },
      \\"video/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"video/ffv1\\": {
        source: \\"iana\\"
      },
      \\"video/flexfec\\": {
        source: \\"iana\\"
      },
      \\"video/h261\\": {
        source: \\"iana\\",
        extensions: [\\"h261\\"]
      },
      \\"video/h263\\": {
        source: \\"iana\\",
        extensions: [\\"h263\\"]
      },
      \\"video/h263-1998\\": {
        source: \\"iana\\"
      },
      \\"video/h263-2000\\": {
        source: \\"iana\\"
      },
      \\"video/h264\\": {
        source: \\"iana\\",
        extensions: [\\"h264\\"]
      },
      \\"video/h264-rcdo\\": {
        source: \\"iana\\"
      },
      \\"video/h264-svc\\": {
        source: \\"iana\\"
      },
      \\"video/h265\\": {
        source: \\"iana\\"
      },
      \\"video/iso.segment\\": {
        source: \\"iana\\",
        extensions: [\\"m4s\\"]
      },
      \\"video/jpeg\\": {
        source: \\"iana\\",
        extensions: [\\"jpgv\\"]
      },
      \\"video/jpeg2000\\": {
        source: \\"iana\\"
      },
      \\"video/jpm\\": {
        source: \\"apache\\",
        extensions: [\\"jpm\\", \\"jpgm\\"]
      },
      \\"video/jxsv\\": {
        source: \\"iana\\"
      },
      \\"video/mj2\\": {
        source: \\"iana\\",
        extensions: [\\"mj2\\", \\"mjp2\\"]
      },
      \\"video/mp1s\\": {
        source: \\"iana\\"
      },
      \\"video/mp2p\\": {
        source: \\"iana\\"
      },
      \\"video/mp2t\\": {
        source: \\"iana\\",
        extensions: [\\"ts\\"]
      },
      \\"video/mp4\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mp4\\", \\"mp4v\\", \\"mpg4\\"]
      },
      \\"video/mp4v-es\\": {
        source: \\"iana\\"
      },
      \\"video/mpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mpeg\\", \\"mpg\\", \\"mpe\\", \\"m1v\\", \\"m2v\\"]
      },
      \\"video/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"video/mpv\\": {
        source: \\"iana\\"
      },
      \\"video/nv\\": {
        source: \\"iana\\"
      },
      \\"video/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ogv\\"]
      },
      \\"video/parityfec\\": {
        source: \\"iana\\"
      },
      \\"video/pointer\\": {
        source: \\"iana\\"
      },
      \\"video/quicktime\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"qt\\", \\"mov\\"]
      },
      \\"video/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"video/raw\\": {
        source: \\"iana\\"
      },
      \\"video/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"video/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"video/rtx\\": {
        source: \\"iana\\"
      },
      \\"video/scip\\": {
        source: \\"iana\\"
      },
      \\"video/smpte291\\": {
        source: \\"iana\\"
      },
      \\"video/smpte292m\\": {
        source: \\"iana\\"
      },
      \\"video/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"video/vc1\\": {
        source: \\"iana\\"
      },
      \\"video/vc2\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.cctv\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dece.hd\\": {
        source: \\"iana\\",
        extensions: [\\"uvh\\", \\"uvvh\\"]
      },
      \\"video/vnd.dece.mobile\\": {
        source: \\"iana\\",
        extensions: [\\"uvm\\", \\"uvvm\\"]
      },
      \\"video/vnd.dece.mp4\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dece.pd\\": {
        source: \\"iana\\",
        extensions: [\\"uvp\\", \\"uvvp\\"]
      },
      \\"video/vnd.dece.sd\\": {
        source: \\"iana\\",
        extensions: [\\"uvs\\", \\"uvvs\\"]
      },
      \\"video/vnd.dece.video\\": {
        source: \\"iana\\",
        extensions: [\\"uvv\\", \\"uvvv\\"]
      },
      \\"video/vnd.directv.mpeg\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.directv.mpeg-tts\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dlna.mpeg-tts\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dvb.file\\": {
        source: \\"iana\\",
        extensions: [\\"dvb\\"]
      },
      \\"video/vnd.fvt\\": {
        source: \\"iana\\",
        extensions: [\\"fvt\\"]
      },
      \\"video/vnd.hns.video\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.1dparityfec-1010\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.1dparityfec-2005\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.2dparityfec-1010\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.2dparityfec-2005\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.ttsavc\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.ttsmpeg2\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.motorola.video\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.motorola.videop\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.mpegurl\\": {
        source: \\"iana\\",
        extensions: [\\"mxu\\", \\"m4u\\"]
      },
      \\"video/vnd.ms-playready.media.pyv\\": {
        source: \\"iana\\",
        extensions: [\\"pyv\\"]
      },
      \\"video/vnd.nokia.interleaved-multimedia\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.nokia.mp4vr\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.nokia.videovoip\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.objectvideo\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.radgamettools.bink\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.radgamettools.smacker\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.mpeg1\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.mpeg4\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.swf\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealedmedia.softseal.mov\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.uvvu.mp4\\": {
        source: \\"iana\\",
        extensions: [\\"uvu\\", \\"uvvu\\"]
      },
      \\"video/vnd.vivo\\": {
        source: \\"iana\\",
        extensions: [\\"viv\\"]
      },
      \\"video/vnd.youtube.yt\\": {
        source: \\"iana\\"
      },
      \\"video/vp8\\": {
        source: \\"iana\\"
      },
      \\"video/vp9\\": {
        source: \\"iana\\"
      },
      \\"video/webm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"webm\\"]
      },
      \\"video/x-f4v\\": {
        source: \\"apache\\",
        extensions: [\\"f4v\\"]
      },
      \\"video/x-fli\\": {
        source: \\"apache\\",
        extensions: [\\"fli\\"]
      },
      \\"video/x-flv\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"flv\\"]
      },
      \\"video/x-m4v\\": {
        source: \\"apache\\",
        extensions: [\\"m4v\\"]
      },
      \\"video/x-matroska\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"mkv\\", \\"mk3d\\", \\"mks\\"]
      },
      \\"video/x-mng\\": {
        source: \\"apache\\",
        extensions: [\\"mng\\"]
      },
      \\"video/x-ms-asf\\": {
        source: \\"apache\\",
        extensions: [\\"asf\\", \\"asx\\"]
      },
      \\"video/x-ms-vob\\": {
        source: \\"apache\\",
        extensions: [\\"vob\\"]
      },
      \\"video/x-ms-wm\\": {
        source: \\"apache\\",
        extensions: [\\"wm\\"]
      },
      \\"video/x-ms-wmv\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"wmv\\"]
      },
      \\"video/x-ms-wmx\\": {
        source: \\"apache\\",
        extensions: [\\"wmx\\"]
      },
      \\"video/x-ms-wvx\\": {
        source: \\"apache\\",
        extensions: [\\"wvx\\"]
      },
      \\"video/x-msvideo\\": {
        source: \\"apache\\",
        extensions: [\\"avi\\"]
      },
      \\"video/x-sgi-movie\\": {
        source: \\"apache\\",
        extensions: [\\"movie\\"]
      },
      \\"video/x-smv\\": {
        source: \\"apache\\",
        extensions: [\\"smv\\"]
      },
      \\"x-conference/x-cooltalk\\": {
        source: \\"apache\\",
        extensions: [\\"ice\\"]
      },
      \\"x-shader/x-fragment\\": {
        compressible: true
      },
      \\"x-shader/x-vertex\\": {
        compressible: true
      }
    };
  }
});

// .yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  \\".yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/index.js\\"(exports, module2) {
    module2.exports = require_db();
  }
});

// .yarn/cache/mime-types-npm-2.1.35-dd9ea9f3e2-89a5b7f1de.zip/node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  \\".yarn/cache/mime-types-npm-2.1.35-dd9ea9f3e2-89a5b7f1de.zip/node_modules/mime-types/index.js\\"(exports) {
    \\"use strict\\";
    var db = require_mime_db();
    var extname = require(\\"path\\").extname;
    var EXTRACT_TYPE_REGEXP = /^\\\\s*([^;\\\\s]*)(?:;|\\\\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\\\\//i;
    exports.charset = charset;
    exports.charsets = { lookup: charset };
    exports.contentType = contentType;
    exports.extension = extension;
    exports.extensions = /* @__PURE__ */ Object.create(null);
    exports.lookup = lookup;
    exports.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports.extensions, exports.types);
    function charset(type) {
      if (!type || typeof type !== \\"string\\") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return \\"UTF-8\\";
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== \\"string\\") {
        return false;
      }
      var mime = str.indexOf(\\"/\\") === -1 ? exports.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf(\\"charset\\") === -1) {
        var charset2 = exports.charset(mime);
        if (charset2)
          mime += \\"; charset=\\" + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== \\"string\\") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== \\"string\\") {
        return false;
      }
      var extension2 = extname(\\"x.\\" + path).toLowerCase().substr(1);
      if (!extension2) {
        return false;
      }
      return exports.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = [\\"nginx\\", \\"apache\\", void 0, \\"iana\\"];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to = preference.indexOf(mime.source);
            if (types[extension2] !== \\"application/octet-stream\\" && (from > to || from === to && types[extension2].substr(0, 12) === \\"application/\\")) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/defer.js\\"(exports, module2) {
    module2.exports = defer;
    function defer(fn) {
      var nextTick = typeof setImmediate == \\"function\\" ? setImmediate : typeof process == \\"object\\" && typeof process.nextTick == \\"function\\" ? process.nextTick : null;
      if (nextTick) {
        nextTick(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/async.js\\"(exports, module2) {
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function() {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/abort.js\\"(exports, module2) {
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == \\"function\\") {
        this.jobs[key]();
      }
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/iterate.js\\"(exports, module2) {
    var async = require_async();
    var abort = require_abort();
    module2.exports = iterate;
    function iterate(list2, iterator, state, callback) {
      var key = state[\\"keyedList\\"] ? state[\\"keyedList\\"][state.index] : state.index;
      state.jobs[key] = runJob(iterator, key, list2[key], function(error, output) {
        if (!(key in state.jobs)) {
          return;
        }
        delete state.jobs[key];
        if (error) {
          abort(state);
        } else {
          state.results[key] = output;
        }
        callback(error, state.results);
      });
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/state.js\\"(exports, module2) {
    module2.exports = state;
    function state(list2, sortMethod) {
      var isNamedList = !Array.isArray(list2), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list2) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list2).length : list2.length
      };
      if (sortMethod) {
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
          return sortMethod(list2[a], list2[b]);
        });
      }
      return initState;
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/terminator.js\\"(exports, module2) {
    var abort = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/parallel.js\\"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list2, iterator, callback) {
      var state = initState(list2);
      while (state.index < (state[\\"keyedList\\"] || list2).length) {
        iterate(list2, iterator, state, function(error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serialOrdered.js\\"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list2, iterator, sortMethod, callback) {
      var state = initState(list2, sortMethod);
      iterate(list2, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state[\\"keyedList\\"] || list2).length) {
          iterate(list2, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serial.js
var require_serial = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serial.js\\"(exports, module2) {
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list2, iterator, callback) {
      return serialOrdered(list2, iterator, null, callback);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/index.js\\"(exports, module2) {
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// .yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  \\".yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/populate.js\\"(exports, module2) {
    module2.exports = function(dst, src) {
      Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  }
});

// .yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  \\".yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/form_data.js\\"(exports, module2) {
    var CombinedStream = require_combined_stream();
    var util = require(\\"util\\");
    var path = require(\\"path\\");
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var parseUrl = require(\\"url\\").parse;
    var fs = require(\\"fs\\");
    var Stream = require(\\"stream\\").Stream;
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var populate = require_populate();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option in options) {
        this[option] = options[option];
      }
    }
    FormData2.LINE_BREAK = \\"\\\\r\\\\n\\";
    FormData2.DEFAULT_CONTENT_TYPE = \\"application/octet-stream\\";
    FormData2.prototype.append = function(field, value, options) {
      options = options || {};
      if (typeof options == \\"string\\") {
        options = { filename: options };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == \\"number\\") {
        value = \\"\\" + value;
      }
      if (util.isArray(value)) {
        this._error(new Error(\\"Arrays are not supported.\\"));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options);
    };
    FormData2.prototype._trackLength = function(header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === \\"string\\") {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength += Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (!value || !value.path && !(value.readable && value.hasOwnProperty(\\"httpVersion\\")) && !(value instanceof Stream)) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function(value, callback) {
      if (value.hasOwnProperty(\\"fd\\")) {
        if (value.end != void 0 && value.end != Infinity && value.start != void 0) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs.stat(value.path, function(err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty(\\"httpVersion\\")) {
        callback(null, +value.headers[\\"content-length\\"]);
      } else if (value.hasOwnProperty(\\"httpModule\\")) {
        value.on(\\"response\\", function(response) {
          value.pause();
          callback(null, +response.headers[\\"content-length\\"]);
        });
        value.resume();
      } else {
        callback(\\"Unknown stream\\");
      }
    };
    FormData2.prototype._multiPartHeader = function(field, value, options) {
      if (typeof options.header == \\"string\\") {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = \\"\\";
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        \\"Content-Disposition\\": [\\"form-data\\", 'name=\\"' + field + '\\"'].concat(contentDisposition || []),
        // if no content type. allow it to be empty array
        \\"Content-Type\\": [].concat(contentType || [])
      };
      if (typeof options.header == \\"object\\") {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (!headers.hasOwnProperty(prop))
          continue;
        header = headers[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + \\": \\" + header.join(\\"; \\") + FormData2.LINE_BREAK;
        }
      }
      return \\"--\\" + this.getBoundary() + FormData2.LINE_BREAK + contents + FormData2.LINE_BREAK;
    };
    FormData2.prototype._getContentDisposition = function(value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === \\"string\\") {
        filename = path.normalize(options.filepath).replace(/\\\\\\\\/g, \\"/\\");
      } else if (options.filename || value.name || value.path) {
        filename = path.basename(options.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty(\\"httpVersion\\")) {
        filename = path.basename(value.client._httpMessage.path || \\"\\");
      }
      if (filename) {
        contentDisposition = 'filename=\\"' + filename + '\\"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function(value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (!contentType && value.readable && value.hasOwnProperty(\\"httpVersion\\")) {
        contentType = value.headers[\\"content-type\\"];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == \\"object\\") {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function() {
      return function(next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function() {
      return \\"--\\" + this.getBoundary() + \\"--\\" + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function(userHeaders) {
      var header;
      var formHeaders = {
        \\"content-type\\": \\"multipart/form-data; boundary=\\" + this.getBoundary()
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function() {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function() {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== \\"function\\") {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
          }
          if (typeof this._streams[i] !== \\"string\\" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData2.LINE_BREAK)]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function() {
      var boundary = \\"--------------------------\\";
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(new Error(\\"Cannot calculate proper length in synchronous way.\\"));
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function() {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        });
        cb(null, knownLength);
      });
    };
    FormData2.prototype.submit = function(params, cb) {
      var request, options, defaults = { method: \\"post\\" };
      if (typeof params == \\"string\\") {
        params = parseUrl(params);
        options = populate({
          port: params.port,
          path: params.pathname,
          host: params.hostname,
          protocol: params.protocol
        }, defaults);
      } else {
        options = populate(params, defaults);
        if (!options.port) {
          options.port = options.protocol == \\"https:\\" ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == \\"https:\\") {
        request = https.request(options);
      } else {
        request = http.request(options);
      }
      this.getLength(function(err, length) {
        if (err && err !== \\"Unknown stream\\") {
          this._error(err);
          return;
        }
        if (length) {
          request.setHeader(\\"Content-Length\\", length);
        }
        this.pipe(request);
        if (cb) {
          var onResponse;
          var callback = function(error, responce) {
            request.removeListener(\\"error\\", callback);
            request.removeListener(\\"response\\", onResponse);
            return cb.call(this, error, responce);
          };
          onResponse = callback.bind(this, null);
          request.on(\\"error\\", callback);
          request.on(\\"response\\", onResponse);
        }
      }.bind(this));
      return request;
    };
    FormData2.prototype._error = function(err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit(\\"error\\", err);
      }
    };
    FormData2.prototype.toString = function() {
      return \\"[object FormData]\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/env/FormData.js
var require_FormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/env/FormData.js\\"(exports, module2) {
    module2.exports = require_form_data();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_http();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_FormData()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module2.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module2) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module2.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module2.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module2) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module2.exports = axios2;
    module2.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module2) {
    module2.exports = require_axios();
  }
});

// src/core/fetcher/Fetcher.ts
var import_axios, fetcher;
var init_Fetcher = __esm({
  \\"src/core/fetcher/Fetcher.ts\\"() {
    \\"use strict\\";
    import_axios = __toESM(require_axios2());
    fetcher = async (args) => {
      const headers = {
        \\"Content-Type\\": \\"application/json\\"
      };
      if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
          if (value != null) {
            headers[key] = value;
          }
        }
      }
      try {
        const response = await (0, import_axios.default)({
          url: args.url,
          params: args.queryParameters,
          method: args.method,
          headers,
          data: args.body,
          validateStatus: () => true,
          transformResponse: (response2) => response2,
          timeout: args.timeoutMs ?? 6e4,
          transitional: {
            clarifyTimeoutError: true
          },
          withCredentials: args.withCredentials
        });
        let body;
        if (response.data != null && response.data.length > 0) {
          try {
            body = JSON.parse(response.data) ?? void 0;
          } catch {
            return {
              ok: false,
              error: {
                reason: \\"non-json\\",
                statusCode: response.status,
                rawBody: response.data
              }
            };
          }
        }
        if (response.status >= 200 && response.status < 300) {
          return {
            ok: true,
            body
          };
        } else {
          return {
            ok: false,
            error: {
              reason: \\"status-code\\",
              statusCode: response.status,
              body
            }
          };
        }
      } catch (error) {
        if (error.code === \\"ETIMEDOUT\\") {
          return {
            ok: false,
            error: {
              reason: \\"timeout\\"
            }
          };
        }
        return {
          ok: false,
          error: {
            reason: \\"unknown\\",
            errorMessage: error.message
          }
        };
      }
    };
  }
});

// src/core/fetcher/Supplier.ts
var init_Supplier = __esm({
  \\"src/core/fetcher/Supplier.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/fetcher/index.ts
var init_fetcher = __esm({
  \\"src/core/fetcher/index.ts\\"() {
    \\"use strict\\";
    init_Fetcher();
    init_Supplier();
  }
});

// src/core/index.ts
var init_core = __esm({
  \\"src/core/index.ts\\"() {
    \\"use strict\\";
    init_schemas();
    init_fetcher();
  }
});

// src/api/resources/fiddle/client/Client.ts
var FiddleService;
var init_Client = __esm({
  \\"src/api/resources/fiddle/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    FiddleService = class {
      constructor(options) {
        this.options = options;
      }
      async test() {
        const _response = await fetcher({
          url: this.options.environment,
          method: \\"GET\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: void 0
          };
        }
        return {
          ok: false,
          error: api_exports.fiddle.test.Error._unknown(_response.error)
        };
      }
    };
  }
});

// .yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  \\".yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js\\"(exports, module2) {
    (function(name, context, definition) {
      if (typeof module2 !== \\"undefined\\" && module2.exports)
        module2.exports = definition();
      else if (typeof define === \\"function\\" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })(\\"urljoin\\", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return \\"\\";
        }
        if (typeof strArray[0] !== \\"string\\") {
          throw new TypeError(\\"Url must be a string. Received \\" + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\\\\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\\\\/\\\\/\\\\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1:///\\");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1://\\");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== \\"string\\") {
            throw new TypeError(\\"Url must be a string. Received \\" + component);
          }
          if (component === \\"\\") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\\\\/]+/, \\"\\");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\\\\/]+$/, \\"\\");
          } else {
            component = component.replace(/[\\\\/]+$/, \\"/\\");
          }
          resultArray.push(component);
        }
        var str = resultArray.join(\\"/\\");
        str = str.replace(/\\\\/(\\\\?|&|#[^!])/g, \\"$1\\");
        var parts = str.split(\\"?\\");
        str = parts.shift() + (parts.length > 0 ? \\"?\\" : \\"\\") + parts.join(\\"&\\");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === \\"object\\") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// src/api/resources/health/client/Client.ts
var import_url_join, Health;
var init_Client2 = __esm({
  \\"src/api/resources/health/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join = __toESM(require_url_join());
    Health = class {
      constructor(options) {
        this.options = options;
      }
      async status() {
        const _response = await fetcher({
          url: (0, import_url_join.default)(this.options.environment, \\"/api/health\\"),
          method: \\"GET\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: void 0
          };
        }
        return {
          ok: false,
          error: api_exports.health.status.Error._unknown(_response.error)
        };
      }
    };
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenJobId.ts
var RemoteGenJobId2;
var init_RemoteGenJobId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenJobId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenJobId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts
var RemoteGenTaskId2;
var init_RemoteGenTaskId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenTaskId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenTaskId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts
var GeneratorIdAndVersion;
var init_GeneratorIdAndVersion2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorIdAndVersion = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfig.ts
var GeneratorConfig;
var init_GeneratorConfig2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfig = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      willDownloadFiles: schemas_exports.boolean(),
      outputs: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorOutputs)
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts
var GeneratorConfigV2;
var init_GeneratorConfigV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfigV2 = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      outputMode: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).OutputMode)
    });
  }
});

// src/serialization/resources/remoteGen/types/OutputMode.ts
var OutputMode2;
var init_OutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    OutputMode2 = schemas_exports.union(\\"type\\", {
      publish: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputMode),
      publishV2: schemas_exports.object({
        publishV2: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputModeV2)
      }),
      downloadFiles: schemas_exports.object({}),
      github: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubOutputMode)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"publish\\":
            return api_exports.OutputMode.publish(value);
          case \\"publishV2\\":
            return api_exports.OutputMode.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return api_exports.OutputMode.downloadFiles();
          case \\"github\\":
            return api_exports.OutputMode.github(value);
          default:
            return api_exports.OutputMode._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputMode.ts
var PublishOutputMode;
var init_PublishOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    PublishOutputMode = schemas_exports.object({
      registryOverrides: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RegistryOverrides)
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV22;
var init_PublishOutputModeV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PublishOutputModeV22 = schemas_exports.union(\\"type\\", {
      npmOverride: schemas_exports.object({
        npmOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional()
      }),
      mavenOverride: schemas_exports.object({
        mavenOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
      }),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return api_exports.PublishOutputModeV2.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return api_exports.PublishOutputModeV2.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return api_exports.PublishOutputModeV2.postman(value);
          default:
            return api_exports.PublishOutputModeV2._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RegistryOverrides.ts
var RegistryOverrides;
var init_RegistryOverrides2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
    init_core();
    RegistryOverrides = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorOutputs.ts
var GeneratorOutputs;
var init_GeneratorOutputs2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorOutputs = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutput.ts
var NpmOutput;
var init_NpmOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutput.ts
var MavenOutput;
var init_MavenOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      username: schemas_exports.string(),
      password: schemas_exports.string(),
      coordinate: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PostmanOutput.ts
var PostmanOutput;
var init_PostmanOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    PostmanOutput = schemas_exports.object({
      apiKey: schemas_exports.string(),
      workspaceId: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubOutputMode.ts
var GithubOutputMode;
var init_GithubOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    GithubOutputMode = schemas_exports.object({
      owner: schemas_exports.string(),
      repo: schemas_exports.string(),
      publishInfo: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubPublishInfo).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo2;
var init_GithubPublishInfo2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    GithubPublishInfo2 = schemas_exports.union(\\"type\\", {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutputWithOptionalToken),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutputWithOptionalCreds),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.GithubPublishInfo.npm(value);
          case \\"maven\\":
            return api_exports.GithubPublishInfo.maven(value);
          case \\"postman\\":
            return api_exports.GithubPublishInfo.postman(value);
          default:
            return api_exports.GithubPublishInfo._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var NpmOutputWithOptionalToken;
var init_NpmOutputWithOptionalToken2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutputWithOptionalToken = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var MavenOutputWithOptionalCreds;
var init_MavenOutputWithOptionalCreds2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutputWithOptionalCreds = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      coordinate: schemas_exports.string(),
      credentials: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).UsernamePassword).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/UsernamePassword.ts
var UsernamePassword;
var init_UsernamePassword2 = __esm({
  \\"src/serialization/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
    init_core();
    UsernamePassword = schemas_exports.object({
      username: schemas_exports.string(),
      password: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/Task.ts
var Task;
var init_Task2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
    init_core();
    Task = schemas_exports.object({
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskStatus),
      packages: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Package)),
      logs: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskLog))
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskStatus.ts
var TaskStatus2;
var init_TaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    TaskStatus2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      notStarted: schemas_exports.object({}),
      running: schemas_exports.object({}),
      failed: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FailedTaskStatus),
      finished: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FinishedTaskStatus)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"notStarted\\":
            return api_exports.TaskStatus.notStarted();
          case \\"running\\":
            return api_exports.TaskStatus.running();
          case \\"failed\\":
            return api_exports.TaskStatus.failed(value);
          case \\"finished\\":
            return api_exports.TaskStatus.finished(value);
          default:
            return api_exports.TaskStatus._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/FailedTaskStatus.ts
var FailedTaskStatus;
var init_FailedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FailedTaskStatus = schemas_exports.object({
      message: schemas_exports.string(),
      s3PreSignedReadUrl: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts
var FinishedTaskStatus;
var init_FinishedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FinishedTaskStatus = schemas_exports.object({
      hasFilesToDownload: schemas_exports.boolean(),
      s3PreSignedReadUrl: schemas_exports.string(),
      s3PreSignedReadUrlV2: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskLog.ts
var TaskLog;
var init_TaskLog2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
    init_core();
    TaskLog = schemas_exports.object({
      level: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).LogLevel),
      message: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/LogLevel.ts
var LogLevel2;
var init_LogLevel2 = __esm({
  \\"src/serialization/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    init_core();
    LogLevel2 = schemas_exports.enum_([
      \\"DEBUG\\",
      \\"INFO\\",
      \\"WARN\\",
      \\"ERROR\\"
    ]);
  }
});

// src/serialization/resources/remoteGen/types/Package.ts
var Package;
var init_Package2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
    init_core();
    Package = schemas_exports.object({
      coordinate: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackageCoordinate),
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackagePublishStatus)
    });
  }
});

// src/serialization/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus2;
var init_PackagePublishStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    PackagePublishStatus2 = schemas_exports.enum_([\\"NOT_STARTED_PUBLISHING\\", \\"PUBLISHING\\", \\"PUBLISHED\\", \\"FAILED_TO_PUBLISH\\"]);
  }
});

// src/serialization/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate2;
var init_PackageCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PackageCoordinate2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmCoordinate),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenCoordinate),
      pypi: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PypiCoordinate)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.PackageCoordinate.npm(value);
          case \\"maven\\":
            return api_exports.PackageCoordinate.maven(value);
          case \\"pypi\\":
            return api_exports.PackageCoordinate.pypi(value);
          default:
            return api_exports.PackageCoordinate._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmCoordinate.ts
var NpmCoordinate;
var init_NpmCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenCoordinate.ts
var MavenCoordinate;
var init_MavenCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenCoordinate = schemas_exports.object({
      group: schemas_exports.string(),
      artifact: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PypiCoordinate.ts
var PypiCoordinate;
var init_PypiCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    PypiCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CreateJobResponse.ts
var CreateJobResponse;
var init_CreateJobResponse2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobResponse = schemas_exports.object({
      jobId: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenJobId),
      taskIds: schemas_exports.list(schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId))
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var GeneratorsDoNotExistErrorBodyType;
var init_GeneratorsDoNotExistErrorBodyType2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorsDoNotExistErrorBodyType = schemas_exports.object({
      nonExistentGenerators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorIdAndVersion)
      )
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var CannotPublishToNpmScopeDetails;
var init_CannotPublishToNpmScopeDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToNpmScopeDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidScope: schemas_exports.string(),
      validScope: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var CannotPublishToMavenGroupDetails;
var init_CannotPublishToMavenGroupDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToMavenGroupDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidGroup: schemas_exports.string(),
      validGroup: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var InsufficientPermissionsDetails;
var init_InsufficientPermissionsDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    InsufficientPermissionsDetails = schemas_exports.object({
      dummy: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/index.ts
var init_types2 = __esm({
  \\"src/serialization/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId2();
    init_RemoteGenTaskId2();
    init_GeneratorIdAndVersion2();
    init_GeneratorConfig2();
    init_GeneratorConfigV22();
    init_OutputMode2();
    init_PublishOutputMode2();
    init_PublishOutputModeV22();
    init_RegistryOverrides2();
    init_GeneratorOutputs2();
    init_NpmOutput2();
    init_MavenOutput2();
    init_PostmanOutput2();
    init_GithubOutputMode2();
    init_GithubPublishInfo2();
    init_NpmOutputWithOptionalToken2();
    init_MavenOutputWithOptionalCreds2();
    init_UsernamePassword2();
    init_Task2();
    init_TaskStatus2();
    init_FailedTaskStatus2();
    init_FinishedTaskStatus2();
    init_TaskLog2();
    init_LogLevel2();
    init_Package2();
    init_PackagePublishStatus2();
    init_PackageCoordinate2();
    init_NpmCoordinate2();
    init_MavenCoordinate2();
    init_PypiCoordinate2();
    init_CreateJobResponse2();
    init_GeneratorsDoNotExistErrorBodyType2();
    init_CannotPublishToNpmScopeDetails2();
    init_CannotPublishToMavenGroupDetails2();
    init_InsufficientPermissionsDetails2();
  }
});

// src/serialization/resources/remoteGen/client/createJob.ts
var createJob_exports2 = {};
__export(createJob_exports2, {
  Error: () => Error7
});
var Error7;
var init_createJob2 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error7 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJob.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJob.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJob.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports2 = {};
__export(createJobV2_exports2, {
  Error: () => Error8
});
var Error8;
var init_createJobV22 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error8 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJobV2.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJobV2.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJobV2.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports2 = {};
__export(getJobStatus_exports2, {
  Response: () => Response
});
var Response;
var init_getJobStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    Response = schemas_exports.record(
      schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId),
      schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Task).optional()
    );
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts
var CreateJobRequest;
var init_CreateJobRequest = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequest = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfig)
      )
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts
var CreateJobRequestV2;
var init_CreateJobRequestV2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequestV2 = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfigV2)
      ),
      uploadToS3: schemas_exports.boolean().optional()
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/index.ts
var init_requests2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
    init_CreateJobRequest();
    init_CreateJobRequestV2();
  }
});

// src/serialization/resources/remoteGen/client/index.ts
var init_client4 = __esm({
  \\"src/serialization/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_createJob2();
    init_createJobV22();
    init_getJobStatus2();
    init_requests2();
  }
});

// src/serialization/resources/remoteGen/index.ts
var remoteGen_exports2 = {};
__export(remoteGen_exports2, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  createJob: () => createJob_exports2,
  createJobV2: () => createJobV2_exports2,
  getJobStatus: () => getJobStatus_exports2
});
var init_remoteGen2 = __esm({
  \\"src/serialization/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types2();
    init_client4();
  }
});

// src/serialization/resources/index.ts
var init_resources2 = __esm({
  \\"src/serialization/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen2();
    init_types2();
    init_requests2();
  }
});

// src/serialization/index.ts
var serialization_exports = {};
__export(serialization_exports, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  remoteGen: () => remoteGen_exports2
});
var init_serialization = __esm({
  \\"src/serialization/index.ts\\"() {
    \\"use strict\\";
    init_resources2();
  }
});

// src/api/resources/remoteGen/client/Client.ts
var import_url_join2, RemoteGen;
var init_Client3 = __esm({
  \\"src/api/resources/remoteGen/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join2 = __toESM(require_url_join());
    init_serialization();
    RemoteGen = class {
      constructor(options) {
        this.options = options;
      }
      async createJob(request) {
        var _a;
        const _response = await fetcher({
          url: (0, import_url_join2.default)(this.options.environment, \\"/api/remote-gen/create-job\\"),
          method: \\"POST\\",
          body: await CreateJobRequest.jsonOrThrow(request)
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await CreateJobResponse.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        if (_response.error.reason === \\"status-code\\") {
          switch ((_a = _response.error.body) == null ? void 0 : _a.error) {
            case \\"IllegalApiNameError\\":
            case \\"GeneratorsDoNotExistError\\":
            case \\"CannotPublishToNpmScope\\":
            case \\"CannotPublishToMavenGroup\\":
            case \\"InsufficientPermissions\\":
              return {
                ok: false,
                error: await remoteGen_exports2.createJob.Error.parseOrThrow(
                  _response.error.body,
                  { allowUnknownKeys: true }
                )
              };
          }
        }
        return {
          ok: false,
          error: api_exports.remoteGen.createJob.Error._unknown(_response.error)
        };
      }
      async createJobV2(request) {
        var _a;
        const _response = await fetcher({
          url: (0, import_url_join2.default)(this.options.environment, \\"/api/remote-gen/create-job-v2\\"),
          method: \\"POST\\",
          body: await CreateJobRequestV2.jsonOrThrow(request)
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await CreateJobResponse.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        if (_response.error.reason === \\"status-code\\") {
          switch ((_a = _response.error.body) == null ? void 0 : _a.error) {
            case \\"IllegalApiNameError\\":
            case \\"GeneratorsDoNotExistError\\":
            case \\"CannotPublishToNpmScope\\":
            case \\"CannotPublishToMavenGroup\\":
            case \\"InsufficientPermissions\\":
              return {
                ok: false,
                error: await remoteGen_exports2.createJobV2.Error.parseOrThrow(
                  _response.error.body,
                  { allowUnknownKeys: true }
                )
              };
          }
        }
        return {
          ok: false,
          error: api_exports.remoteGen.createJobV2.Error._unknown(_response.error)
        };
      }
      async getJobStatus(jobId) {
        const _response = await fetcher({
          url: (0, import_url_join2.default)(
            this.options.environment,
            \`/api/remote-gen/jobs/\${await RemoteGenJobId2.jsonOrThrow(jobId)}/status\`
          ),
          method: \\"POST\\"
        });
        if (_response.ok) {
          return {
            ok: true,
            body: await remoteGen_exports2.getJobStatus.Response.parseOrThrow(
              _response.body,
              { allowUnknownKeys: true }
            )
          };
        }
        return {
          ok: false,
          error: api_exports.remoteGen.getJobStatus.Error._unknown(_response.error)
        };
      }
    };
  }
});

// src/Client.ts
var FiddleClient;
var init_Client4 = __esm({
  \\"src/Client.ts\\"() {
    \\"use strict\\";
    init_Client();
    init_Client2();
    init_Client3();
    FiddleClient = class {
      constructor(options) {
        this.options = options;
      }
      _fiddle;
      get fiddle() {
        return this._fiddle ?? (this._fiddle = new FiddleService(this.options));
      }
      _health;
      get health() {
        return this._health ?? (this._health = new Health(this.options));
      }
      _remoteGen;
      get remoteGen() {
        return this._remoteGen ?? (this._remoteGen = new RemoteGen(this.options));
      }
    };
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Fiddle: () => api_exports,
  FiddleClient: () => FiddleClient
});
module.exports = __toCommonJS(src_exports);
var init_src = __esm({
  \\"src/index.ts\\"() {
    init_api();
    init_Client4();
  }
});
init_src();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Fiddle,
  FiddleClient
});
/*! Bundled license information:

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
*/
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === \\"object\\" || typeof from === \\"function\\") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. \\"__esModule\\" has not been set), then set
  // \\"default\\" to the CommonJS \\"module.exports\\" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \\"default\\", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, \\"__esModule\\", { value: true }), mod);

// src/api/resources/remoteGen/types/RemoteGenJobId.ts
function RemoteGenJobId(value) {
  return value;
}
var init_RemoteGenJobId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/RemoteGenTaskId.ts
function RemoteGenTaskId(value) {
  return value;
}
var init_RemoteGenTaskId = __esm({
  \\"src/api/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts
var init_GeneratorIdAndVersion = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfig.ts
var init_GeneratorConfig = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorConfigV2.ts
var init_GeneratorConfigV2 = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/OutputMode.ts
var OutputMode;
var init_OutputMode = __esm({
  \\"src/api/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    OutputMode = {
      publish: (value) => {
        return {
          ...value,
          type: \\"publish\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      publishV2: (value) => {
        return {
          publishV2: value,
          type: \\"publishV2\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      downloadFiles: () => {
        return {
          type: \\"downloadFiles\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      github: (value) => {
        return {
          ...value,
          type: \\"github\\",
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.OutputMode._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"publish\\":
            return visitor.publish(value);
          case \\"publishV2\\":
            return visitor.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return visitor.downloadFiles();
          case \\"github\\":
            return visitor.github(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/PublishOutputMode.ts
var init_PublishOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV2;
var init_PublishOutputModeV2 = __esm({
  \\"src/api/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    PublishOutputModeV2 = {
      npmOverride: (value) => {
        return {
          npmOverride: value,
          type: \\"npmOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      mavenOverride: (value) => {
        return {
          mavenOverride: value,
          type: \\"mavenOverride\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PublishOutputModeV2._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return visitor.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return visitor.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/RegistryOverrides.ts
var init_RegistryOverrides = __esm({
  \\"src/api/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorOutputs.ts
var init_GeneratorOutputs = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/NpmOutput.ts
var init_NpmOutput = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutput.ts
var init_MavenOutput = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PostmanOutput.ts
var init_PostmanOutput = __esm({
  \\"src/api/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubOutputMode.ts
var init_GithubOutputMode = __esm({
  \\"src/api/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo;
var init_GithubPublishInfo = __esm({
  \\"src/api/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    GithubPublishInfo = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      postman: (value) => {
        return {
          ...value,
          type: \\"postman\\",
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.GithubPublishInfo._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"postman\\":
            return visitor.postman(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var init_NpmOutputWithOptionalToken = __esm({
  \\"src/api/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var init_MavenOutputWithOptionalCreds = __esm({
  \\"src/api/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/UsernamePassword.ts
var init_UsernamePassword = __esm({
  \\"src/api/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/Task.ts
var init_Task = __esm({
  \\"src/api/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskStatus.ts
var TaskStatus;
var init_TaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    TaskStatus = {
      notStarted: () => {
        return {
          type: \\"notStarted\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      running: () => {
        return {
          type: \\"running\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      failed: (value) => {
        return {
          ...value,
          type: \\"failed\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      finished: (value) => {
        return {
          ...value,
          type: \\"finished\\",
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.TaskStatus._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"notStarted\\":
            return visitor.notStarted();
          case \\"running\\":
            return visitor.running();
          case \\"failed\\":
            return visitor.failed(value);
          case \\"finished\\":
            return visitor.finished(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/FailedTaskStatus.ts
var init_FailedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/FinishedTaskStatus.ts
var init_FinishedTaskStatus = __esm({
  \\"src/api/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/TaskLog.ts
var init_TaskLog = __esm({
  \\"src/api/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/LogLevel.ts
var LogLevel;
var init_LogLevel = __esm({
  \\"src/api/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    LogLevel = {
      Debug: \\"DEBUG\\",
      Info: \\"INFO\\",
      Warn: \\"WARN\\",
      Error: \\"ERROR\\"
    };
  }
});

// src/api/resources/remoteGen/types/Package.ts
var init_Package = __esm({
  \\"src/api/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus;
var init_PackagePublishStatus = __esm({
  \\"src/api/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    PackagePublishStatus = {
      NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\",
      Publishing: \\"PUBLISHING\\",
      Published: \\"PUBLISHED\\",
      FailedToPublish: \\"FAILED_TO_PUBLISH\\"
    };
  }
});

// src/api/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate;
var init_PackageCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    PackageCoordinate = {
      npm: (value) => {
        return {
          ...value,
          type: \\"npm\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      maven: (value) => {
        return {
          ...value,
          type: \\"maven\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      pypi: (value) => {
        return {
          ...value,
          type: \\"pypi\\",
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _unknown: (value) => {
        return {
          ...value,
          _visit: function(visitor) {
            return api_exports.PackageCoordinate._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.type) {
          case \\"npm\\":
            return visitor.npm(value);
          case \\"maven\\":
            return visitor.maven(value);
          case \\"pypi\\":
            return visitor.pypi(value);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/types/NpmCoordinate.ts
var init_NpmCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/MavenCoordinate.ts
var init_MavenCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/PypiCoordinate.ts
var init_PypiCoordinate = __esm({
  \\"src/api/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CreateJobResponse.ts
var init_CreateJobResponse = __esm({
  \\"src/api/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var init_GeneratorsDoNotExistErrorBodyType = __esm({
  \\"src/api/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var init_CannotPublishToNpmScopeDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var init_CannotPublishToMavenGroupDetails = __esm({
  \\"src/api/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var init_InsufficientPermissionsDetails = __esm({
  \\"src/api/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/types/index.ts
var init_types = __esm({
  \\"src/api/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId();
    init_RemoteGenTaskId();
    init_GeneratorIdAndVersion();
    init_GeneratorConfig();
    init_GeneratorConfigV2();
    init_OutputMode();
    init_PublishOutputMode();
    init_PublishOutputModeV2();
    init_RegistryOverrides();
    init_GeneratorOutputs();
    init_NpmOutput();
    init_MavenOutput();
    init_PostmanOutput();
    init_GithubOutputMode();
    init_GithubPublishInfo();
    init_NpmOutputWithOptionalToken();
    init_MavenOutputWithOptionalCreds();
    init_UsernamePassword();
    init_Task();
    init_TaskStatus();
    init_FailedTaskStatus();
    init_FinishedTaskStatus();
    init_TaskLog();
    init_LogLevel();
    init_Package();
    init_PackagePublishStatus();
    init_PackageCoordinate();
    init_NpmCoordinate();
    init_MavenCoordinate();
    init_PypiCoordinate();
    init_CreateJobResponse();
    init_GeneratorsDoNotExistErrorBodyType();
    init_CannotPublishToNpmScopeDetails();
    init_CannotPublishToMavenGroupDetails();
    init_InsufficientPermissionsDetails();
  }
});

// src/api/resources/remoteGen/client/requests/index.ts
var init_requests = __esm({
  \\"src/api/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
  }
});

// src/api/resources/remoteGen/client/createJob.ts
var createJob_exports = {};
__export(createJob_exports, {
  Error: () => Error2
});
var Error2;
var init_createJob = __esm({
  \\"src/api/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    Error2 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJob.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports = {};
__export(createJobV2_exports, {
  Error: () => Error3
});
var Error3;
var init_createJobV2 = __esm({
  \\"src/api/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    Error3 = {
      illegalApiNameError: () => {
        return {
          error: \\"IllegalApiNameError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      generatorsDoNotExistError: (value) => {
        return {
          content: value,
          error: \\"GeneratorsDoNotExistError\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToNpmScope: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToNpmScope\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      cannotPublishToMavenGroup: (value) => {
        return {
          content: value,
          error: \\"CannotPublishToMavenGroup\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      insufficientPermissions: (value) => {
        return {
          content: value,
          error: \\"InsufficientPermissions\\",
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.createJobV2.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return visitor.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return visitor.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return visitor.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return visitor.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return visitor.insufficientPermissions(value.content);
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports = {};
__export(getJobStatus_exports, {
  Error: () => Error4
});
var Error4;
var init_getJobStatus = __esm({
  \\"src/api/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    Error4 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.remoteGen.getJobStatus.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/remoteGen/client/index.ts
var init_client = __esm({
  \\"src/api/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_requests();
    init_createJob();
    init_createJobV2();
    init_getJobStatus();
  }
});

// src/api/resources/remoteGen/index.ts
var remoteGen_exports = {};
__export(remoteGen_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  createJob: () => createJob_exports,
  createJobV2: () => createJobV2_exports,
  getJobStatus: () => getJobStatus_exports
});
var init_remoteGen = __esm({
  \\"src/api/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types();
    init_client();
  }
});

// src/api/resources/fiddle/client/test.ts
var test_exports = {};
__export(test_exports, {
  Error: () => Error5
});
var Error5;
var init_test = __esm({
  \\"src/api/resources/fiddle/client/test.ts\\"() {
    \\"use strict\\";
    init_src();
    Error5 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.fiddle.test.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/fiddle/client/index.ts
var init_client2 = __esm({
  \\"src/api/resources/fiddle/client/index.ts\\"() {
    \\"use strict\\";
    init_test();
  }
});

// src/api/resources/fiddle/index.ts
var fiddle_exports = {};
__export(fiddle_exports, {
  test: () => test_exports
});
var init_fiddle = __esm({
  \\"src/api/resources/fiddle/index.ts\\"() {
    \\"use strict\\";
    init_client2();
  }
});

// src/api/resources/health/client/status.ts
var status_exports = {};
__export(status_exports, {
  Error: () => Error6
});
var Error6;
var init_status = __esm({
  \\"src/api/resources/health/client/status.ts\\"() {
    \\"use strict\\";
    init_src();
    Error6 = {
      _unknown: (fetcherError) => {
        return {
          error: void 0,
          content: fetcherError,
          _visit: function(visitor) {
            return api_exports.health.status.Error._visit(this, visitor);
          }
        };
      },
      _visit: (value, visitor) => {
        switch (value.error) {
          default:
            return visitor._other(value);
        }
      }
    };
  }
});

// src/api/resources/health/client/index.ts
var init_client3 = __esm({
  \\"src/api/resources/health/client/index.ts\\"() {
    \\"use strict\\";
    init_status();
  }
});

// src/api/resources/health/index.ts
var health_exports = {};
__export(health_exports, {
  status: () => status_exports
});
var init_health = __esm({
  \\"src/api/resources/health/index.ts\\"() {
    \\"use strict\\";
    init_client3();
  }
});

// src/api/resources/index.ts
var init_resources = __esm({
  \\"src/api/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen();
    init_types();
    init_fiddle();
    init_health();
    init_requests();
  }
});

// src/api/index.ts
var api_exports = {};
__export(api_exports, {
  GithubPublishInfo: () => GithubPublishInfo,
  LogLevel: () => LogLevel,
  OutputMode: () => OutputMode,
  PackageCoordinate: () => PackageCoordinate,
  PackagePublishStatus: () => PackagePublishStatus,
  PublishOutputModeV2: () => PublishOutputModeV2,
  RemoteGenJobId: () => RemoteGenJobId,
  RemoteGenTaskId: () => RemoteGenTaskId,
  TaskStatus: () => TaskStatus,
  fiddle: () => fiddle_exports,
  health: () => health_exports,
  remoteGen: () => remoteGen_exports
});
var init_api = __esm({
  \\"src/api/index.ts\\"() {
    \\"use strict\\";
    init_resources();
  }
});

// src/core/schemas/Schema.ts
var SchemaType;
var init_Schema = __esm({
  \\"src/core/schemas/Schema.ts\\"() {
    \\"use strict\\";
    SchemaType = {
      DATE: \\"date\\",
      ENUM: \\"enum\\",
      LIST: \\"list\\",
      STRING_LITERAL: \\"stringLiteral\\",
      OBJECT: \\"object\\",
      ANY: \\"any\\",
      BOOLEAN: \\"boolean\\",
      NUMBER: \\"number\\",
      STRING: \\"string\\",
      UNKNOWN: \\"unknown\\",
      RECORD: \\"record\\",
      SET: \\"set\\",
      UNION: \\"union\\",
      OPTIONAL: \\"optional\\"
    };
  }
});

// src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts
function stringifyValidationError(error) {
  if (error.path.length === 0) {
    return error.message;
  }
  return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
var init_stringifyValidationErrors = __esm({
  \\"src/core/schemas/builders/schema-utils/stringifyValidationErrors.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/schema-utils/JsonError.ts
var JsonError;
var init_JsonError = __esm({
  \\"src/core/schemas/builders/schema-utils/JsonError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    JsonError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/ParseError.ts
var ParseError;
var init_ParseError = __esm({
  \\"src/core/schemas/builders/schema-utils/ParseError.ts\\"() {
    \\"use strict\\";
    init_stringifyValidationErrors();
    ParseError = class extends Error {
      constructor(errors) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
      }
    };
  }
});

// src/core/schemas/builders/schema-utils/getSchemaUtils.ts
function getSchemaUtils(schema) {
  return {
    optional: () => optional(schema),
    transform: (transformer) => transform(schema, transformer),
    parseOrThrow: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (parsed.ok) {
        return parsed.value;
      }
      throw new ParseError(parsed.errors);
    },
    jsonOrThrow: async (parsed, opts) => {
      const raw = await schema.json(parsed, opts);
      if (raw.ok) {
        return raw.value;
      }
      throw new JsonError(raw.errors);
    }
  };
}
function optional(schema) {
  const baseSchema = {
    parse: (raw, opts) => {
      if (raw == null) {
        return {
          ok: true,
          value: void 0
        };
      }
      return schema.parse(raw, opts);
    },
    json: (parsed, opts) => {
      if (parsed == null) {
        return {
          ok: true,
          value: null
        };
      }
      return schema.json(parsed, opts);
    },
    getType: () => SchemaType.OPTIONAL
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function transform(schema, transformer) {
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsed = await schema.parse(raw, opts);
      if (!parsed.ok) {
        return parsed;
      }
      return {
        ok: true,
        value: transformer.transform(parsed.value)
      };
    },
    json: async (transformed, opts) => {
      const parsed = await transformer.untransform(transformed);
      return schema.json(parsed, opts);
    },
    getType: () => schema.getType()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_getSchemaUtils = __esm({
  \\"src/core/schemas/builders/schema-utils/getSchemaUtils.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/schema-utils/index.ts
var init_schema_utils = __esm({
  \\"src/core/schemas/builders/schema-utils/index.ts\\"() {
    \\"use strict\\";
    init_getSchemaUtils();
    init_JsonError();
    init_ParseError();
  }
});

// src/core/schemas/builders/date/date.ts
function date() {
  const baseSchema = {
    parse: (raw) => {
      if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
        return {
          ok: true,
          value: new Date(raw)
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not an ISO 8601 date string\\"
            }
          ]
        };
      }
    },
    json: (date2) => {
      if (date2 instanceof Date) {
        return {
          ok: true,
          value: date2.toISOString()
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Date object\\"
            }
          ]
        };
      }
    },
    getType: () => SchemaType.DATE
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var ISO_8601_REGEX;
var init_date = __esm({
  \\"src/core/schemas/builders/date/date.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
    ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
  }
});

// src/core/schemas/builders/date/index.ts
var init_date2 = __esm({
  \\"src/core/schemas/builders/date/index.ts\\"() {
    \\"use strict\\";
    init_date();
  }
});

// src/core/schemas/utils/createIdentitySchemaCreator.ts
function createIdentitySchemaCreator(schemaType, validate) {
  return () => {
    const baseSchema = {
      parse: validate,
      json: validate,
      getType: () => schemaType
    };
    return {
      ...baseSchema,
      ...getSchemaUtils(baseSchema)
    };
  };
}
var init_createIdentitySchemaCreator = __esm({
  \\"src/core/schemas/utils/createIdentitySchemaCreator.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/builders/enum/enum.ts
function enum_(values) {
  const validValues = new Set(values);
  const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
    if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
      return {
        ok: true,
        value
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \\"Not one of the allowed values\\"
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_enum = __esm({
  \\"src/core/schemas/builders/enum/enum.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/enum/index.ts
var init_enum2 = __esm({
  \\"src/core/schemas/builders/enum/index.ts\\"() {
    \\"use strict\\";
    init_enum();
  }
});

// src/core/schemas/builders/lazy/lazy.ts
function lazy(getter) {
  const baseSchema = constructLazyBaseSchema(getter);
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
function constructLazyBaseSchema(getter) {
  return {
    parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
    json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
    getType: async () => (await getMemoizedSchema(getter)).getType()
  };
}
async function getMemoizedSchema(getter) {
  const castedGetter = getter;
  if (castedGetter.__zurg_memoized == null) {
    castedGetter.__zurg_memoized = await getter();
  }
  return castedGetter.__zurg_memoized;
}
var init_lazy = __esm({
  \\"src/core/schemas/builders/lazy/lazy.ts\\"() {
    \\"use strict\\";
    init_schema_utils();
  }
});

// src/core/schemas/utils/entries.ts
function entries(object2) {
  return Object.entries(object2);
}
var init_entries = __esm({
  \\"src/core/schemas/utils/entries.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/filterObject.ts
function filterObject(obj, keysToInclude) {
  const keysToIncludeSet = new Set(keysToInclude);
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (keysToIncludeSet.has(key)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}
var init_filterObject = __esm({
  \\"src/core/schemas/utils/filterObject.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/isPlainObject.ts
function isPlainObject(value) {
  if (typeof value !== \\"object\\" || value === null) {
    return false;
  }
  if (Object.getPrototypeOf(value) === null) {
    return true;
  }
  let proto = value;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(value) === proto;
}
var NOT_AN_OBJECT_ERROR_MESSAGE;
var init_isPlainObject = __esm({
  \\"src/core/schemas/utils/isPlainObject.ts\\"() {
    \\"use strict\\";
    NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
  }
});

// src/core/schemas/utils/keys.ts
function keys(object2) {
  return Object.keys(object2);
}
var init_keys = __esm({
  \\"src/core/schemas/utils/keys.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/utils/partition.ts
function partition(items, predicate) {
  const trueItems = [], falseItems = [];
  for (const item of items) {
    if (predicate(item)) {
      trueItems.push(item);
    } else {
      falseItems.push(item);
    }
  }
  return [trueItems, falseItems];
}
var init_partition = __esm({
  \\"src/core/schemas/utils/partition.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object-like/getObjectLikeUtils.ts
function getObjectLikeUtils(schema) {
  return {
    withParsedProperties: (properties) => withParsedProperties(schema, properties)
  };
}
function withParsedProperties(objectLike, properties) {
  const objectSchema = {
    parse: async (raw, opts) => {
      const parsedObject = await objectLike.parse(raw, opts);
      if (!parsedObject.ok) {
        return parsedObject;
      }
      const additionalProperties = Object.entries(properties).reduce(
        (processed, [key, value]) => {
          return {
            ...processed,
            [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value
          };
        },
        {}
      );
      return {
        ok: true,
        value: {
          ...parsedObject.value,
          ...additionalProperties
        }
      };
    },
    json: (parsed, opts) => {
      if (!isPlainObject(parsed)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: NOT_AN_OBJECT_ERROR_MESSAGE
            }
          ]
        };
      }
      const addedPropertyKeys = new Set(Object.keys(properties));
      const parsedWithoutAddedProperties = filterObject(
        parsed,
        Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
      );
      return objectLike.json(parsedWithoutAddedProperties, opts);
    },
    getType: () => objectLike.getType()
  };
  return {
    ...objectSchema,
    ...getSchemaUtils(objectSchema),
    ...getObjectLikeUtils(objectSchema)
  };
}
var init_getObjectLikeUtils = __esm({
  \\"src/core/schemas/builders/object-like/getObjectLikeUtils.ts\\"() {
    \\"use strict\\";
    init_filterObject();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/object-like/index.ts
var init_object_like = __esm({
  \\"src/core/schemas/builders/object-like/index.ts\\"() {
    \\"use strict\\";
    init_getObjectLikeUtils();
  }
});

// src/core/schemas/builders/object/property.ts
function property(rawKey, valueSchema) {
  return {
    rawKey,
    valueSchema,
    isProperty: true
  };
}
function isProperty(maybeProperty) {
  return maybeProperty.isProperty;
}
var init_property = __esm({
  \\"src/core/schemas/builders/object/property.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/object/object.ts
function object(schemas) {
  const baseSchema = {
    _getRawProperties: () => Promise.resolve(
      Object.entries(schemas).map(
        ([parsedKey, propertySchema]) => isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
      )
    ),
    _getParsedProperties: () => Promise.resolve(keys(schemas)),
    parse: async (raw, opts) => {
      const rawKeyToProperty = {};
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        const property2 = {
          rawKey,
          parsedKey,
          valueSchema
        };
        rawKeyToProperty[rawKey] = property2;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(rawKey);
        }
      }
      return validateAndTransformObject({
        value: raw,
        requiredKeys,
        getProperty: (rawKey) => {
          const property2 = rawKeyToProperty[rawKey];
          if (property2 == null) {
            return void 0;
          }
          return {
            transformedKey: property2.parsedKey,
            transform: (propertyValue) => property2.valueSchema.parse(propertyValue, opts)
          };
        },
        allowUnknownKeys: (opts == null ? void 0 : opts.allowUnknownKeys) ?? false
      });
    },
    json: async (parsed, opts) => {
      const requiredKeys = [];
      for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
        const valueSchema = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.valueSchema : schemaOrObjectProperty;
        if (await isSchemaRequired(valueSchema)) {
          requiredKeys.push(parsedKey);
        }
      }
      return validateAndTransformObject({
        value: parsed,
        requiredKeys,
        getProperty: (parsedKey) => {
          const property2 = schemas[parsedKey];
          if (property2 == null) {
            return void 0;
          }
          if (isProperty(property2)) {
            return {
              transformedKey: property2.rawKey,
              transform: (propertyValue) => property2.valueSchema.json(propertyValue, opts)
            };
          } else {
            return {
              transformedKey: parsedKey,
              transform: (propertyValue) => property2.json(propertyValue, opts)
            };
          }
        },
        allowUnknownKeys: (opts == null ? void 0 : opts.allowUnknownKeys) ?? false
      });
    },
    getType: () => SchemaType.OBJECT
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
async function validateAndTransformObject({
  value,
  requiredKeys,
  getProperty,
  allowUnknownKeys
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const missingRequiredKeys = new Set(requiredKeys);
  const errors = [];
  const transformed = {};
  for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
    const property2 = getProperty(preTransformedKey);
    if (property2 != null) {
      missingRequiredKeys.delete(preTransformedKey);
      const value2 = await property2.transform(preTransformedItemValue);
      if (value2.ok) {
        transformed[property2.transformedKey] = value2.value;
      } else {
        errors.push(
          ...value2.errors.map((error) => ({
            path: [preTransformedKey, ...error.path],
            message: error.message
          }))
        );
      }
    } else if (allowUnknownKeys) {
      transformed[preTransformedKey] = preTransformedItemValue;
    } else {
      errors.push({
        path: [preTransformedKey],
        message: \`Unrecognized key \\"\${preTransformedKey}\\"\`
      });
    }
  }
  errors.push(
    ...requiredKeys.filter((key) => missingRequiredKeys.has(key)).map((key) => ({
      path: [],
      message: \`Missing required key \\"\${key}\\"\`
    }))
  );
  if (errors.length === 0) {
    return {
      ok: true,
      value: transformed
    };
  } else {
    return {
      ok: false,
      errors
    };
  }
}
function getObjectUtils(schema) {
  return {
    extend: (extension) => {
      const baseSchema = {
        _getParsedProperties: async () => [
          ...await schema._getParsedProperties(),
          ...await extension._getParsedProperties()
        ],
        _getRawProperties: async () => [
          ...await schema._getRawProperties(),
          ...await extension._getRawProperties()
        ],
        parse: async (raw, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getRawProperties(),
            value: raw,
            transformBase: (rawBase) => schema.parse(rawBase, opts),
            transformExtension: (rawExtension) => extension.parse(rawExtension, opts)
          });
        },
        json: async (parsed, opts) => {
          return validateAndTransformExtendedObject({
            extensionKeys: await extension._getParsedProperties(),
            value: parsed,
            transformBase: (parsedBase) => schema.json(parsedBase, opts),
            transformExtension: (parsedExtension) => extension.json(parsedExtension, opts)
          });
        },
        getType: () => SchemaType.OBJECT
      };
      return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema)
      };
    }
  };
}
async function validateAndTransformExtendedObject({
  extensionKeys,
  value,
  transformBase,
  transformExtension
}) {
  const extensionPropertiesSet = new Set(extensionKeys);
  const [extensionProperties, baseProperties] = partition(
    keys(value),
    (key) => extensionPropertiesSet.has(key)
  );
  const transformedBase = await transformBase(filterObject(value, baseProperties));
  const transformedExtension = await transformExtension(filterObject(value, extensionProperties));
  if (transformedBase.ok && transformedExtension.ok) {
    return {
      ok: true,
      value: {
        ...transformedBase.value,
        ...transformedExtension.value
      }
    };
  } else {
    return {
      ok: false,
      errors: [
        ...transformedBase.ok ? [] : transformedBase.errors,
        ...transformedExtension.ok ? [] : transformedExtension.errors
      ]
    };
  }
}
async function isSchemaRequired(schema) {
  return !await isSchemaOptional(schema);
}
async function isSchemaOptional(schema) {
  switch (await schema.getType()) {
    case SchemaType.ANY:
    case SchemaType.UNKNOWN:
    case SchemaType.OPTIONAL:
      return true;
    default:
      return false;
  }
}
var init_object = __esm({
  \\"src/core/schemas/builders/object/object.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_filterObject();
    init_isPlainObject();
    init_keys();
    init_partition();
    init_object_like();
    init_schema_utils();
    init_property();
  }
});

// src/core/schemas/builders/object/index.ts
var init_object2 = __esm({
  \\"src/core/schemas/builders/object/index.ts\\"() {
    \\"use strict\\";
    init_object();
    init_property();
  }
});

// src/core/schemas/builders/lazy/lazyObject.ts
function lazyObject(getter) {
  const baseSchema = {
    ...constructLazyBaseSchema(getter),
    _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
    _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties()
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema),
    ...getObjectUtils(baseSchema)
  };
}
var init_lazyObject = __esm({
  \\"src/core/schemas/builders/lazy/lazyObject.ts\\"() {
    \\"use strict\\";
    init_object2();
    init_object_like();
    init_schema_utils();
    init_lazy();
  }
});

// src/core/schemas/builders/lazy/index.ts
var init_lazy2 = __esm({
  \\"src/core/schemas/builders/lazy/index.ts\\"() {
    \\"use strict\\";
    init_lazy();
    init_lazyObject();
  }
});

// src/core/schemas/builders/list/list.ts
function list(schema) {
  const baseSchema = {
    parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
    json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
    getType: () => SchemaType.LIST
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformArray(value, transformItem) {
  if (!Array.isArray(value)) {
    return {
      ok: false,
      errors: [
        {
          message: \\"Not a list\\",
          path: []
        }
      ]
    };
  }
  const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
  return maybeValidItems.reduce(
    (acc, item, index) => {
      if (acc.ok && item.ok) {
        return {
          ok: true,
          value: [...acc.value, item.value]
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!item.ok) {
        errors.push(
          ...item.errors.map((error) => ({
            path: [\`[\${index}]\`, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    { ok: true, value: [] }
  );
}
var init_list = __esm({
  \\"src/core/schemas/builders/list/list.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_schema_utils();
  }
});

// src/core/schemas/builders/list/index.ts
var init_list2 = __esm({
  \\"src/core/schemas/builders/list/index.ts\\"() {
    \\"use strict\\";
    init_list();
  }
});

// src/core/schemas/builders/literals/stringLiteral.ts
function stringLiteral(literal) {
  const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
    if (value === literal) {
      return {
        ok: true,
        value: literal
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [],
            message: \`Not equal to \\"\${literal}\\"\`
          }
        ]
      };
    }
  });
  return schemaCreator();
}
var init_stringLiteral = __esm({
  \\"src/core/schemas/builders/literals/stringLiteral.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
  }
});

// src/core/schemas/builders/literals/index.ts
var init_literals = __esm({
  \\"src/core/schemas/builders/literals/index.ts\\"() {
    \\"use strict\\";
    init_stringLiteral();
  }
});

// src/core/schemas/builders/primitives/any.ts
var any;
var init_any = __esm({
  \\"src/core/schemas/builders/primitives/any.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    any = createIdentitySchemaCreator(SchemaType.ANY, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/boolean.ts
var boolean;
var init_boolean = __esm({
  \\"src/core/schemas/builders/primitives/boolean.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    boolean = createIdentitySchemaCreator(SchemaType.BOOLEAN, (value) => {
      if (typeof value === \\"boolean\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a boolean\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/number.ts
var number;
var init_number = __esm({
  \\"src/core/schemas/builders/primitives/number.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    number = createIdentitySchemaCreator(SchemaType.NUMBER, (value) => {
      if (typeof value === \\"number\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a number\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/string.ts
var string;
var init_string = __esm({
  \\"src/core/schemas/builders/primitives/string.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    string = createIdentitySchemaCreator(SchemaType.STRING, (value) => {
      if (typeof value === \\"string\\") {
        return {
          ok: true,
          value
        };
      } else {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a string\\"
            }
          ]
        };
      }
    });
  }
});

// src/core/schemas/builders/primitives/unknown.ts
var unknown;
var init_unknown = __esm({
  \\"src/core/schemas/builders/primitives/unknown.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_createIdentitySchemaCreator();
    unknown = createIdentitySchemaCreator(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
  }
});

// src/core/schemas/builders/primitives/index.ts
var init_primitives = __esm({
  \\"src/core/schemas/builders/primitives/index.ts\\"() {
    \\"use strict\\";
    init_any();
    init_boolean();
    init_number();
    init_string();
    init_unknown();
  }
});

// src/core/schemas/builders/record/record.ts
function record(keySchema, valueSchema) {
  const baseSchema = {
    parse: async (raw, opts) => {
      return validateAndTransformRecord({
        value: raw,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.parse(key, opts),
        transformValue: (value) => valueSchema.parse(value, opts)
      });
    },
    json: async (parsed, opts) => {
      return validateAndTransformRecord({
        value: parsed,
        isKeyNumeric: await keySchema.getType() === SchemaType.NUMBER,
        transformKey: (key) => keySchema.json(key, opts),
        transformValue: (value) => valueSchema.json(value, opts)
      });
    },
    getType: () => SchemaType.RECORD
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
async function validateAndTransformRecord({
  value,
  isKeyNumeric,
  transformKey,
  transformValue
}) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  return entries(value).reduce(
    async (accPromise, [stringKey, value2]) => {
      if (value2 == null) {
        return accPromise;
      }
      const acc = await accPromise;
      let key = stringKey;
      if (isKeyNumeric) {
        const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
        if (!isNaN(numberKey)) {
          key = numberKey;
        }
      }
      const transformedKey = await transformKey(key);
      const transformedValue = await transformValue(value2);
      if (acc.ok && transformedKey.ok && transformedValue.ok) {
        return {
          ok: true,
          value: {
            ...acc.value,
            [transformedKey.value]: transformedValue.value
          }
        };
      }
      const errors = [];
      if (!acc.ok) {
        errors.push(...acc.errors);
      }
      if (!transformedKey.ok) {
        errors.push(
          ...transformedKey.errors.map((error) => ({
            path: [\`\${key} (key)\`, ...error.path],
            message: error.message
          }))
        );
      }
      if (!transformedValue.ok) {
        errors.push(
          ...transformedValue.errors.map((error) => ({
            path: [stringKey, ...error.path],
            message: error.message
          }))
        );
      }
      return {
        ok: false,
        errors
      };
    },
    Promise.resolve({ ok: true, value: {} })
  );
}
var init_record = __esm({
  \\"src/core/schemas/builders/record/record.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_entries();
    init_isPlainObject();
    init_schema_utils();
  }
});

// src/core/schemas/builders/record/index.ts
var init_record2 = __esm({
  \\"src/core/schemas/builders/record/index.ts\\"() {
    \\"use strict\\";
    init_record();
  }
});

// src/core/schemas/builders/set/set.ts
function set(schema) {
  const listSchema = list(schema);
  const baseSchema = {
    parse: async (raw, opts) => {
      const parsedList = await listSchema.parse(raw, opts);
      if (parsedList.ok) {
        return {
          ok: true,
          value: new Set(parsedList.value)
        };
      } else {
        return parsedList;
      }
    },
    json: async (parsed, opts) => {
      if (!(parsed instanceof Set)) {
        return {
          ok: false,
          errors: [
            {
              path: [],
              message: \\"Not a Set\\"
            }
          ]
        };
      }
      const jsonList = await listSchema.json([...parsed], opts);
      return jsonList;
    },
    getType: () => SchemaType.SET
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema)
  };
}
var init_set = __esm({
  \\"src/core/schemas/builders/set/set.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_list2();
    init_schema_utils();
  }
});

// src/core/schemas/builders/set/index.ts
var init_set2 = __esm({
  \\"src/core/schemas/builders/set/index.ts\\"() {
    \\"use strict\\";
    init_set();
  }
});

// src/core/schemas/builders/union/discriminant.ts
function discriminant(parsedDiscriminant, rawDiscriminant) {
  return {
    parsedDiscriminant,
    rawDiscriminant
  };
}
var init_discriminant = __esm({
  \\"src/core/schemas/builders/union/discriminant.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/schemas/builders/union/union.ts
function union(discriminant2, union2) {
  const rawDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.rawDiscriminant;
  const parsedDiscriminant = typeof discriminant2 === \\"string\\" ? discriminant2 : discriminant2.parsedDiscriminant;
  const discriminantValueSchema = enum_(keys(union2));
  const baseSchema = {
    parse: async (raw, opts) => {
      return transformAndValidateUnion(
        raw,
        rawDiscriminant,
        parsedDiscriminant,
        (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        (opts == null ? void 0 : opts.allowUnknownKeys) ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts)
      );
    },
    json: async (parsed, opts) => {
      return transformAndValidateUnion(
        parsed,
        parsedDiscriminant,
        rawDiscriminant,
        (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
        (discriminantValue) => union2[discriminantValue],
        (opts == null ? void 0 : opts.allowUnknownKeys) ?? false,
        (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts)
      );
    },
    getType: () => SchemaType.UNION
  };
  return {
    ...baseSchema,
    ...getSchemaUtils(baseSchema),
    ...getObjectLikeUtils(baseSchema)
  };
}
async function transformAndValidateUnion(value, discriminant2, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
  if (!isPlainObject(value)) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: NOT_AN_OBJECT_ERROR_MESSAGE
        }
      ]
    };
  }
  const { [discriminant2]: discriminantValue, ...additionalProperties } = value;
  if (discriminantValue == null) {
    return {
      ok: false,
      errors: [
        {
          path: [],
          message: \`Missing discriminant (\\"\${discriminant2}\\")\`
        }
      ]
    };
  }
  const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
  if (!transformedDiscriminantValue.ok) {
    return {
      ok: false,
      errors: transformedDiscriminantValue.errors.map((error) => ({
        path: [discriminant2, ...error.path],
        message: error.message
      }))
    };
  }
  const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
  if (additionalPropertiesSchema == null) {
    if (allowUnknownKeys) {
      return {
        ok: true,
        value: {
          [transformedDiscriminant]: transformedDiscriminantValue.value,
          ...additionalProperties
        }
      };
    } else {
      return {
        ok: false,
        errors: [
          {
            path: [discriminant2],
            message: \\"Unrecognized discriminant value\\"
          }
        ]
      };
    }
  }
  const transformedAdditionalProperties = await transformAdditionalProperties(
    additionalProperties,
    additionalPropertiesSchema
  );
  if (!transformedAdditionalProperties.ok) {
    return transformedAdditionalProperties;
  }
  return {
    ok: true,
    value: {
      [transformedDiscriminant]: discriminantValue,
      ...transformedAdditionalProperties.value
    }
  };
}
var init_union = __esm({
  \\"src/core/schemas/builders/union/union.ts\\"() {
    \\"use strict\\";
    init_Schema();
    init_isPlainObject();
    init_keys();
    init_enum2();
    init_object_like();
    init_schema_utils();
  }
});

// src/core/schemas/builders/union/index.ts
var init_union2 = __esm({
  \\"src/core/schemas/builders/union/index.ts\\"() {
    \\"use strict\\";
    init_discriminant();
    init_union();
  }
});

// src/core/schemas/builders/index.ts
var init_builders = __esm({
  \\"src/core/schemas/builders/index.ts\\"() {
    \\"use strict\\";
    init_date2();
    init_enum2();
    init_lazy2();
    init_list2();
    init_literals();
    init_object2();
    init_object_like();
    init_primitives();
    init_record2();
    init_schema_utils();
    init_set2();
    init_union2();
  }
});

// src/core/schemas/index.ts
var schemas_exports = {};
__export(schemas_exports, {
  JsonError: () => JsonError,
  ParseError: () => ParseError,
  any: () => any,
  boolean: () => boolean,
  date: () => date,
  discriminant: () => discriminant,
  enum_: () => enum_,
  getObjectLikeUtils: () => getObjectLikeUtils,
  getObjectUtils: () => getObjectUtils,
  getSchemaUtils: () => getSchemaUtils,
  isProperty: () => isProperty,
  lazy: () => lazy,
  lazyObject: () => lazyObject,
  list: () => list,
  number: () => number,
  object: () => object,
  optional: () => optional,
  property: () => property,
  record: () => record,
  set: () => set,
  string: () => string,
  stringLiteral: () => stringLiteral,
  transform: () => transform,
  union: () => union,
  unknown: () => unknown,
  withParsedProperties: () => withParsedProperties
});
var init_schemas = __esm({
  \\"src/core/schemas/index.ts\\"() {
    \\"use strict\\";
    init_builders();
    init_Schema();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/bind.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/utils.js\\"(exports, module2) {
    \\"use strict\\";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    var kindOf = function(cache) {
      return function(thing) {
        var str = toString.call(thing);
        return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
      };
    }(/* @__PURE__ */ Object.create(null));
    function kindOfTest(type) {
      type = type.toLowerCase();
      return function isKindOf(thing) {
        return kindOf(thing) === type;
      };
    }
    function isArray(val) {
      return Array.isArray(val);
    }
    function isUndefined(val) {
      return typeof val === \\"undefined\\";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === \\"function\\" && val.constructor.isBuffer(val);
    }
    var isArrayBuffer = kindOfTest(\\"ArrayBuffer\\");
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== \\"undefined\\" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && isArrayBuffer(val.buffer);
      }
      return result;
    }
    function isString(val) {
      return typeof val === \\"string\\";
    }
    function isNumber(val) {
      return typeof val === \\"number\\";
    }
    function isObject(val) {
      return val !== null && typeof val === \\"object\\";
    }
    function isPlainObject2(val) {
      if (kindOf(val) !== \\"object\\") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    var isDate = kindOfTest(\\"Date\\");
    var isFile = kindOfTest(\\"File\\");
    var isBlob = kindOfTest(\\"Blob\\");
    var isFileList = kindOfTest(\\"FileList\\");
    function isFunction(val) {
      return toString.call(val) === \\"[object Function]\\";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isFormData(thing) {
      var pattern = \\"[object FormData]\\";
      return thing && (typeof FormData === \\"function\\" && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);
    }
    var isURLSearchParams = kindOfTest(\\"URLSearchParams\\");
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\\\\s+|\\\\s+$/g, \\"\\");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== \\"undefined\\" && (navigator.product === \\"ReactNative\\" || navigator.product === \\"NativeScript\\" || navigator.product === \\"NS\\")) {
        return false;
      }
      return typeof window !== \\"undefined\\" && typeof document !== \\"undefined\\";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === \\"undefined\\") {
        return;
      }
      if (typeof obj !== \\"object\\") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject2(result[key]) && isPlainObject2(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject2(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === \\"function\\") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    function inherits(constructor, superConstructor, props, descriptors) {
      constructor.prototype = Object.create(superConstructor.prototype, descriptors);
      constructor.prototype.constructor = constructor;
      props && Object.assign(constructor.prototype, props);
    }
    function toFlatObject(sourceObj, destObj, filter) {
      var props;
      var i;
      var prop;
      var merged = {};
      destObj = destObj || {};
      do {
        props = Object.getOwnPropertyNames(sourceObj);
        i = props.length;
        while (i-- > 0) {
          prop = props[i];
          if (!merged[prop]) {
            destObj[prop] = sourceObj[prop];
            merged[prop] = true;
          }
        }
        sourceObj = Object.getPrototypeOf(sourceObj);
      } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
      return destObj;
    }
    function endsWith(str, searchString, position) {
      str = String(str);
      if (position === void 0 || position > str.length) {
        position = str.length;
      }
      position -= searchString.length;
      var lastIndex = str.indexOf(searchString, position);
      return lastIndex !== -1 && lastIndex === position;
    }
    function toArray(thing) {
      if (!thing)
        return null;
      var i = thing.length;
      if (isUndefined(i))
        return null;
      var arr = new Array(i);
      while (i-- > 0) {
        arr[i] = thing[i];
      }
      return arr;
    }
    var isTypedArray = function(TypedArray) {
      return function(thing) {
        return TypedArray && thing instanceof TypedArray;
      };
    }(typeof Uint8Array !== \\"undefined\\" && Object.getPrototypeOf(Uint8Array));
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject: isPlainObject2,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM,
      inherits,
      toFlatObject,
      kindOf,
      kindOfTest,
      endsWith,
      toArray,
      isTypedArray,
      isFileList
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/buildURL.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, \\":\\").replace(/%24/g, \\"$\\").replace(/%2C/gi, \\",\\").replace(/%20/g, \\"+\\").replace(/%5B/gi, \\"[\\").replace(/%5D/gi, \\"]\\");
    }
    module2.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === \\"undefined\\") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + \\"[]\\";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + \\"=\\" + encode(v));
          });
        });
        serializedParams = parts.join(\\"&\\");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf(\\"#\\");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf(\\"?\\") === -1 ? \\"?\\" : \\"&\\") + serializedParams;
      }
      return url;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/InterceptorManager.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/normalizeHeaderName.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function normalizeHeaderName(headers, normalizedName) {
      utils.forEach(headers, function processHeader(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers[normalizedName] = value;
          delete headers[name];
        }
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js
var require_AxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/AxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function AxiosError2(message, code, config, request, response) {
      Error.call(this);
      this.message = message;
      this.name = \\"AxiosError\\";
      code && (this.code = code);
      config && (this.config = config);
      request && (this.request = request);
      response && (this.response = response);
    }
    utils.inherits(AxiosError2, Error, {
      toJSON: function toJSON() {
        return {
          // Standard
          message: this.message,
          name: this.name,
          // Microsoft
          description: this.description,
          number: this.number,
          // Mozilla
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          // Axios
          config: this.config,
          code: this.code,
          status: this.response && this.response.status ? this.response.status : null
        };
      }
    });
    var prototype = AxiosError2.prototype;
    var descriptors = {};
    [
      \\"ERR_BAD_OPTION_VALUE\\",
      \\"ERR_BAD_OPTION\\",
      \\"ECONNABORTED\\",
      \\"ETIMEDOUT\\",
      \\"ERR_NETWORK\\",
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"ERR_DEPRECATED\\",
      \\"ERR_BAD_RESPONSE\\",
      \\"ERR_BAD_REQUEST\\",
      \\"ERR_CANCELED\\"
      // eslint-disable-next-line func-names
    ].forEach(function(code) {
      descriptors[code] = { value: code };
    });
    Object.defineProperties(AxiosError2, descriptors);
    Object.defineProperty(prototype, \\"isAxiosError\\", { value: true });
    AxiosError2.from = function(error, code, config, request, response, customProps) {
      var axiosError = Object.create(prototype);
      utils.toFlatObject(error, axiosError, function filter(obj) {
        return obj !== Error.prototype;
      });
      AxiosError2.call(axiosError, error.message, code, config, request, response);
      axiosError.name = error.name;
      customProps && Object.assign(axiosError, customProps);
      return axiosError;
    };
    module2.exports = AxiosError2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js
var require_transitional = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/transitional.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js
var require_toFormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/toFormData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    function toFormData(obj, formData) {
      formData = formData || new FormData();
      var stack = [];
      function convertValue(value) {
        if (value === null)
          return \\"\\";
        if (utils.isDate(value)) {
          return value.toISOString();
        }
        if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
          return typeof Blob === \\"function\\" ? new Blob([value]) : Buffer.from(value);
        }
        return value;
      }
      function build(data, parentKey) {
        if (utils.isPlainObject(data) || utils.isArray(data)) {
          if (stack.indexOf(data) !== -1) {
            throw Error(\\"Circular reference detected in \\" + parentKey);
          }
          stack.push(data);
          utils.forEach(data, function each(value, key) {
            if (utils.isUndefined(value))
              return;
            var fullKey = parentKey ? parentKey + \\".\\" + key : key;
            var arr;
            if (value && !parentKey && typeof value === \\"object\\") {
              if (utils.endsWith(key, \\"{}\\")) {
                value = JSON.stringify(value);
              } else if (utils.endsWith(key, \\"[]\\") && (arr = utils.toArray(value))) {
                arr.forEach(function(el) {
                  !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
                });
                return;
              }
            }
            build(value, fullKey);
          });
          stack.pop();
        } else {
          formData.append(parentKey, convertValue(data));
        }
      }
      build(obj);
      return formData;
    }
    module2.exports = toFormData;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/settle.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    module2.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(new AxiosError2(
          \\"Request failed with status code \\" + response.status,
          [AxiosError2.ERR_BAD_REQUEST, AxiosError2.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
          response.config,
          response.request,
          response
        ));
      }
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/cookies.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + \\"=\\" + encodeURIComponent(value));
          if (utils.isNumber(expires)) {
            cookie.push(\\"expires=\\" + new Date(expires).toGMTString());
          }
          if (utils.isString(path)) {
            cookie.push(\\"path=\\" + path);
          }
          if (utils.isString(domain)) {
            cookie.push(\\"domain=\\" + domain);
          }
          if (secure === true) {
            cookie.push(\\"secure\\");
          }
          document.cookie = cookie.join(\\"; \\");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp(\\"(^|;\\\\\\\\s*)(\\" + name + \\")=([^;]*)\\"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, \\"\\", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAbsoluteURL.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\\\\d+\\\\-.]*:)?\\\\/\\\\//i.test(url);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/combineURLs.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\\\\/+$/, \\"\\") + \\"/\\" + relativeURL.replace(/^\\\\/+/, \\"\\") : baseURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/buildFullPath.js\\"(exports, module2) {
    \\"use strict\\";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseHeaders.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var ignoreDuplicateOf = [
      \\"age\\",
      \\"authorization\\",
      \\"content-length\\",
      \\"content-type\\",
      \\"etag\\",
      \\"expires\\",
      \\"from\\",
      \\"host\\",
      \\"if-modified-since\\",
      \\"if-unmodified-since\\",
      \\"last-modified\\",
      \\"location\\",
      \\"max-forwards\\",
      \\"proxy-authorization\\",
      \\"referer\\",
      \\"retry-after\\",
      \\"user-agent\\"
    ];
    module2.exports = function parseHeaders(headers) {
      var parsed = {};
      var key;
      var val;
      var i;
      if (!headers) {
        return parsed;
      }
      utils.forEach(headers.split(\\"\\\\n\\"), function parser(line) {
        i = line.indexOf(\\":\\");
        key = utils.trim(line.substr(0, i)).toLowerCase();
        val = utils.trim(line.substr(i + 1));
        if (key) {
          if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
            return;
          }
          if (key === \\"set-cookie\\") {
            parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
          } else {
            parsed[key] = parsed[key] ? parsed[key] + \\", \\" + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isURLSameOrigin.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement(\\"a\\");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute(\\"href\\", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute(\\"href\\", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, \\"\\") : \\"\\",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\\\?/, \\"\\") : \\"\\",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, \\"\\") : \\"\\",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === \\"/\\" ? urlParsingNode.pathname : \\"/\\" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js
var require_CanceledError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CanceledError.js\\"(exports, module2) {
    \\"use strict\\";
    var AxiosError2 = require_AxiosError();
    var utils = require_utils();
    function CanceledError(message) {
      AxiosError2.call(this, message == null ? \\"canceled\\" : message, AxiosError2.ERR_CANCELED);
      this.name = \\"CanceledError\\";
    }
    utils.inherits(CanceledError, AxiosError2, {
      __CANCEL__: true
    });
    module2.exports = CanceledError;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js
var require_parseProtocol = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/parseProtocol.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function parseProtocol(url) {
      var match = /^([-+\\\\w]{1,25})(:?\\\\/\\\\/|:)/.exec(url);
      return match && match[1] || \\"\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/xhr.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var parseProtocol = require_parseProtocol();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
          delete requestHeaders[\\"Content-Type\\"];
        }
        var request = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : \\"\\";
          requestHeaders.Authorization = \\"Basic \\" + btoa(username + \\":\\" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
        request.timeout = config.timeout;
        function onloadend() {
          if (!request) {
            return;
          }
          var responseHeaders = \\"getAllResponseHeaders\\" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === \\"text\\" || responseType === \\"json\\" ? request.responseText : request.response;
          var response = {
            data: responseData,
            status: request.status,
            statusText: request.statusText,
            headers: responseHeaders,
            config,
            request
          };
          settle(function _resolve(value) {
            resolve(value);
            done();
          }, function _reject(err) {
            reject(err);
            done();
          }, response);
          request = null;
        }
        if (\\"onloadend\\" in request) {
          request.onloadend = onloadend;
        } else {
          request.onreadystatechange = function handleLoad() {
            if (!request || request.readyState !== 4) {
              return;
            }
            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\\"file:\\") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request.onabort = function handleAbort() {
          if (!request) {
            return;
          }
          reject(new AxiosError2(\\"Request aborted\\", AxiosError2.ECONNABORTED, config, request));
          request = null;
        };
        request.onerror = function handleError() {
          reject(new AxiosError2(\\"Network Error\\", AxiosError2.ERR_NETWORK, config, request, request));
          request = null;
        };
        request.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = config.timeout ? \\"timeout of \\" + config.timeout + \\"ms exceeded\\" : \\"timeout exceeded\\";
          var transitional = config.transitional || transitionalDefaults;
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(new AxiosError2(
            timeoutErrorMessage,
            transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
            config,
            request
          ));
          request = null;
        };
        if (utils.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if (\\"setRequestHeader\\" in request) {
          utils.forEach(requestHeaders, function setRequestHeader(val, key) {
            if (typeof requestData === \\"undefined\\" && key.toLowerCase() === \\"content-type\\") {
              delete requestHeaders[key];
            } else {
              request.setRequestHeader(key, val);
            }
          });
        }
        if (!utils.isUndefined(config.withCredentials)) {
          request.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== \\"json\\") {
          request.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === \\"function\\") {
          request.addEventListener(\\"progress\\", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === \\"function\\" && request.upload) {
          request.upload.addEventListener(\\"progress\\", config.onUploadProgress);
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (!request) {
              return;
            }
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
            request.abort();
            request = null;
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (!requestData) {
          requestData = null;
        }
        var protocol = parseProtocol(fullPath);
        if (protocol && [\\"http\\", \\"https\\", \\"file\\"].indexOf(protocol) === -1) {
          reject(new AxiosError2(\\"Unsupported protocol \\" + protocol + \\":\\", AxiosError2.ERR_BAD_REQUEST, config));
          return;
        }
        request.send(requestData);
      });
    };
  }
});

// .yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  \\".yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/debug.js\\"(exports, module2) {
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require(\\"debug\\")(\\"follow-redirects\\");
        } catch (error) {
        }
        if (typeof debug !== \\"function\\") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// .yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  \\".yarn/__virtual__/follow-redirects-virtual-42073a9d6a/0/cache/follow-redirects-npm-1.15.2-1ec1dd82be-faa66059b6.zip/node_modules/follow-redirects/index.js\\"(exports, module2) {
    var url = require(\\"url\\");
    var URL = url.URL;
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var Writable = require(\\"stream\\").Writable;
    var assert = require(\\"assert\\");
    var debug = require_debug();
    var events = [\\"abort\\", \\"aborted\\", \\"connect\\", \\"error\\", \\"socket\\", \\"timeout\\"];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      \\"ERR_INVALID_URL\\",
      \\"Invalid URL\\",
      TypeError
    );
    var RedirectionError = createErrorType(
      \\"ERR_FR_REDIRECTION_FAILURE\\",
      \\"Redirected request failed\\"
    );
    var TooManyRedirectsError = createErrorType(
      \\"ERR_FR_TOO_MANY_REDIRECTS\\",
      \\"Maximum number of redirects exceeded\\"
    );
    var MaxBodyLengthExceededError = createErrorType(
      \\"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\\",
      \\"Request body larger than maxBodyLength limit\\"
    );
    var WriteAfterEndError = createErrorType(
      \\"ERR_STREAM_WRITE_AFTER_END\\",
      \\"write after end\\"
    );
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options);
      this._options = options;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on(\\"response\\", responseCallback);
      }
      var self = this;
      this._onNativeResponse = function(response) {
        self._processResponse(response);
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      abortRequest(this._currentRequest);
      this.emit(\\"abort\\");
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString(data) && !isBuffer(data)) {
        throw new TypeError(\\"data should be a string, Buffer or Uint8Array\\");
      }
      if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding });
        this._currentRequest.write(data, encoding, callback);
      } else {
        this.emit(\\"error\\", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (isFunction(data)) {
        callback = data;
        data = encoding = null;
      } else if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener(\\"timeout\\", socket.destroy);
        socket.addListener(\\"timeout\\", socket.destroy);
      }
      function startTimer(socket) {
        if (self._timeout) {
          clearTimeout(self._timeout);
        }
        self._timeout = setTimeout(function() {
          self.emit(\\"timeout\\");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self._timeout) {
          clearTimeout(self._timeout);
          self._timeout = null;
        }
        self.removeListener(\\"abort\\", clearTimer);
        self.removeListener(\\"error\\", clearTimer);
        self.removeListener(\\"response\\", clearTimer);
        if (callback) {
          self.removeListener(\\"timeout\\", callback);
        }
        if (!self.socket) {
          self._currentRequest.removeListener(\\"socket\\", startTimer);
        }
      }
      if (callback) {
        this.on(\\"timeout\\", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once(\\"socket\\", startTimer);
      }
      this.on(\\"socket\\", destroyOnTimeout);
      this.on(\\"abort\\", clearTimer);
      this.on(\\"error\\", clearTimer);
      this.on(\\"response\\", clearTimer);
      return this;
    };
    [
      \\"flushHeaders\\",
      \\"getHeader\\",
      \\"setNoDelay\\",
      \\"setSocketKeepAlive\\"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    [\\"aborted\\", \\"connection\\", \\"socket\\"].forEach(function(property2) {
      Object.defineProperty(RedirectableRequest.prototype, property2, {
        get: function() {
          return this._currentRequest[property2];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options) {
      if (!options.headers) {
        options.headers = {};
      }
      if (options.host) {
        if (!options.hostname) {
          options.hostname = options.host;
        }
        delete options.host;
      }
      if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf(\\"?\\");
        if (searchPos < 0) {
          options.pathname = options.path;
        } else {
          options.pathname = options.path.substring(0, searchPos);
          options.search = options.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit(\\"error\\", new TypeError(\\"Unsupported protocol \\" + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request._redirectable = this;
      for (var event of events) {
        request.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\\\\//.test(this._options.path) ? url.format(this._options) : (
        // When making a request to a proxy, […]
        // a client MUST send the target URI in absolute-form […].
        this._options.path
      );
      if (this._isRedirect) {
        var i = 0;
        var self = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request === self._currentRequest) {
            if (error) {
              self.emit(\\"error\\", error);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request.finished) {
                request.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self._ended) {
              request.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response.headers,
          statusCode
        });
      }
      var location = response.headers.location;
      if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit(\\"response\\", response);
        this._requestBodyBuffers = [];
        return;
      }
      abortRequest(this._currentRequest);
      response.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        this.emit(\\"error\\", new TooManyRedirectsError());
        return;
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign({
          // The Host header was set by nativeProtocol.request
          Host: response.req.getHeader(\\"host\\")
        }, this._options.headers);
      }
      var method = this._options.method;
      if ((statusCode === 301 || statusCode === 302) && this._options.method === \\"POST\\" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = \\"GET\\";
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
      var currentUrlParts = url.parse(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\\\\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl;
      try {
        redirectUrl = url.resolve(currentUrl, location);
      } catch (cause) {
        this.emit(\\"error\\", new RedirectionError({ cause }));
        return;
      }
      debug(\\"redirecting to\\", redirectUrl);
      this._isRedirect = true;
      var redirectUrlParts = url.parse(redirectUrl);
      Object.assign(this._options, redirectUrlParts);
      if (redirectUrlParts.protocol !== currentUrlParts.protocol && redirectUrlParts.protocol !== \\"https:\\" || redirectUrlParts.host !== currentHost && !isSubdomain(redirectUrlParts.host, currentHost)) {
        removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);
      }
      if (isFunction(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        try {
          beforeRedirect(this._options, responseDetails, requestDetails);
        } catch (err) {
          this.emit(\\"error\\", err);
          return;
        }
        this._sanitizeOptions(this._options);
      }
      try {
        this._performRequest();
      } catch (cause) {
        this.emit(\\"error\\", new RedirectionError({ cause }));
      }
    };
    function wrap(protocols) {
      var exports2 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + \\":\\";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports2[scheme] = Object.create(nativeProtocol);
        function request(input, options, callback) {
          if (isString(input)) {
            var parsed;
            try {
              parsed = urlToOptions(new URL(input));
            } catch (err) {
              parsed = url.parse(input);
            }
            if (!isString(parsed.protocol)) {
              throw new InvalidUrlError({ input });
            }
            input = parsed;
          } else if (URL && input instanceof URL) {
            input = urlToOptions(input);
          } else {
            callback = options;
            options = input;
            input = { protocol };
          }
          if (isFunction(options)) {
            callback = options;
            options = null;
          }
          options = Object.assign({
            maxRedirects: exports2.maxRedirects,
            maxBodyLength: exports2.maxBodyLength
          }, input, options);
          options.nativeProtocols = nativeProtocols;
          if (!isString(options.host) && !isString(options.hostname)) {
            options.hostname = \\"::1\\";
          }
          assert.equal(options.protocol, protocol, \\"protocol mismatch\\");
          debug(\\"options\\", options);
          return new RedirectableRequest(options, callback);
        }
        function get(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request, configurable: true, enumerable: true, writable: true },
          get: { value: get, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports2;
    }
    function noop() {
    }
    function urlToOptions(urlObject) {
      var options = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith(\\"[\\") ? (
          /* istanbul ignore next */
          urlObject.hostname.slice(1, -1)
        ) : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href
      };
      if (urlObject.port !== \\"\\") {
        options.port = Number(urlObject.port);
      }
      return options;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers) {
        if (regex.test(header)) {
          lastValue = headers[header];
          delete headers[header];
        }
      }
      return lastValue === null || typeof lastValue === \\"undefined\\" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        Error.captureStackTrace(this, this.constructor);
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + \\": \\" + this.cause.message : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      CustomError.prototype.constructor = CustomError;
      CustomError.prototype.name = \\"Error [\\" + code + \\"]\\";
      return CustomError;
    }
    function abortRequest(request) {
      for (var event of events) {
        request.removeListener(event, eventHandlers[event]);
      }
      request.on(\\"error\\", noop);
      request.abort();
    }
    function isSubdomain(subdomain, domain) {
      assert(isString(subdomain) && isString(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === \\".\\" && subdomain.endsWith(domain);
    }
    function isString(value) {
      return typeof value === \\"string\\" || value instanceof String;
    }
    function isFunction(value) {
      return typeof value === \\"function\\";
    }
    function isBuffer(value) {
      return typeof value === \\"object\\" && \\"length\\" in value;
    }
    module2.exports = wrap({ http, https });
    module2.exports.wrap = wrap;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js
var require_data = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/env/data.js\\"(exports, module2) {
    module2.exports = {
      \\"version\\": \\"0.27.2\\"
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/http.js
var require_http = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/adapters/http.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var settle = require_settle();
    var buildFullPath = require_buildFullPath();
    var buildURL = require_buildURL();
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var httpFollow = require_follow_redirects().http;
    var httpsFollow = require_follow_redirects().https;
    var url = require(\\"url\\");
    var zlib = require(\\"zlib\\");
    var VERSION = require_data().version;
    var transitionalDefaults = require_transitional();
    var AxiosError2 = require_AxiosError();
    var CanceledError = require_CanceledError();
    var isHttps = /https:?/;
    var supportedProtocols = [\\"http:\\", \\"https:\\", \\"file:\\"];
    function setProxy(options, proxy, location) {
      options.hostname = proxy.host;
      options.host = proxy.host;
      options.port = proxy.port;
      options.path = location;
      if (proxy.auth) {
        var base64 = Buffer.from(proxy.auth.username + \\":\\" + proxy.auth.password, \\"utf8\\").toString(\\"base64\\");
        options.headers[\\"Proxy-Authorization\\"] = \\"Basic \\" + base64;
      }
      options.beforeRedirect = function beforeRedirect(redirection) {
        redirection.headers.host = redirection.host;
        setProxy(redirection, proxy, redirection.href);
      };
    }
    module2.exports = function httpAdapter(config) {
      return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
        var onCanceled;
        function done() {
          if (config.cancelToken) {
            config.cancelToken.unsubscribe(onCanceled);
          }
          if (config.signal) {
            config.signal.removeEventListener(\\"abort\\", onCanceled);
          }
        }
        var resolve = function resolve2(value) {
          done();
          resolvePromise(value);
        };
        var rejected = false;
        var reject = function reject2(value) {
          done();
          rejected = true;
          rejectPromise(value);
        };
        var data = config.data;
        var headers = config.headers;
        var headerNames = {};
        Object.keys(headers).forEach(function storeLowerName(name) {
          headerNames[name.toLowerCase()] = name;
        });
        if (\\"user-agent\\" in headerNames) {
          if (!headers[headerNames[\\"user-agent\\"]]) {
            delete headers[headerNames[\\"user-agent\\"]];
          }
        } else {
          headers[\\"User-Agent\\"] = \\"axios/\\" + VERSION;
        }
        if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {
          Object.assign(headers, data.getHeaders());
        } else if (data && !utils.isStream(data)) {
          if (Buffer.isBuffer(data)) {
          } else if (utils.isArrayBuffer(data)) {
            data = Buffer.from(new Uint8Array(data));
          } else if (utils.isString(data)) {
            data = Buffer.from(data, \\"utf-8\\");
          } else {
            return reject(new AxiosError2(
              \\"Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream\\",
              AxiosError2.ERR_BAD_REQUEST,
              config
            ));
          }
          if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {
            return reject(new AxiosError2(
              \\"Request body larger than maxBodyLength limit\\",
              AxiosError2.ERR_BAD_REQUEST,
              config
            ));
          }
          if (!headerNames[\\"content-length\\"]) {
            headers[\\"Content-Length\\"] = data.length;
          }
        }
        var auth = void 0;
        if (config.auth) {
          var username = config.auth.username || \\"\\";
          var password = config.auth.password || \\"\\";
          auth = username + \\":\\" + password;
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        var parsed = url.parse(fullPath);
        var protocol = parsed.protocol || supportedProtocols[0];
        if (supportedProtocols.indexOf(protocol) === -1) {
          return reject(new AxiosError2(
            \\"Unsupported protocol \\" + protocol,
            AxiosError2.ERR_BAD_REQUEST,
            config
          ));
        }
        if (!auth && parsed.auth) {
          var urlAuth = parsed.auth.split(\\":\\");
          var urlUsername = urlAuth[0] || \\"\\";
          var urlPassword = urlAuth[1] || \\"\\";
          auth = urlUsername + \\":\\" + urlPassword;
        }
        if (auth && headerNames.authorization) {
          delete headers[headerNames.authorization];
        }
        var isHttpsRequest = isHttps.test(protocol);
        var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;
        try {
          buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\\\?/, \\"\\");
        } catch (err) {
          var customErr = new Error(err.message);
          customErr.config = config;
          customErr.url = config.url;
          customErr.exists = true;
          reject(customErr);
        }
        var options = {
          path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\\\?/, \\"\\"),
          method: config.method.toUpperCase(),
          headers,
          agent,
          agents: { http: config.httpAgent, https: config.httpsAgent },
          auth
        };
        if (config.socketPath) {
          options.socketPath = config.socketPath;
        } else {
          options.hostname = parsed.hostname;
          options.port = parsed.port;
        }
        var proxy = config.proxy;
        if (!proxy && proxy !== false) {
          var proxyEnv = protocol.slice(0, -1) + \\"_proxy\\";
          var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
          if (proxyUrl) {
            var parsedProxyUrl = url.parse(proxyUrl);
            var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
            var shouldProxy = true;
            if (noProxyEnv) {
              var noProxy = noProxyEnv.split(\\",\\").map(function trim(s) {
                return s.trim();
              });
              shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
                if (!proxyElement) {
                  return false;
                }
                if (proxyElement === \\"*\\") {
                  return true;
                }
                if (proxyElement[0] === \\".\\" && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
                  return true;
                }
                return parsed.hostname === proxyElement;
              });
            }
            if (shouldProxy) {
              proxy = {
                host: parsedProxyUrl.hostname,
                port: parsedProxyUrl.port,
                protocol: parsedProxyUrl.protocol
              };
              if (parsedProxyUrl.auth) {
                var proxyUrlAuth = parsedProxyUrl.auth.split(\\":\\");
                proxy.auth = {
                  username: proxyUrlAuth[0],
                  password: proxyUrlAuth[1]
                };
              }
            }
          }
        }
        if (proxy) {
          options.headers.host = parsed.hostname + (parsed.port ? \\":\\" + parsed.port : \\"\\");
          setProxy(options, proxy, protocol + \\"//\\" + parsed.hostname + (parsed.port ? \\":\\" + parsed.port : \\"\\") + options.path);
        }
        var transport;
        var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);
        if (config.transport) {
          transport = config.transport;
        } else if (config.maxRedirects === 0) {
          transport = isHttpsProxy ? https : http;
        } else {
          if (config.maxRedirects) {
            options.maxRedirects = config.maxRedirects;
          }
          if (config.beforeRedirect) {
            options.beforeRedirect = config.beforeRedirect;
          }
          transport = isHttpsProxy ? httpsFollow : httpFollow;
        }
        if (config.maxBodyLength > -1) {
          options.maxBodyLength = config.maxBodyLength;
        }
        if (config.insecureHTTPParser) {
          options.insecureHTTPParser = config.insecureHTTPParser;
        }
        var req = transport.request(options, function handleResponse(res) {
          if (req.aborted)
            return;
          var stream = res;
          var lastRequest = res.req || req;
          if (res.statusCode !== 204 && lastRequest.method !== \\"HEAD\\" && config.decompress !== false) {
            switch (res.headers[\\"content-encoding\\"]) {
              case \\"gzip\\":
              case \\"compress\\":
              case \\"deflate\\":
                stream = stream.pipe(zlib.createUnzip());
                delete res.headers[\\"content-encoding\\"];
                break;
            }
          }
          var response = {
            status: res.statusCode,
            statusText: res.statusMessage,
            headers: res.headers,
            config,
            request: lastRequest
          };
          if (config.responseType === \\"stream\\") {
            response.data = stream;
            settle(resolve, reject, response);
          } else {
            var responseBuffer = [];
            var totalResponseBytes = 0;
            stream.on(\\"data\\", function handleStreamData(chunk) {
              responseBuffer.push(chunk);
              totalResponseBytes += chunk.length;
              if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
                rejected = true;
                stream.destroy();
                reject(new AxiosError2(
                  \\"maxContentLength size of \\" + config.maxContentLength + \\" exceeded\\",
                  AxiosError2.ERR_BAD_RESPONSE,
                  config,
                  lastRequest
                ));
              }
            });
            stream.on(\\"aborted\\", function handlerStreamAborted() {
              if (rejected) {
                return;
              }
              stream.destroy();
              reject(new AxiosError2(
                \\"maxContentLength size of \\" + config.maxContentLength + \\" exceeded\\",
                AxiosError2.ERR_BAD_RESPONSE,
                config,
                lastRequest
              ));
            });
            stream.on(\\"error\\", function handleStreamError(err) {
              if (req.aborted)
                return;
              reject(AxiosError2.from(err, null, config, lastRequest));
            });
            stream.on(\\"end\\", function handleStreamEnd() {
              try {
                var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);
                if (config.responseType !== \\"arraybuffer\\") {
                  responseData = responseData.toString(config.responseEncoding);
                  if (!config.responseEncoding || config.responseEncoding === \\"utf8\\") {
                    responseData = utils.stripBOM(responseData);
                  }
                }
                response.data = responseData;
              } catch (err) {
                reject(AxiosError2.from(err, null, config, response.request, response));
              }
              settle(resolve, reject, response);
            });
          }
        });
        req.on(\\"error\\", function handleRequestError(err) {
          reject(AxiosError2.from(err, null, config, req));
        });
        req.on(\\"socket\\", function handleRequestSocket(socket) {
          socket.setKeepAlive(true, 1e3 * 60);
        });
        if (config.timeout) {
          var timeout = parseInt(config.timeout, 10);
          if (isNaN(timeout)) {
            reject(new AxiosError2(
              \\"error trying to parse \`config.timeout\` to int\\",
              AxiosError2.ERR_BAD_OPTION_VALUE,
              config,
              req
            ));
            return;
          }
          req.setTimeout(timeout, function handleRequestTimeout() {
            req.abort();
            var transitional = config.transitional || transitionalDefaults;
            reject(new AxiosError2(
              \\"timeout of \\" + timeout + \\"ms exceeded\\",
              transitional.clarifyTimeoutError ? AxiosError2.ETIMEDOUT : AxiosError2.ECONNABORTED,
              config,
              req
            ));
          });
        }
        if (config.cancelToken || config.signal) {
          onCanceled = function(cancel) {
            if (req.aborted)
              return;
            req.abort();
            reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);
          };
          config.cancelToken && config.cancelToken.subscribe(onCanceled);
          if (config.signal) {
            config.signal.aborted ? onCanceled() : config.signal.addEventListener(\\"abort\\", onCanceled);
          }
        }
        if (utils.isStream(data)) {
          data.on(\\"error\\", function handleStreamError(err) {
            reject(AxiosError2.from(err, config, null, req));
          }).pipe(req);
        } else {
          req.end(data);
        }
      });
    };
  }
});

// .yarn/cache/delayed-stream-npm-1.0.0-c5a4c4cc02-46fe6e83e2.zip/node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  \\".yarn/cache/delayed-stream-npm-1.0.0-c5a4c4cc02-46fe6e83e2.zip/node_modules/delayed-stream/lib/delayed_stream.js\\"(exports, module2) {
    var Stream = require(\\"stream\\").Stream;
    var util = require(\\"util\\");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options) {
      var delayedStream = new this();
      options = options || {};
      for (var option in options) {
        delayedStream[option] = options[option];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on(\\"error\\", function() {
      });
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, \\"readable\\", {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = true;
      this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this));
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === \\"data\\") {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message = \\"DelayedStream#maxDataSize of \\" + this.maxDataSize + \\" bytes exceeded.\\";
      this.emit(\\"error\\", new Error(message));
    };
  }
});

// .yarn/cache/combined-stream-npm-1.0.8-dc14d4a63a-49fa4aeb49.zip/node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  \\".yarn/cache/combined-stream-npm-1.0.8-dc14d4a63a-49fa4aeb49.zip/node_modules/combined-stream/lib/combined_stream.js\\"(exports, module2) {
    var util = require(\\"util\\");
    var Stream = require(\\"stream\\").Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options) {
      var combinedStream = new this();
      options = options || {};
      for (var option in options) {
        combinedStream[option] = options[option];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream) {
      return typeof stream !== \\"function\\" && typeof stream !== \\"string\\" && typeof stream !== \\"boolean\\" && typeof stream !== \\"number\\" && !Buffer.isBuffer(stream);
    };
    CombinedStream.prototype.append = function(stream) {
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams
          });
          stream.on(\\"data\\", this._checkDataSize.bind(this));
          stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
          stream.pause();
        }
      }
      this._streams.push(stream);
      return this;
    };
    CombinedStream.prototype.pipe = function(dest, options) {
      Stream.prototype.pipe.call(this, dest, options);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function() {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream = this._streams.shift();
      if (typeof stream == \\"undefined\\") {
        this.end();
        return;
      }
      if (typeof stream !== \\"function\\") {
        this._pipeNext(stream);
        return;
      }
      var getStream = stream;
      getStream(function(stream2) {
        var isStreamLike = CombinedStream.isStreamLike(stream2);
        if (isStreamLike) {
          stream2.on(\\"data\\", this._checkDataSize.bind(this));
          this._handleErrors(stream2);
        }
        this._pipeNext(stream2);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream) {
      this._currentStream = stream;
      var isStreamLike = CombinedStream.isStreamLike(stream);
      if (isStreamLike) {
        stream.on(\\"end\\", this._getNext.bind(this));
        stream.pipe(this, { end: false });
        return;
      }
      var value = stream;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream) {
      var self = this;
      stream.on(\\"error\\", function(err) {
        self._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit(\\"data\\", data);
    };
    CombinedStream.prototype.pause = function() {
      if (!this.pauseStreams) {
        return;
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == \\"function\\")
        this._currentStream.pause();
      this.emit(\\"pause\\");
    };
    CombinedStream.prototype.resume = function() {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == \\"function\\")
        this._currentStream.resume();
      this.emit(\\"resume\\");
    };
    CombinedStream.prototype.end = function() {
      this._reset();
      this.emit(\\"end\\");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset();
      this.emit(\\"close\\");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message = \\"DelayedStream#maxDataSize of \\" + this.maxDataSize + \\" bytes exceeded.\\";
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self = this;
      this._streams.forEach(function(stream) {
        if (!stream.dataSize) {
          return;
        }
        self.dataSize += stream.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset();
      this.emit(\\"error\\", err);
    };
  }
});

// .yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/db.json
var require_db = __commonJS({
  \\".yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/db.json\\"(exports, module2) {
    module2.exports = {
      \\"application/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"application/3gpdash-qoe-report+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/3gpp-ims+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/3gpphal+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/3gpphalforms+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/a2l\\": {
        source: \\"iana\\"
      },
      \\"application/ace+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/activemessage\\": {
        source: \\"iana\\"
      },
      \\"application/activity+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-costmap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-costmapfilter+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-directory+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointcost+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointcostparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointprop+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-endpointpropparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-error+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-networkmap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-networkmapfilter+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-updatestreamcontrol+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/alto-updatestreamparams+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/aml\\": {
        source: \\"iana\\"
      },
      \\"application/andrew-inset\\": {
        source: \\"iana\\",
        extensions: [\\"ez\\"]
      },
      \\"application/applefile\\": {
        source: \\"iana\\"
      },
      \\"application/applixware\\": {
        source: \\"apache\\",
        extensions: [\\"aw\\"]
      },
      \\"application/at+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/atf\\": {
        source: \\"iana\\"
      },
      \\"application/atfx\\": {
        source: \\"iana\\"
      },
      \\"application/atom+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atom\\"]
      },
      \\"application/atomcat+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomcat\\"]
      },
      \\"application/atomdeleted+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomdeleted\\"]
      },
      \\"application/atomicmail\\": {
        source: \\"iana\\"
      },
      \\"application/atomsvc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"atomsvc\\"]
      },
      \\"application/atsc-dwd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dwd\\"]
      },
      \\"application/atsc-dynamic-event-message\\": {
        source: \\"iana\\"
      },
      \\"application/atsc-held+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"held\\"]
      },
      \\"application/atsc-rdt+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/atsc-rsat+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rsat\\"]
      },
      \\"application/atxml\\": {
        source: \\"iana\\"
      },
      \\"application/auth-policy+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/bacnet-xdd+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/batch-smtp\\": {
        source: \\"iana\\"
      },
      \\"application/bdoc\\": {
        compressible: false,
        extensions: [\\"bdoc\\"]
      },
      \\"application/beep+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/calendar+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/calendar+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xcs\\"]
      },
      \\"application/call-completion\\": {
        source: \\"iana\\"
      },
      \\"application/cals-1840\\": {
        source: \\"iana\\"
      },
      \\"application/captive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cbor\\": {
        source: \\"iana\\"
      },
      \\"application/cbor-seq\\": {
        source: \\"iana\\"
      },
      \\"application/cccex\\": {
        source: \\"iana\\"
      },
      \\"application/ccmp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ccxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ccxml\\"]
      },
      \\"application/cdfx+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cdfx\\"]
      },
      \\"application/cdmi-capability\\": {
        source: \\"iana\\",
        extensions: [\\"cdmia\\"]
      },
      \\"application/cdmi-container\\": {
        source: \\"iana\\",
        extensions: [\\"cdmic\\"]
      },
      \\"application/cdmi-domain\\": {
        source: \\"iana\\",
        extensions: [\\"cdmid\\"]
      },
      \\"application/cdmi-object\\": {
        source: \\"iana\\",
        extensions: [\\"cdmio\\"]
      },
      \\"application/cdmi-queue\\": {
        source: \\"iana\\",
        extensions: [\\"cdmiq\\"]
      },
      \\"application/cdni\\": {
        source: \\"iana\\"
      },
      \\"application/cea\\": {
        source: \\"iana\\"
      },
      \\"application/cea-2018+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cellml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cfw\\": {
        source: \\"iana\\"
      },
      \\"application/city+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/clr\\": {
        source: \\"iana\\"
      },
      \\"application/clue+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/clue_info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cms\\": {
        source: \\"iana\\"
      },
      \\"application/cnrp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/coap-group+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/coap-payload\\": {
        source: \\"iana\\"
      },
      \\"application/commonground\\": {
        source: \\"iana\\"
      },
      \\"application/conference-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cose\\": {
        source: \\"iana\\"
      },
      \\"application/cose-key\\": {
        source: \\"iana\\"
      },
      \\"application/cose-key-set\\": {
        source: \\"iana\\"
      },
      \\"application/cpl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cpl\\"]
      },
      \\"application/csrattrs\\": {
        source: \\"iana\\"
      },
      \\"application/csta+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cstadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/csvm+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/cu-seeme\\": {
        source: \\"apache\\",
        extensions: [\\"cu\\"]
      },
      \\"application/cwt\\": {
        source: \\"iana\\"
      },
      \\"application/cybercash\\": {
        source: \\"iana\\"
      },
      \\"application/dart\\": {
        compressible: true
      },
      \\"application/dash+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpd\\"]
      },
      \\"application/dash-patch+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpp\\"]
      },
      \\"application/dashdelta\\": {
        source: \\"iana\\"
      },
      \\"application/davmount+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"davmount\\"]
      },
      \\"application/dca-rft\\": {
        source: \\"iana\\"
      },
      \\"application/dcd\\": {
        source: \\"iana\\"
      },
      \\"application/dec-dx\\": {
        source: \\"iana\\"
      },
      \\"application/dialog-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dicom\\": {
        source: \\"iana\\"
      },
      \\"application/dicom+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dicom+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dii\\": {
        source: \\"iana\\"
      },
      \\"application/dit\\": {
        source: \\"iana\\"
      },
      \\"application/dns\\": {
        source: \\"iana\\"
      },
      \\"application/dns+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dns-message\\": {
        source: \\"iana\\"
      },
      \\"application/docbook+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"dbk\\"]
      },
      \\"application/dots+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/dskpp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/dssc+der\\": {
        source: \\"iana\\",
        extensions: [\\"dssc\\"]
      },
      \\"application/dssc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdssc\\"]
      },
      \\"application/dvcs\\": {
        source: \\"iana\\"
      },
      \\"application/ecmascript\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"es\\", \\"ecma\\"]
      },
      \\"application/edi-consent\\": {
        source: \\"iana\\"
      },
      \\"application/edi-x12\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/edifact\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/efi\\": {
        source: \\"iana\\"
      },
      \\"application/elm+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/elm+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.cap+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/emergencycalldata.comment+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.deviceinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.ecall.msd\\": {
        source: \\"iana\\"
      },
      \\"application/emergencycalldata.providerinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.serviceinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.subscriberinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emergencycalldata.veds+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/emma+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"emma\\"]
      },
      \\"application/emotionml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"emotionml\\"]
      },
      \\"application/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"application/epp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/epub+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"epub\\"]
      },
      \\"application/eshop\\": {
        source: \\"iana\\"
      },
      \\"application/exi\\": {
        source: \\"iana\\",
        extensions: [\\"exi\\"]
      },
      \\"application/expect-ct-report+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/express\\": {
        source: \\"iana\\",
        extensions: [\\"exp\\"]
      },
      \\"application/fastinfoset\\": {
        source: \\"iana\\"
      },
      \\"application/fastsoap\\": {
        source: \\"iana\\"
      },
      \\"application/fdt+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"fdt\\"]
      },
      \\"application/fhir+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/fhir+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/fido.trusted-apps+json\\": {
        compressible: true
      },
      \\"application/fits\\": {
        source: \\"iana\\"
      },
      \\"application/flexfec\\": {
        source: \\"iana\\"
      },
      \\"application/font-sfnt\\": {
        source: \\"iana\\"
      },
      \\"application/font-tdpfr\\": {
        source: \\"iana\\",
        extensions: [\\"pfr\\"]
      },
      \\"application/font-woff\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/framework-attributes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/geo+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"geojson\\"]
      },
      \\"application/geo+json-seq\\": {
        source: \\"iana\\"
      },
      \\"application/geopackage+sqlite3\\": {
        source: \\"iana\\"
      },
      \\"application/geoxacml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/gltf-buffer\\": {
        source: \\"iana\\"
      },
      \\"application/gml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"gml\\"]
      },
      \\"application/gpx+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"gpx\\"]
      },
      \\"application/gxf\\": {
        source: \\"apache\\",
        extensions: [\\"gxf\\"]
      },
      \\"application/gzip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"gz\\"]
      },
      \\"application/h224\\": {
        source: \\"iana\\"
      },
      \\"application/held+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/hjson\\": {
        extensions: [\\"hjson\\"]
      },
      \\"application/http\\": {
        source: \\"iana\\"
      },
      \\"application/hyperstudio\\": {
        source: \\"iana\\",
        extensions: [\\"stk\\"]
      },
      \\"application/ibe-key-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ibe-pkg-reply+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ibe-pp-data\\": {
        source: \\"iana\\"
      },
      \\"application/iges\\": {
        source: \\"iana\\"
      },
      \\"application/im-iscomposing+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/index\\": {
        source: \\"iana\\"
      },
      \\"application/index.cmd\\": {
        source: \\"iana\\"
      },
      \\"application/index.obj\\": {
        source: \\"iana\\"
      },
      \\"application/index.response\\": {
        source: \\"iana\\"
      },
      \\"application/index.vnd\\": {
        source: \\"iana\\"
      },
      \\"application/inkml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ink\\", \\"inkml\\"]
      },
      \\"application/iotp\\": {
        source: \\"iana\\"
      },
      \\"application/ipfix\\": {
        source: \\"iana\\",
        extensions: [\\"ipfix\\"]
      },
      \\"application/ipp\\": {
        source: \\"iana\\"
      },
      \\"application/isup\\": {
        source: \\"iana\\"
      },
      \\"application/its+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"its\\"]
      },
      \\"application/java-archive\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"jar\\", \\"war\\", \\"ear\\"]
      },
      \\"application/java-serialized-object\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"ser\\"]
      },
      \\"application/java-vm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"class\\"]
      },
      \\"application/javascript\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"js\\", \\"mjs\\"]
      },
      \\"application/jf2feed+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jose\\": {
        source: \\"iana\\"
      },
      \\"application/jose+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jrd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jscalendar+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"json\\", \\"map\\"]
      },
      \\"application/json-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/json-seq\\": {
        source: \\"iana\\"
      },
      \\"application/json5\\": {
        extensions: [\\"json5\\"]
      },
      \\"application/jsonml+json\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"jsonml\\"]
      },
      \\"application/jwk+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jwk-set+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/jwt\\": {
        source: \\"iana\\"
      },
      \\"application/kpml-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/kpml-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/ld+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"jsonld\\"]
      },
      \\"application/lgr+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lgr\\"]
      },
      \\"application/link-format\\": {
        source: \\"iana\\"
      },
      \\"application/load-control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/lost+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lostxml\\"]
      },
      \\"application/lostsync+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/lpf+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/lxf\\": {
        source: \\"iana\\"
      },
      \\"application/mac-binhex40\\": {
        source: \\"iana\\",
        extensions: [\\"hqx\\"]
      },
      \\"application/mac-compactpro\\": {
        source: \\"apache\\",
        extensions: [\\"cpt\\"]
      },
      \\"application/macwriteii\\": {
        source: \\"iana\\"
      },
      \\"application/mads+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mads\\"]
      },
      \\"application/manifest+json\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"webmanifest\\"]
      },
      \\"application/marc\\": {
        source: \\"iana\\",
        extensions: [\\"mrc\\"]
      },
      \\"application/marcxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mrcx\\"]
      },
      \\"application/mathematica\\": {
        source: \\"iana\\",
        extensions: [\\"ma\\", \\"nb\\", \\"mb\\"]
      },
      \\"application/mathml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mathml\\"]
      },
      \\"application/mathml-content+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mathml-presentation+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-associated-procedure-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-deregister+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-envelope+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-msk+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-msk-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-protection-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-reception-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-register+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-register-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-schedule+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbms-user-service-description+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mbox\\": {
        source: \\"iana\\",
        extensions: [\\"mbox\\"]
      },
      \\"application/media-policy-dataset+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpf\\"]
      },
      \\"application/media_control+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mediaservercontrol+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mscml\\"]
      },
      \\"application/merge-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/metalink+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"metalink\\"]
      },
      \\"application/metalink4+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"meta4\\"]
      },
      \\"application/mets+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mets\\"]
      },
      \\"application/mf4\\": {
        source: \\"iana\\"
      },
      \\"application/mikey\\": {
        source: \\"iana\\"
      },
      \\"application/mipc\\": {
        source: \\"iana\\"
      },
      \\"application/missing-blocks+cbor-seq\\": {
        source: \\"iana\\"
      },
      \\"application/mmt-aei+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"maei\\"]
      },
      \\"application/mmt-usd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"musd\\"]
      },
      \\"application/mods+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mods\\"]
      },
      \\"application/moss-keys\\": {
        source: \\"iana\\"
      },
      \\"application/moss-signature\\": {
        source: \\"iana\\"
      },
      \\"application/mosskey-data\\": {
        source: \\"iana\\"
      },
      \\"application/mosskey-request\\": {
        source: \\"iana\\"
      },
      \\"application/mp21\\": {
        source: \\"iana\\",
        extensions: [\\"m21\\", \\"mp21\\"]
      },
      \\"application/mp4\\": {
        source: \\"iana\\",
        extensions: [\\"mp4s\\", \\"m4p\\"]
      },
      \\"application/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"application/mpeg4-iod\\": {
        source: \\"iana\\"
      },
      \\"application/mpeg4-iod-xmt\\": {
        source: \\"iana\\"
      },
      \\"application/mrb-consumer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/mrb-publish+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/msc-ivr+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/msc-mixer+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/msword\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"doc\\", \\"dot\\"]
      },
      \\"application/mud+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/multipart-core\\": {
        source: \\"iana\\"
      },
      \\"application/mxf\\": {
        source: \\"iana\\",
        extensions: [\\"mxf\\"]
      },
      \\"application/n-quads\\": {
        source: \\"iana\\",
        extensions: [\\"nq\\"]
      },
      \\"application/n-triples\\": {
        source: \\"iana\\",
        extensions: [\\"nt\\"]
      },
      \\"application/nasdata\\": {
        source: \\"iana\\"
      },
      \\"application/news-checkgroups\\": {
        source: \\"iana\\",
        charset: \\"US-ASCII\\"
      },
      \\"application/news-groupinfo\\": {
        source: \\"iana\\",
        charset: \\"US-ASCII\\"
      },
      \\"application/news-transmission\\": {
        source: \\"iana\\"
      },
      \\"application/nlsml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/node\\": {
        source: \\"iana\\",
        extensions: [\\"cjs\\"]
      },
      \\"application/nss\\": {
        source: \\"iana\\"
      },
      \\"application/oauth-authz-req+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/oblivious-dns-message\\": {
        source: \\"iana\\"
      },
      \\"application/ocsp-request\\": {
        source: \\"iana\\"
      },
      \\"application/ocsp-response\\": {
        source: \\"iana\\"
      },
      \\"application/octet-stream\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"bin\\", \\"dms\\", \\"lrf\\", \\"mar\\", \\"so\\", \\"dist\\", \\"distz\\", \\"pkg\\", \\"bpk\\", \\"dump\\", \\"elc\\", \\"deploy\\", \\"exe\\", \\"dll\\", \\"deb\\", \\"dmg\\", \\"iso\\", \\"img\\", \\"msi\\", \\"msp\\", \\"msm\\", \\"buffer\\"]
      },
      \\"application/oda\\": {
        source: \\"iana\\",
        extensions: [\\"oda\\"]
      },
      \\"application/odm+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/odx\\": {
        source: \\"iana\\"
      },
      \\"application/oebps-package+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"opf\\"]
      },
      \\"application/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ogx\\"]
      },
      \\"application/omdoc+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"omdoc\\"]
      },
      \\"application/onenote\\": {
        source: \\"apache\\",
        extensions: [\\"onetoc\\", \\"onetoc2\\", \\"onetmp\\", \\"onepkg\\"]
      },
      \\"application/opc-nodeset+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/oscore\\": {
        source: \\"iana\\"
      },
      \\"application/oxps\\": {
        source: \\"iana\\",
        extensions: [\\"oxps\\"]
      },
      \\"application/p21\\": {
        source: \\"iana\\"
      },
      \\"application/p21+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/p2p-overlay+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"relo\\"]
      },
      \\"application/parityfec\\": {
        source: \\"iana\\"
      },
      \\"application/passport\\": {
        source: \\"iana\\"
      },
      \\"application/patch-ops-error+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xer\\"]
      },
      \\"application/pdf\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pdf\\"]
      },
      \\"application/pdx\\": {
        source: \\"iana\\"
      },
      \\"application/pem-certificate-chain\\": {
        source: \\"iana\\"
      },
      \\"application/pgp-encrypted\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pgp\\"]
      },
      \\"application/pgp-keys\\": {
        source: \\"iana\\",
        extensions: [\\"asc\\"]
      },
      \\"application/pgp-signature\\": {
        source: \\"iana\\",
        extensions: [\\"asc\\", \\"sig\\"]
      },
      \\"application/pics-rules\\": {
        source: \\"apache\\",
        extensions: [\\"prf\\"]
      },
      \\"application/pidf+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/pidf-diff+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/pkcs10\\": {
        source: \\"iana\\",
        extensions: [\\"p10\\"]
      },
      \\"application/pkcs12\\": {
        source: \\"iana\\"
      },
      \\"application/pkcs7-mime\\": {
        source: \\"iana\\",
        extensions: [\\"p7m\\", \\"p7c\\"]
      },
      \\"application/pkcs7-signature\\": {
        source: \\"iana\\",
        extensions: [\\"p7s\\"]
      },
      \\"application/pkcs8\\": {
        source: \\"iana\\",
        extensions: [\\"p8\\"]
      },
      \\"application/pkcs8-encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/pkix-attr-cert\\": {
        source: \\"iana\\",
        extensions: [\\"ac\\"]
      },
      \\"application/pkix-cert\\": {
        source: \\"iana\\",
        extensions: [\\"cer\\"]
      },
      \\"application/pkix-crl\\": {
        source: \\"iana\\",
        extensions: [\\"crl\\"]
      },
      \\"application/pkix-pkipath\\": {
        source: \\"iana\\",
        extensions: [\\"pkipath\\"]
      },
      \\"application/pkixcmp\\": {
        source: \\"iana\\",
        extensions: [\\"pki\\"]
      },
      \\"application/pls+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"pls\\"]
      },
      \\"application/poc-settings+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/postscript\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ai\\", \\"eps\\", \\"ps\\"]
      },
      \\"application/ppsp-tracker+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/problem+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/problem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/provenance+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"provx\\"]
      },
      \\"application/prs.alvestrand.titrax-sheet\\": {
        source: \\"iana\\"
      },
      \\"application/prs.cww\\": {
        source: \\"iana\\",
        extensions: [\\"cww\\"]
      },
      \\"application/prs.cyn\\": {
        source: \\"iana\\",
        charset: \\"7-BIT\\"
      },
      \\"application/prs.hpub+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/prs.nprend\\": {
        source: \\"iana\\"
      },
      \\"application/prs.plucker\\": {
        source: \\"iana\\"
      },
      \\"application/prs.rdf-xml-crypt\\": {
        source: \\"iana\\"
      },
      \\"application/prs.xsf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/pskc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"pskcxml\\"]
      },
      \\"application/pvd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/qsig\\": {
        source: \\"iana\\"
      },
      \\"application/raml+yaml\\": {
        compressible: true,
        extensions: [\\"raml\\"]
      },
      \\"application/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"application/rdap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/rdf+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rdf\\", \\"owl\\"]
      },
      \\"application/reginfo+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rif\\"]
      },
      \\"application/relax-ng-compact-syntax\\": {
        source: \\"iana\\",
        extensions: [\\"rnc\\"]
      },
      \\"application/remote-printing\\": {
        source: \\"iana\\"
      },
      \\"application/reputon+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/resource-lists+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rl\\"]
      },
      \\"application/resource-lists-diff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rld\\"]
      },
      \\"application/rfc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/riscos\\": {
        source: \\"iana\\"
      },
      \\"application/rlmi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/rls-services+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rs\\"]
      },
      \\"application/route-apd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rapd\\"]
      },
      \\"application/route-s-tsid+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sls\\"]
      },
      \\"application/route-usd+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rusd\\"]
      },
      \\"application/rpki-ghostbusters\\": {
        source: \\"iana\\",
        extensions: [\\"gbr\\"]
      },
      \\"application/rpki-manifest\\": {
        source: \\"iana\\",
        extensions: [\\"mft\\"]
      },
      \\"application/rpki-publication\\": {
        source: \\"iana\\"
      },
      \\"application/rpki-roa\\": {
        source: \\"iana\\",
        extensions: [\\"roa\\"]
      },
      \\"application/rpki-updown\\": {
        source: \\"iana\\"
      },
      \\"application/rsd+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"rsd\\"]
      },
      \\"application/rss+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"rss\\"]
      },
      \\"application/rtf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtf\\"]
      },
      \\"application/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"application/rtx\\": {
        source: \\"iana\\"
      },
      \\"application/samlassertion+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/samlmetadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sarif+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sarif-external-properties+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sbe\\": {
        source: \\"iana\\"
      },
      \\"application/sbml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sbml\\"]
      },
      \\"application/scaip+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/scim+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/scvp-cv-request\\": {
        source: \\"iana\\",
        extensions: [\\"scq\\"]
      },
      \\"application/scvp-cv-response\\": {
        source: \\"iana\\",
        extensions: [\\"scs\\"]
      },
      \\"application/scvp-vp-request\\": {
        source: \\"iana\\",
        extensions: [\\"spq\\"]
      },
      \\"application/scvp-vp-response\\": {
        source: \\"iana\\",
        extensions: [\\"spp\\"]
      },
      \\"application/sdp\\": {
        source: \\"iana\\",
        extensions: [\\"sdp\\"]
      },
      \\"application/secevent+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/senml+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/senml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/senml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"senmlx\\"]
      },
      \\"application/senml-etch+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/senml-etch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/senml-exi\\": {
        source: \\"iana\\"
      },
      \\"application/sensml+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/sensml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sensml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sensmlx\\"]
      },
      \\"application/sensml-exi\\": {
        source: \\"iana\\"
      },
      \\"application/sep+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sep-exi\\": {
        source: \\"iana\\"
      },
      \\"application/session-info\\": {
        source: \\"iana\\"
      },
      \\"application/set-payment\\": {
        source: \\"iana\\"
      },
      \\"application/set-payment-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"setpay\\"]
      },
      \\"application/set-registration\\": {
        source: \\"iana\\"
      },
      \\"application/set-registration-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"setreg\\"]
      },
      \\"application/sgml\\": {
        source: \\"iana\\"
      },
      \\"application/sgml-open-catalog\\": {
        source: \\"iana\\"
      },
      \\"application/shf+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"shf\\"]
      },
      \\"application/sieve\\": {
        source: \\"iana\\",
        extensions: [\\"siv\\", \\"sieve\\"]
      },
      \\"application/simple-filter+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/simple-message-summary\\": {
        source: \\"iana\\"
      },
      \\"application/simplesymbolcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/sipc\\": {
        source: \\"iana\\"
      },
      \\"application/slate\\": {
        source: \\"iana\\"
      },
      \\"application/smil\\": {
        source: \\"iana\\"
      },
      \\"application/smil+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"smi\\", \\"smil\\"]
      },
      \\"application/smpte336m\\": {
        source: \\"iana\\"
      },
      \\"application/soap+fastinfoset\\": {
        source: \\"iana\\"
      },
      \\"application/soap+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sparql-query\\": {
        source: \\"iana\\",
        extensions: [\\"rq\\"]
      },
      \\"application/sparql-results+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"srx\\"]
      },
      \\"application/spdx+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/spirits-event+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/sql\\": {
        source: \\"iana\\"
      },
      \\"application/srgs\\": {
        source: \\"iana\\",
        extensions: [\\"gram\\"]
      },
      \\"application/srgs+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"grxml\\"]
      },
      \\"application/sru+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sru\\"]
      },
      \\"application/ssdl+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ssdl\\"]
      },
      \\"application/ssml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ssml\\"]
      },
      \\"application/stix+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/swid+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"swidtag\\"]
      },
      \\"application/tamp-apex-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-apex-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-community-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-community-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-error\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-sequence-adjust\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-sequence-adjust-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-status-query\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-status-response\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-update\\": {
        source: \\"iana\\"
      },
      \\"application/tamp-update-confirm\\": {
        source: \\"iana\\"
      },
      \\"application/tar\\": {
        compressible: true
      },
      \\"application/taxii+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/td+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/tei+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tei\\", \\"teicorpus\\"]
      },
      \\"application/tetra_isi\\": {
        source: \\"iana\\"
      },
      \\"application/thraud+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tfi\\"]
      },
      \\"application/timestamp-query\\": {
        source: \\"iana\\"
      },
      \\"application/timestamp-reply\\": {
        source: \\"iana\\"
      },
      \\"application/timestamped-data\\": {
        source: \\"iana\\",
        extensions: [\\"tsd\\"]
      },
      \\"application/tlsrpt+gzip\\": {
        source: \\"iana\\"
      },
      \\"application/tlsrpt+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/tnauthlist\\": {
        source: \\"iana\\"
      },
      \\"application/token-introspection+jwt\\": {
        source: \\"iana\\"
      },
      \\"application/toml\\": {
        compressible: true,
        extensions: [\\"toml\\"]
      },
      \\"application/trickle-ice-sdpfrag\\": {
        source: \\"iana\\"
      },
      \\"application/trig\\": {
        source: \\"iana\\",
        extensions: [\\"trig\\"]
      },
      \\"application/ttml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ttml\\"]
      },
      \\"application/tve-trigger\\": {
        source: \\"iana\\"
      },
      \\"application/tzif\\": {
        source: \\"iana\\"
      },
      \\"application/tzif-leap\\": {
        source: \\"iana\\"
      },
      \\"application/ubjson\\": {
        compressible: false,
        extensions: [\\"ubj\\"]
      },
      \\"application/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"application/urc-grpsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/urc-ressheet+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rsheet\\"]
      },
      \\"application/urc-targetdesc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"td\\"]
      },
      \\"application/urc-uisocketdesc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vcard+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vcard+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vemmi\\": {
        source: \\"iana\\"
      },
      \\"application/vividence.scriptfile\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.1000minds.decision-model+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"1km\\"]
      },
      \\"application/vnd.3gpp-prose+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp-prose-pc3ch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp-v2x-local-service-information\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.5gnas\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.access-transfer-events+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.bsf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.gmop+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.gtpc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.interworking-data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.lpp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mc-signalling-ear\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-payload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-signalling\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.mcdata-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcdata-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-floor-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-location-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-signed+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-ue-init-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcptt-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-affiliation-command+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-affiliation-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-location-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-service-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-transmission-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-ue-config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mcvideo-user-profile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.mid-call+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.ngap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.pfcp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.pic-bw-large\\": {
        source: \\"iana\\",
        extensions: [\\"plb\\"]
      },
      \\"application/vnd.3gpp.pic-bw-small\\": {
        source: \\"iana\\",
        extensions: [\\"psb\\"]
      },
      \\"application/vnd.3gpp.pic-bw-var\\": {
        source: \\"iana\\",
        extensions: [\\"pvb\\"]
      },
      \\"application/vnd.3gpp.s1ap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp.sms+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.srvcc-ext+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.srvcc-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.state-and-event-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp.ussd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp2.bcmcsinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.3gpp2.sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3gpp2.tcap\\": {
        source: \\"iana\\",
        extensions: [\\"tcap\\"]
      },
      \\"application/vnd.3lightssoftware.imagescal\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.3m.post-it-notes\\": {
        source: \\"iana\\",
        extensions: [\\"pwn\\"]
      },
      \\"application/vnd.accpac.simply.aso\\": {
        source: \\"iana\\",
        extensions: [\\"aso\\"]
      },
      \\"application/vnd.accpac.simply.imp\\": {
        source: \\"iana\\",
        extensions: [\\"imp\\"]
      },
      \\"application/vnd.acucobol\\": {
        source: \\"iana\\",
        extensions: [\\"acu\\"]
      },
      \\"application/vnd.acucorp\\": {
        source: \\"iana\\",
        extensions: [\\"atc\\", \\"acutc\\"]
      },
      \\"application/vnd.adobe.air-application-installer-package+zip\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"air\\"]
      },
      \\"application/vnd.adobe.flash.movie\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.adobe.formscentral.fcdt\\": {
        source: \\"iana\\",
        extensions: [\\"fcdt\\"]
      },
      \\"application/vnd.adobe.fxp\\": {
        source: \\"iana\\",
        extensions: [\\"fxp\\", \\"fxpl\\"]
      },
      \\"application/vnd.adobe.partial-upload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.adobe.xdp+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdp\\"]
      },
      \\"application/vnd.adobe.xfdf\\": {
        source: \\"iana\\",
        extensions: [\\"xfdf\\"]
      },
      \\"application/vnd.aether.imp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.afplinedata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.afplinedata-pagedef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.cmoca-cmresource\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-charset\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-codedfont\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.foca-codepage\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-cmtable\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-formdef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-mediummap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-objectcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-overlay\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.afpc.modca-pagesegment\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.age\\": {
        source: \\"iana\\",
        extensions: [\\"age\\"]
      },
      \\"application/vnd.ah-barcode\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ahead.space\\": {
        source: \\"iana\\",
        extensions: [\\"ahead\\"]
      },
      \\"application/vnd.airzip.filesecure.azf\\": {
        source: \\"iana\\",
        extensions: [\\"azf\\"]
      },
      \\"application/vnd.airzip.filesecure.azs\\": {
        source: \\"iana\\",
        extensions: [\\"azs\\"]
      },
      \\"application/vnd.amadeus+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.amazon.ebook\\": {
        source: \\"apache\\",
        extensions: [\\"azw\\"]
      },
      \\"application/vnd.amazon.mobi8-ebook\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.americandynamics.acc\\": {
        source: \\"iana\\",
        extensions: [\\"acc\\"]
      },
      \\"application/vnd.amiga.ami\\": {
        source: \\"iana\\",
        extensions: [\\"ami\\"]
      },
      \\"application/vnd.amundsen.maze+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.android.ota\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.android.package-archive\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"apk\\"]
      },
      \\"application/vnd.anki\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.anser-web-certificate-issue-initiation\\": {
        source: \\"iana\\",
        extensions: [\\"cii\\"]
      },
      \\"application/vnd.anser-web-funds-transfer-initiation\\": {
        source: \\"apache\\",
        extensions: [\\"fti\\"]
      },
      \\"application/vnd.antix.game-component\\": {
        source: \\"iana\\",
        extensions: [\\"atx\\"]
      },
      \\"application/vnd.apache.arrow.file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.arrow.stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.binary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.compact\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.apache.thrift.json\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.api+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.aplextor.warrp+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.apothekende.reservation+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.apple.installer+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mpkg\\"]
      },
      \\"application/vnd.apple.keynote\\": {
        source: \\"iana\\",
        extensions: [\\"key\\"]
      },
      \\"application/vnd.apple.mpegurl\\": {
        source: \\"iana\\",
        extensions: [\\"m3u8\\"]
      },
      \\"application/vnd.apple.numbers\\": {
        source: \\"iana\\",
        extensions: [\\"numbers\\"]
      },
      \\"application/vnd.apple.pages\\": {
        source: \\"iana\\",
        extensions: [\\"pages\\"]
      },
      \\"application/vnd.apple.pkpass\\": {
        compressible: false,
        extensions: [\\"pkpass\\"]
      },
      \\"application/vnd.arastra.swi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.aristanetworks.swi\\": {
        source: \\"iana\\",
        extensions: [\\"swi\\"]
      },
      \\"application/vnd.artisan+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.artsquare\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.astraea-software.iota\\": {
        source: \\"iana\\",
        extensions: [\\"iota\\"]
      },
      \\"application/vnd.audiograph\\": {
        source: \\"iana\\",
        extensions: [\\"aep\\"]
      },
      \\"application/vnd.autopackage\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.avalon+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.avistar+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.balsamiq.bmml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"bmml\\"]
      },
      \\"application/vnd.balsamiq.bmpr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.banana-accounting\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.error\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.msg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bbf.usp.msg+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.bekitzur-stech+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.bint.med-content\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.biopax.rdf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.blink-idb-value-wrapper\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.blueice.multipass\\": {
        source: \\"iana\\",
        extensions: [\\"mpm\\"]
      },
      \\"application/vnd.bluetooth.ep.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bluetooth.le.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bmi\\": {
        source: \\"iana\\",
        extensions: [\\"bmi\\"]
      },
      \\"application/vnd.bpf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.bpf3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.businessobjects\\": {
        source: \\"iana\\",
        extensions: [\\"rep\\"]
      },
      \\"application/vnd.byu.uapi+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cab-jscript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.canon-cpdl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.canon-lips\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.capasystems-pg+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cendio.thinlinc.clientconf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.century-systems.tcp_stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.chemdraw+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"cdxml\\"]
      },
      \\"application/vnd.chess-pgn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.chipnuts.karaoke-mmd\\": {
        source: \\"iana\\",
        extensions: [\\"mmd\\"]
      },
      \\"application/vnd.ciedi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cinderella\\": {
        source: \\"iana\\",
        extensions: [\\"cdy\\"]
      },
      \\"application/vnd.cirpack.isdn-ext\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.citationstyles.style+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"csl\\"]
      },
      \\"application/vnd.claymore\\": {
        source: \\"iana\\",
        extensions: [\\"cla\\"]
      },
      \\"application/vnd.cloanto.rp9\\": {
        source: \\"iana\\",
        extensions: [\\"rp9\\"]
      },
      \\"application/vnd.clonk.c4group\\": {
        source: \\"iana\\",
        extensions: [\\"c4g\\", \\"c4d\\", \\"c4f\\", \\"c4p\\", \\"c4u\\"]
      },
      \\"application/vnd.cluetrust.cartomobile-config\\": {
        source: \\"iana\\",
        extensions: [\\"c11amc\\"]
      },
      \\"application/vnd.cluetrust.cartomobile-config-pkg\\": {
        source: \\"iana\\",
        extensions: [\\"c11amz\\"]
      },
      \\"application/vnd.coffeescript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.document\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.document-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.presentation\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.presentation-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.spreadsheet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collabio.xodocuments.spreadsheet-template\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.collection+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.collection.doc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.collection.next+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.comicbook+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.comicbook-rar\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.commerce-battelle\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.commonspace\\": {
        source: \\"iana\\",
        extensions: [\\"csp\\"]
      },
      \\"application/vnd.contact.cmsg\\": {
        source: \\"iana\\",
        extensions: [\\"cdbcmsg\\"]
      },
      \\"application/vnd.coreos.ignition+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cosmocaller\\": {
        source: \\"iana\\",
        extensions: [\\"cmc\\"]
      },
      \\"application/vnd.crick.clicker\\": {
        source: \\"iana\\",
        extensions: [\\"clkx\\"]
      },
      \\"application/vnd.crick.clicker.keyboard\\": {
        source: \\"iana\\",
        extensions: [\\"clkk\\"]
      },
      \\"application/vnd.crick.clicker.palette\\": {
        source: \\"iana\\",
        extensions: [\\"clkp\\"]
      },
      \\"application/vnd.crick.clicker.template\\": {
        source: \\"iana\\",
        extensions: [\\"clkt\\"]
      },
      \\"application/vnd.crick.clicker.wordbank\\": {
        source: \\"iana\\",
        extensions: [\\"clkw\\"]
      },
      \\"application/vnd.criticaltools.wbs+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wbs\\"]
      },
      \\"application/vnd.cryptii.pipe+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.crypto-shade-file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cryptomator.encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cryptomator.vault\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ctc-posml\\": {
        source: \\"iana\\",
        extensions: [\\"pml\\"]
      },
      \\"application/vnd.ctct.ws+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cups-pdf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-postscript\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-ppd\\": {
        source: \\"iana\\",
        extensions: [\\"ppd\\"]
      },
      \\"application/vnd.cups-raster\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cups-raw\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.curl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.curl.car\\": {
        source: \\"apache\\",
        extensions: [\\"car\\"]
      },
      \\"application/vnd.curl.pcurl\\": {
        source: \\"apache\\",
        extensions: [\\"pcurl\\"]
      },
      \\"application/vnd.cyan.dean.root+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cybank\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.cyclonedx+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.cyclonedx+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.d2l.coursepackage1p0+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.d3m-dataset\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.d3m-problem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dart\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dart\\"]
      },
      \\"application/vnd.data-vision.rdz\\": {
        source: \\"iana\\",
        extensions: [\\"rdz\\"]
      },
      \\"application/vnd.datapackage+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dataresource+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dbf\\": {
        source: \\"iana\\",
        extensions: [\\"dbf\\"]
      },
      \\"application/vnd.debian.binary-package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dece.data\\": {
        source: \\"iana\\",
        extensions: [\\"uvf\\", \\"uvvf\\", \\"uvd\\", \\"uvvd\\"]
      },
      \\"application/vnd.dece.ttml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uvt\\", \\"uvvt\\"]
      },
      \\"application/vnd.dece.unspecified\\": {
        source: \\"iana\\",
        extensions: [\\"uvx\\", \\"uvvx\\"]
      },
      \\"application/vnd.dece.zip\\": {
        source: \\"iana\\",
        extensions: [\\"uvz\\", \\"uvvz\\"]
      },
      \\"application/vnd.denovo.fcselayout-link\\": {
        source: \\"iana\\",
        extensions: [\\"fe_launch\\"]
      },
      \\"application/vnd.desmume.movie\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dir-bi.plate-dl-nosuffix\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dm.delegation+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dna\\": {
        source: \\"iana\\",
        extensions: [\\"dna\\"]
      },
      \\"application/vnd.document+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dolby.mlp\\": {
        source: \\"apache\\",
        extensions: [\\"mlp\\"]
      },
      \\"application/vnd.dolby.mobile.1\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dolby.mobile.2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.doremir.scorecloud-binary-document\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dpgraph\\": {
        source: \\"iana\\",
        extensions: [\\"dpg\\"]
      },
      \\"application/vnd.dreamfactory\\": {
        source: \\"iana\\",
        extensions: [\\"dfac\\"]
      },
      \\"application/vnd.drive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ds-keypoint\\": {
        source: \\"apache\\",
        extensions: [\\"kpxx\\"]
      },
      \\"application/vnd.dtg.local\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dtg.local.flash\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dtg.local.html\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ait\\": {
        source: \\"iana\\",
        extensions: [\\"ait\\"]
      },
      \\"application/vnd.dvb.dvbisl+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.dvbj\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.esgcontainer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcdftnotifaccess\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgaccess\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgaccess2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcesgpdd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.ipdcroaming\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.iptv.alfec-base\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.iptv.alfec-enhancement\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.notif-aggregate-root+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-container+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-generic+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-msglist+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-registration-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-ia-registration-response+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.notif-init+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.dvb.pfr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dvb.service\\": {
        source: \\"iana\\",
        extensions: [\\"svc\\"]
      },
      \\"application/vnd.dxr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.dynageo\\": {
        source: \\"iana\\",
        extensions: [\\"geo\\"]
      },
      \\"application/vnd.dzr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.easykaraoke.cdgdownload\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecdis-update\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecip.rlp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eclipse.ditto+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ecowin.chart\\": {
        source: \\"iana\\",
        extensions: [\\"mag\\"]
      },
      \\"application/vnd.ecowin.filerequest\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.fileupdate\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.series\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.seriesrequest\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ecowin.seriesupdate\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.efi.img\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.efi.iso\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.emclient.accessrequest+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.enliven\\": {
        source: \\"iana\\",
        extensions: [\\"nml\\"]
      },
      \\"application/vnd.enphase.envoy\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eprints.data+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.epson.esf\\": {
        source: \\"iana\\",
        extensions: [\\"esf\\"]
      },
      \\"application/vnd.epson.msf\\": {
        source: \\"iana\\",
        extensions: [\\"msf\\"]
      },
      \\"application/vnd.epson.quickanime\\": {
        source: \\"iana\\",
        extensions: [\\"qam\\"]
      },
      \\"application/vnd.epson.salt\\": {
        source: \\"iana\\",
        extensions: [\\"slt\\"]
      },
      \\"application/vnd.epson.ssf\\": {
        source: \\"iana\\",
        extensions: [\\"ssf\\"]
      },
      \\"application/vnd.ericsson.quickcall\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.espass-espass+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.eszigno3+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"es3\\", \\"et3\\"]
      },
      \\"application/vnd.etsi.aoc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.asic-e+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.etsi.asic-s+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.etsi.cug+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvcommand+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvdiscovery+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-bc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-cod+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsad-npvr+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvservice+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvsync+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.iptvueprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.mcid+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.mheg5\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.etsi.overload-control-policy-dataset+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.pstn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.sci+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.simservs+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.timestamp-token\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.etsi.tsl+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.etsi.tsl.der\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.eu.kasparian.car+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.eudora.data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.profile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.settings\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.evolv.ecig.theme\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.exstream-empower+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.exstream-package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ezpix-album\\": {
        source: \\"iana\\",
        extensions: [\\"ez2\\"]
      },
      \\"application/vnd.ezpix-package\\": {
        source: \\"iana\\",
        extensions: [\\"ez3\\"]
      },
      \\"application/vnd.f-secure.mobile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.familysearch.gedcom+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.fastcopy-disk-image\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fdf\\": {
        source: \\"iana\\",
        extensions: [\\"fdf\\"]
      },
      \\"application/vnd.fdsn.mseed\\": {
        source: \\"iana\\",
        extensions: [\\"mseed\\"]
      },
      \\"application/vnd.fdsn.seed\\": {
        source: \\"iana\\",
        extensions: [\\"seed\\", \\"dataless\\"]
      },
      \\"application/vnd.ffsns\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ficlab.flb+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.filmit.zfc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fints\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.firemonkeys.cloudcell\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.flographit\\": {
        source: \\"iana\\",
        extensions: [\\"gph\\"]
      },
      \\"application/vnd.fluxtime.clip\\": {
        source: \\"iana\\",
        extensions: [\\"ftc\\"]
      },
      \\"application/vnd.font-fontforge-sfd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.framemaker\\": {
        source: \\"iana\\",
        extensions: [\\"fm\\", \\"frame\\", \\"maker\\", \\"book\\"]
      },
      \\"application/vnd.frogans.fnc\\": {
        source: \\"iana\\",
        extensions: [\\"fnc\\"]
      },
      \\"application/vnd.frogans.ltf\\": {
        source: \\"iana\\",
        extensions: [\\"ltf\\"]
      },
      \\"application/vnd.fsc.weblaunch\\": {
        source: \\"iana\\",
        extensions: [\\"fsc\\"]
      },
      \\"application/vnd.fujifilm.fb.docuworks\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.docuworks.binder\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.docuworks.container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujifilm.fb.jfi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.fujitsu.oasys\\": {
        source: \\"iana\\",
        extensions: [\\"oas\\"]
      },
      \\"application/vnd.fujitsu.oasys2\\": {
        source: \\"iana\\",
        extensions: [\\"oa2\\"]
      },
      \\"application/vnd.fujitsu.oasys3\\": {
        source: \\"iana\\",
        extensions: [\\"oa3\\"]
      },
      \\"application/vnd.fujitsu.oasysgp\\": {
        source: \\"iana\\",
        extensions: [\\"fg5\\"]
      },
      \\"application/vnd.fujitsu.oasysprs\\": {
        source: \\"iana\\",
        extensions: [\\"bh2\\"]
      },
      \\"application/vnd.fujixerox.art-ex\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.art4\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.ddd\\": {
        source: \\"iana\\",
        extensions: [\\"ddd\\"]
      },
      \\"application/vnd.fujixerox.docuworks\\": {
        source: \\"iana\\",
        extensions: [\\"xdw\\"]
      },
      \\"application/vnd.fujixerox.docuworks.binder\\": {
        source: \\"iana\\",
        extensions: [\\"xbd\\"]
      },
      \\"application/vnd.fujixerox.docuworks.container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fujixerox.hbpl\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.fut-misnet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.futoin+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.futoin+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.fuzzysheet\\": {
        source: \\"iana\\",
        extensions: [\\"fzs\\"]
      },
      \\"application/vnd.genomatix.tuxedo\\": {
        source: \\"iana\\",
        extensions: [\\"txd\\"]
      },
      \\"application/vnd.gentics.grd+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geo+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geocube+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.geogebra.file\\": {
        source: \\"iana\\",
        extensions: [\\"ggb\\"]
      },
      \\"application/vnd.geogebra.slides\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.geogebra.tool\\": {
        source: \\"iana\\",
        extensions: [\\"ggt\\"]
      },
      \\"application/vnd.geometry-explorer\\": {
        source: \\"iana\\",
        extensions: [\\"gex\\", \\"gre\\"]
      },
      \\"application/vnd.geonext\\": {
        source: \\"iana\\",
        extensions: [\\"gxt\\"]
      },
      \\"application/vnd.geoplan\\": {
        source: \\"iana\\",
        extensions: [\\"g2w\\"]
      },
      \\"application/vnd.geospace\\": {
        source: \\"iana\\",
        extensions: [\\"g3w\\"]
      },
      \\"application/vnd.gerber\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.globalplatform.card-content-mgt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.globalplatform.card-content-mgt-response\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.gmx\\": {
        source: \\"iana\\",
        extensions: [\\"gmx\\"]
      },
      \\"application/vnd.google-apps.document\\": {
        compressible: false,
        extensions: [\\"gdoc\\"]
      },
      \\"application/vnd.google-apps.presentation\\": {
        compressible: false,
        extensions: [\\"gslides\\"]
      },
      \\"application/vnd.google-apps.spreadsheet\\": {
        compressible: false,
        extensions: [\\"gsheet\\"]
      },
      \\"application/vnd.google-earth.kml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"kml\\"]
      },
      \\"application/vnd.google-earth.kmz\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"kmz\\"]
      },
      \\"application/vnd.gov.sk.e-form+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.gov.sk.e-form+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.gov.sk.xmldatacontainer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.grafeq\\": {
        source: \\"iana\\",
        extensions: [\\"gqf\\", \\"gqs\\"]
      },
      \\"application/vnd.gridmp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.groove-account\\": {
        source: \\"iana\\",
        extensions: [\\"gac\\"]
      },
      \\"application/vnd.groove-help\\": {
        source: \\"iana\\",
        extensions: [\\"ghf\\"]
      },
      \\"application/vnd.groove-identity-message\\": {
        source: \\"iana\\",
        extensions: [\\"gim\\"]
      },
      \\"application/vnd.groove-injector\\": {
        source: \\"iana\\",
        extensions: [\\"grv\\"]
      },
      \\"application/vnd.groove-tool-message\\": {
        source: \\"iana\\",
        extensions: [\\"gtm\\"]
      },
      \\"application/vnd.groove-tool-template\\": {
        source: \\"iana\\",
        extensions: [\\"tpl\\"]
      },
      \\"application/vnd.groove-vcard\\": {
        source: \\"iana\\",
        extensions: [\\"vcg\\"]
      },
      \\"application/vnd.hal+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hal+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"hal\\"]
      },
      \\"application/vnd.handheld-entertainment+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"zmm\\"]
      },
      \\"application/vnd.hbci\\": {
        source: \\"iana\\",
        extensions: [\\"hbci\\"]
      },
      \\"application/vnd.hc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hcl-bireports\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.hdt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.heroku+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hhe.lesson-player\\": {
        source: \\"iana\\",
        extensions: [\\"les\\"]
      },
      \\"application/vnd.hl7cda+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.hl7v2+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.hp-hpgl\\": {
        source: \\"iana\\",
        extensions: [\\"hpgl\\"]
      },
      \\"application/vnd.hp-hpid\\": {
        source: \\"iana\\",
        extensions: [\\"hpid\\"]
      },
      \\"application/vnd.hp-hps\\": {
        source: \\"iana\\",
        extensions: [\\"hps\\"]
      },
      \\"application/vnd.hp-jlyt\\": {
        source: \\"iana\\",
        extensions: [\\"jlt\\"]
      },
      \\"application/vnd.hp-pcl\\": {
        source: \\"iana\\",
        extensions: [\\"pcl\\"]
      },
      \\"application/vnd.hp-pclxl\\": {
        source: \\"iana\\",
        extensions: [\\"pclxl\\"]
      },
      \\"application/vnd.httphone\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.hydrostatix.sof-data\\": {
        source: \\"iana\\",
        extensions: [\\"sfd-hdstx\\"]
      },
      \\"application/vnd.hyper+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hyper-item+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hyperdrive+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.hzn-3d-crossword\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.afplinedata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.electronic-media\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ibm.minipay\\": {
        source: \\"iana\\",
        extensions: [\\"mpy\\"]
      },
      \\"application/vnd.ibm.modcap\\": {
        source: \\"iana\\",
        extensions: [\\"afp\\", \\"listafp\\", \\"list3820\\"]
      },
      \\"application/vnd.ibm.rights-management\\": {
        source: \\"iana\\",
        extensions: [\\"irm\\"]
      },
      \\"application/vnd.ibm.secure-container\\": {
        source: \\"iana\\",
        extensions: [\\"sc\\"]
      },
      \\"application/vnd.iccprofile\\": {
        source: \\"iana\\",
        extensions: [\\"icc\\", \\"icm\\"]
      },
      \\"application/vnd.ieee.1905\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.igloader\\": {
        source: \\"iana\\",
        extensions: [\\"igl\\"]
      },
      \\"application/vnd.imagemeter.folder+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.imagemeter.image+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.immervision-ivp\\": {
        source: \\"iana\\",
        extensions: [\\"ivp\\"]
      },
      \\"application/vnd.immervision-ivu\\": {
        source: \\"iana\\",
        extensions: [\\"ivu\\"]
      },
      \\"application/vnd.ims.imsccv1p1\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.imsccv1p2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.imsccv1p3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ims.lis.v2.result+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolconsumerprofile+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolproxy+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolproxy.id+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolsettings+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ims.lti.v2.toolsettings.simple+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.informedcontrol.rms+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.informix-visionary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.infotech.project\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.infotech.project+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.innopath.wamp.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.insors.igm\\": {
        source: \\"iana\\",
        extensions: [\\"igm\\"]
      },
      \\"application/vnd.intercon.formnet\\": {
        source: \\"iana\\",
        extensions: [\\"xpw\\", \\"xpx\\"]
      },
      \\"application/vnd.intergeo\\": {
        source: \\"iana\\",
        extensions: [\\"i2g\\"]
      },
      \\"application/vnd.intertrust.digibox\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.intertrust.nncp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.intu.qbo\\": {
        source: \\"iana\\",
        extensions: [\\"qbo\\"]
      },
      \\"application/vnd.intu.qfx\\": {
        source: \\"iana\\",
        extensions: [\\"qfx\\"]
      },
      \\"application/vnd.iptc.g2.catalogitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.conceptitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.knowledgeitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.newsitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.newsmessage+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.packageitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.iptc.g2.planningitem+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ipunplugged.rcprofile\\": {
        source: \\"iana\\",
        extensions: [\\"rcprofile\\"]
      },
      \\"application/vnd.irepository.package+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"irp\\"]
      },
      \\"application/vnd.is-xpr\\": {
        source: \\"iana\\",
        extensions: [\\"xpr\\"]
      },
      \\"application/vnd.isac.fcs\\": {
        source: \\"iana\\",
        extensions: [\\"fcs\\"]
      },
      \\"application/vnd.iso11783-10+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.jam\\": {
        source: \\"iana\\",
        extensions: [\\"jam\\"]
      },
      \\"application/vnd.japannet-directory-service\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-jpnstore-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-payment-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-registration\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-registration-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-setstore-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-verification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.japannet-verification-wakeup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.jcp.javame.midlet-rms\\": {
        source: \\"iana\\",
        extensions: [\\"rms\\"]
      },
      \\"application/vnd.jisp\\": {
        source: \\"iana\\",
        extensions: [\\"jisp\\"]
      },
      \\"application/vnd.joost.joda-archive\\": {
        source: \\"iana\\",
        extensions: [\\"joda\\"]
      },
      \\"application/vnd.jsk.isdn-ngn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.kahootz\\": {
        source: \\"iana\\",
        extensions: [\\"ktz\\", \\"ktr\\"]
      },
      \\"application/vnd.kde.karbon\\": {
        source: \\"iana\\",
        extensions: [\\"karbon\\"]
      },
      \\"application/vnd.kde.kchart\\": {
        source: \\"iana\\",
        extensions: [\\"chrt\\"]
      },
      \\"application/vnd.kde.kformula\\": {
        source: \\"iana\\",
        extensions: [\\"kfo\\"]
      },
      \\"application/vnd.kde.kivio\\": {
        source: \\"iana\\",
        extensions: [\\"flw\\"]
      },
      \\"application/vnd.kde.kontour\\": {
        source: \\"iana\\",
        extensions: [\\"kon\\"]
      },
      \\"application/vnd.kde.kpresenter\\": {
        source: \\"iana\\",
        extensions: [\\"kpr\\", \\"kpt\\"]
      },
      \\"application/vnd.kde.kspread\\": {
        source: \\"iana\\",
        extensions: [\\"ksp\\"]
      },
      \\"application/vnd.kde.kword\\": {
        source: \\"iana\\",
        extensions: [\\"kwd\\", \\"kwt\\"]
      },
      \\"application/vnd.kenameaapp\\": {
        source: \\"iana\\",
        extensions: [\\"htke\\"]
      },
      \\"application/vnd.kidspiration\\": {
        source: \\"iana\\",
        extensions: [\\"kia\\"]
      },
      \\"application/vnd.kinar\\": {
        source: \\"iana\\",
        extensions: [\\"kne\\", \\"knp\\"]
      },
      \\"application/vnd.koan\\": {
        source: \\"iana\\",
        extensions: [\\"skp\\", \\"skd\\", \\"skt\\", \\"skm\\"]
      },
      \\"application/vnd.kodak-descriptor\\": {
        source: \\"iana\\",
        extensions: [\\"sse\\"]
      },
      \\"application/vnd.las\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.las.las+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.las.las+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lasxml\\"]
      },
      \\"application/vnd.laszip\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.leap+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.liberty-request+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.llamagraphics.life-balance.desktop\\": {
        source: \\"iana\\",
        extensions: [\\"lbd\\"]
      },
      \\"application/vnd.llamagraphics.life-balance.exchange+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"lbe\\"]
      },
      \\"application/vnd.logipipe.circuit+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.loom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.lotus-1-2-3\\": {
        source: \\"iana\\",
        extensions: [\\"123\\"]
      },
      \\"application/vnd.lotus-approach\\": {
        source: \\"iana\\",
        extensions: [\\"apr\\"]
      },
      \\"application/vnd.lotus-freelance\\": {
        source: \\"iana\\",
        extensions: [\\"pre\\"]
      },
      \\"application/vnd.lotus-notes\\": {
        source: \\"iana\\",
        extensions: [\\"nsf\\"]
      },
      \\"application/vnd.lotus-organizer\\": {
        source: \\"iana\\",
        extensions: [\\"org\\"]
      },
      \\"application/vnd.lotus-screencam\\": {
        source: \\"iana\\",
        extensions: [\\"scm\\"]
      },
      \\"application/vnd.lotus-wordpro\\": {
        source: \\"iana\\",
        extensions: [\\"lwp\\"]
      },
      \\"application/vnd.macports.portpkg\\": {
        source: \\"iana\\",
        extensions: [\\"portpkg\\"]
      },
      \\"application/vnd.mapbox-vector-tile\\": {
        source: \\"iana\\",
        extensions: [\\"mvt\\"]
      },
      \\"application/vnd.marlin.drm.actiontoken+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.conftoken+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.license+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.marlin.drm.mdcf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mason+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.maxar.archive.3tz+zip\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"application/vnd.maxmind.maxmind-db\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mcd\\": {
        source: \\"iana\\",
        extensions: [\\"mcd\\"]
      },
      \\"application/vnd.medcalcdata\\": {
        source: \\"iana\\",
        extensions: [\\"mc1\\"]
      },
      \\"application/vnd.mediastation.cdkey\\": {
        source: \\"iana\\",
        extensions: [\\"cdkey\\"]
      },
      \\"application/vnd.meridian-slingshot\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mfer\\": {
        source: \\"iana\\",
        extensions: [\\"mwf\\"]
      },
      \\"application/vnd.mfmp\\": {
        source: \\"iana\\",
        extensions: [\\"mfm\\"]
      },
      \\"application/vnd.micro+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.micrografx.flo\\": {
        source: \\"iana\\",
        extensions: [\\"flo\\"]
      },
      \\"application/vnd.micrografx.igx\\": {
        source: \\"iana\\",
        extensions: [\\"igx\\"]
      },
      \\"application/vnd.microsoft.portable-executable\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.microsoft.windows.thumbnail-cache\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.miele+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.mif\\": {
        source: \\"iana\\",
        extensions: [\\"mif\\"]
      },
      \\"application/vnd.minisoft-hp3000-save\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mitsubishi.misty-guard.trustweb\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mobius.daf\\": {
        source: \\"iana\\",
        extensions: [\\"daf\\"]
      },
      \\"application/vnd.mobius.dis\\": {
        source: \\"iana\\",
        extensions: [\\"dis\\"]
      },
      \\"application/vnd.mobius.mbk\\": {
        source: \\"iana\\",
        extensions: [\\"mbk\\"]
      },
      \\"application/vnd.mobius.mqy\\": {
        source: \\"iana\\",
        extensions: [\\"mqy\\"]
      },
      \\"application/vnd.mobius.msl\\": {
        source: \\"iana\\",
        extensions: [\\"msl\\"]
      },
      \\"application/vnd.mobius.plc\\": {
        source: \\"iana\\",
        extensions: [\\"plc\\"]
      },
      \\"application/vnd.mobius.txf\\": {
        source: \\"iana\\",
        extensions: [\\"txf\\"]
      },
      \\"application/vnd.mophun.application\\": {
        source: \\"iana\\",
        extensions: [\\"mpn\\"]
      },
      \\"application/vnd.mophun.certificate\\": {
        source: \\"iana\\",
        extensions: [\\"mpc\\"]
      },
      \\"application/vnd.motorola.flexsuite\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.adsi\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.fis\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.gotap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.kmr\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.ttc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.flexsuite.wem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.motorola.iprm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mozilla.xul+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xul\\"]
      },
      \\"application/vnd.ms-3mfdocument\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-artgalry\\": {
        source: \\"iana\\",
        extensions: [\\"cil\\"]
      },
      \\"application/vnd.ms-asf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-cab-compressed\\": {
        source: \\"iana\\",
        extensions: [\\"cab\\"]
      },
      \\"application/vnd.ms-color.iccprofile\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.ms-excel\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xls\\", \\"xlm\\", \\"xla\\", \\"xlc\\", \\"xlt\\", \\"xlw\\"]
      },
      \\"application/vnd.ms-excel.addin.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlam\\"]
      },
      \\"application/vnd.ms-excel.sheet.binary.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlsb\\"]
      },
      \\"application/vnd.ms-excel.sheet.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xlsm\\"]
      },
      \\"application/vnd.ms-excel.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"xltm\\"]
      },
      \\"application/vnd.ms-fontobject\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"eot\\"]
      },
      \\"application/vnd.ms-htmlhelp\\": {
        source: \\"iana\\",
        extensions: [\\"chm\\"]
      },
      \\"application/vnd.ms-ims\\": {
        source: \\"iana\\",
        extensions: [\\"ims\\"]
      },
      \\"application/vnd.ms-lrm\\": {
        source: \\"iana\\",
        extensions: [\\"lrm\\"]
      },
      \\"application/vnd.ms-office.activex+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-officetheme\\": {
        source: \\"iana\\",
        extensions: [\\"thmx\\"]
      },
      \\"application/vnd.ms-opentype\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/vnd.ms-outlook\\": {
        compressible: false,
        extensions: [\\"msg\\"]
      },
      \\"application/vnd.ms-package.obfuscated-opentype\\": {
        source: \\"apache\\"
      },
      \\"application/vnd.ms-pki.seccat\\": {
        source: \\"apache\\",
        extensions: [\\"cat\\"]
      },
      \\"application/vnd.ms-pki.stl\\": {
        source: \\"apache\\",
        extensions: [\\"stl\\"]
      },
      \\"application/vnd.ms-playready.initiator+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-powerpoint\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ppt\\", \\"pps\\", \\"pot\\"]
      },
      \\"application/vnd.ms-powerpoint.addin.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"ppam\\"]
      },
      \\"application/vnd.ms-powerpoint.presentation.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"pptm\\"]
      },
      \\"application/vnd.ms-powerpoint.slide.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"sldm\\"]
      },
      \\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"ppsm\\"]
      },
      \\"application/vnd.ms-powerpoint.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"potm\\"]
      },
      \\"application/vnd.ms-printdevicecapabilities+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-printing.printticket+xml\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/vnd.ms-printschematicket+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ms-project\\": {
        source: \\"iana\\",
        extensions: [\\"mpp\\", \\"mpt\\"]
      },
      \\"application/vnd.ms-tnef\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.devicepairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.nwprinting.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.printerpairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-windows.wsd.oob\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.lic-chlg-req\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.lic-resp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.meter-chlg-req\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-wmdrm.meter-resp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ms-word.document.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"docm\\"]
      },
      \\"application/vnd.ms-word.template.macroenabled.12\\": {
        source: \\"iana\\",
        extensions: [\\"dotm\\"]
      },
      \\"application/vnd.ms-works\\": {
        source: \\"iana\\",
        extensions: [\\"wps\\", \\"wks\\", \\"wcm\\", \\"wdb\\"]
      },
      \\"application/vnd.ms-wpl\\": {
        source: \\"iana\\",
        extensions: [\\"wpl\\"]
      },
      \\"application/vnd.ms-xpsdocument\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xps\\"]
      },
      \\"application/vnd.msa-disk-image\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.mseq\\": {
        source: \\"iana\\",
        extensions: [\\"mseq\\"]
      },
      \\"application/vnd.msign\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.multiad.creator\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.multiad.creator.cif\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.music-niff\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.musician\\": {
        source: \\"iana\\",
        extensions: [\\"mus\\"]
      },
      \\"application/vnd.muvee.style\\": {
        source: \\"iana\\",
        extensions: [\\"msty\\"]
      },
      \\"application/vnd.mynfc\\": {
        source: \\"iana\\",
        extensions: [\\"taglet\\"]
      },
      \\"application/vnd.nacamar.ybrid+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.ncd.control\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ncd.reference\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nearst.inv+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nebumind.line\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nervana\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.netfpx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.neurolanguage.nlu\\": {
        source: \\"iana\\",
        extensions: [\\"nlu\\"]
      },
      \\"application/vnd.nimn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nintendo.nitro.rom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nintendo.snes.rom\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nitf\\": {
        source: \\"iana\\",
        extensions: [\\"ntf\\", \\"nitf\\"]
      },
      \\"application/vnd.noblenet-directory\\": {
        source: \\"iana\\",
        extensions: [\\"nnd\\"]
      },
      \\"application/vnd.noblenet-sealer\\": {
        source: \\"iana\\",
        extensions: [\\"nns\\"]
      },
      \\"application/vnd.noblenet-web\\": {
        source: \\"iana\\",
        extensions: [\\"nnw\\"]
      },
      \\"application/vnd.nokia.catalogs\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.conml+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.conml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.iptv.config+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.isds-radio-presets\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.landmark+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.landmark+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.landmarkcollection+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.n-gage.ac+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ac\\"]
      },
      \\"application/vnd.nokia.n-gage.data\\": {
        source: \\"iana\\",
        extensions: [\\"ngdat\\"]
      },
      \\"application/vnd.nokia.n-gage.symbian.install\\": {
        source: \\"iana\\",
        extensions: [\\"n-gage\\"]
      },
      \\"application/vnd.nokia.ncd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.pcd+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.nokia.pcd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.nokia.radio-preset\\": {
        source: \\"iana\\",
        extensions: [\\"rpst\\"]
      },
      \\"application/vnd.nokia.radio-presets\\": {
        source: \\"iana\\",
        extensions: [\\"rpss\\"]
      },
      \\"application/vnd.novadigm.edm\\": {
        source: \\"iana\\",
        extensions: [\\"edm\\"]
      },
      \\"application/vnd.novadigm.edx\\": {
        source: \\"iana\\",
        extensions: [\\"edx\\"]
      },
      \\"application/vnd.novadigm.ext\\": {
        source: \\"iana\\",
        extensions: [\\"ext\\"]
      },
      \\"application/vnd.ntt-local.content-share\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.file-transfer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.ogw_remote-access\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.sip-ta_remote\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ntt-local.sip-ta_tcp_stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oasis.opendocument.chart\\": {
        source: \\"iana\\",
        extensions: [\\"odc\\"]
      },
      \\"application/vnd.oasis.opendocument.chart-template\\": {
        source: \\"iana\\",
        extensions: [\\"otc\\"]
      },
      \\"application/vnd.oasis.opendocument.database\\": {
        source: \\"iana\\",
        extensions: [\\"odb\\"]
      },
      \\"application/vnd.oasis.opendocument.formula\\": {
        source: \\"iana\\",
        extensions: [\\"odf\\"]
      },
      \\"application/vnd.oasis.opendocument.formula-template\\": {
        source: \\"iana\\",
        extensions: [\\"odft\\"]
      },
      \\"application/vnd.oasis.opendocument.graphics\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odg\\"]
      },
      \\"application/vnd.oasis.opendocument.graphics-template\\": {
        source: \\"iana\\",
        extensions: [\\"otg\\"]
      },
      \\"application/vnd.oasis.opendocument.image\\": {
        source: \\"iana\\",
        extensions: [\\"odi\\"]
      },
      \\"application/vnd.oasis.opendocument.image-template\\": {
        source: \\"iana\\",
        extensions: [\\"oti\\"]
      },
      \\"application/vnd.oasis.opendocument.presentation\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odp\\"]
      },
      \\"application/vnd.oasis.opendocument.presentation-template\\": {
        source: \\"iana\\",
        extensions: [\\"otp\\"]
      },
      \\"application/vnd.oasis.opendocument.spreadsheet\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ods\\"]
      },
      \\"application/vnd.oasis.opendocument.spreadsheet-template\\": {
        source: \\"iana\\",
        extensions: [\\"ots\\"]
      },
      \\"application/vnd.oasis.opendocument.text\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"odt\\"]
      },
      \\"application/vnd.oasis.opendocument.text-master\\": {
        source: \\"iana\\",
        extensions: [\\"odm\\"]
      },
      \\"application/vnd.oasis.opendocument.text-template\\": {
        source: \\"iana\\",
        extensions: [\\"ott\\"]
      },
      \\"application/vnd.oasis.opendocument.text-web\\": {
        source: \\"iana\\",
        extensions: [\\"oth\\"]
      },
      \\"application/vnd.obn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ocf+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oci.image.manifest.v1+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oftn.l10n+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.contentaccessdownload+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.contentaccessstreaming+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.cspg-hexbinary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oipf.dae.svg+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.dae.xhtml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.mippvcontrolmessage+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.pae.gem\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oipf.spdiscovery+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.spdlist+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.ueprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oipf.userprofile+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.olpc-sugar\\": {
        source: \\"iana\\",
        extensions: [\\"xo\\"]
      },
      \\"application/vnd.oma-scws-config\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma-scws-http-request\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma-scws-http-response\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.associated-procedure-parameter+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.drm-trigger+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.imd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.ltkm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.notification+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.provisioningtrigger\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.sgboot\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.sgdd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.sgdu\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.simple-symbol-container\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.bcast.smartcard-trigger+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.sprov+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.bcast.stkm\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.cab-address-book+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-feature-handler+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-pcc+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-subs-invite+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.cab-user-prefs+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.dcd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.dcdc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.dd2+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dd2\\"]
      },
      \\"application/vnd.oma.drm.risd+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.group-usage-list+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.lwm2m+cbor\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.lwm2m+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.lwm2m+tlv\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.pal+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.detailed-progress-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.final-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.groups+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.invocation-descriptor+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.poc.optimized-progress-report+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.push\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.oma.scidm.messages+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oma.xcap-directory+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.omads-email+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omads-file+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omads-folder+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.omaloc-supl-init\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepager\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertamp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertamx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertat\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertatp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.onepagertatx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openblox.game+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"obgx\\"]
      },
      \\"application/vnd.openblox.game-binary\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openeye.oeb\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openofficeorg.extension\\": {
        source: \\"apache\\",
        extensions: [\\"oxt\\"]
      },
      \\"application/vnd.openstreetmap.data+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"osm\\"]
      },
      \\"application/vnd.opentimestamps.ots\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openxmlformats-officedocument.custom-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawing+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.extended-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presentation\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"pptx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slide\\": {
        source: \\"iana\\",
        extensions: [\\"sldx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\\": {
        source: \\"iana\\",
        extensions: [\\"ppsx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.template\\": {
        source: \\"iana\\",
        extensions: [\\"potx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"xlsx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\\": {
        source: \\"iana\\",
        extensions: [\\"xltx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.theme+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.themeoverride+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.vmldrawing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"docx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\\": {
        source: \\"iana\\",
        extensions: [\\"dotx\\"]
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.core-properties+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.openxmlformats-package.relationships+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oracle.resource+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.orange.indata\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osa.netdeploy\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osgeo.mapguide.package\\": {
        source: \\"iana\\",
        extensions: [\\"mgp\\"]
      },
      \\"application/vnd.osgi.bundle\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.osgi.dp\\": {
        source: \\"iana\\",
        extensions: [\\"dp\\"]
      },
      \\"application/vnd.osgi.subsystem\\": {
        source: \\"iana\\",
        extensions: [\\"esa\\"]
      },
      \\"application/vnd.otps.ct-kip+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.oxli.countgraph\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pagerduty+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.palm\\": {
        source: \\"iana\\",
        extensions: [\\"pdb\\", \\"pqa\\", \\"oprc\\"]
      },
      \\"application/vnd.panoply\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.paos.xml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.patentdive\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.patientecommsdoc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pawaafile\\": {
        source: \\"iana\\",
        extensions: [\\"paw\\"]
      },
      \\"application/vnd.pcos\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pg.format\\": {
        source: \\"iana\\",
        extensions: [\\"str\\"]
      },
      \\"application/vnd.pg.osasli\\": {
        source: \\"iana\\",
        extensions: [\\"ei6\\"]
      },
      \\"application/vnd.piaccess.application-licence\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.picsel\\": {
        source: \\"iana\\",
        extensions: [\\"efif\\"]
      },
      \\"application/vnd.pmi.widget\\": {
        source: \\"iana\\",
        extensions: [\\"wg\\"]
      },
      \\"application/vnd.poc.group-advertisement+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.pocketlearn\\": {
        source: \\"iana\\",
        extensions: [\\"plf\\"]
      },
      \\"application/vnd.powerbuilder6\\": {
        source: \\"iana\\",
        extensions: [\\"pbd\\"]
      },
      \\"application/vnd.powerbuilder6-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder7\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder7-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder75\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.powerbuilder75-s\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.preminet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.previewsystems.box\\": {
        source: \\"iana\\",
        extensions: [\\"box\\"]
      },
      \\"application/vnd.proteus.magazine\\": {
        source: \\"iana\\",
        extensions: [\\"mgz\\"]
      },
      \\"application/vnd.psfs\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.publishare-delta-tree\\": {
        source: \\"iana\\",
        extensions: [\\"qps\\"]
      },
      \\"application/vnd.pvi.ptid1\\": {
        source: \\"iana\\",
        extensions: [\\"ptid\\"]
      },
      \\"application/vnd.pwg-multiplexed\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.pwg-xhtml-print+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.qualcomm.brew-app-res\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.quarantainenet\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.quark.quarkxpress\\": {
        source: \\"iana\\",
        extensions: [\\"qxd\\", \\"qxt\\", \\"qwd\\", \\"qwt\\", \\"qxl\\", \\"qxb\\"]
      },
      \\"application/vnd.quobject-quoxdocument\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.radisys.moml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-conf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-conn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-dialog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-audit-stream+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-conf+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-base+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-fax-detect+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-group+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-speech+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.radisys.msml-dialog-transform+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.rainstor.data\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.rapid\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.rar\\": {
        source: \\"iana\\",
        extensions: [\\"rar\\"]
      },
      \\"application/vnd.realvnc.bed\\": {
        source: \\"iana\\",
        extensions: [\\"bed\\"]
      },
      \\"application/vnd.recordare.musicxml\\": {
        source: \\"iana\\",
        extensions: [\\"mxl\\"]
      },
      \\"application/vnd.recordare.musicxml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"musicxml\\"]
      },
      \\"application/vnd.renlearn.rlprint\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.resilient.logic\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.restful+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.rig.cryptonote\\": {
        source: \\"iana\\",
        extensions: [\\"cryptonote\\"]
      },
      \\"application/vnd.rim.cod\\": {
        source: \\"apache\\",
        extensions: [\\"cod\\"]
      },
      \\"application/vnd.rn-realmedia\\": {
        source: \\"apache\\",
        extensions: [\\"rm\\"]
      },
      \\"application/vnd.rn-realmedia-vbr\\": {
        source: \\"apache\\",
        extensions: [\\"rmvb\\"]
      },
      \\"application/vnd.route66.link66+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"link66\\"]
      },
      \\"application/vnd.rs-274x\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ruckus.download\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.s3sms\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sailingtracker.track\\": {
        source: \\"iana\\",
        extensions: [\\"st\\"]
      },
      \\"application/vnd.sar\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sbm.cid\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sbm.mid2\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.scribus\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.3df\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.csf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.doc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.eml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.mht\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.net\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.ppt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.tiff\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealed.xls\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealedmedia.softseal.html\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sealedmedia.softseal.pdf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.seemail\\": {
        source: \\"iana\\",
        extensions: [\\"see\\"]
      },
      \\"application/vnd.seis+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.sema\\": {
        source: \\"iana\\",
        extensions: [\\"sema\\"]
      },
      \\"application/vnd.semd\\": {
        source: \\"iana\\",
        extensions: [\\"semd\\"]
      },
      \\"application/vnd.semf\\": {
        source: \\"iana\\",
        extensions: [\\"semf\\"]
      },
      \\"application/vnd.shade-save-file\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.shana.informed.formdata\\": {
        source: \\"iana\\",
        extensions: [\\"ifm\\"]
      },
      \\"application/vnd.shana.informed.formtemplate\\": {
        source: \\"iana\\",
        extensions: [\\"itp\\"]
      },
      \\"application/vnd.shana.informed.interchange\\": {
        source: \\"iana\\",
        extensions: [\\"iif\\"]
      },
      \\"application/vnd.shana.informed.package\\": {
        source: \\"iana\\",
        extensions: [\\"ipk\\"]
      },
      \\"application/vnd.shootproof+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.shopkick+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.shp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.shx\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sigrok.session\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.simtech-mindmapper\\": {
        source: \\"iana\\",
        extensions: [\\"twd\\", \\"twds\\"]
      },
      \\"application/vnd.siren+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.smaf\\": {
        source: \\"iana\\",
        extensions: [\\"mmf\\"]
      },
      \\"application/vnd.smart.notebook\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.smart.teacher\\": {
        source: \\"iana\\",
        extensions: [\\"teacher\\"]
      },
      \\"application/vnd.snesdev-page-table\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.software602.filler.form+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"fo\\"]
      },
      \\"application/vnd.software602.filler.form-xml-zip\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.solent.sdkm+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"sdkm\\", \\"sdkd\\"]
      },
      \\"application/vnd.spotfire.dxp\\": {
        source: \\"iana\\",
        extensions: [\\"dxp\\"]
      },
      \\"application/vnd.spotfire.sfs\\": {
        source: \\"iana\\",
        extensions: [\\"sfs\\"]
      },
      \\"application/vnd.sqlite3\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-cod\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-dtf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sss-ntf\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.stardivision.calc\\": {
        source: \\"apache\\",
        extensions: [\\"sdc\\"]
      },
      \\"application/vnd.stardivision.draw\\": {
        source: \\"apache\\",
        extensions: [\\"sda\\"]
      },
      \\"application/vnd.stardivision.impress\\": {
        source: \\"apache\\",
        extensions: [\\"sdd\\"]
      },
      \\"application/vnd.stardivision.math\\": {
        source: \\"apache\\",
        extensions: [\\"smf\\"]
      },
      \\"application/vnd.stardivision.writer\\": {
        source: \\"apache\\",
        extensions: [\\"sdw\\", \\"vor\\"]
      },
      \\"application/vnd.stardivision.writer-global\\": {
        source: \\"apache\\",
        extensions: [\\"sgl\\"]
      },
      \\"application/vnd.stepmania.package\\": {
        source: \\"iana\\",
        extensions: [\\"smzip\\"]
      },
      \\"application/vnd.stepmania.stepchart\\": {
        source: \\"iana\\",
        extensions: [\\"sm\\"]
      },
      \\"application/vnd.street-stream\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sun.wadl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wadl\\"]
      },
      \\"application/vnd.sun.xml.calc\\": {
        source: \\"apache\\",
        extensions: [\\"sxc\\"]
      },
      \\"application/vnd.sun.xml.calc.template\\": {
        source: \\"apache\\",
        extensions: [\\"stc\\"]
      },
      \\"application/vnd.sun.xml.draw\\": {
        source: \\"apache\\",
        extensions: [\\"sxd\\"]
      },
      \\"application/vnd.sun.xml.draw.template\\": {
        source: \\"apache\\",
        extensions: [\\"std\\"]
      },
      \\"application/vnd.sun.xml.impress\\": {
        source: \\"apache\\",
        extensions: [\\"sxi\\"]
      },
      \\"application/vnd.sun.xml.impress.template\\": {
        source: \\"apache\\",
        extensions: [\\"sti\\"]
      },
      \\"application/vnd.sun.xml.math\\": {
        source: \\"apache\\",
        extensions: [\\"sxm\\"]
      },
      \\"application/vnd.sun.xml.writer\\": {
        source: \\"apache\\",
        extensions: [\\"sxw\\"]
      },
      \\"application/vnd.sun.xml.writer.global\\": {
        source: \\"apache\\",
        extensions: [\\"sxg\\"]
      },
      \\"application/vnd.sun.xml.writer.template\\": {
        source: \\"apache\\",
        extensions: [\\"stw\\"]
      },
      \\"application/vnd.sus-calendar\\": {
        source: \\"iana\\",
        extensions: [\\"sus\\", \\"susp\\"]
      },
      \\"application/vnd.svd\\": {
        source: \\"iana\\",
        extensions: [\\"svd\\"]
      },
      \\"application/vnd.swiftview-ics\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.sycle+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.syft+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.symbian.install\\": {
        source: \\"apache\\",
        extensions: [\\"sis\\", \\"sisx\\"]
      },
      \\"application/vnd.syncml+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"xsm\\"]
      },
      \\"application/vnd.syncml.dm+wbxml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"bdm\\"]
      },
      \\"application/vnd.syncml.dm+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"xdm\\"]
      },
      \\"application/vnd.syncml.dm.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmddf+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmddf+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"ddf\\"]
      },
      \\"application/vnd.syncml.dmtnds+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.syncml.dmtnds+xml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true
      },
      \\"application/vnd.syncml.ds.notification\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.tableschema+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tao.intent-module-archive\\": {
        source: \\"iana\\",
        extensions: [\\"tao\\"]
      },
      \\"application/vnd.tcpdump.pcap\\": {
        source: \\"iana\\",
        extensions: [\\"pcap\\", \\"cap\\", \\"dmp\\"]
      },
      \\"application/vnd.think-cell.ppttc+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tmd.mediaflex.api+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.tml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.tmobile-livetv\\": {
        source: \\"iana\\",
        extensions: [\\"tmo\\"]
      },
      \\"application/vnd.tri.onesource\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.trid.tpt\\": {
        source: \\"iana\\",
        extensions: [\\"tpt\\"]
      },
      \\"application/vnd.triscape.mxs\\": {
        source: \\"iana\\",
        extensions: [\\"mxs\\"]
      },
      \\"application/vnd.trueapp\\": {
        source: \\"iana\\",
        extensions: [\\"tra\\"]
      },
      \\"application/vnd.truedoc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ubisoft.webplayer\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ufdl\\": {
        source: \\"iana\\",
        extensions: [\\"ufd\\", \\"ufdl\\"]
      },
      \\"application/vnd.uiq.theme\\": {
        source: \\"iana\\",
        extensions: [\\"utz\\"]
      },
      \\"application/vnd.umajin\\": {
        source: \\"iana\\",
        extensions: [\\"umj\\"]
      },
      \\"application/vnd.unity\\": {
        source: \\"iana\\",
        extensions: [\\"unityweb\\"]
      },
      \\"application/vnd.uoml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uoml\\"]
      },
      \\"application/vnd.uplanet.alert\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.alert-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.bearer-choice\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.bearer-choice-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.cacheop\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.cacheop-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.channel\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.channel-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.list\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.list-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.listcmd\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.listcmd-wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uplanet.signal\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.uri-map\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.valve.source.material\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vcx\\": {
        source: \\"iana\\",
        extensions: [\\"vcx\\"]
      },
      \\"application/vnd.vd-study\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vectorworks\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vel+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.verimatrix.vcas\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.veritone.aion+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.veryant.thin\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.ves.encrypted\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vidsoft.vidconference\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.visio\\": {
        source: \\"iana\\",
        extensions: [\\"vsd\\", \\"vst\\", \\"vss\\", \\"vsw\\"]
      },
      \\"application/vnd.visionary\\": {
        source: \\"iana\\",
        extensions: [\\"vis\\"]
      },
      \\"application/vnd.vividence.scriptfile\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.vsf\\": {
        source: \\"iana\\",
        extensions: [\\"vsf\\"]
      },
      \\"application/vnd.wap.sic\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wap.slc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wap.wbxml\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"wbxml\\"]
      },
      \\"application/vnd.wap.wmlc\\": {
        source: \\"iana\\",
        extensions: [\\"wmlc\\"]
      },
      \\"application/vnd.wap.wmlscriptc\\": {
        source: \\"iana\\",
        extensions: [\\"wmlsc\\"]
      },
      \\"application/vnd.webturbo\\": {
        source: \\"iana\\",
        extensions: [\\"wtb\\"]
      },
      \\"application/vnd.wfa.dpp\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wfa.p2p\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wfa.wsc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.windows.devicepairing\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wmc\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wmf.bootstrap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.mathematica\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.mathematica.package\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wolfram.player\\": {
        source: \\"iana\\",
        extensions: [\\"nbp\\"]
      },
      \\"application/vnd.wordperfect\\": {
        source: \\"iana\\",
        extensions: [\\"wpd\\"]
      },
      \\"application/vnd.wqd\\": {
        source: \\"iana\\",
        extensions: [\\"wqd\\"]
      },
      \\"application/vnd.wrq-hp3000-labelled\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wt.stf\\": {
        source: \\"iana\\",
        extensions: [\\"stf\\"]
      },
      \\"application/vnd.wv.csp+wbxml\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.wv.csp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.wv.ssp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xacml+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xara\\": {
        source: \\"iana\\",
        extensions: [\\"xar\\"]
      },
      \\"application/vnd.xfdl\\": {
        source: \\"iana\\",
        extensions: [\\"xfdl\\"]
      },
      \\"application/vnd.xfdl.webform\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmi+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vnd.xmpie.cpkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.dpkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.plan\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.ppkg\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.xmpie.xlim\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.hv-dic\\": {
        source: \\"iana\\",
        extensions: [\\"hvd\\"]
      },
      \\"application/vnd.yamaha.hv-script\\": {
        source: \\"iana\\",
        extensions: [\\"hvs\\"]
      },
      \\"application/vnd.yamaha.hv-voice\\": {
        source: \\"iana\\",
        extensions: [\\"hvp\\"]
      },
      \\"application/vnd.yamaha.openscoreformat\\": {
        source: \\"iana\\",
        extensions: [\\"osf\\"]
      },
      \\"application/vnd.yamaha.openscoreformat.osfpvg+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"osfpvg\\"]
      },
      \\"application/vnd.yamaha.remote-setup\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.smaf-audio\\": {
        source: \\"iana\\",
        extensions: [\\"saf\\"]
      },
      \\"application/vnd.yamaha.smaf-phrase\\": {
        source: \\"iana\\",
        extensions: [\\"spf\\"]
      },
      \\"application/vnd.yamaha.through-ngn\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yamaha.tunnel-udpencap\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yaoweme\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.yellowriver-custom-menu\\": {
        source: \\"iana\\",
        extensions: [\\"cmp\\"]
      },
      \\"application/vnd.youtube.yt\\": {
        source: \\"iana\\"
      },
      \\"application/vnd.zul\\": {
        source: \\"iana\\",
        extensions: [\\"zir\\", \\"zirz\\"]
      },
      \\"application/vnd.zzazz.deck+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"zaz\\"]
      },
      \\"application/voicexml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"vxml\\"]
      },
      \\"application/voucher-cms+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/vq-rtcpxr\\": {
        source: \\"iana\\"
      },
      \\"application/wasm\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wasm\\"]
      },
      \\"application/watcherinfo+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wif\\"]
      },
      \\"application/webpush-options+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/whoispp-query\\": {
        source: \\"iana\\"
      },
      \\"application/whoispp-response\\": {
        source: \\"iana\\"
      },
      \\"application/widget\\": {
        source: \\"iana\\",
        extensions: [\\"wgt\\"]
      },
      \\"application/winhlp\\": {
        source: \\"apache\\",
        extensions: [\\"hlp\\"]
      },
      \\"application/wita\\": {
        source: \\"iana\\"
      },
      \\"application/wordperfect5.1\\": {
        source: \\"iana\\"
      },
      \\"application/wsdl+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wsdl\\"]
      },
      \\"application/wspolicy+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"wspolicy\\"]
      },
      \\"application/x-7z-compressed\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"7z\\"]
      },
      \\"application/x-abiword\\": {
        source: \\"apache\\",
        extensions: [\\"abw\\"]
      },
      \\"application/x-ace-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"ace\\"]
      },
      \\"application/x-amf\\": {
        source: \\"apache\\"
      },
      \\"application/x-apple-diskimage\\": {
        source: \\"apache\\",
        extensions: [\\"dmg\\"]
      },
      \\"application/x-arj\\": {
        compressible: false,
        extensions: [\\"arj\\"]
      },
      \\"application/x-authorware-bin\\": {
        source: \\"apache\\",
        extensions: [\\"aab\\", \\"x32\\", \\"u32\\", \\"vox\\"]
      },
      \\"application/x-authorware-map\\": {
        source: \\"apache\\",
        extensions: [\\"aam\\"]
      },
      \\"application/x-authorware-seg\\": {
        source: \\"apache\\",
        extensions: [\\"aas\\"]
      },
      \\"application/x-bcpio\\": {
        source: \\"apache\\",
        extensions: [\\"bcpio\\"]
      },
      \\"application/x-bdoc\\": {
        compressible: false,
        extensions: [\\"bdoc\\"]
      },
      \\"application/x-bittorrent\\": {
        source: \\"apache\\",
        extensions: [\\"torrent\\"]
      },
      \\"application/x-blorb\\": {
        source: \\"apache\\",
        extensions: [\\"blb\\", \\"blorb\\"]
      },
      \\"application/x-bzip\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"bz\\"]
      },
      \\"application/x-bzip2\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"bz2\\", \\"boz\\"]
      },
      \\"application/x-cbr\\": {
        source: \\"apache\\",
        extensions: [\\"cbr\\", \\"cba\\", \\"cbt\\", \\"cbz\\", \\"cb7\\"]
      },
      \\"application/x-cdlink\\": {
        source: \\"apache\\",
        extensions: [\\"vcd\\"]
      },
      \\"application/x-cfs-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"cfs\\"]
      },
      \\"application/x-chat\\": {
        source: \\"apache\\",
        extensions: [\\"chat\\"]
      },
      \\"application/x-chess-pgn\\": {
        source: \\"apache\\",
        extensions: [\\"pgn\\"]
      },
      \\"application/x-chrome-extension\\": {
        extensions: [\\"crx\\"]
      },
      \\"application/x-cocoa\\": {
        source: \\"nginx\\",
        extensions: [\\"cco\\"]
      },
      \\"application/x-compress\\": {
        source: \\"apache\\"
      },
      \\"application/x-conference\\": {
        source: \\"apache\\",
        extensions: [\\"nsc\\"]
      },
      \\"application/x-cpio\\": {
        source: \\"apache\\",
        extensions: [\\"cpio\\"]
      },
      \\"application/x-csh\\": {
        source: \\"apache\\",
        extensions: [\\"csh\\"]
      },
      \\"application/x-deb\\": {
        compressible: false
      },
      \\"application/x-debian-package\\": {
        source: \\"apache\\",
        extensions: [\\"deb\\", \\"udeb\\"]
      },
      \\"application/x-dgc-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"dgc\\"]
      },
      \\"application/x-director\\": {
        source: \\"apache\\",
        extensions: [\\"dir\\", \\"dcr\\", \\"dxr\\", \\"cst\\", \\"cct\\", \\"cxt\\", \\"w3d\\", \\"fgd\\", \\"swa\\"]
      },
      \\"application/x-doom\\": {
        source: \\"apache\\",
        extensions: [\\"wad\\"]
      },
      \\"application/x-dtbncx+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ncx\\"]
      },
      \\"application/x-dtbook+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"dtb\\"]
      },
      \\"application/x-dtbresource+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"res\\"]
      },
      \\"application/x-dvi\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"dvi\\"]
      },
      \\"application/x-envoy\\": {
        source: \\"apache\\",
        extensions: [\\"evy\\"]
      },
      \\"application/x-eva\\": {
        source: \\"apache\\",
        extensions: [\\"eva\\"]
      },
      \\"application/x-font-bdf\\": {
        source: \\"apache\\",
        extensions: [\\"bdf\\"]
      },
      \\"application/x-font-dos\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-framemaker\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-ghostscript\\": {
        source: \\"apache\\",
        extensions: [\\"gsf\\"]
      },
      \\"application/x-font-libgrx\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-linux-psf\\": {
        source: \\"apache\\",
        extensions: [\\"psf\\"]
      },
      \\"application/x-font-pcf\\": {
        source: \\"apache\\",
        extensions: [\\"pcf\\"]
      },
      \\"application/x-font-snf\\": {
        source: \\"apache\\",
        extensions: [\\"snf\\"]
      },
      \\"application/x-font-speedo\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-sunos-news\\": {
        source: \\"apache\\"
      },
      \\"application/x-font-type1\\": {
        source: \\"apache\\",
        extensions: [\\"pfa\\", \\"pfb\\", \\"pfm\\", \\"afm\\"]
      },
      \\"application/x-font-vfont\\": {
        source: \\"apache\\"
      },
      \\"application/x-freearc\\": {
        source: \\"apache\\",
        extensions: [\\"arc\\"]
      },
      \\"application/x-futuresplash\\": {
        source: \\"apache\\",
        extensions: [\\"spl\\"]
      },
      \\"application/x-gca-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"gca\\"]
      },
      \\"application/x-glulx\\": {
        source: \\"apache\\",
        extensions: [\\"ulx\\"]
      },
      \\"application/x-gnumeric\\": {
        source: \\"apache\\",
        extensions: [\\"gnumeric\\"]
      },
      \\"application/x-gramps-xml\\": {
        source: \\"apache\\",
        extensions: [\\"gramps\\"]
      },
      \\"application/x-gtar\\": {
        source: \\"apache\\",
        extensions: [\\"gtar\\"]
      },
      \\"application/x-gzip\\": {
        source: \\"apache\\"
      },
      \\"application/x-hdf\\": {
        source: \\"apache\\",
        extensions: [\\"hdf\\"]
      },
      \\"application/x-httpd-php\\": {
        compressible: true,
        extensions: [\\"php\\"]
      },
      \\"application/x-install-instructions\\": {
        source: \\"apache\\",
        extensions: [\\"install\\"]
      },
      \\"application/x-iso9660-image\\": {
        source: \\"apache\\",
        extensions: [\\"iso\\"]
      },
      \\"application/x-iwork-keynote-sffkey\\": {
        extensions: [\\"key\\"]
      },
      \\"application/x-iwork-numbers-sffnumbers\\": {
        extensions: [\\"numbers\\"]
      },
      \\"application/x-iwork-pages-sffpages\\": {
        extensions: [\\"pages\\"]
      },
      \\"application/x-java-archive-diff\\": {
        source: \\"nginx\\",
        extensions: [\\"jardiff\\"]
      },
      \\"application/x-java-jnlp-file\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"jnlp\\"]
      },
      \\"application/x-javascript\\": {
        compressible: true
      },
      \\"application/x-keepass2\\": {
        extensions: [\\"kdbx\\"]
      },
      \\"application/x-latex\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"latex\\"]
      },
      \\"application/x-lua-bytecode\\": {
        extensions: [\\"luac\\"]
      },
      \\"application/x-lzh-compressed\\": {
        source: \\"apache\\",
        extensions: [\\"lzh\\", \\"lha\\"]
      },
      \\"application/x-makeself\\": {
        source: \\"nginx\\",
        extensions: [\\"run\\"]
      },
      \\"application/x-mie\\": {
        source: \\"apache\\",
        extensions: [\\"mie\\"]
      },
      \\"application/x-mobipocket-ebook\\": {
        source: \\"apache\\",
        extensions: [\\"prc\\", \\"mobi\\"]
      },
      \\"application/x-mpegurl\\": {
        compressible: false
      },
      \\"application/x-ms-application\\": {
        source: \\"apache\\",
        extensions: [\\"application\\"]
      },
      \\"application/x-ms-shortcut\\": {
        source: \\"apache\\",
        extensions: [\\"lnk\\"]
      },
      \\"application/x-ms-wmd\\": {
        source: \\"apache\\",
        extensions: [\\"wmd\\"]
      },
      \\"application/x-ms-wmz\\": {
        source: \\"apache\\",
        extensions: [\\"wmz\\"]
      },
      \\"application/x-ms-xbap\\": {
        source: \\"apache\\",
        extensions: [\\"xbap\\"]
      },
      \\"application/x-msaccess\\": {
        source: \\"apache\\",
        extensions: [\\"mdb\\"]
      },
      \\"application/x-msbinder\\": {
        source: \\"apache\\",
        extensions: [\\"obd\\"]
      },
      \\"application/x-mscardfile\\": {
        source: \\"apache\\",
        extensions: [\\"crd\\"]
      },
      \\"application/x-msclip\\": {
        source: \\"apache\\",
        extensions: [\\"clp\\"]
      },
      \\"application/x-msdos-program\\": {
        extensions: [\\"exe\\"]
      },
      \\"application/x-msdownload\\": {
        source: \\"apache\\",
        extensions: [\\"exe\\", \\"dll\\", \\"com\\", \\"bat\\", \\"msi\\"]
      },
      \\"application/x-msmediaview\\": {
        source: \\"apache\\",
        extensions: [\\"mvb\\", \\"m13\\", \\"m14\\"]
      },
      \\"application/x-msmetafile\\": {
        source: \\"apache\\",
        extensions: [\\"wmf\\", \\"wmz\\", \\"emf\\", \\"emz\\"]
      },
      \\"application/x-msmoney\\": {
        source: \\"apache\\",
        extensions: [\\"mny\\"]
      },
      \\"application/x-mspublisher\\": {
        source: \\"apache\\",
        extensions: [\\"pub\\"]
      },
      \\"application/x-msschedule\\": {
        source: \\"apache\\",
        extensions: [\\"scd\\"]
      },
      \\"application/x-msterminal\\": {
        source: \\"apache\\",
        extensions: [\\"trm\\"]
      },
      \\"application/x-mswrite\\": {
        source: \\"apache\\",
        extensions: [\\"wri\\"]
      },
      \\"application/x-netcdf\\": {
        source: \\"apache\\",
        extensions: [\\"nc\\", \\"cdf\\"]
      },
      \\"application/x-ns-proxy-autoconfig\\": {
        compressible: true,
        extensions: [\\"pac\\"]
      },
      \\"application/x-nzb\\": {
        source: \\"apache\\",
        extensions: [\\"nzb\\"]
      },
      \\"application/x-perl\\": {
        source: \\"nginx\\",
        extensions: [\\"pl\\", \\"pm\\"]
      },
      \\"application/x-pilot\\": {
        source: \\"nginx\\",
        extensions: [\\"prc\\", \\"pdb\\"]
      },
      \\"application/x-pkcs12\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"p12\\", \\"pfx\\"]
      },
      \\"application/x-pkcs7-certificates\\": {
        source: \\"apache\\",
        extensions: [\\"p7b\\", \\"spc\\"]
      },
      \\"application/x-pkcs7-certreqresp\\": {
        source: \\"apache\\",
        extensions: [\\"p7r\\"]
      },
      \\"application/x-pki-message\\": {
        source: \\"iana\\"
      },
      \\"application/x-rar-compressed\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"rar\\"]
      },
      \\"application/x-redhat-package-manager\\": {
        source: \\"nginx\\",
        extensions: [\\"rpm\\"]
      },
      \\"application/x-research-info-systems\\": {
        source: \\"apache\\",
        extensions: [\\"ris\\"]
      },
      \\"application/x-sea\\": {
        source: \\"nginx\\",
        extensions: [\\"sea\\"]
      },
      \\"application/x-sh\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"sh\\"]
      },
      \\"application/x-shar\\": {
        source: \\"apache\\",
        extensions: [\\"shar\\"]
      },
      \\"application/x-shockwave-flash\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"swf\\"]
      },
      \\"application/x-silverlight-app\\": {
        source: \\"apache\\",
        extensions: [\\"xap\\"]
      },
      \\"application/x-sql\\": {
        source: \\"apache\\",
        extensions: [\\"sql\\"]
      },
      \\"application/x-stuffit\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"sit\\"]
      },
      \\"application/x-stuffitx\\": {
        source: \\"apache\\",
        extensions: [\\"sitx\\"]
      },
      \\"application/x-subrip\\": {
        source: \\"apache\\",
        extensions: [\\"srt\\"]
      },
      \\"application/x-sv4cpio\\": {
        source: \\"apache\\",
        extensions: [\\"sv4cpio\\"]
      },
      \\"application/x-sv4crc\\": {
        source: \\"apache\\",
        extensions: [\\"sv4crc\\"]
      },
      \\"application/x-t3vm-image\\": {
        source: \\"apache\\",
        extensions: [\\"t3\\"]
      },
      \\"application/x-tads\\": {
        source: \\"apache\\",
        extensions: [\\"gam\\"]
      },
      \\"application/x-tar\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"tar\\"]
      },
      \\"application/x-tcl\\": {
        source: \\"apache\\",
        extensions: [\\"tcl\\", \\"tk\\"]
      },
      \\"application/x-tex\\": {
        source: \\"apache\\",
        extensions: [\\"tex\\"]
      },
      \\"application/x-tex-tfm\\": {
        source: \\"apache\\",
        extensions: [\\"tfm\\"]
      },
      \\"application/x-texinfo\\": {
        source: \\"apache\\",
        extensions: [\\"texinfo\\", \\"texi\\"]
      },
      \\"application/x-tgif\\": {
        source: \\"apache\\",
        extensions: [\\"obj\\"]
      },
      \\"application/x-ustar\\": {
        source: \\"apache\\",
        extensions: [\\"ustar\\"]
      },
      \\"application/x-virtualbox-hdd\\": {
        compressible: true,
        extensions: [\\"hdd\\"]
      },
      \\"application/x-virtualbox-ova\\": {
        compressible: true,
        extensions: [\\"ova\\"]
      },
      \\"application/x-virtualbox-ovf\\": {
        compressible: true,
        extensions: [\\"ovf\\"]
      },
      \\"application/x-virtualbox-vbox\\": {
        compressible: true,
        extensions: [\\"vbox\\"]
      },
      \\"application/x-virtualbox-vbox-extpack\\": {
        compressible: false,
        extensions: [\\"vbox-extpack\\"]
      },
      \\"application/x-virtualbox-vdi\\": {
        compressible: true,
        extensions: [\\"vdi\\"]
      },
      \\"application/x-virtualbox-vhd\\": {
        compressible: true,
        extensions: [\\"vhd\\"]
      },
      \\"application/x-virtualbox-vmdk\\": {
        compressible: true,
        extensions: [\\"vmdk\\"]
      },
      \\"application/x-wais-source\\": {
        source: \\"apache\\",
        extensions: [\\"src\\"]
      },
      \\"application/x-web-app-manifest+json\\": {
        compressible: true,
        extensions: [\\"webapp\\"]
      },
      \\"application/x-www-form-urlencoded\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/x-x509-ca-cert\\": {
        source: \\"iana\\",
        extensions: [\\"der\\", \\"crt\\", \\"pem\\"]
      },
      \\"application/x-x509-ca-ra-cert\\": {
        source: \\"iana\\"
      },
      \\"application/x-x509-next-ca-cert\\": {
        source: \\"iana\\"
      },
      \\"application/x-xfig\\": {
        source: \\"apache\\",
        extensions: [\\"fig\\"]
      },
      \\"application/x-xliff+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xlf\\"]
      },
      \\"application/x-xpinstall\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"xpi\\"]
      },
      \\"application/x-xz\\": {
        source: \\"apache\\",
        extensions: [\\"xz\\"]
      },
      \\"application/x-zmachine\\": {
        source: \\"apache\\",
        extensions: [\\"z1\\", \\"z2\\", \\"z3\\", \\"z4\\", \\"z5\\", \\"z6\\", \\"z7\\", \\"z8\\"]
      },
      \\"application/x400-bp\\": {
        source: \\"iana\\"
      },
      \\"application/xacml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xaml+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xaml\\"]
      },
      \\"application/xcap-att+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xav\\"]
      },
      \\"application/xcap-caps+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xca\\"]
      },
      \\"application/xcap-diff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xdf\\"]
      },
      \\"application/xcap-el+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xel\\"]
      },
      \\"application/xcap-error+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xcap-ns+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xns\\"]
      },
      \\"application/xcon-conference-info+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xcon-conference-info-diff+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xenc+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xenc\\"]
      },
      \\"application/xhtml+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xhtml\\", \\"xht\\"]
      },
      \\"application/xhtml-voice+xml\\": {
        source: \\"apache\\",
        compressible: true
      },
      \\"application/xliff+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xlf\\"]
      },
      \\"application/xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xml\\", \\"xsl\\", \\"xsd\\", \\"rng\\"]
      },
      \\"application/xml-dtd\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dtd\\"]
      },
      \\"application/xml-external-parsed-entity\\": {
        source: \\"iana\\"
      },
      \\"application/xml-patch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xmpp+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/xop+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xop\\"]
      },
      \\"application/xproc+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xpl\\"]
      },
      \\"application/xslt+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xsl\\", \\"xslt\\"]
      },
      \\"application/xspf+xml\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"xspf\\"]
      },
      \\"application/xv+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"mxml\\", \\"xhvml\\", \\"xvml\\", \\"xvm\\"]
      },
      \\"application/yang\\": {
        source: \\"iana\\",
        extensions: [\\"yang\\"]
      },
      \\"application/yang-data+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-data+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-patch+json\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yang-patch+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"application/yin+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"yin\\"]
      },
      \\"application/zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"zip\\"]
      },
      \\"application/zlib\\": {
        source: \\"iana\\"
      },
      \\"application/zstd\\": {
        source: \\"iana\\"
      },
      \\"audio/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"audio/32kadpcm\\": {
        source: \\"iana\\"
      },
      \\"audio/3gpp\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"3gpp\\"]
      },
      \\"audio/3gpp2\\": {
        source: \\"iana\\"
      },
      \\"audio/aac\\": {
        source: \\"iana\\"
      },
      \\"audio/ac3\\": {
        source: \\"iana\\"
      },
      \\"audio/adpcm\\": {
        source: \\"apache\\",
        extensions: [\\"adp\\"]
      },
      \\"audio/amr\\": {
        source: \\"iana\\",
        extensions: [\\"amr\\"]
      },
      \\"audio/amr-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/amr-wb+\\": {
        source: \\"iana\\"
      },
      \\"audio/aptx\\": {
        source: \\"iana\\"
      },
      \\"audio/asc\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac-advanced-lossless\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac-x\\": {
        source: \\"iana\\"
      },
      \\"audio/atrac3\\": {
        source: \\"iana\\"
      },
      \\"audio/basic\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"au\\", \\"snd\\"]
      },
      \\"audio/bv16\\": {
        source: \\"iana\\"
      },
      \\"audio/bv32\\": {
        source: \\"iana\\"
      },
      \\"audio/clearmode\\": {
        source: \\"iana\\"
      },
      \\"audio/cn\\": {
        source: \\"iana\\"
      },
      \\"audio/dat12\\": {
        source: \\"iana\\"
      },
      \\"audio/dls\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es201108\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202050\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202211\\": {
        source: \\"iana\\"
      },
      \\"audio/dsr-es202212\\": {
        source: \\"iana\\"
      },
      \\"audio/dv\\": {
        source: \\"iana\\"
      },
      \\"audio/dvi4\\": {
        source: \\"iana\\"
      },
      \\"audio/eac3\\": {
        source: \\"iana\\"
      },
      \\"audio/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc-qcp\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrc1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcb1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcnw1\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb0\\": {
        source: \\"iana\\"
      },
      \\"audio/evrcwb1\\": {
        source: \\"iana\\"
      },
      \\"audio/evs\\": {
        source: \\"iana\\"
      },
      \\"audio/flexfec\\": {
        source: \\"iana\\"
      },
      \\"audio/fwdred\\": {
        source: \\"iana\\"
      },
      \\"audio/g711-0\\": {
        source: \\"iana\\"
      },
      \\"audio/g719\\": {
        source: \\"iana\\"
      },
      \\"audio/g722\\": {
        source: \\"iana\\"
      },
      \\"audio/g7221\\": {
        source: \\"iana\\"
      },
      \\"audio/g723\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-16\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-24\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-32\\": {
        source: \\"iana\\"
      },
      \\"audio/g726-40\\": {
        source: \\"iana\\"
      },
      \\"audio/g728\\": {
        source: \\"iana\\"
      },
      \\"audio/g729\\": {
        source: \\"iana\\"
      },
      \\"audio/g7291\\": {
        source: \\"iana\\"
      },
      \\"audio/g729d\\": {
        source: \\"iana\\"
      },
      \\"audio/g729e\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm-efr\\": {
        source: \\"iana\\"
      },
      \\"audio/gsm-hr-08\\": {
        source: \\"iana\\"
      },
      \\"audio/ilbc\\": {
        source: \\"iana\\"
      },
      \\"audio/ip-mr_v2.5\\": {
        source: \\"iana\\"
      },
      \\"audio/isac\\": {
        source: \\"apache\\"
      },
      \\"audio/l16\\": {
        source: \\"iana\\"
      },
      \\"audio/l20\\": {
        source: \\"iana\\"
      },
      \\"audio/l24\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"audio/l8\\": {
        source: \\"iana\\"
      },
      \\"audio/lpc\\": {
        source: \\"iana\\"
      },
      \\"audio/melp\\": {
        source: \\"iana\\"
      },
      \\"audio/melp1200\\": {
        source: \\"iana\\"
      },
      \\"audio/melp2400\\": {
        source: \\"iana\\"
      },
      \\"audio/melp600\\": {
        source: \\"iana\\"
      },
      \\"audio/mhas\\": {
        source: \\"iana\\"
      },
      \\"audio/midi\\": {
        source: \\"apache\\",
        extensions: [\\"mid\\", \\"midi\\", \\"kar\\", \\"rmi\\"]
      },
      \\"audio/mobile-xmf\\": {
        source: \\"iana\\",
        extensions: [\\"mxmf\\"]
      },
      \\"audio/mp3\\": {
        compressible: false,
        extensions: [\\"mp3\\"]
      },
      \\"audio/mp4\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"m4a\\", \\"mp4a\\"]
      },
      \\"audio/mp4a-latm\\": {
        source: \\"iana\\"
      },
      \\"audio/mpa\\": {
        source: \\"iana\\"
      },
      \\"audio/mpa-robust\\": {
        source: \\"iana\\"
      },
      \\"audio/mpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mpga\\", \\"mp2\\", \\"mp2a\\", \\"mp3\\", \\"m2a\\", \\"m3a\\"]
      },
      \\"audio/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"audio/musepack\\": {
        source: \\"apache\\"
      },
      \\"audio/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"oga\\", \\"ogg\\", \\"spx\\", \\"opus\\"]
      },
      \\"audio/opus\\": {
        source: \\"iana\\"
      },
      \\"audio/parityfec\\": {
        source: \\"iana\\"
      },
      \\"audio/pcma\\": {
        source: \\"iana\\"
      },
      \\"audio/pcma-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/pcmu\\": {
        source: \\"iana\\"
      },
      \\"audio/pcmu-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/prs.sid\\": {
        source: \\"iana\\"
      },
      \\"audio/qcelp\\": {
        source: \\"iana\\"
      },
      \\"audio/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"audio/red\\": {
        source: \\"iana\\"
      },
      \\"audio/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"audio/rtp-midi\\": {
        source: \\"iana\\"
      },
      \\"audio/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"audio/rtx\\": {
        source: \\"iana\\"
      },
      \\"audio/s3m\\": {
        source: \\"apache\\",
        extensions: [\\"s3m\\"]
      },
      \\"audio/scip\\": {
        source: \\"iana\\"
      },
      \\"audio/silk\\": {
        source: \\"apache\\",
        extensions: [\\"sil\\"]
      },
      \\"audio/smv\\": {
        source: \\"iana\\"
      },
      \\"audio/smv-qcp\\": {
        source: \\"iana\\"
      },
      \\"audio/smv0\\": {
        source: \\"iana\\"
      },
      \\"audio/sofa\\": {
        source: \\"iana\\"
      },
      \\"audio/sp-midi\\": {
        source: \\"iana\\"
      },
      \\"audio/speex\\": {
        source: \\"iana\\"
      },
      \\"audio/t140c\\": {
        source: \\"iana\\"
      },
      \\"audio/t38\\": {
        source: \\"iana\\"
      },
      \\"audio/telephone-event\\": {
        source: \\"iana\\"
      },
      \\"audio/tetra_acelp\\": {
        source: \\"iana\\"
      },
      \\"audio/tetra_acelp_bb\\": {
        source: \\"iana\\"
      },
      \\"audio/tone\\": {
        source: \\"iana\\"
      },
      \\"audio/tsvcis\\": {
        source: \\"iana\\"
      },
      \\"audio/uemclip\\": {
        source: \\"iana\\"
      },
      \\"audio/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"audio/usac\\": {
        source: \\"iana\\"
      },
      \\"audio/vdvi\\": {
        source: \\"iana\\"
      },
      \\"audio/vmr-wb\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.3gpp.iufp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.4sb\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.audiokoz\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.celp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cisco.nse\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cmles.radio-events\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cns.anp1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.cns.inf1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dece.audio\\": {
        source: \\"iana\\",
        extensions: [\\"uva\\", \\"uvva\\"]
      },
      \\"audio/vnd.digital-winds\\": {
        source: \\"iana\\",
        extensions: [\\"eol\\"]
      },
      \\"audio/vnd.dlna.adts\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.heaac.1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.heaac.2\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.mlp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.mps\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2x\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pl2z\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dolby.pulse.1\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dra\\": {
        source: \\"iana\\",
        extensions: [\\"dra\\"]
      },
      \\"audio/vnd.dts\\": {
        source: \\"iana\\",
        extensions: [\\"dts\\"]
      },
      \\"audio/vnd.dts.hd\\": {
        source: \\"iana\\",
        extensions: [\\"dtshd\\"]
      },
      \\"audio/vnd.dts.uhd\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.dvb.file\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.everad.plj\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.hns.audio\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.lucent.voice\\": {
        source: \\"iana\\",
        extensions: [\\"lvp\\"]
      },
      \\"audio/vnd.ms-playready.media.pya\\": {
        source: \\"iana\\",
        extensions: [\\"pya\\"]
      },
      \\"audio/vnd.nokia.mobile-xmf\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.nortel.vbk\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.nuera.ecelp4800\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp4800\\"]
      },
      \\"audio/vnd.nuera.ecelp7470\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp7470\\"]
      },
      \\"audio/vnd.nuera.ecelp9600\\": {
        source: \\"iana\\",
        extensions: [\\"ecelp9600\\"]
      },
      \\"audio/vnd.octel.sbc\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.presonus.multitrack\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.qcelp\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.rhetorex.32kadpcm\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.rip\\": {
        source: \\"iana\\",
        extensions: [\\"rip\\"]
      },
      \\"audio/vnd.rn-realaudio\\": {
        compressible: false
      },
      \\"audio/vnd.sealedmedia.softseal.mpeg\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.vmx.cvsd\\": {
        source: \\"iana\\"
      },
      \\"audio/vnd.wave\\": {
        compressible: false
      },
      \\"audio/vorbis\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"audio/vorbis-config\\": {
        source: \\"iana\\"
      },
      \\"audio/wav\\": {
        compressible: false,
        extensions: [\\"wav\\"]
      },
      \\"audio/wave\\": {
        compressible: false,
        extensions: [\\"wav\\"]
      },
      \\"audio/webm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"weba\\"]
      },
      \\"audio/x-aac\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"aac\\"]
      },
      \\"audio/x-aiff\\": {
        source: \\"apache\\",
        extensions: [\\"aif\\", \\"aiff\\", \\"aifc\\"]
      },
      \\"audio/x-caf\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"caf\\"]
      },
      \\"audio/x-flac\\": {
        source: \\"apache\\",
        extensions: [\\"flac\\"]
      },
      \\"audio/x-m4a\\": {
        source: \\"nginx\\",
        extensions: [\\"m4a\\"]
      },
      \\"audio/x-matroska\\": {
        source: \\"apache\\",
        extensions: [\\"mka\\"]
      },
      \\"audio/x-mpegurl\\": {
        source: \\"apache\\",
        extensions: [\\"m3u\\"]
      },
      \\"audio/x-ms-wax\\": {
        source: \\"apache\\",
        extensions: [\\"wax\\"]
      },
      \\"audio/x-ms-wma\\": {
        source: \\"apache\\",
        extensions: [\\"wma\\"]
      },
      \\"audio/x-pn-realaudio\\": {
        source: \\"apache\\",
        extensions: [\\"ram\\", \\"ra\\"]
      },
      \\"audio/x-pn-realaudio-plugin\\": {
        source: \\"apache\\",
        extensions: [\\"rmp\\"]
      },
      \\"audio/x-realaudio\\": {
        source: \\"nginx\\",
        extensions: [\\"ra\\"]
      },
      \\"audio/x-tta\\": {
        source: \\"apache\\"
      },
      \\"audio/x-wav\\": {
        source: \\"apache\\",
        extensions: [\\"wav\\"]
      },
      \\"audio/xm\\": {
        source: \\"apache\\",
        extensions: [\\"xm\\"]
      },
      \\"chemical/x-cdx\\": {
        source: \\"apache\\",
        extensions: [\\"cdx\\"]
      },
      \\"chemical/x-cif\\": {
        source: \\"apache\\",
        extensions: [\\"cif\\"]
      },
      \\"chemical/x-cmdf\\": {
        source: \\"apache\\",
        extensions: [\\"cmdf\\"]
      },
      \\"chemical/x-cml\\": {
        source: \\"apache\\",
        extensions: [\\"cml\\"]
      },
      \\"chemical/x-csml\\": {
        source: \\"apache\\",
        extensions: [\\"csml\\"]
      },
      \\"chemical/x-pdb\\": {
        source: \\"apache\\"
      },
      \\"chemical/x-xyz\\": {
        source: \\"apache\\",
        extensions: [\\"xyz\\"]
      },
      \\"font/collection\\": {
        source: \\"iana\\",
        extensions: [\\"ttc\\"]
      },
      \\"font/otf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"otf\\"]
      },
      \\"font/sfnt\\": {
        source: \\"iana\\"
      },
      \\"font/ttf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ttf\\"]
      },
      \\"font/woff\\": {
        source: \\"iana\\",
        extensions: [\\"woff\\"]
      },
      \\"font/woff2\\": {
        source: \\"iana\\",
        extensions: [\\"woff2\\"]
      },
      \\"image/aces\\": {
        source: \\"iana\\",
        extensions: [\\"exr\\"]
      },
      \\"image/apng\\": {
        compressible: false,
        extensions: [\\"apng\\"]
      },
      \\"image/avci\\": {
        source: \\"iana\\",
        extensions: [\\"avci\\"]
      },
      \\"image/avcs\\": {
        source: \\"iana\\",
        extensions: [\\"avcs\\"]
      },
      \\"image/avif\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"avif\\"]
      },
      \\"image/bmp\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"bmp\\"]
      },
      \\"image/cgm\\": {
        source: \\"iana\\",
        extensions: [\\"cgm\\"]
      },
      \\"image/dicom-rle\\": {
        source: \\"iana\\",
        extensions: [\\"drle\\"]
      },
      \\"image/emf\\": {
        source: \\"iana\\",
        extensions: [\\"emf\\"]
      },
      \\"image/fits\\": {
        source: \\"iana\\",
        extensions: [\\"fits\\"]
      },
      \\"image/g3fax\\": {
        source: \\"iana\\",
        extensions: [\\"g3\\"]
      },
      \\"image/gif\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"gif\\"]
      },
      \\"image/heic\\": {
        source: \\"iana\\",
        extensions: [\\"heic\\"]
      },
      \\"image/heic-sequence\\": {
        source: \\"iana\\",
        extensions: [\\"heics\\"]
      },
      \\"image/heif\\": {
        source: \\"iana\\",
        extensions: [\\"heif\\"]
      },
      \\"image/heif-sequence\\": {
        source: \\"iana\\",
        extensions: [\\"heifs\\"]
      },
      \\"image/hej2k\\": {
        source: \\"iana\\",
        extensions: [\\"hej2\\"]
      },
      \\"image/hsj2\\": {
        source: \\"iana\\",
        extensions: [\\"hsj2\\"]
      },
      \\"image/ief\\": {
        source: \\"iana\\",
        extensions: [\\"ief\\"]
      },
      \\"image/jls\\": {
        source: \\"iana\\",
        extensions: [\\"jls\\"]
      },
      \\"image/jp2\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jp2\\", \\"jpg2\\"]
      },
      \\"image/jpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpeg\\", \\"jpg\\", \\"jpe\\"]
      },
      \\"image/jph\\": {
        source: \\"iana\\",
        extensions: [\\"jph\\"]
      },
      \\"image/jphc\\": {
        source: \\"iana\\",
        extensions: [\\"jhc\\"]
      },
      \\"image/jpm\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpm\\"]
      },
      \\"image/jpx\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"jpx\\", \\"jpf\\"]
      },
      \\"image/jxr\\": {
        source: \\"iana\\",
        extensions: [\\"jxr\\"]
      },
      \\"image/jxra\\": {
        source: \\"iana\\",
        extensions: [\\"jxra\\"]
      },
      \\"image/jxrs\\": {
        source: \\"iana\\",
        extensions: [\\"jxrs\\"]
      },
      \\"image/jxs\\": {
        source: \\"iana\\",
        extensions: [\\"jxs\\"]
      },
      \\"image/jxsc\\": {
        source: \\"iana\\",
        extensions: [\\"jxsc\\"]
      },
      \\"image/jxsi\\": {
        source: \\"iana\\",
        extensions: [\\"jxsi\\"]
      },
      \\"image/jxss\\": {
        source: \\"iana\\",
        extensions: [\\"jxss\\"]
      },
      \\"image/ktx\\": {
        source: \\"iana\\",
        extensions: [\\"ktx\\"]
      },
      \\"image/ktx2\\": {
        source: \\"iana\\",
        extensions: [\\"ktx2\\"]
      },
      \\"image/naplps\\": {
        source: \\"iana\\"
      },
      \\"image/pjpeg\\": {
        compressible: false
      },
      \\"image/png\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"png\\"]
      },
      \\"image/prs.btif\\": {
        source: \\"iana\\",
        extensions: [\\"btif\\"]
      },
      \\"image/prs.pti\\": {
        source: \\"iana\\",
        extensions: [\\"pti\\"]
      },
      \\"image/pwg-raster\\": {
        source: \\"iana\\"
      },
      \\"image/sgi\\": {
        source: \\"apache\\",
        extensions: [\\"sgi\\"]
      },
      \\"image/svg+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"svg\\", \\"svgz\\"]
      },
      \\"image/t38\\": {
        source: \\"iana\\",
        extensions: [\\"t38\\"]
      },
      \\"image/tiff\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"tif\\", \\"tiff\\"]
      },
      \\"image/tiff-fx\\": {
        source: \\"iana\\",
        extensions: [\\"tfx\\"]
      },
      \\"image/vnd.adobe.photoshop\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"psd\\"]
      },
      \\"image/vnd.airzip.accelerator.azv\\": {
        source: \\"iana\\",
        extensions: [\\"azv\\"]
      },
      \\"image/vnd.cns.inf2\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.dece.graphic\\": {
        source: \\"iana\\",
        extensions: [\\"uvi\\", \\"uvvi\\", \\"uvg\\", \\"uvvg\\"]
      },
      \\"image/vnd.djvu\\": {
        source: \\"iana\\",
        extensions: [\\"djvu\\", \\"djv\\"]
      },
      \\"image/vnd.dvb.subtitle\\": {
        source: \\"iana\\",
        extensions: [\\"sub\\"]
      },
      \\"image/vnd.dwg\\": {
        source: \\"iana\\",
        extensions: [\\"dwg\\"]
      },
      \\"image/vnd.dxf\\": {
        source: \\"iana\\",
        extensions: [\\"dxf\\"]
      },
      \\"image/vnd.fastbidsheet\\": {
        source: \\"iana\\",
        extensions: [\\"fbs\\"]
      },
      \\"image/vnd.fpx\\": {
        source: \\"iana\\",
        extensions: [\\"fpx\\"]
      },
      \\"image/vnd.fst\\": {
        source: \\"iana\\",
        extensions: [\\"fst\\"]
      },
      \\"image/vnd.fujixerox.edmics-mmr\\": {
        source: \\"iana\\",
        extensions: [\\"mmr\\"]
      },
      \\"image/vnd.fujixerox.edmics-rlc\\": {
        source: \\"iana\\",
        extensions: [\\"rlc\\"]
      },
      \\"image/vnd.globalgraphics.pgb\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.microsoft.icon\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"ico\\"]
      },
      \\"image/vnd.mix\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.mozilla.apng\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.ms-dds\\": {
        compressible: true,
        extensions: [\\"dds\\"]
      },
      \\"image/vnd.ms-modi\\": {
        source: \\"iana\\",
        extensions: [\\"mdi\\"]
      },
      \\"image/vnd.ms-photo\\": {
        source: \\"apache\\",
        extensions: [\\"wdp\\"]
      },
      \\"image/vnd.net-fpx\\": {
        source: \\"iana\\",
        extensions: [\\"npx\\"]
      },
      \\"image/vnd.pco.b16\\": {
        source: \\"iana\\",
        extensions: [\\"b16\\"]
      },
      \\"image/vnd.radiance\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealed.png\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealedmedia.softseal.gif\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.sealedmedia.softseal.jpg\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.svf\\": {
        source: \\"iana\\"
      },
      \\"image/vnd.tencent.tap\\": {
        source: \\"iana\\",
        extensions: [\\"tap\\"]
      },
      \\"image/vnd.valve.source.texture\\": {
        source: \\"iana\\",
        extensions: [\\"vtf\\"]
      },
      \\"image/vnd.wap.wbmp\\": {
        source: \\"iana\\",
        extensions: [\\"wbmp\\"]
      },
      \\"image/vnd.xiff\\": {
        source: \\"iana\\",
        extensions: [\\"xif\\"]
      },
      \\"image/vnd.zbrush.pcx\\": {
        source: \\"iana\\",
        extensions: [\\"pcx\\"]
      },
      \\"image/webp\\": {
        source: \\"apache\\",
        extensions: [\\"webp\\"]
      },
      \\"image/wmf\\": {
        source: \\"iana\\",
        extensions: [\\"wmf\\"]
      },
      \\"image/x-3ds\\": {
        source: \\"apache\\",
        extensions: [\\"3ds\\"]
      },
      \\"image/x-cmu-raster\\": {
        source: \\"apache\\",
        extensions: [\\"ras\\"]
      },
      \\"image/x-cmx\\": {
        source: \\"apache\\",
        extensions: [\\"cmx\\"]
      },
      \\"image/x-freehand\\": {
        source: \\"apache\\",
        extensions: [\\"fh\\", \\"fhc\\", \\"fh4\\", \\"fh5\\", \\"fh7\\"]
      },
      \\"image/x-icon\\": {
        source: \\"apache\\",
        compressible: true,
        extensions: [\\"ico\\"]
      },
      \\"image/x-jng\\": {
        source: \\"nginx\\",
        extensions: [\\"jng\\"]
      },
      \\"image/x-mrsid-image\\": {
        source: \\"apache\\",
        extensions: [\\"sid\\"]
      },
      \\"image/x-ms-bmp\\": {
        source: \\"nginx\\",
        compressible: true,
        extensions: [\\"bmp\\"]
      },
      \\"image/x-pcx\\": {
        source: \\"apache\\",
        extensions: [\\"pcx\\"]
      },
      \\"image/x-pict\\": {
        source: \\"apache\\",
        extensions: [\\"pic\\", \\"pct\\"]
      },
      \\"image/x-portable-anymap\\": {
        source: \\"apache\\",
        extensions: [\\"pnm\\"]
      },
      \\"image/x-portable-bitmap\\": {
        source: \\"apache\\",
        extensions: [\\"pbm\\"]
      },
      \\"image/x-portable-graymap\\": {
        source: \\"apache\\",
        extensions: [\\"pgm\\"]
      },
      \\"image/x-portable-pixmap\\": {
        source: \\"apache\\",
        extensions: [\\"ppm\\"]
      },
      \\"image/x-rgb\\": {
        source: \\"apache\\",
        extensions: [\\"rgb\\"]
      },
      \\"image/x-tga\\": {
        source: \\"apache\\",
        extensions: [\\"tga\\"]
      },
      \\"image/x-xbitmap\\": {
        source: \\"apache\\",
        extensions: [\\"xbm\\"]
      },
      \\"image/x-xcf\\": {
        compressible: false
      },
      \\"image/x-xpixmap\\": {
        source: \\"apache\\",
        extensions: [\\"xpm\\"]
      },
      \\"image/x-xwindowdump\\": {
        source: \\"apache\\",
        extensions: [\\"xwd\\"]
      },
      \\"message/cpim\\": {
        source: \\"iana\\"
      },
      \\"message/delivery-status\\": {
        source: \\"iana\\"
      },
      \\"message/disposition-notification\\": {
        source: \\"iana\\",
        extensions: [
          \\"disposition-notification\\"
        ]
      },
      \\"message/external-body\\": {
        source: \\"iana\\"
      },
      \\"message/feedback-report\\": {
        source: \\"iana\\"
      },
      \\"message/global\\": {
        source: \\"iana\\",
        extensions: [\\"u8msg\\"]
      },
      \\"message/global-delivery-status\\": {
        source: \\"iana\\",
        extensions: [\\"u8dsn\\"]
      },
      \\"message/global-disposition-notification\\": {
        source: \\"iana\\",
        extensions: [\\"u8mdn\\"]
      },
      \\"message/global-headers\\": {
        source: \\"iana\\",
        extensions: [\\"u8hdr\\"]
      },
      \\"message/http\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"message/imdn+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"message/news\\": {
        source: \\"iana\\"
      },
      \\"message/partial\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"message/rfc822\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"eml\\", \\"mime\\"]
      },
      \\"message/s-http\\": {
        source: \\"iana\\"
      },
      \\"message/sip\\": {
        source: \\"iana\\"
      },
      \\"message/sipfrag\\": {
        source: \\"iana\\"
      },
      \\"message/tracking-status\\": {
        source: \\"iana\\"
      },
      \\"message/vnd.si.simp\\": {
        source: \\"iana\\"
      },
      \\"message/vnd.wfa.wsc\\": {
        source: \\"iana\\",
        extensions: [\\"wsc\\"]
      },
      \\"model/3mf\\": {
        source: \\"iana\\",
        extensions: [\\"3mf\\"]
      },
      \\"model/e57\\": {
        source: \\"iana\\"
      },
      \\"model/gltf+json\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"gltf\\"]
      },
      \\"model/gltf-binary\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"glb\\"]
      },
      \\"model/iges\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"igs\\", \\"iges\\"]
      },
      \\"model/mesh\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"msh\\", \\"mesh\\", \\"silo\\"]
      },
      \\"model/mtl\\": {
        source: \\"iana\\",
        extensions: [\\"mtl\\"]
      },
      \\"model/obj\\": {
        source: \\"iana\\",
        extensions: [\\"obj\\"]
      },
      \\"model/step\\": {
        source: \\"iana\\"
      },
      \\"model/step+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"stpx\\"]
      },
      \\"model/step+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"stpz\\"]
      },
      \\"model/step-xml+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"stpxz\\"]
      },
      \\"model/stl\\": {
        source: \\"iana\\",
        extensions: [\\"stl\\"]
      },
      \\"model/vnd.collada+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"dae\\"]
      },
      \\"model/vnd.dwf\\": {
        source: \\"iana\\",
        extensions: [\\"dwf\\"]
      },
      \\"model/vnd.flatland.3dml\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.gdl\\": {
        source: \\"iana\\",
        extensions: [\\"gdl\\"]
      },
      \\"model/vnd.gs-gdl\\": {
        source: \\"apache\\"
      },
      \\"model/vnd.gs.gdl\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.gtw\\": {
        source: \\"iana\\",
        extensions: [\\"gtw\\"]
      },
      \\"model/vnd.moml+xml\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"model/vnd.mts\\": {
        source: \\"iana\\",
        extensions: [\\"mts\\"]
      },
      \\"model/vnd.opengex\\": {
        source: \\"iana\\",
        extensions: [\\"ogex\\"]
      },
      \\"model/vnd.parasolid.transmit.binary\\": {
        source: \\"iana\\",
        extensions: [\\"x_b\\"]
      },
      \\"model/vnd.parasolid.transmit.text\\": {
        source: \\"iana\\",
        extensions: [\\"x_t\\"]
      },
      \\"model/vnd.pytha.pyox\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.rosette.annotated-data-model\\": {
        source: \\"iana\\"
      },
      \\"model/vnd.sap.vds\\": {
        source: \\"iana\\",
        extensions: [\\"vds\\"]
      },
      \\"model/vnd.usdz+zip\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"usdz\\"]
      },
      \\"model/vnd.valve.source.compiled-map\\": {
        source: \\"iana\\",
        extensions: [\\"bsp\\"]
      },
      \\"model/vnd.vtu\\": {
        source: \\"iana\\",
        extensions: [\\"vtu\\"]
      },
      \\"model/vrml\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"wrl\\", \\"vrml\\"]
      },
      \\"model/x3d+binary\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"x3db\\", \\"x3dbz\\"]
      },
      \\"model/x3d+fastinfoset\\": {
        source: \\"iana\\",
        extensions: [\\"x3db\\"]
      },
      \\"model/x3d+vrml\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"x3dv\\", \\"x3dvz\\"]
      },
      \\"model/x3d+xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"x3d\\", \\"x3dz\\"]
      },
      \\"model/x3d-vrml\\": {
        source: \\"iana\\",
        extensions: [\\"x3dv\\"]
      },
      \\"multipart/alternative\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/appledouble\\": {
        source: \\"iana\\"
      },
      \\"multipart/byteranges\\": {
        source: \\"iana\\"
      },
      \\"multipart/digest\\": {
        source: \\"iana\\"
      },
      \\"multipart/encrypted\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/form-data\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/header-set\\": {
        source: \\"iana\\"
      },
      \\"multipart/mixed\\": {
        source: \\"iana\\"
      },
      \\"multipart/multilingual\\": {
        source: \\"iana\\"
      },
      \\"multipart/parallel\\": {
        source: \\"iana\\"
      },
      \\"multipart/related\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/report\\": {
        source: \\"iana\\"
      },
      \\"multipart/signed\\": {
        source: \\"iana\\",
        compressible: false
      },
      \\"multipart/vnd.bint.med-plus\\": {
        source: \\"iana\\"
      },
      \\"multipart/voice-message\\": {
        source: \\"iana\\"
      },
      \\"multipart/x-mixed-replace\\": {
        source: \\"iana\\"
      },
      \\"text/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"text/cache-manifest\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"appcache\\", \\"manifest\\"]
      },
      \\"text/calendar\\": {
        source: \\"iana\\",
        extensions: [\\"ics\\", \\"ifb\\"]
      },
      \\"text/calender\\": {
        compressible: true
      },
      \\"text/cmd\\": {
        compressible: true
      },
      \\"text/coffeescript\\": {
        extensions: [\\"coffee\\", \\"litcoffee\\"]
      },
      \\"text/cql\\": {
        source: \\"iana\\"
      },
      \\"text/cql-expression\\": {
        source: \\"iana\\"
      },
      \\"text/cql-identifier\\": {
        source: \\"iana\\"
      },
      \\"text/css\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"css\\"]
      },
      \\"text/csv\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"csv\\"]
      },
      \\"text/csv-schema\\": {
        source: \\"iana\\"
      },
      \\"text/directory\\": {
        source: \\"iana\\"
      },
      \\"text/dns\\": {
        source: \\"iana\\"
      },
      \\"text/ecmascript\\": {
        source: \\"iana\\"
      },
      \\"text/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"text/enriched\\": {
        source: \\"iana\\"
      },
      \\"text/fhirpath\\": {
        source: \\"iana\\"
      },
      \\"text/flexfec\\": {
        source: \\"iana\\"
      },
      \\"text/fwdred\\": {
        source: \\"iana\\"
      },
      \\"text/gff3\\": {
        source: \\"iana\\"
      },
      \\"text/grammar-ref-list\\": {
        source: \\"iana\\"
      },
      \\"text/html\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"html\\", \\"htm\\", \\"shtml\\"]
      },
      \\"text/jade\\": {
        extensions: [\\"jade\\"]
      },
      \\"text/javascript\\": {
        source: \\"iana\\",
        compressible: true
      },
      \\"text/jcr-cnd\\": {
        source: \\"iana\\"
      },
      \\"text/jsx\\": {
        compressible: true,
        extensions: [\\"jsx\\"]
      },
      \\"text/less\\": {
        compressible: true,
        extensions: [\\"less\\"]
      },
      \\"text/markdown\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"markdown\\", \\"md\\"]
      },
      \\"text/mathml\\": {
        source: \\"nginx\\",
        extensions: [\\"mml\\"]
      },
      \\"text/mdx\\": {
        compressible: true,
        extensions: [\\"mdx\\"]
      },
      \\"text/mizar\\": {
        source: \\"iana\\"
      },
      \\"text/n3\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"n3\\"]
      },
      \\"text/parameters\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/parityfec\\": {
        source: \\"iana\\"
      },
      \\"text/plain\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"txt\\", \\"text\\", \\"conf\\", \\"def\\", \\"list\\", \\"log\\", \\"in\\", \\"ini\\"]
      },
      \\"text/provenance-notation\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/prs.fallenstein.rst\\": {
        source: \\"iana\\"
      },
      \\"text/prs.lines.tag\\": {
        source: \\"iana\\",
        extensions: [\\"dsc\\"]
      },
      \\"text/prs.prop.logic\\": {
        source: \\"iana\\"
      },
      \\"text/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"text/red\\": {
        source: \\"iana\\"
      },
      \\"text/rfc822-headers\\": {
        source: \\"iana\\"
      },
      \\"text/richtext\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtx\\"]
      },
      \\"text/rtf\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"rtf\\"]
      },
      \\"text/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"text/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"text/rtx\\": {
        source: \\"iana\\"
      },
      \\"text/sgml\\": {
        source: \\"iana\\",
        extensions: [\\"sgml\\", \\"sgm\\"]
      },
      \\"text/shaclc\\": {
        source: \\"iana\\"
      },
      \\"text/shex\\": {
        source: \\"iana\\",
        extensions: [\\"shex\\"]
      },
      \\"text/slim\\": {
        extensions: [\\"slim\\", \\"slm\\"]
      },
      \\"text/spdx\\": {
        source: \\"iana\\",
        extensions: [\\"spdx\\"]
      },
      \\"text/strings\\": {
        source: \\"iana\\"
      },
      \\"text/stylus\\": {
        extensions: [\\"stylus\\", \\"styl\\"]
      },
      \\"text/t140\\": {
        source: \\"iana\\"
      },
      \\"text/tab-separated-values\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"tsv\\"]
      },
      \\"text/troff\\": {
        source: \\"iana\\",
        extensions: [\\"t\\", \\"tr\\", \\"roff\\", \\"man\\", \\"me\\", \\"ms\\"]
      },
      \\"text/turtle\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"ttl\\"]
      },
      \\"text/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"text/uri-list\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"uri\\", \\"uris\\", \\"urls\\"]
      },
      \\"text/vcard\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"vcard\\"]
      },
      \\"text/vnd.a\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.abc\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.ascii-art\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.curl\\": {
        source: \\"iana\\",
        extensions: [\\"curl\\"]
      },
      \\"text/vnd.curl.dcurl\\": {
        source: \\"apache\\",
        extensions: [\\"dcurl\\"]
      },
      \\"text/vnd.curl.mcurl\\": {
        source: \\"apache\\",
        extensions: [\\"mcurl\\"]
      },
      \\"text/vnd.curl.scurl\\": {
        source: \\"apache\\",
        extensions: [\\"scurl\\"]
      },
      \\"text/vnd.debian.copyright\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.dmclientscript\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.dvb.subtitle\\": {
        source: \\"iana\\",
        extensions: [\\"sub\\"]
      },
      \\"text/vnd.esmertec.theme-descriptor\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.familysearch.gedcom\\": {
        source: \\"iana\\",
        extensions: [\\"ged\\"]
      },
      \\"text/vnd.ficlab.flt\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.fly\\": {
        source: \\"iana\\",
        extensions: [\\"fly\\"]
      },
      \\"text/vnd.fmi.flexstor\\": {
        source: \\"iana\\",
        extensions: [\\"flx\\"]
      },
      \\"text/vnd.gml\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.graphviz\\": {
        source: \\"iana\\",
        extensions: [\\"gv\\"]
      },
      \\"text/vnd.hans\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.hgl\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.in3d.3dml\\": {
        source: \\"iana\\",
        extensions: [\\"3dml\\"]
      },
      \\"text/vnd.in3d.spot\\": {
        source: \\"iana\\",
        extensions: [\\"spot\\"]
      },
      \\"text/vnd.iptc.newsml\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.iptc.nitf\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.latex-z\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.motorola.reflex\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.ms-mediapackage\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.net2phone.commcenter.command\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.radisys.msml-basic-layout\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.senx.warpscript\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.si.uricatalogue\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.sosi\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.sun.j2me.app-descriptor\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        extensions: [\\"jad\\"]
      },
      \\"text/vnd.trolltech.linguist\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\"
      },
      \\"text/vnd.wap.si\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.wap.sl\\": {
        source: \\"iana\\"
      },
      \\"text/vnd.wap.wml\\": {
        source: \\"iana\\",
        extensions: [\\"wml\\"]
      },
      \\"text/vnd.wap.wmlscript\\": {
        source: \\"iana\\",
        extensions: [\\"wmls\\"]
      },
      \\"text/vtt\\": {
        source: \\"iana\\",
        charset: \\"UTF-8\\",
        compressible: true,
        extensions: [\\"vtt\\"]
      },
      \\"text/x-asm\\": {
        source: \\"apache\\",
        extensions: [\\"s\\", \\"asm\\"]
      },
      \\"text/x-c\\": {
        source: \\"apache\\",
        extensions: [\\"c\\", \\"cc\\", \\"cxx\\", \\"cpp\\", \\"h\\", \\"hh\\", \\"dic\\"]
      },
      \\"text/x-component\\": {
        source: \\"nginx\\",
        extensions: [\\"htc\\"]
      },
      \\"text/x-fortran\\": {
        source: \\"apache\\",
        extensions: [\\"f\\", \\"for\\", \\"f77\\", \\"f90\\"]
      },
      \\"text/x-gwt-rpc\\": {
        compressible: true
      },
      \\"text/x-handlebars-template\\": {
        extensions: [\\"hbs\\"]
      },
      \\"text/x-java-source\\": {
        source: \\"apache\\",
        extensions: [\\"java\\"]
      },
      \\"text/x-jquery-tmpl\\": {
        compressible: true
      },
      \\"text/x-lua\\": {
        extensions: [\\"lua\\"]
      },
      \\"text/x-markdown\\": {
        compressible: true,
        extensions: [\\"mkd\\"]
      },
      \\"text/x-nfo\\": {
        source: \\"apache\\",
        extensions: [\\"nfo\\"]
      },
      \\"text/x-opml\\": {
        source: \\"apache\\",
        extensions: [\\"opml\\"]
      },
      \\"text/x-org\\": {
        compressible: true,
        extensions: [\\"org\\"]
      },
      \\"text/x-pascal\\": {
        source: \\"apache\\",
        extensions: [\\"p\\", \\"pas\\"]
      },
      \\"text/x-processing\\": {
        compressible: true,
        extensions: [\\"pde\\"]
      },
      \\"text/x-sass\\": {
        extensions: [\\"sass\\"]
      },
      \\"text/x-scss\\": {
        extensions: [\\"scss\\"]
      },
      \\"text/x-setext\\": {
        source: \\"apache\\",
        extensions: [\\"etx\\"]
      },
      \\"text/x-sfv\\": {
        source: \\"apache\\",
        extensions: [\\"sfv\\"]
      },
      \\"text/x-suse-ymp\\": {
        compressible: true,
        extensions: [\\"ymp\\"]
      },
      \\"text/x-uuencode\\": {
        source: \\"apache\\",
        extensions: [\\"uu\\"]
      },
      \\"text/x-vcalendar\\": {
        source: \\"apache\\",
        extensions: [\\"vcs\\"]
      },
      \\"text/x-vcard\\": {
        source: \\"apache\\",
        extensions: [\\"vcf\\"]
      },
      \\"text/xml\\": {
        source: \\"iana\\",
        compressible: true,
        extensions: [\\"xml\\"]
      },
      \\"text/xml-external-parsed-entity\\": {
        source: \\"iana\\"
      },
      \\"text/yaml\\": {
        compressible: true,
        extensions: [\\"yaml\\", \\"yml\\"]
      },
      \\"video/1d-interleaved-parityfec\\": {
        source: \\"iana\\"
      },
      \\"video/3gpp\\": {
        source: \\"iana\\",
        extensions: [\\"3gp\\", \\"3gpp\\"]
      },
      \\"video/3gpp-tt\\": {
        source: \\"iana\\"
      },
      \\"video/3gpp2\\": {
        source: \\"iana\\",
        extensions: [\\"3g2\\"]
      },
      \\"video/av1\\": {
        source: \\"iana\\"
      },
      \\"video/bmpeg\\": {
        source: \\"iana\\"
      },
      \\"video/bt656\\": {
        source: \\"iana\\"
      },
      \\"video/celb\\": {
        source: \\"iana\\"
      },
      \\"video/dv\\": {
        source: \\"iana\\"
      },
      \\"video/encaprtp\\": {
        source: \\"iana\\"
      },
      \\"video/ffv1\\": {
        source: \\"iana\\"
      },
      \\"video/flexfec\\": {
        source: \\"iana\\"
      },
      \\"video/h261\\": {
        source: \\"iana\\",
        extensions: [\\"h261\\"]
      },
      \\"video/h263\\": {
        source: \\"iana\\",
        extensions: [\\"h263\\"]
      },
      \\"video/h263-1998\\": {
        source: \\"iana\\"
      },
      \\"video/h263-2000\\": {
        source: \\"iana\\"
      },
      \\"video/h264\\": {
        source: \\"iana\\",
        extensions: [\\"h264\\"]
      },
      \\"video/h264-rcdo\\": {
        source: \\"iana\\"
      },
      \\"video/h264-svc\\": {
        source: \\"iana\\"
      },
      \\"video/h265\\": {
        source: \\"iana\\"
      },
      \\"video/iso.segment\\": {
        source: \\"iana\\",
        extensions: [\\"m4s\\"]
      },
      \\"video/jpeg\\": {
        source: \\"iana\\",
        extensions: [\\"jpgv\\"]
      },
      \\"video/jpeg2000\\": {
        source: \\"iana\\"
      },
      \\"video/jpm\\": {
        source: \\"apache\\",
        extensions: [\\"jpm\\", \\"jpgm\\"]
      },
      \\"video/jxsv\\": {
        source: \\"iana\\"
      },
      \\"video/mj2\\": {
        source: \\"iana\\",
        extensions: [\\"mj2\\", \\"mjp2\\"]
      },
      \\"video/mp1s\\": {
        source: \\"iana\\"
      },
      \\"video/mp2p\\": {
        source: \\"iana\\"
      },
      \\"video/mp2t\\": {
        source: \\"iana\\",
        extensions: [\\"ts\\"]
      },
      \\"video/mp4\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mp4\\", \\"mp4v\\", \\"mpg4\\"]
      },
      \\"video/mp4v-es\\": {
        source: \\"iana\\"
      },
      \\"video/mpeg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"mpeg\\", \\"mpg\\", \\"mpe\\", \\"m1v\\", \\"m2v\\"]
      },
      \\"video/mpeg4-generic\\": {
        source: \\"iana\\"
      },
      \\"video/mpv\\": {
        source: \\"iana\\"
      },
      \\"video/nv\\": {
        source: \\"iana\\"
      },
      \\"video/ogg\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"ogv\\"]
      },
      \\"video/parityfec\\": {
        source: \\"iana\\"
      },
      \\"video/pointer\\": {
        source: \\"iana\\"
      },
      \\"video/quicktime\\": {
        source: \\"iana\\",
        compressible: false,
        extensions: [\\"qt\\", \\"mov\\"]
      },
      \\"video/raptorfec\\": {
        source: \\"iana\\"
      },
      \\"video/raw\\": {
        source: \\"iana\\"
      },
      \\"video/rtp-enc-aescm128\\": {
        source: \\"iana\\"
      },
      \\"video/rtploopback\\": {
        source: \\"iana\\"
      },
      \\"video/rtx\\": {
        source: \\"iana\\"
      },
      \\"video/scip\\": {
        source: \\"iana\\"
      },
      \\"video/smpte291\\": {
        source: \\"iana\\"
      },
      \\"video/smpte292m\\": {
        source: \\"iana\\"
      },
      \\"video/ulpfec\\": {
        source: \\"iana\\"
      },
      \\"video/vc1\\": {
        source: \\"iana\\"
      },
      \\"video/vc2\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.cctv\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dece.hd\\": {
        source: \\"iana\\",
        extensions: [\\"uvh\\", \\"uvvh\\"]
      },
      \\"video/vnd.dece.mobile\\": {
        source: \\"iana\\",
        extensions: [\\"uvm\\", \\"uvvm\\"]
      },
      \\"video/vnd.dece.mp4\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dece.pd\\": {
        source: \\"iana\\",
        extensions: [\\"uvp\\", \\"uvvp\\"]
      },
      \\"video/vnd.dece.sd\\": {
        source: \\"iana\\",
        extensions: [\\"uvs\\", \\"uvvs\\"]
      },
      \\"video/vnd.dece.video\\": {
        source: \\"iana\\",
        extensions: [\\"uvv\\", \\"uvvv\\"]
      },
      \\"video/vnd.directv.mpeg\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.directv.mpeg-tts\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dlna.mpeg-tts\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.dvb.file\\": {
        source: \\"iana\\",
        extensions: [\\"dvb\\"]
      },
      \\"video/vnd.fvt\\": {
        source: \\"iana\\",
        extensions: [\\"fvt\\"]
      },
      \\"video/vnd.hns.video\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.1dparityfec-1010\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.1dparityfec-2005\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.2dparityfec-1010\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.2dparityfec-2005\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.ttsavc\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.iptvforum.ttsmpeg2\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.motorola.video\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.motorola.videop\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.mpegurl\\": {
        source: \\"iana\\",
        extensions: [\\"mxu\\", \\"m4u\\"]
      },
      \\"video/vnd.ms-playready.media.pyv\\": {
        source: \\"iana\\",
        extensions: [\\"pyv\\"]
      },
      \\"video/vnd.nokia.interleaved-multimedia\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.nokia.mp4vr\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.nokia.videovoip\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.objectvideo\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.radgamettools.bink\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.radgamettools.smacker\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.mpeg1\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.mpeg4\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealed.swf\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.sealedmedia.softseal.mov\\": {
        source: \\"iana\\"
      },
      \\"video/vnd.uvvu.mp4\\": {
        source: \\"iana\\",
        extensions: [\\"uvu\\", \\"uvvu\\"]
      },
      \\"video/vnd.vivo\\": {
        source: \\"iana\\",
        extensions: [\\"viv\\"]
      },
      \\"video/vnd.youtube.yt\\": {
        source: \\"iana\\"
      },
      \\"video/vp8\\": {
        source: \\"iana\\"
      },
      \\"video/vp9\\": {
        source: \\"iana\\"
      },
      \\"video/webm\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"webm\\"]
      },
      \\"video/x-f4v\\": {
        source: \\"apache\\",
        extensions: [\\"f4v\\"]
      },
      \\"video/x-fli\\": {
        source: \\"apache\\",
        extensions: [\\"fli\\"]
      },
      \\"video/x-flv\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"flv\\"]
      },
      \\"video/x-m4v\\": {
        source: \\"apache\\",
        extensions: [\\"m4v\\"]
      },
      \\"video/x-matroska\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"mkv\\", \\"mk3d\\", \\"mks\\"]
      },
      \\"video/x-mng\\": {
        source: \\"apache\\",
        extensions: [\\"mng\\"]
      },
      \\"video/x-ms-asf\\": {
        source: \\"apache\\",
        extensions: [\\"asf\\", \\"asx\\"]
      },
      \\"video/x-ms-vob\\": {
        source: \\"apache\\",
        extensions: [\\"vob\\"]
      },
      \\"video/x-ms-wm\\": {
        source: \\"apache\\",
        extensions: [\\"wm\\"]
      },
      \\"video/x-ms-wmv\\": {
        source: \\"apache\\",
        compressible: false,
        extensions: [\\"wmv\\"]
      },
      \\"video/x-ms-wmx\\": {
        source: \\"apache\\",
        extensions: [\\"wmx\\"]
      },
      \\"video/x-ms-wvx\\": {
        source: \\"apache\\",
        extensions: [\\"wvx\\"]
      },
      \\"video/x-msvideo\\": {
        source: \\"apache\\",
        extensions: [\\"avi\\"]
      },
      \\"video/x-sgi-movie\\": {
        source: \\"apache\\",
        extensions: [\\"movie\\"]
      },
      \\"video/x-smv\\": {
        source: \\"apache\\",
        extensions: [\\"smv\\"]
      },
      \\"x-conference/x-cooltalk\\": {
        source: \\"apache\\",
        extensions: [\\"ice\\"]
      },
      \\"x-shader/x-fragment\\": {
        compressible: true
      },
      \\"x-shader/x-vertex\\": {
        compressible: true
      }
    };
  }
});

// .yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  \\".yarn/cache/mime-db-npm-1.52.0-b5371d6fd2-0d99a03585.zip/node_modules/mime-db/index.js\\"(exports, module2) {
    module2.exports = require_db();
  }
});

// .yarn/cache/mime-types-npm-2.1.35-dd9ea9f3e2-89a5b7f1de.zip/node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  \\".yarn/cache/mime-types-npm-2.1.35-dd9ea9f3e2-89a5b7f1de.zip/node_modules/mime-types/index.js\\"(exports) {
    \\"use strict\\";
    var db = require_mime_db();
    var extname = require(\\"path\\").extname;
    var EXTRACT_TYPE_REGEXP = /^\\\\s*([^;\\\\s]*)(?:;|\\\\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\\\\//i;
    exports.charset = charset;
    exports.charsets = { lookup: charset };
    exports.contentType = contentType;
    exports.extension = extension;
    exports.extensions = /* @__PURE__ */ Object.create(null);
    exports.lookup = lookup;
    exports.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports.extensions, exports.types);
    function charset(type) {
      if (!type || typeof type !== \\"string\\") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return \\"UTF-8\\";
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== \\"string\\") {
        return false;
      }
      var mime = str.indexOf(\\"/\\") === -1 ? exports.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf(\\"charset\\") === -1) {
        var charset2 = exports.charset(mime);
        if (charset2)
          mime += \\"; charset=\\" + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== \\"string\\") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== \\"string\\") {
        return false;
      }
      var extension2 = extname(\\"x.\\" + path).toLowerCase().substr(1);
      if (!extension2) {
        return false;
      }
      return exports.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = [\\"nginx\\", \\"apache\\", void 0, \\"iana\\"];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to = preference.indexOf(mime.source);
            if (types[extension2] !== \\"application/octet-stream\\" && (from > to || from === to && types[extension2].substr(0, 12) === \\"application/\\")) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/defer.js\\"(exports, module2) {
    module2.exports = defer;
    function defer(fn) {
      var nextTick = typeof setImmediate == \\"function\\" ? setImmediate : typeof process == \\"object\\" && typeof process.nextTick == \\"function\\" ? process.nextTick : null;
      if (nextTick) {
        nextTick(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/async.js\\"(exports, module2) {
    var defer = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer(function() {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/abort.js\\"(exports, module2) {
    module2.exports = abort;
    function abort(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key) {
      if (typeof this.jobs[key] == \\"function\\") {
        this.jobs[key]();
      }
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/iterate.js\\"(exports, module2) {
    var async = require_async();
    var abort = require_abort();
    module2.exports = iterate;
    function iterate(list2, iterator, state, callback) {
      var key = state[\\"keyedList\\"] ? state[\\"keyedList\\"][state.index] : state.index;
      state.jobs[key] = runJob(iterator, key, list2[key], function(error, output) {
        if (!(key in state.jobs)) {
          return;
        }
        delete state.jobs[key];
        if (error) {
          abort(state);
        } else {
          state.results[key] = output;
        }
        callback(error, state.results);
      });
    }
    function runJob(iterator, key, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key, async(callback));
      }
      return aborter;
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/state.js\\"(exports, module2) {
    module2.exports = state;
    function state(list2, sortMethod) {
      var isNamedList = !Array.isArray(list2), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list2) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list2).length : list2.length
      };
      if (sortMethod) {
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
          return sortMethod(list2[a], list2[b]);
        });
      }
      return initState;
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/lib/terminator.js\\"(exports, module2) {
    var abort = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort(this);
      async(callback)(null, this.results);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/parallel.js\\"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list2, iterator, callback) {
      var state = initState(list2);
      while (state.index < (state[\\"keyedList\\"] || list2).length) {
        iterate(list2, iterator, state, function(error, result) {
          if (error) {
            callback(error, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serialOrdered.js\\"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list2, iterator, sortMethod, callback) {
      var state = initState(list2, sortMethod);
      iterate(list2, iterator, state, function iteratorHandler(error, result) {
        if (error) {
          callback(error, result);
          return;
        }
        state.index++;
        if (state.index < (state[\\"keyedList\\"] || list2).length) {
          iterate(list2, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serial.js
var require_serial = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/serial.js\\"(exports, module2) {
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list2, iterator, callback) {
      return serialOrdered(list2, iterator, null, callback);
    }
  }
});

// .yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  \\".yarn/cache/asynckit-npm-0.4.0-c718858525-7b78c451df.zip/node_modules/asynckit/index.js\\"(exports, module2) {
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// .yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  \\".yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/populate.js\\"(exports, module2) {
    module2.exports = function(dst, src) {
      Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  }
});

// .yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  \\".yarn/cache/form-data-npm-4.0.0-916facec2d-01135bf867.zip/node_modules/form-data/lib/form_data.js\\"(exports, module2) {
    var CombinedStream = require_combined_stream();
    var util = require(\\"util\\");
    var path = require(\\"path\\");
    var http = require(\\"http\\");
    var https = require(\\"https\\");
    var parseUrl = require(\\"url\\").parse;
    var fs = require(\\"fs\\");
    var Stream = require(\\"stream\\").Stream;
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var populate = require_populate();
    module2.exports = FormData2;
    util.inherits(FormData2, CombinedStream);
    function FormData2(options) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options = options || {};
      for (var option in options) {
        this[option] = options[option];
      }
    }
    FormData2.LINE_BREAK = \\"\\\\r\\\\n\\";
    FormData2.DEFAULT_CONTENT_TYPE = \\"application/octet-stream\\";
    FormData2.prototype.append = function(field, value, options) {
      options = options || {};
      if (typeof options == \\"string\\") {
        options = { filename: options };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == \\"number\\") {
        value = \\"\\" + value;
      }
      if (util.isArray(value)) {
        this._error(new Error(\\"Arrays are not supported.\\"));
        return;
      }
      var header = this._multiPartHeader(field, value, options);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options);
    };
    FormData2.prototype._trackLength = function(header, value, options) {
      var valueLength = 0;
      if (options.knownLength != null) {
        valueLength += +options.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === \\"string\\") {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength += Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (!value || !value.path && !(value.readable && value.hasOwnProperty(\\"httpVersion\\")) && !(value instanceof Stream)) {
        return;
      }
      if (!options.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function(value, callback) {
      if (value.hasOwnProperty(\\"fd\\")) {
        if (value.end != void 0 && value.end != Infinity && value.start != void 0) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs.stat(value.path, function(err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty(\\"httpVersion\\")) {
        callback(null, +value.headers[\\"content-length\\"]);
      } else if (value.hasOwnProperty(\\"httpModule\\")) {
        value.on(\\"response\\", function(response) {
          value.pause();
          callback(null, +response.headers[\\"content-length\\"]);
        });
        value.resume();
      } else {
        callback(\\"Unknown stream\\");
      }
    };
    FormData2.prototype._multiPartHeader = function(field, value, options) {
      if (typeof options.header == \\"string\\") {
        return options.header;
      }
      var contentDisposition = this._getContentDisposition(value, options);
      var contentType = this._getContentType(value, options);
      var contents = \\"\\";
      var headers = {
        // add custom disposition as third element or keep it two elements if not
        \\"Content-Disposition\\": [\\"form-data\\", 'name=\\"' + field + '\\"'].concat(contentDisposition || []),
        // if no content type. allow it to be empty array
        \\"Content-Type\\": [].concat(contentType || [])
      };
      if (typeof options.header == \\"object\\") {
        populate(headers, options.header);
      }
      var header;
      for (var prop in headers) {
        if (!headers.hasOwnProperty(prop))
          continue;
        header = headers[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + \\": \\" + header.join(\\"; \\") + FormData2.LINE_BREAK;
        }
      }
      return \\"--\\" + this.getBoundary() + FormData2.LINE_BREAK + contents + FormData2.LINE_BREAK;
    };
    FormData2.prototype._getContentDisposition = function(value, options) {
      var filename, contentDisposition;
      if (typeof options.filepath === \\"string\\") {
        filename = path.normalize(options.filepath).replace(/\\\\\\\\/g, \\"/\\");
      } else if (options.filename || value.name || value.path) {
        filename = path.basename(options.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty(\\"httpVersion\\")) {
        filename = path.basename(value.client._httpMessage.path || \\"\\");
      }
      if (filename) {
        contentDisposition = 'filename=\\"' + filename + '\\"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function(value, options) {
      var contentType = options.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (!contentType && value.readable && value.hasOwnProperty(\\"httpVersion\\")) {
        contentType = value.headers[\\"content-type\\"];
      }
      if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
      }
      if (!contentType && typeof value == \\"object\\") {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function() {
      return function(next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function() {
      return \\"--\\" + this.getBoundary() + \\"--\\" + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function(userHeaders) {
      var header;
      var formHeaders = {
        \\"content-type\\": \\"multipart/form-data; boundary=\\" + this.getBoundary()
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function() {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function() {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== \\"function\\") {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
          }
          if (typeof this._streams[i] !== \\"string\\" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData2.LINE_BREAK)]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function() {
      var boundary = \\"--------------------------\\";
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(new Error(\\"Cannot calculate proper length in synchronous way.\\"));
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function() {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        });
        cb(null, knownLength);
      });
    };
    FormData2.prototype.submit = function(params, cb) {
      var request, options, defaults = { method: \\"post\\" };
      if (typeof params == \\"string\\") {
        params = parseUrl(params);
        options = populate({
          port: params.port,
          path: params.pathname,
          host: params.hostname,
          protocol: params.protocol
        }, defaults);
      } else {
        options = populate(params, defaults);
        if (!options.port) {
          options.port = options.protocol == \\"https:\\" ? 443 : 80;
        }
      }
      options.headers = this.getHeaders(params.headers);
      if (options.protocol == \\"https:\\") {
        request = https.request(options);
      } else {
        request = http.request(options);
      }
      this.getLength(function(err, length) {
        if (err && err !== \\"Unknown stream\\") {
          this._error(err);
          return;
        }
        if (length) {
          request.setHeader(\\"Content-Length\\", length);
        }
        this.pipe(request);
        if (cb) {
          var onResponse;
          var callback = function(error, responce) {
            request.removeListener(\\"error\\", callback);
            request.removeListener(\\"response\\", onResponse);
            return cb.call(this, error, responce);
          };
          onResponse = callback.bind(this, null);
          request.on(\\"error\\", callback);
          request.on(\\"response\\", onResponse);
        }
      }.bind(this));
      return request;
    };
    FormData2.prototype._error = function(err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit(\\"error\\", err);
      }
    };
    FormData2.prototype.toString = function() {
      return \\"[object FormData]\\";
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/env/FormData.js
var require_FormData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/env/FormData.js\\"(exports, module2) {
    module2.exports = require_form_data();
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js
var require_defaults = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/defaults/index.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var normalizeHeaderName = require_normalizeHeaderName();
    var AxiosError2 = require_AxiosError();
    var transitionalDefaults = require_transitional();
    var toFormData = require_toFormData();
    var DEFAULT_CONTENT_TYPE = {
      \\"Content-Type\\": \\"application/x-www-form-urlencoded\\"
    };
    function setContentTypeIfUnset(headers, value) {
      if (!utils.isUndefined(headers) && utils.isUndefined(headers[\\"Content-Type\\"])) {
        headers[\\"Content-Type\\"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== \\"undefined\\") {
        adapter = require_xhr();
      } else if (typeof process !== \\"undefined\\" && Object.prototype.toString.call(process) === \\"[object process]\\") {
        adapter = require_http();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder) {
      if (utils.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils.trim(rawValue);
        } catch (e) {
          if (e.name !== \\"SyntaxError\\") {
            throw e;
          }
        }
      }
      return (encoder || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: transitionalDefaults,
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers) {
        normalizeHeaderName(headers, \\"Accept\\");
        normalizeHeaderName(headers, \\"Content-Type\\");
        if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
          return data;
        }
        if (utils.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers, \\"application/x-www-form-urlencoded;charset=utf-8\\");
          return data.toString();
        }
        var isObjectPayload = utils.isObject(data);
        var contentType = headers && headers[\\"Content-Type\\"];
        var isFileList;
        if ((isFileList = utils.isFileList(data)) || isObjectPayload && contentType === \\"multipart/form-data\\") {
          var _FormData = this.env && this.env.FormData;
          return toFormData(isFileList ? { \\"files[]\\": data } : data, _FormData && new _FormData());
        } else if (isObjectPayload || contentType === \\"application/json\\") {
          setContentTypeIfUnset(headers, \\"application/json\\");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional || defaults.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === \\"json\\";
        if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === \\"SyntaxError\\") {
                throw AxiosError2.from(e, AxiosError2.ERR_BAD_RESPONSE, this, null, this.response);
              }
              throw e;
            }
          }
        }
        return data;
      }],
      /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
      timeout: 0,
      xsrfCookieName: \\"XSRF-TOKEN\\",
      xsrfHeaderName: \\"X-XSRF-TOKEN\\",
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: require_FormData()
      },
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      },
      headers: {
        common: {
          \\"Accept\\": \\"application/json, text/plain, */*\\"
        }
      }
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/transformData.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var defaults = require_defaults();
    module2.exports = function transformData(data, headers, fns) {
      var context = this || defaults;
      utils.forEach(fns, function transform2(fn) {
        data = fn.call(context, data, headers);
      });
      return data;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/isCancel.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/dispatchRequest.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults();
    var CanceledError = require_CanceledError();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
      if (config.signal && config.signal.aborted) {
        throw new CanceledError();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(
        config,
        config.data,
        config.headers,
        config.transformRequest
      );
      config.headers = utils.merge(
        config.headers.common || {},
        config.headers[config.method] || {},
        config.headers
      );
      utils.forEach(
        [\\"delete\\", \\"get\\", \\"head\\", \\"post\\", \\"put\\", \\"patch\\", \\"common\\"],
        function cleanHeaderConfig(method) {
          delete config.headers[method];
        }
      );
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response) {
        throwIfCancellationRequested(config);
        response.data = transformData.call(
          config,
          response.data,
          response.headers,
          config.transformResponse
        );
        return response;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(
              config,
              reason.response.data,
              reason.response.headers,
              config.transformResponse
            );
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/mergeConfig.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      function getMergedValue(target, source) {
        if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
          return utils.merge(target, source);
        } else if (utils.isPlainObject(source)) {
          return utils.merge({}, source);
        } else if (utils.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function valueFromConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        }
      }
      function defaultToConfig2(prop) {
        if (!utils.isUndefined(config2[prop])) {
          return getMergedValue(void 0, config2[prop]);
        } else if (!utils.isUndefined(config1[prop])) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      function mergeDirectKeys(prop) {
        if (prop in config2) {
          return getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          return getMergedValue(void 0, config1[prop]);
        }
      }
      var mergeMap = {
        \\"url\\": valueFromConfig2,
        \\"method\\": valueFromConfig2,
        \\"data\\": valueFromConfig2,
        \\"baseURL\\": defaultToConfig2,
        \\"transformRequest\\": defaultToConfig2,
        \\"transformResponse\\": defaultToConfig2,
        \\"paramsSerializer\\": defaultToConfig2,
        \\"timeout\\": defaultToConfig2,
        \\"timeoutMessage\\": defaultToConfig2,
        \\"withCredentials\\": defaultToConfig2,
        \\"adapter\\": defaultToConfig2,
        \\"responseType\\": defaultToConfig2,
        \\"xsrfCookieName\\": defaultToConfig2,
        \\"xsrfHeaderName\\": defaultToConfig2,
        \\"onUploadProgress\\": defaultToConfig2,
        \\"onDownloadProgress\\": defaultToConfig2,
        \\"decompress\\": defaultToConfig2,
        \\"maxContentLength\\": defaultToConfig2,
        \\"maxBodyLength\\": defaultToConfig2,
        \\"beforeRedirect\\": defaultToConfig2,
        \\"transport\\": defaultToConfig2,
        \\"httpAgent\\": defaultToConfig2,
        \\"httpsAgent\\": defaultToConfig2,
        \\"cancelToken\\": defaultToConfig2,
        \\"socketPath\\": defaultToConfig2,
        \\"responseEncoding\\": defaultToConfig2,
        \\"validateStatus\\": mergeDirectKeys
      };
      utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
        var merge = mergeMap[prop] || mergeDeepProperties;
        var configValue = merge(prop);
        utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
      });
      return config;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/validator.js\\"(exports, module2) {
    \\"use strict\\";
    var VERSION = require_data().version;
    var AxiosError2 = require_AxiosError();
    var validators = {};
    [\\"object\\", \\"boolean\\", \\"number\\", \\"function\\", \\"string\\", \\"symbol\\"].forEach(function(type, i) {
      validators[type] = function validator(thing) {
        return typeof thing === type || \\"a\\" + (i < 1 ? \\"n \\" : \\" \\") + type;
      };
    });
    var deprecatedWarnings = {};
    validators.transitional = function transitional(validator, version, message) {
      function formatMessage(opt, desc) {
        return \\"[Axios v\\" + VERSION + \\"] Transitional option '\\" + opt + \\"'\\" + desc + (message ? \\". \\" + message : \\"\\");
      }
      return function(value, opt, opts) {
        if (validator === false) {
          throw new AxiosError2(
            formatMessage(opt, \\" has been removed\\" + (version ? \\" in \\" + version : \\"\\")),
            AxiosError2.ERR_DEPRECATED
          );
        }
        if (version && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(
            formatMessage(
              opt,
              \\" has been deprecated since v\\" + version + \\" and will be removed in the near future\\"
            )
          );
        }
        return validator ? validator(value, opt, opts) : true;
      };
    };
    function assertOptions(options, schema, allowUnknown) {
      if (typeof options !== \\"object\\") {
        throw new AxiosError2(\\"options must be an object\\", AxiosError2.ERR_BAD_OPTION_VALUE);
      }
      var keys2 = Object.keys(options);
      var i = keys2.length;
      while (i-- > 0) {
        var opt = keys2[i];
        var validator = schema[opt];
        if (validator) {
          var value = options[opt];
          var result = value === void 0 || validator(value, opt, options);
          if (result !== true) {
            throw new AxiosError2(\\"option \\" + opt + \\" must be \\" + result, AxiosError2.ERR_BAD_OPTION_VALUE);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw new AxiosError2(\\"Unknown option \\" + opt, AxiosError2.ERR_BAD_OPTION);
        }
      }
    }
    module2.exports = {
      assertOptions,
      validators
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/core/Axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var buildURL = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var buildFullPath = require_buildFullPath();
    var validator = require_validator();
    var validators = validator.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request(configOrUrl, config) {
      if (typeof configOrUrl === \\"string\\") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = \\"get\\";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === \\"function\\" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected(error);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      var fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    };
    utils.forEach([\\"delete\\", \\"get\\", \\"head\\", \\"options\\"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils.forEach([\\"post\\", \\"put\\", \\"patch\\"], function forEachMethodWithData(method) {
      function generateHTTPMethod(isForm) {
        return function httpMethod(url, data, config) {
          return this.request(mergeConfig(config || {}, {
            method,
            headers: isForm ? {
              \\"Content-Type\\": \\"multipart/form-data\\"
            } : {},
            url,
            data
          }));
        };
      }
      Axios.prototype[method] = generateHTTPMethod();
      Axios.prototype[method + \\"Form\\"] = generateHTTPMethod(true);
    });
    module2.exports = Axios;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/cancel/CancelToken.js\\"(exports, module2) {
    \\"use strict\\";
    var CanceledError = require_CanceledError();
    function CancelToken(executor) {
      if (typeof executor !== \\"function\\") {
        throw new TypeError(\\"executor must be a function.\\");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      this.promise.then(function(cancel) {
        if (!token._listeners)
          return;
        var i;
        var l = token._listeners.length;
        for (i = 0; i < l; i++) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = function(onfulfilled) {
        var _resolve;
        var promise = new Promise(function(resolve) {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.prototype.subscribe = function subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    };
    CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      var index = this._listeners.indexOf(listener);
      if (index !== -1) {
        this._listeners.splice(index, 1);
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/spread.js\\"(exports, module2) {
    \\"use strict\\";
    module2.exports = function spread(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/helpers/isAxiosError.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    module2.exports = function isAxiosError(payload) {
      return utils.isObject(payload) && payload.isAxiosError === true;
    };
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/lib/axios.js\\"(exports, module2) {
    \\"use strict\\";
    var utils = require_utils();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils.extend(instance, Axios.prototype, context);
      utils.extend(instance, context);
      instance.create = function create(instanceConfig) {
        return createInstance(mergeConfig(defaultConfig, instanceConfig));
      };
      return instance;
    }
    var axios2 = createInstance(defaults);
    axios2.Axios = Axios;
    axios2.CanceledError = require_CanceledError();
    axios2.CancelToken = require_CancelToken();
    axios2.isCancel = require_isCancel();
    axios2.VERSION = require_data().version;
    axios2.toFormData = require_toFormData();
    axios2.AxiosError = require_AxiosError();
    axios2.Cancel = axios2.CanceledError;
    axios2.all = function all(promises) {
      return Promise.all(promises);
    };
    axios2.spread = require_spread();
    axios2.isAxiosError = require_isAxiosError();
    module2.exports = axios2;
    module2.exports.default = axios2;
  }
});

// .yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js
var require_axios2 = __commonJS({
  \\".yarn/cache/axios-npm-0.27.2-dbe3a48aea-38cb754046.zip/node_modules/axios/index.js\\"(exports, module2) {
    module2.exports = require_axios();
  }
});

// src/core/fetcher/Fetcher.ts
var import_axios;
var init_Fetcher = __esm({
  \\"src/core/fetcher/Fetcher.ts\\"() {
    \\"use strict\\";
    import_axios = __toESM(require_axios2());
  }
});

// src/core/fetcher/Supplier.ts
var init_Supplier = __esm({
  \\"src/core/fetcher/Supplier.ts\\"() {
    \\"use strict\\";
  }
});

// src/core/fetcher/index.ts
var init_fetcher = __esm({
  \\"src/core/fetcher/index.ts\\"() {
    \\"use strict\\";
    init_Fetcher();
    init_Supplier();
  }
});

// src/core/index.ts
var init_core = __esm({
  \\"src/core/index.ts\\"() {
    \\"use strict\\";
    init_schemas();
    init_fetcher();
  }
});

// src/api/resources/fiddle/client/Client.ts
var init_Client = __esm({
  \\"src/api/resources/fiddle/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
  }
});

// .yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js
var require_url_join = __commonJS({
  \\".yarn/cache/url-join-npm-4.0.1-e1f4415722-f74e868bf2.zip/node_modules/url-join/lib/url-join.js\\"(exports, module2) {
    (function(name, context, definition) {
      if (typeof module2 !== \\"undefined\\" && module2.exports)
        module2.exports = definition();
      else if (typeof define === \\"function\\" && define.amd)
        define(definition);
      else
        context[name] = definition();
    })(\\"urljoin\\", exports, function() {
      function normalize(strArray) {
        var resultArray = [];
        if (strArray.length === 0) {
          return \\"\\";
        }
        if (typeof strArray[0] !== \\"string\\") {
          throw new TypeError(\\"Url must be a string. Received \\" + strArray[0]);
        }
        if (strArray[0].match(/^[^/:]+:\\\\/*$/) && strArray.length > 1) {
          var first = strArray.shift();
          strArray[0] = first + strArray[0];
        }
        if (strArray[0].match(/^file:\\\\/\\\\/\\\\//)) {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1:///\\");
        } else {
          strArray[0] = strArray[0].replace(/^([^/:]+):\\\\/*/, \\"$1://\\");
        }
        for (var i = 0; i < strArray.length; i++) {
          var component = strArray[i];
          if (typeof component !== \\"string\\") {
            throw new TypeError(\\"Url must be a string. Received \\" + component);
          }
          if (component === \\"\\") {
            continue;
          }
          if (i > 0) {
            component = component.replace(/^[\\\\/]+/, \\"\\");
          }
          if (i < strArray.length - 1) {
            component = component.replace(/[\\\\/]+$/, \\"\\");
          } else {
            component = component.replace(/[\\\\/]+$/, \\"/\\");
          }
          resultArray.push(component);
        }
        var str = resultArray.join(\\"/\\");
        str = str.replace(/\\\\/(\\\\?|&|#[^!])/g, \\"$1\\");
        var parts = str.split(\\"?\\");
        str = parts.shift() + (parts.length > 0 ? \\"?\\" : \\"\\") + parts.join(\\"&\\");
        return str;
      }
      return function() {
        var input;
        if (typeof arguments[0] === \\"object\\") {
          input = arguments[0];
        } else {
          input = [].slice.call(arguments);
        }
        return normalize(input);
      };
    });
  }
});

// src/api/resources/health/client/Client.ts
var import_url_join;
var init_Client2 = __esm({
  \\"src/api/resources/health/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join = __toESM(require_url_join());
  }
});

// src/api/resources/remoteGen/client/Client.ts
var import_url_join2;
var init_Client3 = __esm({
  \\"src/api/resources/remoteGen/client/Client.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    import_url_join2 = __toESM(require_url_join());
    init_serialization();
  }
});

// src/Client.ts
var init_Client4 = __esm({
  \\"src/Client.ts\\"() {
    \\"use strict\\";
    init_Client();
    init_Client2();
    init_Client3();
  }
});

// src/index.ts
var init_src = __esm({
  \\"src/index.ts\\"() {
    \\"use strict\\";
    init_api();
    init_Client4();
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenJobId.ts
var RemoteGenJobId2;
var init_RemoteGenJobId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenJobId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenJobId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenJobId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts
var RemoteGenTaskId2;
var init_RemoteGenTaskId2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RemoteGenTaskId.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    RemoteGenTaskId2 = schemas_exports.string().transform({
      transform: api_exports.RemoteGenTaskId,
      untransform: (value) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts
var GeneratorIdAndVersion;
var init_GeneratorIdAndVersion2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorIdAndVersion.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorIdAndVersion = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfig.ts
var GeneratorConfig;
var init_GeneratorConfig2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfig.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfig = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      willDownloadFiles: schemas_exports.boolean(),
      outputs: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorOutputs)
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts
var GeneratorConfigV2;
var init_GeneratorConfigV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorConfigV2.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorConfigV2 = schemas_exports.object({
      id: schemas_exports.string(),
      version: schemas_exports.string(),
      customConfig: schemas_exports.unknown(),
      outputMode: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).OutputMode)
    });
  }
});

// src/serialization/resources/remoteGen/types/OutputMode.ts
var OutputMode2;
var init_OutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/OutputMode.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    OutputMode2 = schemas_exports.union(\\"type\\", {
      publish: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputMode),
      publishV2: schemas_exports.object({
        publishV2: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PublishOutputModeV2)
      }),
      downloadFiles: schemas_exports.object({}),
      github: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubOutputMode)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"publish\\":
            return api_exports.OutputMode.publish(value);
          case \\"publishV2\\":
            return api_exports.OutputMode.publishV2(value.publishV2);
          case \\"downloadFiles\\":
            return api_exports.OutputMode.downloadFiles();
          case \\"github\\":
            return api_exports.OutputMode.github(value);
          default:
            return api_exports.OutputMode._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputMode.ts
var PublishOutputMode;
var init_PublishOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    PublishOutputMode = schemas_exports.object({
      registryOverrides: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RegistryOverrides)
    });
  }
});

// src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts
var PublishOutputModeV22;
var init_PublishOutputModeV22 = __esm({
  \\"src/serialization/resources/remoteGen/types/PublishOutputModeV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PublishOutputModeV22 = schemas_exports.union(\\"type\\", {
      npmOverride: schemas_exports.object({
        npmOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional()
      }),
      mavenOverride: schemas_exports.object({
        mavenOverride: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
      }),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npmOverride\\":
            return api_exports.PublishOutputModeV2.npmOverride(value.npmOverride);
          case \\"mavenOverride\\":
            return api_exports.PublishOutputModeV2.mavenOverride(value.mavenOverride);
          case \\"postman\\":
            return api_exports.PublishOutputModeV2.postman(value);
          default:
            return api_exports.PublishOutputModeV2._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/RegistryOverrides.ts
var RegistryOverrides;
var init_RegistryOverrides2 = __esm({
  \\"src/serialization/resources/remoteGen/types/RegistryOverrides.ts\\"() {
    \\"use strict\\";
    init_core();
    RegistryOverrides = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorOutputs.ts
var GeneratorOutputs;
var init_GeneratorOutputs2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorOutputs.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorOutputs = schemas_exports.object({
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutput).optional(),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutput).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutput.ts
var NpmOutput;
var init_NpmOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutput.ts
var MavenOutput;
var init_MavenOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutput = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      username: schemas_exports.string(),
      password: schemas_exports.string(),
      coordinate: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PostmanOutput.ts
var PostmanOutput;
var init_PostmanOutput2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PostmanOutput.ts\\"() {
    \\"use strict\\";
    init_core();
    PostmanOutput = schemas_exports.object({
      apiKey: schemas_exports.string(),
      workspaceId: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubOutputMode.ts
var GithubOutputMode;
var init_GithubOutputMode2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubOutputMode.ts\\"() {
    \\"use strict\\";
    init_core();
    GithubOutputMode = schemas_exports.object({
      owner: schemas_exports.string(),
      repo: schemas_exports.string(),
      publishInfo: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GithubPublishInfo).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/GithubPublishInfo.ts
var GithubPublishInfo2;
var init_GithubPublishInfo2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GithubPublishInfo.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    GithubPublishInfo2 = schemas_exports.union(\\"type\\", {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmOutputWithOptionalToken),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenOutputWithOptionalCreds),
      postman: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PostmanOutput)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.GithubPublishInfo.npm(value);
          case \\"maven\\":
            return api_exports.GithubPublishInfo.maven(value);
          case \\"postman\\":
            return api_exports.GithubPublishInfo.postman(value);
          default:
            return api_exports.GithubPublishInfo._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts
var NpmOutputWithOptionalToken;
var init_NpmOutputWithOptionalToken2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmOutputWithOptionalToken.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmOutputWithOptionalToken = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      packageName: schemas_exports.string(),
      token: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts
var MavenOutputWithOptionalCreds;
var init_MavenOutputWithOptionalCreds2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenOutputWithOptionalCreds.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenOutputWithOptionalCreds = schemas_exports.object({
      registryUrl: schemas_exports.string(),
      coordinate: schemas_exports.string(),
      credentials: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).UsernamePassword).optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/UsernamePassword.ts
var UsernamePassword;
var init_UsernamePassword2 = __esm({
  \\"src/serialization/resources/remoteGen/types/UsernamePassword.ts\\"() {
    \\"use strict\\";
    init_core();
    UsernamePassword = schemas_exports.object({
      username: schemas_exports.string(),
      password: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/Task.ts
var Task;
var init_Task2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Task.ts\\"() {
    \\"use strict\\";
    init_core();
    Task = schemas_exports.object({
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskStatus),
      packages: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Package)),
      logs: schemas_exports.list(schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).TaskLog))
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskStatus.ts
var TaskStatus2;
var init_TaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskStatus.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    TaskStatus2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      notStarted: schemas_exports.object({}),
      running: schemas_exports.object({}),
      failed: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FailedTaskStatus),
      finished: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).FinishedTaskStatus)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"notStarted\\":
            return api_exports.TaskStatus.notStarted();
          case \\"running\\":
            return api_exports.TaskStatus.running();
          case \\"failed\\":
            return api_exports.TaskStatus.failed(value);
          case \\"finished\\":
            return api_exports.TaskStatus.finished(value);
          default:
            return api_exports.TaskStatus._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/FailedTaskStatus.ts
var FailedTaskStatus;
var init_FailedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FailedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FailedTaskStatus = schemas_exports.object({
      message: schemas_exports.string(),
      s3PreSignedReadUrl: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts
var FinishedTaskStatus;
var init_FinishedTaskStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/FinishedTaskStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    FinishedTaskStatus = schemas_exports.object({
      hasFilesToDownload: schemas_exports.boolean(),
      s3PreSignedReadUrl: schemas_exports.string(),
      s3PreSignedReadUrlV2: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/TaskLog.ts
var TaskLog;
var init_TaskLog2 = __esm({
  \\"src/serialization/resources/remoteGen/types/TaskLog.ts\\"() {
    \\"use strict\\";
    init_core();
    TaskLog = schemas_exports.object({
      level: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).LogLevel),
      message: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/LogLevel.ts
var LogLevel2;
var init_LogLevel2 = __esm({
  \\"src/serialization/resources/remoteGen/types/LogLevel.ts\\"() {
    \\"use strict\\";
    init_core();
    LogLevel2 = schemas_exports.enum_([
      \\"DEBUG\\",
      \\"INFO\\",
      \\"WARN\\",
      \\"ERROR\\"
    ]);
  }
});

// src/serialization/resources/remoteGen/types/Package.ts
var Package;
var init_Package2 = __esm({
  \\"src/serialization/resources/remoteGen/types/Package.ts\\"() {
    \\"use strict\\";
    init_core();
    Package = schemas_exports.object({
      coordinate: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackageCoordinate),
      status: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PackagePublishStatus)
    });
  }
});

// src/serialization/resources/remoteGen/types/PackagePublishStatus.ts
var PackagePublishStatus2;
var init_PackagePublishStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackagePublishStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    PackagePublishStatus2 = schemas_exports.enum_([\\"NOT_STARTED_PUBLISHING\\", \\"PUBLISHING\\", \\"PUBLISHED\\", \\"FAILED_TO_PUBLISH\\"]);
  }
});

// src/serialization/resources/remoteGen/types/PackageCoordinate.ts
var PackageCoordinate2;
var init_PackageCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PackageCoordinate.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    PackageCoordinate2 = schemas_exports.union(schemas_exports.discriminant(\\"type\\", \\"_type\\"), {
      npm: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).NpmCoordinate),
      maven: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).MavenCoordinate),
      pypi: schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).PypiCoordinate)
    }).transform({
      transform: (value) => {
        switch (value.type) {
          case \\"npm\\":
            return api_exports.PackageCoordinate.npm(value);
          case \\"maven\\":
            return api_exports.PackageCoordinate.maven(value);
          case \\"pypi\\":
            return api_exports.PackageCoordinate.pypi(value);
          default:
            return api_exports.PackageCoordinate._unknown(value);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/types/NpmCoordinate.ts
var NpmCoordinate;
var init_NpmCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/NpmCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    NpmCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/MavenCoordinate.ts
var MavenCoordinate;
var init_MavenCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/MavenCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    MavenCoordinate = schemas_exports.object({
      group: schemas_exports.string(),
      artifact: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/PypiCoordinate.ts
var PypiCoordinate;
var init_PypiCoordinate2 = __esm({
  \\"src/serialization/resources/remoteGen/types/PypiCoordinate.ts\\"() {
    \\"use strict\\";
    init_core();
    PypiCoordinate = schemas_exports.object({
      name: schemas_exports.string(),
      version: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CreateJobResponse.ts
var CreateJobResponse;
var init_CreateJobResponse2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CreateJobResponse.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobResponse = schemas_exports.object({
      jobId: schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenJobId),
      taskIds: schemas_exports.list(schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId))
    });
  }
});

// src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts
var GeneratorsDoNotExistErrorBodyType;
var init_GeneratorsDoNotExistErrorBodyType2 = __esm({
  \\"src/serialization/resources/remoteGen/types/GeneratorsDoNotExistErrorBodyType.ts\\"() {
    \\"use strict\\";
    init_core();
    GeneratorsDoNotExistErrorBodyType = schemas_exports.object({
      nonExistentGenerators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorIdAndVersion)
      )
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts
var CannotPublishToNpmScopeDetails;
var init_CannotPublishToNpmScopeDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToNpmScopeDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToNpmScopeDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidScope: schemas_exports.string(),
      validScope: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts
var CannotPublishToMavenGroupDetails;
var init_CannotPublishToMavenGroupDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/CannotPublishToMavenGroupDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    CannotPublishToMavenGroupDetails = schemas_exports.object({
      generatorId: schemas_exports.string(),
      invalidGroup: schemas_exports.string(),
      validGroup: schemas_exports.string()
    });
  }
});

// src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts
var InsufficientPermissionsDetails;
var init_InsufficientPermissionsDetails2 = __esm({
  \\"src/serialization/resources/remoteGen/types/InsufficientPermissionsDetails.ts\\"() {
    \\"use strict\\";
    init_core();
    InsufficientPermissionsDetails = schemas_exports.object({
      dummy: schemas_exports.string().optional()
    });
  }
});

// src/serialization/resources/remoteGen/types/index.ts
var init_types2 = __esm({
  \\"src/serialization/resources/remoteGen/types/index.ts\\"() {
    \\"use strict\\";
    init_RemoteGenJobId2();
    init_RemoteGenTaskId2();
    init_GeneratorIdAndVersion2();
    init_GeneratorConfig2();
    init_GeneratorConfigV22();
    init_OutputMode2();
    init_PublishOutputMode2();
    init_PublishOutputModeV22();
    init_RegistryOverrides2();
    init_GeneratorOutputs2();
    init_NpmOutput2();
    init_MavenOutput2();
    init_PostmanOutput2();
    init_GithubOutputMode2();
    init_GithubPublishInfo2();
    init_NpmOutputWithOptionalToken2();
    init_MavenOutputWithOptionalCreds2();
    init_UsernamePassword2();
    init_Task2();
    init_TaskStatus2();
    init_FailedTaskStatus2();
    init_FinishedTaskStatus2();
    init_TaskLog2();
    init_LogLevel2();
    init_Package2();
    init_PackagePublishStatus2();
    init_PackageCoordinate2();
    init_NpmCoordinate2();
    init_MavenCoordinate2();
    init_PypiCoordinate2();
    init_CreateJobResponse2();
    init_GeneratorsDoNotExistErrorBodyType2();
    init_CannotPublishToNpmScopeDetails2();
    init_CannotPublishToMavenGroupDetails2();
    init_InsufficientPermissionsDetails2();
  }
});

// src/serialization/resources/remoteGen/client/createJob.ts
var createJob_exports2 = {};
__export(createJob_exports2, {
  Error: () => Error7
});
var Error7;
var init_createJob2 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJob.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error7 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJob.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJob.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJob.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJob.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/createJobV2.ts
var createJobV2_exports2 = {};
__export(createJobV2_exports2, {
  Error: () => Error8
});
var Error8;
var init_createJobV22 = __esm({
  \\"src/serialization/resources/remoteGen/client/createJobV2.ts\\"() {
    \\"use strict\\";
    init_src();
    init_core();
    Error8 = schemas_exports.union(\\"error\\", {
      IllegalApiNameError: schemas_exports.object({}),
      GeneratorsDoNotExistError: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorsDoNotExistErrorBodyType
        )
      }),
      CannotPublishToNpmScope: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToNpmScopeDetails
        )
      }),
      CannotPublishToMavenGroup: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).CannotPublishToMavenGroupDetails
        )
      }),
      InsufficientPermissions: schemas_exports.object({
        content: schemas_exports.lazyObject(
          async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).InsufficientPermissionsDetails
        )
      })
    }).transform({
      transform: (value) => {
        switch (value.error) {
          case \\"IllegalApiNameError\\":
            return api_exports.remoteGen.createJobV2.Error.illegalApiNameError();
          case \\"GeneratorsDoNotExistError\\":
            return api_exports.remoteGen.createJobV2.Error.generatorsDoNotExistError(value.content);
          case \\"CannotPublishToNpmScope\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToNpmScope(value.content);
          case \\"CannotPublishToMavenGroup\\":
            return api_exports.remoteGen.createJobV2.Error.cannotPublishToMavenGroup(value.content);
          case \\"InsufficientPermissions\\":
            return api_exports.remoteGen.createJobV2.Error.insufficientPermissions(value.content);
        }
      },
      untransform: ({ _visit, ...value }) => value
    });
  }
});

// src/serialization/resources/remoteGen/client/getJobStatus.ts
var getJobStatus_exports2 = {};
__export(getJobStatus_exports2, {
  Response: () => Response
});
var Response;
var init_getJobStatus2 = __esm({
  \\"src/serialization/resources/remoteGen/client/getJobStatus.ts\\"() {
    \\"use strict\\";
    init_core();
    Response = schemas_exports.record(
      schemas_exports.lazy(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).RemoteGenTaskId),
      schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).Task).optional()
    );
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts
var CreateJobRequest;
var init_CreateJobRequest = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequest.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequest = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfig)
      )
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts
var CreateJobRequestV2;
var init_CreateJobRequestV2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/CreateJobRequestV2.ts\\"() {
    \\"use strict\\";
    init_core();
    CreateJobRequestV2 = schemas_exports.object({
      apiName: schemas_exports.string(),
      organizationName: schemas_exports.string(),
      version: schemas_exports.string().optional(),
      generators: schemas_exports.list(
        schemas_exports.lazyObject(async () => (await Promise.resolve().then(() => (init_serialization(), serialization_exports))).GeneratorConfigV2)
      ),
      uploadToS3: schemas_exports.boolean().optional()
    });
  }
});

// src/serialization/resources/remoteGen/client/requests/index.ts
var init_requests2 = __esm({
  \\"src/serialization/resources/remoteGen/client/requests/index.ts\\"() {
    \\"use strict\\";
    init_CreateJobRequest();
    init_CreateJobRequestV2();
  }
});

// src/serialization/resources/remoteGen/client/index.ts
var init_client4 = __esm({
  \\"src/serialization/resources/remoteGen/client/index.ts\\"() {
    \\"use strict\\";
    init_createJob2();
    init_createJobV22();
    init_getJobStatus2();
    init_requests2();
  }
});

// src/serialization/resources/remoteGen/index.ts
var remoteGen_exports2 = {};
__export(remoteGen_exports2, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  createJob: () => createJob_exports2,
  createJobV2: () => createJobV2_exports2,
  getJobStatus: () => getJobStatus_exports2
});
var init_remoteGen2 = __esm({
  \\"src/serialization/resources/remoteGen/index.ts\\"() {
    \\"use strict\\";
    init_types2();
    init_client4();
  }
});

// src/serialization/resources/index.ts
var init_resources2 = __esm({
  \\"src/serialization/resources/index.ts\\"() {
    \\"use strict\\";
    init_remoteGen2();
    init_types2();
    init_requests2();
  }
});

// src/serialization/index.ts
var serialization_exports = {};
__export(serialization_exports, {
  CannotPublishToMavenGroupDetails: () => CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails: () => CannotPublishToNpmScopeDetails,
  CreateJobRequest: () => CreateJobRequest,
  CreateJobRequestV2: () => CreateJobRequestV2,
  CreateJobResponse: () => CreateJobResponse,
  FailedTaskStatus: () => FailedTaskStatus,
  FinishedTaskStatus: () => FinishedTaskStatus,
  GeneratorConfig: () => GeneratorConfig,
  GeneratorConfigV2: () => GeneratorConfigV2,
  GeneratorIdAndVersion: () => GeneratorIdAndVersion,
  GeneratorOutputs: () => GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType: () => GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode: () => GithubOutputMode,
  GithubPublishInfo: () => GithubPublishInfo2,
  InsufficientPermissionsDetails: () => InsufficientPermissionsDetails,
  LogLevel: () => LogLevel2,
  MavenCoordinate: () => MavenCoordinate,
  MavenOutput: () => MavenOutput,
  MavenOutputWithOptionalCreds: () => MavenOutputWithOptionalCreds,
  NpmCoordinate: () => NpmCoordinate,
  NpmOutput: () => NpmOutput,
  NpmOutputWithOptionalToken: () => NpmOutputWithOptionalToken,
  OutputMode: () => OutputMode2,
  Package: () => Package,
  PackageCoordinate: () => PackageCoordinate2,
  PackagePublishStatus: () => PackagePublishStatus2,
  PostmanOutput: () => PostmanOutput,
  PublishOutputMode: () => PublishOutputMode,
  PublishOutputModeV2: () => PublishOutputModeV22,
  PypiCoordinate: () => PypiCoordinate,
  RegistryOverrides: () => RegistryOverrides,
  RemoteGenJobId: () => RemoteGenJobId2,
  RemoteGenTaskId: () => RemoteGenTaskId2,
  Task: () => Task,
  TaskLog: () => TaskLog,
  TaskStatus: () => TaskStatus2,
  UsernamePassword: () => UsernamePassword,
  remoteGen: () => remoteGen_exports2
});
module.exports = __toCommonJS(serialization_exports);
var init_serialization = __esm({
  \\"src/serialization/index.ts\\"() {
    init_resources2();
  }
});
init_serialization();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CannotPublishToMavenGroupDetails,
  CannotPublishToNpmScopeDetails,
  CreateJobRequest,
  CreateJobRequestV2,
  CreateJobResponse,
  FailedTaskStatus,
  FinishedTaskStatus,
  GeneratorConfig,
  GeneratorConfigV2,
  GeneratorIdAndVersion,
  GeneratorOutputs,
  GeneratorsDoNotExistErrorBodyType,
  GithubOutputMode,
  GithubPublishInfo,
  InsufficientPermissionsDetails,
  LogLevel,
  MavenCoordinate,
  MavenOutput,
  MavenOutputWithOptionalCreds,
  NpmCoordinate,
  NpmOutput,
  NpmOutputWithOptionalToken,
  OutputMode,
  Package,
  PackageCoordinate,
  PackagePublishStatus,
  PostmanOutput,
  PublishOutputMode,
  PublishOutputModeV2,
  PypiCoordinate,
  RegistryOverrides,
  RemoteGenJobId,
  RemoteGenTaskId,
  Task,
  TaskLog,
  TaskStatus,
  UsernamePassword,
  remoteGen
});
/*! Bundled license information:

mime-db/index.js:
  (*!
   * mime-db
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015-2022 Douglas Christopher Wilson
   * MIT Licensed
   *)

mime-types/index.js:
  (*!
   * mime-types
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
*/
",
                "name": "serialization.js",
                "type": "file",
              },
            ],
            "name": "node",
            "type": "directory",
          },
        ],
        "name": "dist",
        "type": "directory",
      },
      Object {
        "contents": "{
    \\"name\\": \\"@fern-fern/fiddle-sdk\\",
    \\"version\\": \\"0.0.0\\",
    \\"files\\": [
        \\"dist\\",
        \\"types\\",
        \\"core.d.ts\\",
        \\"serialization.d.ts\\"
    ],
    \\"exports\\": {
        \\".\\": {
            \\"node\\": \\"./dist/node/index.js\\",
            \\"import\\": \\"./dist/browser/esm/index.js\\",
            \\"require\\": \\"./dist/browser/cjs/index.js\\",
            \\"default\\": \\"./dist/browser/cjs/index.js\\",
            \\"types\\": \\"./types/index.d.ts\\"
        },
        \\"./core\\": {
            \\"node\\": \\"./dist/node/core.js\\",
            \\"import\\": \\"./dist/browser/esm/core.js\\",
            \\"require\\": \\"./dist/browser/cjs/core.js\\",
            \\"default\\": \\"./dist/browser/cjs/core.js\\",
            \\"types\\": \\"./types/core/index.d.ts\\"
        },
        \\"./serialization\\": {
            \\"node\\": \\"./dist/node/serialization.js\\",
            \\"import\\": \\"./dist/browser/esm/serialization.js\\",
            \\"require\\": \\"./dist/browser/cjs/serialization.js\\",
            \\"default\\": \\"./dist/browser/cjs/serialization.js\\",
            \\"types\\": \\"./types/serialization/index.d.ts\\"
        }
    },
    \\"types\\": \\"./types/index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"compile\\": \\"tsc && tsc-alias\\",
        \\"bundle\\": \\"node build.js\\",
        \\"build\\": \\"yarn compile && yarn bundle\\"
    },
    \\"dependencies\\": {
        \\"@types/url-join\\": \\"4.0.1\\",
        \\"axios\\": \\"^0.27.2\\",
        \\"url-join\\": \\"4.0.1\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"esbuild\\": \\"0.16.15\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"tsc-alias\\": \\"1.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
        "name": "package.json",
        "type": "file",
      },
      Object {
        "contents": "// this is needed for older versions of TypeScript
// that don't read the \\"exports\\" field in package.json
export * from \\"./types/serialization\\";
            ",
        "name": "serialization.d.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { FiddleService } from \\"./api/resources/fiddle/client/Client\\";
import { Health } from \\"./api/resources/health/client/Client\\";
import { RemoteGen } from \\"./api/resources/remoteGen/client/Client\\";
export declare namespace FiddleClient {
    interface Options {
        environment: string;
    }
}
export declare class FiddleClient {
    private readonly options;
    constructor(options: FiddleClient.Options);
    private _fiddle;
    get fiddle(): FiddleService;
    private _health;
    get health(): Health;
    private _remoteGen;
    get remoteGen(): RemoteGen;
}
",
            "name": "Client.d.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * from \\"./resources\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare namespace FiddleService {
    interface Options {
        environment: string;
    }
}
export declare class FiddleService {
    private readonly options;
    constructor(options: FiddleService.Options);
    test(): Promise<core.APIResponse<void, Fiddle.fiddle.test.Error>>;
}
",
                            "name": "Client.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export * as test from \\"./test\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = Fiddle.fiddle.test.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        error: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.fiddle.test.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => Fiddle.fiddle.test.Error._Unknown;
    readonly _visit: <_Result>(value: Fiddle.fiddle.test.Error, visitor: Fiddle.fiddle.test.Error._Visitor<_Result>) => _Result;
};
",
                            "name": "test.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "client",
                        "type": "directory",
                      },
                      Object {
                        "contents": "export * from \\"./client\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                    ],
                    "name": "fiddle",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare namespace Health {
    interface Options {
        environment: string;
    }
}
export declare class Health {
    private readonly options;
    constructor(options: Health.Options);
    status(): Promise<core.APIResponse<void, Fiddle.health.status.Error>>;
}
",
                            "name": "Client.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export * as status from \\"./status\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = Fiddle.health.status.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        error: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.health.status.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => Fiddle.health.status.Error._Unknown;
    readonly _visit: <_Result>(value: Fiddle.health.status.Error, visitor: Fiddle.health.status.Error._Visitor<_Result>) => _Result;
};
",
                            "name": "status.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "client",
                        "type": "directory",
                      },
                      Object {
                        "contents": "export * from \\"./client\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                    ],
                    "name": "health",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * as remoteGen from \\"./remoteGen\\";
export * from \\"./remoteGen/types\\";
export * as fiddle from \\"./fiddle\\";
export * as health from \\"./health\\";
export * from \\"./remoteGen/client/requests\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare namespace RemoteGen {
    interface Options {
        environment: string;
    }
}
export declare class RemoteGen {
    private readonly options;
    constructor(options: RemoteGen.Options);
    createJob(request: Fiddle.CreateJobRequest): Promise<core.APIResponse<Fiddle.CreateJobResponse, Fiddle.remoteGen.createJob.Error>>;
    createJobV2(request: Fiddle.CreateJobRequestV2): Promise<core.APIResponse<Fiddle.CreateJobResponse, Fiddle.remoteGen.createJobV2.Error>>;
    getJobStatus(jobId: Fiddle.RemoteGenJobId): Promise<core.APIResponse<Record<Fiddle.RemoteGenTaskId, Fiddle.Task | undefined>, Fiddle.remoteGen.getJobStatus.Error>>;
}
",
                            "name": "Client.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = Fiddle.remoteGen.createJob.Error.IllegalApiNameError | Fiddle.remoteGen.createJob.Error.GeneratorsDoNotExistError | Fiddle.remoteGen.createJob.Error.CannotPublishToNpmScope | Fiddle.remoteGen.createJob.Error.CannotPublishToMavenGroup | Fiddle.remoteGen.createJob.Error.InsufficientPermissions | Fiddle.remoteGen.createJob.Error._Unknown;
export declare namespace Error {
    interface IllegalApiNameError extends _Utils {
        error: \\"IllegalApiNameError\\";
    }
    interface GeneratorsDoNotExistError extends _Utils {
        error: \\"GeneratorsDoNotExistError\\";
        content: Fiddle.GeneratorsDoNotExistErrorBodyType;
    }
    interface CannotPublishToNpmScope extends _Utils {
        error: \\"CannotPublishToNpmScope\\";
        content: Fiddle.CannotPublishToNpmScopeDetails;
    }
    interface CannotPublishToMavenGroup extends _Utils {
        error: \\"CannotPublishToMavenGroup\\";
        content: Fiddle.CannotPublishToMavenGroupDetails;
    }
    interface InsufficientPermissions extends _Utils {
        error: \\"InsufficientPermissions\\";
        content: Fiddle.InsufficientPermissionsDetails;
    }
    interface _Unknown extends _Utils {
        error: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.remoteGen.createJob.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        illegalApiNameError: () => _Result;
        generatorsDoNotExistError: (value: Fiddle.GeneratorsDoNotExistErrorBodyType) => _Result;
        cannotPublishToNpmScope: (value: Fiddle.CannotPublishToNpmScopeDetails) => _Result;
        cannotPublishToMavenGroup: (value: Fiddle.CannotPublishToMavenGroupDetails) => _Result;
        insufficientPermissions: (value: Fiddle.InsufficientPermissionsDetails) => _Result;
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly illegalApiNameError: () => Fiddle.remoteGen.createJob.Error.IllegalApiNameError;
    readonly generatorsDoNotExistError: (value: Fiddle.GeneratorsDoNotExistErrorBodyType) => Fiddle.remoteGen.createJob.Error.GeneratorsDoNotExistError;
    readonly cannotPublishToNpmScope: (value: Fiddle.CannotPublishToNpmScopeDetails) => Fiddle.remoteGen.createJob.Error.CannotPublishToNpmScope;
    readonly cannotPublishToMavenGroup: (value: Fiddle.CannotPublishToMavenGroupDetails) => Fiddle.remoteGen.createJob.Error.CannotPublishToMavenGroup;
    readonly insufficientPermissions: (value: Fiddle.InsufficientPermissionsDetails) => Fiddle.remoteGen.createJob.Error.InsufficientPermissions;
    readonly _unknown: (fetcherError: core.Fetcher.Error) => Fiddle.remoteGen.createJob.Error._Unknown;
    readonly _visit: <_Result>(value: Fiddle.remoteGen.createJob.Error, visitor: Fiddle.remoteGen.createJob.Error._Visitor<_Result>) => _Result;
};
",
                            "name": "createJob.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = Fiddle.remoteGen.createJobV2.Error.IllegalApiNameError | Fiddle.remoteGen.createJobV2.Error.GeneratorsDoNotExistError | Fiddle.remoteGen.createJobV2.Error.CannotPublishToNpmScope | Fiddle.remoteGen.createJobV2.Error.CannotPublishToMavenGroup | Fiddle.remoteGen.createJobV2.Error.InsufficientPermissions | Fiddle.remoteGen.createJobV2.Error._Unknown;
export declare namespace Error {
    interface IllegalApiNameError extends _Utils {
        error: \\"IllegalApiNameError\\";
    }
    interface GeneratorsDoNotExistError extends _Utils {
        error: \\"GeneratorsDoNotExistError\\";
        content: Fiddle.GeneratorsDoNotExistErrorBodyType;
    }
    interface CannotPublishToNpmScope extends _Utils {
        error: \\"CannotPublishToNpmScope\\";
        content: Fiddle.CannotPublishToNpmScopeDetails;
    }
    interface CannotPublishToMavenGroup extends _Utils {
        error: \\"CannotPublishToMavenGroup\\";
        content: Fiddle.CannotPublishToMavenGroupDetails;
    }
    interface InsufficientPermissions extends _Utils {
        error: \\"InsufficientPermissions\\";
        content: Fiddle.InsufficientPermissionsDetails;
    }
    interface _Unknown extends _Utils {
        error: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.remoteGen.createJobV2.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        illegalApiNameError: () => _Result;
        generatorsDoNotExistError: (value: Fiddle.GeneratorsDoNotExistErrorBodyType) => _Result;
        cannotPublishToNpmScope: (value: Fiddle.CannotPublishToNpmScopeDetails) => _Result;
        cannotPublishToMavenGroup: (value: Fiddle.CannotPublishToMavenGroupDetails) => _Result;
        insufficientPermissions: (value: Fiddle.InsufficientPermissionsDetails) => _Result;
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly illegalApiNameError: () => Fiddle.remoteGen.createJobV2.Error.IllegalApiNameError;
    readonly generatorsDoNotExistError: (value: Fiddle.GeneratorsDoNotExistErrorBodyType) => Fiddle.remoteGen.createJobV2.Error.GeneratorsDoNotExistError;
    readonly cannotPublishToNpmScope: (value: Fiddle.CannotPublishToNpmScopeDetails) => Fiddle.remoteGen.createJobV2.Error.CannotPublishToNpmScope;
    readonly cannotPublishToMavenGroup: (value: Fiddle.CannotPublishToMavenGroupDetails) => Fiddle.remoteGen.createJobV2.Error.CannotPublishToMavenGroup;
    readonly insufficientPermissions: (value: Fiddle.InsufficientPermissionsDetails) => Fiddle.remoteGen.createJobV2.Error.InsufficientPermissions;
    readonly _unknown: (fetcherError: core.Fetcher.Error) => Fiddle.remoteGen.createJobV2.Error._Unknown;
    readonly _visit: <_Result>(value: Fiddle.remoteGen.createJobV2.Error, visitor: Fiddle.remoteGen.createJobV2.Error._Visitor<_Result>) => _Result;
};
",
                            "name": "createJobV2.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = Fiddle.remoteGen.getJobStatus.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        error: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.remoteGen.getJobStatus.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => Fiddle.remoteGen.getJobStatus.Error._Unknown;
    readonly _visit: <_Result>(value: Fiddle.remoteGen.getJobStatus.Error, visitor: Fiddle.remoteGen.getJobStatus.Error._Visitor<_Result>) => _Result;
};
",
                            "name": "getJobStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export * from \\"./requests\\";
export * as createJob from \\"./createJob\\";
export * as createJobV2 from \\"./createJobV2\\";
export * as getJobStatus from \\"./getJobStatus\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../../..\\";
export interface CreateJobRequest {
    apiName: string;
    organizationName: string;
    version?: string;
    generators: Fiddle.GeneratorConfig[];
}
",
                                "name": "CreateJobRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../../..\\";
export interface CreateJobRequestV2 {
    apiName: string;
    organizationName: string;
    version?: string;
    generators: Fiddle.GeneratorConfigV2[];
    uploadToS3?: boolean;
}
",
                                "name": "CreateJobRequestV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export { CreateJobRequest } from \\"./CreateJobRequest\\";
export { CreateJobRequestV2 } from \\"./CreateJobRequestV2\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                            ],
                            "name": "requests",
                            "type": "directory",
                          },
                        ],
                        "name": "client",
                        "type": "directory",
                      },
                      Object {
                        "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface CannotPublishToMavenGroupDetails {
    generatorId: string;
    invalidGroup: string;
    validGroup: string;
}
",
                            "name": "CannotPublishToMavenGroupDetails.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface CannotPublishToNpmScopeDetails {
    generatorId: string;
    invalidScope: string;
    validScope: string;
}
",
                            "name": "CannotPublishToNpmScopeDetails.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface CreateJobResponse {
    jobId: Fiddle.RemoteGenJobId;
    /** The order of this list corresponds to the order of the generators supplied in the request. */
    taskIds: Fiddle.RemoteGenTaskId[];
}
",
                            "name": "CreateJobResponse.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FailedTaskStatus {
    message: string;
    /** Pre-signed URL that points to a zipfile containing generated code. */
    s3PreSignedReadUrl?: string;
}
",
                            "name": "FailedTaskStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FinishedTaskStatus {
    /** This field is deprecated. */
    hasFilesToDownload: boolean;
    /** Deprecated (use v2). Pre-signed URL that points to a zipfile containing generated code. */
    s3PreSignedReadUrl: string;
    /** Pre-signed URL that points to a zipfile containing generated code. */
    s3PreSignedReadUrlV2?: string;
}
",
                            "name": "FinishedTaskStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface GeneratorConfig {
    id: string;
    version: string;
    customConfig?: unknown;
    willDownloadFiles: boolean;
    /** Npm and Maven outputs default to fern registries. */
    outputs: Fiddle.GeneratorOutputs;
}
",
                            "name": "GeneratorConfig.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface GeneratorConfigV2 {
    id: string;
    version: string;
    customConfig?: unknown;
    outputMode: Fiddle.OutputMode;
}
",
                            "name": "GeneratorConfigV2.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GeneratorIdAndVersion {
    id: string;
    version: string;
}
",
                            "name": "GeneratorIdAndVersion.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface GeneratorOutputs {
    npm?: Fiddle.NpmOutput;
    maven?: Fiddle.MavenOutput;
}
",
                            "name": "GeneratorOutputs.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface GeneratorsDoNotExistErrorBodyType {
    nonExistentGenerators: Fiddle.GeneratorIdAndVersion[];
}
",
                            "name": "GeneratorsDoNotExistErrorBodyType.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface GithubOutputMode {
    owner: string;
    repo: string;
    publishInfo?: Fiddle.GithubPublishInfo;
}
",
                            "name": "GithubOutputMode.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export declare type GithubPublishInfo = Fiddle.GithubPublishInfo.Npm | Fiddle.GithubPublishInfo.Maven | Fiddle.GithubPublishInfo.Postman | Fiddle.GithubPublishInfo._Unknown;
export declare namespace GithubPublishInfo {
    interface Npm extends Fiddle.NpmOutputWithOptionalToken, _Utils {
        type: \\"npm\\";
    }
    interface Maven extends Fiddle.MavenOutputWithOptionalCreds, _Utils {
        type: \\"maven\\";
    }
    interface Postman extends Fiddle.PostmanOutput, _Utils {
        type: \\"postman\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.GithubPublishInfo._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        npm: (value: Fiddle.NpmOutputWithOptionalToken) => _Result;
        maven: (value: Fiddle.MavenOutputWithOptionalCreds) => _Result;
        postman: (value: Fiddle.PostmanOutput) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const GithubPublishInfo: {
    readonly npm: (value: Fiddle.NpmOutputWithOptionalToken) => Fiddle.GithubPublishInfo.Npm;
    readonly maven: (value: Fiddle.MavenOutputWithOptionalCreds) => Fiddle.GithubPublishInfo.Maven;
    readonly postman: (value: Fiddle.PostmanOutput) => Fiddle.GithubPublishInfo.Postman;
    readonly _unknown: (value: {
        type: string;
    }) => Fiddle.GithubPublishInfo._Unknown;
    readonly _visit: <_Result>(value: Fiddle.GithubPublishInfo, visitor: Fiddle.GithubPublishInfo._Visitor<_Result>) => _Result;
};
",
                            "name": "GithubPublishInfo.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface InsufficientPermissionsDetails {
    dummy?: string;
}
",
                            "name": "InsufficientPermissionsDetails.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type LogLevel = \\"DEBUG\\" | \\"INFO\\" | \\"WARN\\" | \\"ERROR\\";
export declare const LogLevel: {
    readonly Debug: \\"DEBUG\\";
    readonly Info: \\"INFO\\";
    readonly Warn: \\"WARN\\";
    readonly Error: \\"ERROR\\";
};
",
                            "name": "LogLevel.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface MavenCoordinate {
    group: string;
    artifact: string;
    version: string;
}
",
                            "name": "MavenCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface MavenOutput {
    registryUrl: string;
    username: string;
    password: string;
    coordinate: string;
}
",
                            "name": "MavenOutput.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface MavenOutputWithOptionalCreds {
    registryUrl: string;
    coordinate: string;
    credentials?: Fiddle.UsernamePassword;
}
",
                            "name": "MavenOutputWithOptionalCreds.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface NpmCoordinate {
    name: string;
    version: string;
}
",
                            "name": "NpmCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface NpmOutput {
    registryUrl: string;
    packageName: string;
    token: string;
}
",
                            "name": "NpmOutput.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface NpmOutputWithOptionalToken {
    registryUrl: string;
    packageName: string;
    token?: string;
}
",
                            "name": "NpmOutputWithOptionalToken.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export declare type OutputMode = Fiddle.OutputMode.Publish | Fiddle.OutputMode.PublishV2 | Fiddle.OutputMode.DownloadFiles | Fiddle.OutputMode.Github | Fiddle.OutputMode._Unknown;
export declare namespace OutputMode {
    interface Publish extends Fiddle.PublishOutputMode, _Utils {
        type: \\"publish\\";
    }
    interface PublishV2 extends _Utils {
        type: \\"publishV2\\";
        publishV2: Fiddle.PublishOutputModeV2;
    }
    interface DownloadFiles extends _Utils {
        type: \\"downloadFiles\\";
    }
    interface Github extends Fiddle.GithubOutputMode, _Utils {
        type: \\"github\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.OutputMode._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        publish: (value: Fiddle.PublishOutputMode) => _Result;
        publishV2: (value: Fiddle.PublishOutputModeV2) => _Result;
        downloadFiles: () => _Result;
        github: (value: Fiddle.GithubOutputMode) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const OutputMode: {
    readonly publish: (value: Fiddle.PublishOutputMode) => Fiddle.OutputMode.Publish;
    readonly publishV2: (value: Fiddle.PublishOutputModeV2) => Fiddle.OutputMode.PublishV2;
    readonly downloadFiles: () => Fiddle.OutputMode.DownloadFiles;
    readonly github: (value: Fiddle.GithubOutputMode) => Fiddle.OutputMode.Github;
    readonly _unknown: (value: {
        type: string;
    }) => Fiddle.OutputMode._Unknown;
    readonly _visit: <_Result>(value: Fiddle.OutputMode, visitor: Fiddle.OutputMode._Visitor<_Result>) => _Result;
};
",
                            "name": "OutputMode.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface Package {
    coordinate: Fiddle.PackageCoordinate;
    status: Fiddle.PackagePublishStatus;
}
",
                            "name": "Package.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export declare type PackageCoordinate = Fiddle.PackageCoordinate.Npm | Fiddle.PackageCoordinate.Maven | Fiddle.PackageCoordinate.Pypi | Fiddle.PackageCoordinate._Unknown;
export declare namespace PackageCoordinate {
    interface Npm extends Fiddle.NpmCoordinate, _Utils {
        type: \\"npm\\";
    }
    interface Maven extends Fiddle.MavenCoordinate, _Utils {
        type: \\"maven\\";
    }
    interface Pypi extends Fiddle.PypiCoordinate, _Utils {
        type: \\"pypi\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.PackageCoordinate._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        npm: (value: Fiddle.NpmCoordinate) => _Result;
        maven: (value: Fiddle.MavenCoordinate) => _Result;
        pypi: (value: Fiddle.PypiCoordinate) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const PackageCoordinate: {
    readonly npm: (value: Fiddle.NpmCoordinate) => Fiddle.PackageCoordinate.Npm;
    readonly maven: (value: Fiddle.MavenCoordinate) => Fiddle.PackageCoordinate.Maven;
    readonly pypi: (value: Fiddle.PypiCoordinate) => Fiddle.PackageCoordinate.Pypi;
    readonly _unknown: (value: {
        type: string;
    }) => Fiddle.PackageCoordinate._Unknown;
    readonly _visit: <_Result>(value: Fiddle.PackageCoordinate, visitor: Fiddle.PackageCoordinate._Visitor<_Result>) => _Result;
};
",
                            "name": "PackageCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type PackagePublishStatus = \\"NOT_STARTED_PUBLISHING\\" | \\"PUBLISHING\\" | \\"PUBLISHED\\" | \\"FAILED_TO_PUBLISH\\";
export declare const PackagePublishStatus: {
    readonly NotStartedPublishing: \\"NOT_STARTED_PUBLISHING\\";
    readonly Publishing: \\"PUBLISHING\\";
    readonly Published: \\"PUBLISHED\\";
    readonly FailedToPublish: \\"FAILED_TO_PUBLISH\\";
};
",
                            "name": "PackagePublishStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface PostmanOutput {
    apiKey: string;
    workspaceId: string;
}
",
                            "name": "PostmanOutput.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface PublishOutputMode {
    registryOverrides: Fiddle.RegistryOverrides;
}
",
                            "name": "PublishOutputMode.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export declare type PublishOutputModeV2 = Fiddle.PublishOutputModeV2.NpmOverride | Fiddle.PublishOutputModeV2.MavenOverride | Fiddle.PublishOutputModeV2.Postman | Fiddle.PublishOutputModeV2._Unknown;
export declare namespace PublishOutputModeV2 {
    interface NpmOverride extends _Utils {
        type: \\"npmOverride\\";
        npmOverride?: Fiddle.NpmOutput;
    }
    interface MavenOverride extends _Utils {
        type: \\"mavenOverride\\";
        mavenOverride?: Fiddle.MavenOutput;
    }
    interface Postman extends Fiddle.PostmanOutput, _Utils {
        type: \\"postman\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.PublishOutputModeV2._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        npmOverride: (value: Fiddle.NpmOutput | undefined) => _Result;
        mavenOverride: (value: Fiddle.MavenOutput | undefined) => _Result;
        postman: (value: Fiddle.PostmanOutput) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const PublishOutputModeV2: {
    readonly npmOverride: (value?: Fiddle.NpmOutput | undefined) => Fiddle.PublishOutputModeV2.NpmOverride;
    readonly mavenOverride: (value?: Fiddle.MavenOutput | undefined) => Fiddle.PublishOutputModeV2.MavenOverride;
    readonly postman: (value: Fiddle.PostmanOutput) => Fiddle.PublishOutputModeV2.Postman;
    readonly _unknown: (value: {
        type: string;
    }) => Fiddle.PublishOutputModeV2._Unknown;
    readonly _visit: <_Result>(value: Fiddle.PublishOutputModeV2, visitor: Fiddle.PublishOutputModeV2._Visitor<_Result>) => _Result;
};
",
                            "name": "PublishOutputModeV2.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface PypiCoordinate {
    name: string;
    version: string;
}
",
                            "name": "PypiCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface RegistryOverrides {
    npm?: Fiddle.NpmOutput;
    maven?: Fiddle.MavenOutput;
}
",
                            "name": "RegistryOverrides.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export declare type RemoteGenJobId = string & {
    RemoteGenJobId: void;
};
export declare function RemoteGenJobId(value: string): Fiddle.RemoteGenJobId;
",
                            "name": "RemoteGenJobId.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
/**
 * A remote gen job can be made up of several tasks.
 * A task corresponds to an instance of a generator (in .fernrc.yml).
 *
 */
export declare type RemoteGenTaskId = string & {
    RemoteGenTaskId: void;
};
export declare function RemoteGenTaskId(value: string): Fiddle.RemoteGenTaskId;
",
                            "name": "RemoteGenTaskId.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface Task {
    status: Fiddle.TaskStatus;
    packages: Fiddle.Package[];
    logs: Fiddle.TaskLog[];
}
",
                            "name": "Task.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export interface TaskLog {
    level: Fiddle.LogLevel;
    message: string;
}
",
                            "name": "TaskLog.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { Fiddle } from \\"../../../..\\";
export declare type TaskStatus = Fiddle.TaskStatus.NotStarted | Fiddle.TaskStatus.Running | Fiddle.TaskStatus.Failed | Fiddle.TaskStatus.Finished | Fiddle.TaskStatus._Unknown;
export declare namespace TaskStatus {
    interface NotStarted extends _Utils {
        type: \\"notStarted\\";
    }
    interface Running extends _Utils {
        type: \\"running\\";
    }
    interface Failed extends Fiddle.FailedTaskStatus, _Utils {
        type: \\"failed\\";
    }
    interface Finished extends Fiddle.FinishedTaskStatus, _Utils {
        type: \\"finished\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: Fiddle.TaskStatus._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        notStarted: () => _Result;
        running: () => _Result;
        failed: (value: Fiddle.FailedTaskStatus) => _Result;
        finished: (value: Fiddle.FinishedTaskStatus) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TaskStatus: {
    readonly notStarted: () => Fiddle.TaskStatus.NotStarted;
    readonly running: () => Fiddle.TaskStatus.Running;
    readonly failed: (value: Fiddle.FailedTaskStatus) => Fiddle.TaskStatus.Failed;
    readonly finished: (value: Fiddle.FinishedTaskStatus) => Fiddle.TaskStatus.Finished;
    readonly _unknown: (value: {
        type: string;
    }) => Fiddle.TaskStatus._Unknown;
    readonly _visit: <_Result>(value: Fiddle.TaskStatus, visitor: Fiddle.TaskStatus._Visitor<_Result>) => _Result;
};
",
                            "name": "TaskStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface UsernamePassword {
    username: string;
    password: string;
}
",
                            "name": "UsernamePassword.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export * from \\"./RemoteGenJobId\\";
export * from \\"./RemoteGenTaskId\\";
export * from \\"./GeneratorIdAndVersion\\";
export * from \\"./GeneratorConfig\\";
export * from \\"./GeneratorConfigV2\\";
export * from \\"./OutputMode\\";
export * from \\"./PublishOutputMode\\";
export * from \\"./PublishOutputModeV2\\";
export * from \\"./RegistryOverrides\\";
export * from \\"./GeneratorOutputs\\";
export * from \\"./NpmOutput\\";
export * from \\"./MavenOutput\\";
export * from \\"./PostmanOutput\\";
export * from \\"./GithubOutputMode\\";
export * from \\"./GithubPublishInfo\\";
export * from \\"./NpmOutputWithOptionalToken\\";
export * from \\"./MavenOutputWithOptionalCreds\\";
export * from \\"./UsernamePassword\\";
export * from \\"./Task\\";
export * from \\"./TaskStatus\\";
export * from \\"./FailedTaskStatus\\";
export * from \\"./FinishedTaskStatus\\";
export * from \\"./TaskLog\\";
export * from \\"./LogLevel\\";
export * from \\"./Package\\";
export * from \\"./PackagePublishStatus\\";
export * from \\"./PackageCoordinate\\";
export * from \\"./NpmCoordinate\\";
export * from \\"./MavenCoordinate\\";
export * from \\"./PypiCoordinate\\";
export * from \\"./CreateJobResponse\\";
export * from \\"./GeneratorsDoNotExistErrorBodyType\\";
export * from \\"./CannotPublishToNpmScopeDetails\\";
export * from \\"./CannotPublishToMavenGroupDetails\\";
export * from \\"./InsufficientPermissionsDetails\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "types",
                        "type": "directory",
                      },
                    ],
                    "name": "remoteGen",
                    "type": "directory",
                  },
                ],
                "name": "resources",
                "type": "directory",
              },
            ],
            "name": "api",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "export declare type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;
export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}
export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                    "name": "APIResponse.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { APIResponse } from \\"./APIResponse\\";
export interface Fetcher {
    fetch: FetchFunction;
}
export declare type FetchFunction = (args: Fetcher.Args) => Promise<APIResponse<unknown, Fetcher.Error>>;
export declare namespace Fetcher {
    interface Args {
        url: string;
        method: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
    }
    type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;
    interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }
    interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }
    interface TimeoutError {
        reason: \\"timeout\\";
    }
    interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}
export declare const fetcher: FetchFunction;
",
                    "name": "Fetcher.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);
export declare const Supplier: {
    get: <T>(supplier: Supplier<T>) => Promise<T>;
};
",
                    "name": "Supplier.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { type APIResponse } from \\"./APIResponse\\";
export { fetcher, type Fetcher, type FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                ],
                "name": "fetcher",
                "type": "directory",
              },
              Object {
                "contents": "export * as serialization from \\"./schemas\\";
export * from \\"./fetcher\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";
export declare type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export declare type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export declare type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;
export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}
export declare const SchemaType: {
    readonly DATE: \\"date\\";
    readonly ENUM: \\"enum\\";
    readonly LIST: \\"list\\";
    readonly STRING_LITERAL: \\"stringLiteral\\";
    readonly OBJECT: \\"object\\";
    readonly ANY: \\"any\\";
    readonly BOOLEAN: \\"boolean\\";
    readonly NUMBER: \\"number\\";
    readonly STRING: \\"string\\";
    readonly UNKNOWN: \\"unknown\\";
    readonly RECORD: \\"record\\";
    readonly SET: \\"set\\";
    readonly UNION: \\"union\\";
    readonly OPTIONAL: \\"optional\\";
};
export declare type SchemaType = typeof SchemaType[keyof typeof SchemaType];
export declare type MaybeValid<T> = Valid<T> | Invalid;
export interface Valid<T> {
    ok: true;
    value: T;
}
export interface Invalid {
    ok: false;
    errors: ValidationError[];
}
export interface ValidationError {
    path: string[];
    message: string;
}
export interface SchemaOptions {
    /**
     * @default false
     */
    allowUnknownKeys?: boolean;
}
",
                    "name": "Schema.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
export declare function date(): Schema<string, Date>;
",
                            "name": "date.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { date } from \\"./date\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "date",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
export declare function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]>;
",
                            "name": "enum.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { enum_ } from \\"./enum\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "enum",
                        "type": "directory",
                      },
                      Object {
                        "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./union\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export { lazy, type SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;
export declare function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed>;
export declare function constructLazyBaseSchema<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): BaseSchema<Raw, Parsed>;
export declare function getMemoizedSchema<SchemaType extends Schema<any, any>>(getter: SchemaGetter<SchemaType>): Promise<SchemaType>;
",
                            "name": "lazy.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { ObjectSchema } from \\"../object/types\\";
import { SchemaGetter } from \\"./lazy\\";
export declare function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed>;
",
                            "name": "lazyObject.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "lazy",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export { list } from \\"./list\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
export declare function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]>;
",
                            "name": "list.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "list",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
export declare function stringLiteral<V extends string>(literal: V): Schema<V, V>;
",
                            "name": "stringLiteral.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "literals",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export { getObjectUtils, object } from \\"./object\\";
export { isProperty, property, type Property } from \\"./property\\";
export { type BaseObjectSchema, type inferObjectSchemaFromPropertySchemas, type inferParsedObject, type inferParsedObjectFromPropertySchemas, type inferParsedPropertySchema, type inferRawKey, type inferRawObject, type inferRawObjectFromPropertySchemas, type inferRawPropertySchema, type ObjectSchema, type ObjectUtils, type PropertySchemas, } from \\"./types\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { BaseObjectSchema, inferObjectSchemaFromPropertySchemas, ObjectUtils, PropertySchemas } from \\"./types\\";
export declare function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(schemas: T): inferObjectSchemaFromPropertySchemas<T>;
export declare function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed>;
",
                            "name": "object.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
export declare function property<RawKey extends string, RawValue, ParsedValue>(rawKey: RawKey, valueSchema: Schema<RawValue, ParsedValue>): Property<RawKey, RawValue, ParsedValue>;
export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}
export declare function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O;
",
                            "name": "property.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";
export declare type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed> & ObjectUtils<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}
export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(schemas: ObjectSchema<RawExtension, ParsedExtension>) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}
export declare type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;
export declare type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed> ? Parsed : never;
export declare type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<inferRawObjectFromPropertySchemas<T>, inferParsedObjectFromPropertySchemas<T>>;
export declare type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
}>;
export declare type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [K in keyof T]: inferParsedPropertySchema<T[K]>;
}>;
export declare type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<ParsedKeys, Property<any, any, any> | Schema<any, any>>;
export declare type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, infer Raw, any> ? Raw : P extends Schema<any, any> ? inferRaw<P> : never;
export declare type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, any, infer Parsed> ? Parsed : P extends Schema<any, any> ? inferParsed<P> : never;
export declare type inferRawKey<ParsedKey extends string | number | symbol, P extends Property<any, any, any> | Schema<any, any>> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                            "name": "types.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "object",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "import { BaseSchema } from \\"../../Schema\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";
export declare function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed>;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
export declare function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>, properties: {
    [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]);
}): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties>;
",
                            "name": "getObjectLikeUtils.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export { type ObjectLikeSchema, type ObjectLikeUtils } from \\"./types\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> & BaseSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed>;
export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                            "name": "types.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "object-like",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export declare const any: () => import(\\"../../Schema\\").Schema<any, any>;
",
                            "name": "any.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export declare const boolean: () => import(\\"../../Schema\\").Schema<boolean, boolean>;
",
                            "name": "boolean.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export declare const number: () => import(\\"../../Schema\\").Schema<number, number>;
",
                            "name": "number.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export declare const string: () => import(\\"../../Schema\\").Schema<string, string>;
",
                            "name": "string.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export declare const unknown: () => import(\\"../../Schema\\").Schema<unknown, unknown>;
",
                            "name": "unknown.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "primitives",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export { record } from \\"./record\\";
export { type BaseRecordSchema, type RecordSchema } from \\"./types\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
import { RecordSchema } from \\"./types\\";
export declare function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(keySchema: Schema<RawKey, ParsedKey>, valueSchema: Schema<RawValue, ParsedValue>): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue>;
",
                            "name": "record.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { BaseSchema } from \\"../../Schema\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { SchemaUtils } from \\"../schema-utils\\";
export declare type RecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> & SchemaUtils<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
export declare type BaseRecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseSchema<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
",
                            "name": "types.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "record",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class JsonError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                            "name": "JsonError.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class ParseError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                            "name": "ParseError.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { BaseSchema, Schema, SchemaOptions } from \\"../../Schema\\";
export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}
export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}
export declare function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed>;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
export declare function optional<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): Schema<Raw | null | undefined, Parsed | undefined>;
export declare function transform<Raw, Parsed, Transformed>(schema: BaseSchema<Raw, Parsed>, transformer: SchemaTransformer<Parsed, Transformed>): Schema<Raw, Transformed>;
",
                            "name": "getSchemaUtils.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { getSchemaUtils, optional, transform, type SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { ValidationError } from \\"../../Schema\\";
export declare function stringifyValidationError(error: ValidationError): string;
",
                            "name": "stringifyValidationErrors.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "schema-utils",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export { set } from \\"./set\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { Schema } from \\"../../Schema\\";
export declare function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>>;
",
                            "name": "set.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "set",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export declare function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(parsedDiscriminant: ParsedDiscriminant, rawDiscriminant: RawDiscriminant): Discriminant<RawDiscriminant, ParsedDiscriminant>;
export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                            "name": "discriminant.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { discriminant, type Discriminant } from \\"./discriminant\\";
export { type inferParsedDiscriminant, type inferParsedUnion, type inferRawDiscriminant, type inferRawUnion, type UnionSubtypes, } from \\"./types\\";
export { union } from \\"./union\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";
export declare type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};
export declare type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];
export declare type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];
export declare type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<infer Raw, any> ? Raw : never;
export declare type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<any, infer Parsed> ? Parsed : never;
",
                            "name": "types.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "import { ObjectLikeSchema } from \\"../object-like\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedUnion, inferRawUnion, UnionSubtypes } from \\"./types\\";
export declare function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(discriminant: D, union: U): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>>;
",
                            "name": "union.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "union",
                        "type": "directory",
                      },
                    ],
                    "name": "builders",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./builders\\";
export { type inferParsed, type inferRaw, type Schema, type SchemaOptions } from \\"./Schema\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export declare type MaybePromise<T> = T | Promise<T>;
",
                        "name": "MaybePromise.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare type OptionalRecord<K extends string | number, V> = Record<K, V | undefined>;
",
                        "name": "OptionalRecord.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;
export declare type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K] ? K : null extends T[K] ? K : 1 extends (any extends T[K] ? 0 : 1) ? never : K;
}[keyof T];
export declare type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                        "name": "addQuestionMarksToNullableProperties.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";
export declare function createIdentitySchemaCreator<T>(schemaType: SchemaType, validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>): () => Schema<T, T>;
",
                        "name": "createIdentitySchemaCreator.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare function entries<T>(object: T): [keyof T, T[keyof T]][];
",
                        "name": "entries.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K>;
",
                        "name": "filterObject.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
export declare function isPlainObject(value: unknown): value is Record<string, unknown>;
",
                        "name": "isPlainObject.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare function keys<T>(object: T): (keyof T)[];
",
                        "name": "keys.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]];
",
                        "name": "partition.d.ts",
                        "type": "file",
                      },
                    ],
                    "name": "utils",
                    "type": "directory",
                  },
                ],
                "name": "schemas",
                "type": "directory",
              },
            ],
            "name": "core",
            "type": "directory",
          },
          Object {
            "contents": "export * as Fiddle from \\"./api\\";
export { FiddleClient } from \\"./Client\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * from \\"./resources\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * as remoteGen from \\"./remoteGen\\";
export * from \\"./remoteGen/types\\";
export * from \\"./remoteGen/client/requests\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Error: core.serialization.Schema<serializers.remoteGen.createJob.Error.Raw, Fiddle.remoteGen.createJob.Error>;
export declare namespace Error {
    type Raw = Error.IllegalApiNameError | Error.GeneratorsDoNotExistError | Error.CannotPublishToNpmScope | Error.CannotPublishToMavenGroup | Error.InsufficientPermissions;
    interface IllegalApiNameError {
        error: \\"IllegalApiNameError\\";
    }
    interface GeneratorsDoNotExistError {
        error: \\"GeneratorsDoNotExistError\\";
        content: serializers.GeneratorsDoNotExistErrorBodyType.Raw;
    }
    interface CannotPublishToNpmScope {
        error: \\"CannotPublishToNpmScope\\";
        content: serializers.CannotPublishToNpmScopeDetails.Raw;
    }
    interface CannotPublishToMavenGroup {
        error: \\"CannotPublishToMavenGroup\\";
        content: serializers.CannotPublishToMavenGroupDetails.Raw;
    }
    interface InsufficientPermissions {
        error: \\"InsufficientPermissions\\";
        content: serializers.InsufficientPermissionsDetails.Raw;
    }
}
",
                            "name": "createJob.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Error: core.serialization.Schema<serializers.remoteGen.createJobV2.Error.Raw, Fiddle.remoteGen.createJobV2.Error>;
export declare namespace Error {
    type Raw = Error.IllegalApiNameError | Error.GeneratorsDoNotExistError | Error.CannotPublishToNpmScope | Error.CannotPublishToMavenGroup | Error.InsufficientPermissions;
    interface IllegalApiNameError {
        error: \\"IllegalApiNameError\\";
    }
    interface GeneratorsDoNotExistError {
        error: \\"GeneratorsDoNotExistError\\";
        content: serializers.GeneratorsDoNotExistErrorBodyType.Raw;
    }
    interface CannotPublishToNpmScope {
        error: \\"CannotPublishToNpmScope\\";
        content: serializers.CannotPublishToNpmScopeDetails.Raw;
    }
    interface CannotPublishToMavenGroup {
        error: \\"CannotPublishToMavenGroup\\";
        content: serializers.CannotPublishToMavenGroupDetails.Raw;
    }
    interface InsufficientPermissions {
        error: \\"InsufficientPermissions\\";
        content: serializers.InsufficientPermissionsDetails.Raw;
    }
}
",
                            "name": "createJobV2.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.remoteGen.getJobStatus.Response.Raw, Record<Fiddle.RemoteGenTaskId, Fiddle.Task | undefined>>;
export declare namespace Response {
    type Raw = Record<serializers.RemoteGenTaskId.Raw, serializers.Task.Raw | null | undefined>;
}
",
                            "name": "getJobStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export * as createJob from \\"./createJob\\";
export * as createJobV2 from \\"./createJobV2\\";
export * as getJobStatus from \\"./getJobStatus\\";
export * from \\"./requests\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../..\\";
import { Fiddle } from \\"../../../../..\\";
import * as core from \\"../../../../../core\\";
export declare const CreateJobRequest: core.serialization.Schema<serializers.CreateJobRequest.Raw, Fiddle.CreateJobRequest>;
export declare namespace CreateJobRequest {
    interface Raw {
        apiName: string;
        organizationName: string;
        version?: string | null;
        generators: serializers.GeneratorConfig.Raw[];
    }
}
",
                                "name": "CreateJobRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../..\\";
import { Fiddle } from \\"../../../../..\\";
import * as core from \\"../../../../../core\\";
export declare const CreateJobRequestV2: core.serialization.Schema<serializers.CreateJobRequestV2.Raw, Fiddle.CreateJobRequestV2>;
export declare namespace CreateJobRequestV2 {
    interface Raw {
        apiName: string;
        organizationName: string;
        version?: string | null;
        generators: serializers.GeneratorConfigV2.Raw[];
        uploadToS3?: boolean | null;
    }
}
",
                                "name": "CreateJobRequestV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export { CreateJobRequest } from \\"./CreateJobRequest\\";
export { CreateJobRequestV2 } from \\"./CreateJobRequestV2\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                            ],
                            "name": "requests",
                            "type": "directory",
                          },
                        ],
                        "name": "client",
                        "type": "directory",
                      },
                      Object {
                        "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CannotPublishToMavenGroupDetails: core.serialization.ObjectSchema<serializers.CannotPublishToMavenGroupDetails.Raw, Fiddle.CannotPublishToMavenGroupDetails>;
export declare namespace CannotPublishToMavenGroupDetails {
    interface Raw {
        generatorId: string;
        invalidGroup: string;
        validGroup: string;
    }
}
",
                            "name": "CannotPublishToMavenGroupDetails.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CannotPublishToNpmScopeDetails: core.serialization.ObjectSchema<serializers.CannotPublishToNpmScopeDetails.Raw, Fiddle.CannotPublishToNpmScopeDetails>;
export declare namespace CannotPublishToNpmScopeDetails {
    interface Raw {
        generatorId: string;
        invalidScope: string;
        validScope: string;
    }
}
",
                            "name": "CannotPublishToNpmScopeDetails.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CreateJobResponse: core.serialization.ObjectSchema<serializers.CreateJobResponse.Raw, Fiddle.CreateJobResponse>;
export declare namespace CreateJobResponse {
    interface Raw {
        jobId: serializers.RemoteGenJobId.Raw;
        taskIds: serializers.RemoteGenTaskId.Raw[];
    }
}
",
                            "name": "CreateJobResponse.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const FailedTaskStatus: core.serialization.ObjectSchema<serializers.FailedTaskStatus.Raw, Fiddle.FailedTaskStatus>;
export declare namespace FailedTaskStatus {
    interface Raw {
        message: string;
        s3PreSignedReadUrl?: string | null;
    }
}
",
                            "name": "FailedTaskStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const FinishedTaskStatus: core.serialization.ObjectSchema<serializers.FinishedTaskStatus.Raw, Fiddle.FinishedTaskStatus>;
export declare namespace FinishedTaskStatus {
    interface Raw {
        hasFilesToDownload: boolean;
        s3PreSignedReadUrl: string;
        s3PreSignedReadUrlV2?: string | null;
    }
}
",
                            "name": "FinishedTaskStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GeneratorConfig: core.serialization.ObjectSchema<serializers.GeneratorConfig.Raw, Fiddle.GeneratorConfig>;
export declare namespace GeneratorConfig {
    interface Raw {
        id: string;
        version: string;
        customConfig?: unknown;
        willDownloadFiles: boolean;
        outputs: serializers.GeneratorOutputs.Raw;
    }
}
",
                            "name": "GeneratorConfig.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GeneratorConfigV2: core.serialization.ObjectSchema<serializers.GeneratorConfigV2.Raw, Fiddle.GeneratorConfigV2>;
export declare namespace GeneratorConfigV2 {
    interface Raw {
        id: string;
        version: string;
        customConfig?: unknown;
        outputMode: serializers.OutputMode.Raw;
    }
}
",
                            "name": "GeneratorConfigV2.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GeneratorIdAndVersion: core.serialization.ObjectSchema<serializers.GeneratorIdAndVersion.Raw, Fiddle.GeneratorIdAndVersion>;
export declare namespace GeneratorIdAndVersion {
    interface Raw {
        id: string;
        version: string;
    }
}
",
                            "name": "GeneratorIdAndVersion.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GeneratorOutputs: core.serialization.ObjectSchema<serializers.GeneratorOutputs.Raw, Fiddle.GeneratorOutputs>;
export declare namespace GeneratorOutputs {
    interface Raw {
        npm?: serializers.NpmOutput.Raw | null;
        maven?: serializers.MavenOutput.Raw | null;
    }
}
",
                            "name": "GeneratorOutputs.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GeneratorsDoNotExistErrorBodyType: core.serialization.ObjectSchema<serializers.GeneratorsDoNotExistErrorBodyType.Raw, Fiddle.GeneratorsDoNotExistErrorBodyType>;
export declare namespace GeneratorsDoNotExistErrorBodyType {
    interface Raw {
        nonExistentGenerators: serializers.GeneratorIdAndVersion.Raw[];
    }
}
",
                            "name": "GeneratorsDoNotExistErrorBodyType.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GithubOutputMode: core.serialization.ObjectSchema<serializers.GithubOutputMode.Raw, Fiddle.GithubOutputMode>;
export declare namespace GithubOutputMode {
    interface Raw {
        owner: string;
        repo: string;
        publishInfo?: serializers.GithubPublishInfo.Raw | null;
    }
}
",
                            "name": "GithubOutputMode.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GithubPublishInfo: core.serialization.Schema<serializers.GithubPublishInfo.Raw, Fiddle.GithubPublishInfo>;
export declare namespace GithubPublishInfo {
    type Raw = GithubPublishInfo.Npm | GithubPublishInfo.Maven | GithubPublishInfo.Postman;
    interface Npm extends serializers.NpmOutputWithOptionalToken.Raw {
        type: \\"npm\\";
    }
    interface Maven extends serializers.MavenOutputWithOptionalCreds.Raw {
        type: \\"maven\\";
    }
    interface Postman extends serializers.PostmanOutput.Raw {
        type: \\"postman\\";
    }
}
",
                            "name": "GithubPublishInfo.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const InsufficientPermissionsDetails: core.serialization.ObjectSchema<serializers.InsufficientPermissionsDetails.Raw, Fiddle.InsufficientPermissionsDetails>;
export declare namespace InsufficientPermissionsDetails {
    interface Raw {
        dummy?: string | null;
    }
}
",
                            "name": "InsufficientPermissionsDetails.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const LogLevel: core.serialization.Schema<serializers.LogLevel.Raw, Fiddle.LogLevel>;
export declare namespace LogLevel {
    type Raw = \\"DEBUG\\" | \\"INFO\\" | \\"WARN\\" | \\"ERROR\\";
}
",
                            "name": "LogLevel.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MavenCoordinate: core.serialization.ObjectSchema<serializers.MavenCoordinate.Raw, Fiddle.MavenCoordinate>;
export declare namespace MavenCoordinate {
    interface Raw {
        group: string;
        artifact: string;
        version: string;
    }
}
",
                            "name": "MavenCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MavenOutput: core.serialization.ObjectSchema<serializers.MavenOutput.Raw, Fiddle.MavenOutput>;
export declare namespace MavenOutput {
    interface Raw {
        registryUrl: string;
        username: string;
        password: string;
        coordinate: string;
    }
}
",
                            "name": "MavenOutput.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MavenOutputWithOptionalCreds: core.serialization.ObjectSchema<serializers.MavenOutputWithOptionalCreds.Raw, Fiddle.MavenOutputWithOptionalCreds>;
export declare namespace MavenOutputWithOptionalCreds {
    interface Raw {
        registryUrl: string;
        coordinate: string;
        credentials?: serializers.UsernamePassword.Raw | null;
    }
}
",
                            "name": "MavenOutputWithOptionalCreds.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const NpmCoordinate: core.serialization.ObjectSchema<serializers.NpmCoordinate.Raw, Fiddle.NpmCoordinate>;
export declare namespace NpmCoordinate {
    interface Raw {
        name: string;
        version: string;
    }
}
",
                            "name": "NpmCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const NpmOutput: core.serialization.ObjectSchema<serializers.NpmOutput.Raw, Fiddle.NpmOutput>;
export declare namespace NpmOutput {
    interface Raw {
        registryUrl: string;
        packageName: string;
        token: string;
    }
}
",
                            "name": "NpmOutput.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const NpmOutputWithOptionalToken: core.serialization.ObjectSchema<serializers.NpmOutputWithOptionalToken.Raw, Fiddle.NpmOutputWithOptionalToken>;
export declare namespace NpmOutputWithOptionalToken {
    interface Raw {
        registryUrl: string;
        packageName: string;
        token?: string | null;
    }
}
",
                            "name": "NpmOutputWithOptionalToken.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const OutputMode: core.serialization.Schema<serializers.OutputMode.Raw, Fiddle.OutputMode>;
export declare namespace OutputMode {
    type Raw = OutputMode.Publish | OutputMode.PublishV2 | OutputMode.DownloadFiles | OutputMode.Github;
    interface Publish extends serializers.PublishOutputMode.Raw {
        type: \\"publish\\";
    }
    interface PublishV2 {
        type: \\"publishV2\\";
        publishV2: serializers.PublishOutputModeV2.Raw;
    }
    interface DownloadFiles {
        type: \\"downloadFiles\\";
    }
    interface Github extends serializers.GithubOutputMode.Raw {
        type: \\"github\\";
    }
}
",
                            "name": "OutputMode.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Package: core.serialization.ObjectSchema<serializers.Package.Raw, Fiddle.Package>;
export declare namespace Package {
    interface Raw {
        coordinate: serializers.PackageCoordinate.Raw;
        status: serializers.PackagePublishStatus.Raw;
    }
}
",
                            "name": "Package.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PackageCoordinate: core.serialization.Schema<serializers.PackageCoordinate.Raw, Fiddle.PackageCoordinate>;
export declare namespace PackageCoordinate {
    type Raw = PackageCoordinate.Npm | PackageCoordinate.Maven | PackageCoordinate.Pypi;
    interface Npm extends serializers.NpmCoordinate.Raw {
        _type: \\"npm\\";
    }
    interface Maven extends serializers.MavenCoordinate.Raw {
        _type: \\"maven\\";
    }
    interface Pypi extends serializers.PypiCoordinate.Raw {
        _type: \\"pypi\\";
    }
}
",
                            "name": "PackageCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PackagePublishStatus: core.serialization.Schema<serializers.PackagePublishStatus.Raw, Fiddle.PackagePublishStatus>;
export declare namespace PackagePublishStatus {
    type Raw = \\"NOT_STARTED_PUBLISHING\\" | \\"PUBLISHING\\" | \\"PUBLISHED\\" | \\"FAILED_TO_PUBLISH\\";
}
",
                            "name": "PackagePublishStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PostmanOutput: core.serialization.ObjectSchema<serializers.PostmanOutput.Raw, Fiddle.PostmanOutput>;
export declare namespace PostmanOutput {
    interface Raw {
        apiKey: string;
        workspaceId: string;
    }
}
",
                            "name": "PostmanOutput.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PublishOutputMode: core.serialization.ObjectSchema<serializers.PublishOutputMode.Raw, Fiddle.PublishOutputMode>;
export declare namespace PublishOutputMode {
    interface Raw {
        registryOverrides: serializers.RegistryOverrides.Raw;
    }
}
",
                            "name": "PublishOutputMode.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PublishOutputModeV2: core.serialization.Schema<serializers.PublishOutputModeV2.Raw, Fiddle.PublishOutputModeV2>;
export declare namespace PublishOutputModeV2 {
    type Raw = PublishOutputModeV2.NpmOverride | PublishOutputModeV2.MavenOverride | PublishOutputModeV2.Postman;
    interface NpmOverride {
        type: \\"npmOverride\\";
        npmOverride?: serializers.NpmOutput.Raw | null;
    }
    interface MavenOverride {
        type: \\"mavenOverride\\";
        mavenOverride?: serializers.MavenOutput.Raw | null;
    }
    interface Postman extends serializers.PostmanOutput.Raw {
        type: \\"postman\\";
    }
}
",
                            "name": "PublishOutputModeV2.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PypiCoordinate: core.serialization.ObjectSchema<serializers.PypiCoordinate.Raw, Fiddle.PypiCoordinate>;
export declare namespace PypiCoordinate {
    interface Raw {
        name: string;
        version: string;
    }
}
",
                            "name": "PypiCoordinate.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RegistryOverrides: core.serialization.ObjectSchema<serializers.RegistryOverrides.Raw, Fiddle.RegistryOverrides>;
export declare namespace RegistryOverrides {
    interface Raw {
        npm?: serializers.NpmOutput.Raw | null;
        maven?: serializers.MavenOutput.Raw | null;
    }
}
",
                            "name": "RegistryOverrides.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RemoteGenJobId: core.serialization.Schema<serializers.RemoteGenJobId.Raw, Fiddle.RemoteGenJobId>;
export declare namespace RemoteGenJobId {
    type Raw = string;
}
",
                            "name": "RemoteGenJobId.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RemoteGenTaskId: core.serialization.Schema<serializers.RemoteGenTaskId.Raw, Fiddle.RemoteGenTaskId>;
export declare namespace RemoteGenTaskId {
    type Raw = string;
}
",
                            "name": "RemoteGenTaskId.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Task: core.serialization.ObjectSchema<serializers.Task.Raw, Fiddle.Task>;
export declare namespace Task {
    interface Raw {
        status: serializers.TaskStatus.Raw;
        packages: serializers.Package.Raw[];
        logs: serializers.TaskLog.Raw[];
    }
}
",
                            "name": "Task.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TaskLog: core.serialization.ObjectSchema<serializers.TaskLog.Raw, Fiddle.TaskLog>;
export declare namespace TaskLog {
    interface Raw {
        level: serializers.LogLevel.Raw;
        message: string;
    }
}
",
                            "name": "TaskLog.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TaskStatus: core.serialization.Schema<serializers.TaskStatus.Raw, Fiddle.TaskStatus>;
export declare namespace TaskStatus {
    type Raw = TaskStatus.NotStarted | TaskStatus.Running | TaskStatus.Failed | TaskStatus.Finished;
    interface NotStarted {
        _type: \\"notStarted\\";
    }
    interface Running {
        _type: \\"running\\";
    }
    interface Failed extends serializers.FailedTaskStatus.Raw {
        _type: \\"failed\\";
    }
    interface Finished extends serializers.FinishedTaskStatus.Raw {
        _type: \\"finished\\";
    }
}
",
                            "name": "TaskStatus.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { Fiddle } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const UsernamePassword: core.serialization.ObjectSchema<serializers.UsernamePassword.Raw, Fiddle.UsernamePassword>;
export declare namespace UsernamePassword {
    interface Raw {
        username: string;
        password: string;
    }
}
",
                            "name": "UsernamePassword.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export * from \\"./RemoteGenJobId\\";
export * from \\"./RemoteGenTaskId\\";
export * from \\"./GeneratorIdAndVersion\\";
export * from \\"./GeneratorConfig\\";
export * from \\"./GeneratorConfigV2\\";
export * from \\"./OutputMode\\";
export * from \\"./PublishOutputMode\\";
export * from \\"./PublishOutputModeV2\\";
export * from \\"./RegistryOverrides\\";
export * from \\"./GeneratorOutputs\\";
export * from \\"./NpmOutput\\";
export * from \\"./MavenOutput\\";
export * from \\"./PostmanOutput\\";
export * from \\"./GithubOutputMode\\";
export * from \\"./GithubPublishInfo\\";
export * from \\"./NpmOutputWithOptionalToken\\";
export * from \\"./MavenOutputWithOptionalCreds\\";
export * from \\"./UsernamePassword\\";
export * from \\"./Task\\";
export * from \\"./TaskStatus\\";
export * from \\"./FailedTaskStatus\\";
export * from \\"./FinishedTaskStatus\\";
export * from \\"./TaskLog\\";
export * from \\"./LogLevel\\";
export * from \\"./Package\\";
export * from \\"./PackagePublishStatus\\";
export * from \\"./PackageCoordinate\\";
export * from \\"./NpmCoordinate\\";
export * from \\"./MavenCoordinate\\";
export * from \\"./PypiCoordinate\\";
export * from \\"./CreateJobResponse\\";
export * from \\"./GeneratorsDoNotExistErrorBodyType\\";
export * from \\"./CannotPublishToNpmScopeDetails\\";
export * from \\"./CannotPublishToMavenGroupDetails\\";
export * from \\"./InsufficientPermissionsDetails\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                        ],
                        "name": "types",
                        "type": "directory",
                      },
                    ],
                    "name": "remoteGen",
                    "type": "directory",
                  },
                ],
                "name": "resources",
                "type": "directory",
              },
            ],
            "name": "serialization",
            "type": "directory",
          },
        ],
        "name": "types",
        "type": "directory",
      },
    ],
    "name": "package",
    "type": "directory",
  },
]
`;

exports[`runGenerator nursery-property-discriminant 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "name: ci

on: [push]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: yarn && yarn build
  
  publish:
    needs: [ compile ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken \${NPM_TOKEN}
          npm publish --ignore-scripts --access restricted
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}",
            "name": "ci.yml",
            "type": "file",
          },
        ],
        "name": "workflows",
        "type": "directory",
      },
    ],
    "name": ".github",
    "type": "directory",
  },
  Object {
    "contents": "node_modules
.DS_Store
/dist
/Client.d.ts
/Client.js
/environments.d.ts
/environments.js
/index.d.ts
/index.js
/api
/core
/errors
/serialization

# yarn berry
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions",
    "name": ".gitignore",
    "type": "file",
  },
  Object {
    "contents": "tabWidth: 4
printWidth: 120
",
    "name": ".prettierrc.yml",
    "type": "file",
  },
  Object {
    "contents": "{
    \\"name\\": \\"@fern/api\\",
    \\"version\\": \\"0.0.1\\",
    \\"private\\": true,
    \\"repository\\": \\"https://github.com/fern/api}\\",
    \\"files\\": [
        \\"Client.d.ts\\",
        \\"Client.js\\",
        \\"environments.d.ts\\",
        \\"environments.js\\",
        \\"index.d.ts\\",
        \\"index.js\\",
        \\"api\\",
        \\"core\\",
        \\"errors\\",
        \\"serialization\\"
    ],
    \\"main\\": \\"./index.js\\",
    \\"types\\": \\"./index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"build\\": \\"tsc && tsc-alias\\",
        \\"prepack\\": \\"cp -rv dist/. .\\"
    },
    \\"dependencies\\": {
        \\"@types/url-join\\": \\"4.0.1\\",
        \\"axios\\": \\"^0.27.2\\",
        \\"url-join\\": \\"4.0.1\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"tsc-alias\\": \\"1.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
    "name": "package.json",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"./environments\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"./core\\";
import * as serializers from \\"./serialization\\";
import * as errors from \\"./errors\\";
import { Owner } from \\"./api/resources/owner/client/Client\\";
import { Package } from \\"./api/resources/package/client/Client\\";
import { Token } from \\"./api/resources/token/client/Client\\";

export declare namespace FernApiClient {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class FernApiClient {
    constructor(private readonly options: FernApiClient.Options) {}

    public async getString(): Promise<FernApi.RootString> {
        const _response = await core.fetcher({
            url: (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.RootString.parseOrThrow(_response.body as serializers.RootString.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    private _owner: Owner | undefined;

    public get owner(): Owner {
        return (this._owner ??= new Owner(this.options));
    }

    private _package: Package | undefined;

    public get package(): Package {
        return (this._package ??= new Package(this.options));
    }

    private _token: Token | undefined;

    public get token(): Token {
        return (this._token ??= new Token(this.options));
    }
}
",
        "name": "Client.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * as owner from \\"./owner\\";
export * from \\"./owner/types\\";
export * as package_ from \\"./package\\";
export * as token from \\"./token\\";
export * from \\"./token/types\\";
export * from \\"./owner/errors\\";
export * from \\"./token/errors\\";
export * from \\"./owner/client/requests\\";
export * from \\"./token/client/requests\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import urlJoin from \\"url-join\\";
import * as serializers from \\"../../../../serialization\\";
import * as core from \\"../../../../core\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Owner {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Owner {
    constructor(private readonly options: Owner.Options) {}

    /**
     * @throws {FernApi.OwnerAlreadyExistsError}
     */
    public async create(request: FernApi.CreateOwnerRequest): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin((this.options.environment ?? environments.FernApiEnvironment.Production).serverA, \\"/owner\\"),
            method: \\"POST\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.CreateOwnerRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"OwnerAlreadyExistsError\\":
                    throw new FernApi.OwnerAlreadyExistsError(
                        await serializers.OwnerId.parseOrThrow(_response.error.body as serializers.OwnerId.Raw, {
                            allowUnknownKeys: true,
                        })
                    );
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.OwnerNotFoundError}
     */
    public async get(ownerId: FernApi.OwnerId): Promise<FernApi.Owner> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
                \`/owner/\${await serializers.OwnerId.jsonOrThrow(ownerId)}\`
            ),
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.Owner.parseOrThrow(_response.body as serializers.Owner.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"OwnerNotFoundError\\":
                    throw new FernApi.OwnerNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.OwnerNotFoundError}
     */
    public async update(ownerId: FernApi.OwnerId, request: FernApi.UpdateOwnerRequest): Promise<FernApi.Owner> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
                \`/owner/\${await serializers.OwnerId.jsonOrThrow(ownerId)}\`
            ),
            method: \\"PUT\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.UpdateOwnerRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return await serializers.Owner.parseOrThrow(_response.body as serializers.Owner.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"OwnerNotFoundError\\":
                    throw new FernApi.OwnerNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface CreateOwnerRequest {
    ownerId: FernApi.OwnerId;
    data?: unknown;
}
",
                            "name": "CreateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface UpdateOwnerRequest {
    data?: unknown;
}
",
                            "name": "UpdateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateOwnerRequest } from \\"./CreateOwnerRequest\\";
export { UpdateOwnerRequest } from \\"./UpdateOwnerRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";
import { FernApi } from \\"@fern/api\\";

export class OwnerAlreadyExistsError extends errors.FernApiError {
    constructor(body: FernApi.OwnerId) {
        super({
            message: \\"OwnerAlreadyExistsError\\",
            statusCode: 400,
            body: body,
        });
        Object.setPrototypeOf(this, OwnerAlreadyExistsError.prototype);
    }
}
",
                        "name": "OwnerAlreadyExistsError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class OwnerNotFoundError extends errors.FernApiError {
    constructor() {
        super({
            message: \\"OwnerNotFoundError\\",
            statusCode: 404,
        });
        Object.setPrototypeOf(this, OwnerNotFoundError.prototype);
    }
}
",
                        "name": "OwnerNotFoundError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OwnerAlreadyExistsError\\";
export * from \\"./OwnerNotFoundError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "errors",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./errors\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface Owner {
    ownerId: FernApi.OwnerId;
    data?: unknown;
}
",
                        "name": "Owner.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Unique id for an owner.
 */
export type OwnerId = string;
",
                        "name": "OwnerId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OwnerId\\";
export * from \\"./Owner\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "owner",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";
import * as serializers from \\"../../../../serialization\\";
import * as errors from \\"../../../../errors\\";
import { Nested } from \\"../resources/nested/client/Client\\";

export declare namespace Package {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Package {
    constructor(private readonly options: Package.Options) {}

    public async getString(): Promise<FernApi.package_.PackageString> {
        const _response = await core.fetcher({
            url: (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.package_.PackageString.parseOrThrow(
                _response.body as serializers.package_.PackageString.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    private _nested: Nested | undefined;

    public get nested(): Nested {
        return (this._nested ??= new Nested(this.options));
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as nested from \\"./nested\\";
export * from \\"./nested/types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../../core\\";
import * as serializers from \\"../../../../../../serialization\\";
import * as errors from \\"../../../../../../errors\\";

export declare namespace Nested {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Nested {
    constructor(private readonly options: Nested.Options) {}

    public async getString(): Promise<FernApi.package_.NestedString> {
        const _response = await core.fetcher({
            url: (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.package_.NestedString.parseOrThrow(
                _response.body as serializers.package_.NestedString.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                                "name": "Client.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type NestedString = string;
",
                                "name": "NestedString.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./NestedString\\";
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "nested",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type PackageString = string;
",
                        "name": "PackageString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PackageString\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "package",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import urlJoin from \\"url-join\\";
import * as serializers from \\"../../../../serialization\\";
import * as core from \\"../../../../core\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Token {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Token {
    constructor(private readonly options: Token.Options) {}

    /**
     * @throws {FernApi.OwnerNotFoundError}
     */
    public async create(request: FernApi.CreateTokenRequest): Promise<FernApi.CreateTokenResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverB,
                \\"/tokens/create\\"
            ),
            method: \\"POST\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.CreateTokenRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return await serializers.CreateTokenResponse.parseOrThrow(
                _response.body as serializers.CreateTokenResponse.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"OwnerNotFoundError\\":
                    throw new FernApi.OwnerNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.TokenNotFoundError}
     */
    public async getTokenMetadata(request: FernApi.GetTokenMetadataRequest): Promise<FernApi.TokenMetadata> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverB,
                \\"/tokens/metadata\\"
            ),
            method: \\"POST\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.GetTokenMetadataRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return await serializers.TokenMetadata.parseOrThrow(_response.body as serializers.TokenMetadata.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"TokenNotFoundError\\":
                    throw new FernApi.TokenNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.OwnerNotFoundError}
     * @throws {FernApi.UnknownError}
     */
    public async getTokensForOwner(ownerId: FernApi.OwnerId): Promise<FernApi.TokenMetadata[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverB,
                \`/tokens/owner/\${await serializers.OwnerId.jsonOrThrow(ownerId)}\`
            ),
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.token.getTokensForOwner.Response.parseOrThrow(
                _response.body as serializers.token.getTokensForOwner.Response.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"OwnerNotFoundError\\":
                    throw new FernApi.OwnerNotFoundError();
                case \\"UnknownError\\":
                    throw new FernApi.UnknownError(_response.error.body);
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface CreateTokenRequest {
    ownerId: FernApi.OwnerId;
    description?: string;
}
",
                            "name": "CreateTokenRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GetTokenMetadataRequest {
    token: string;
}
",
                            "name": "GetTokenMetadataRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateTokenRequest } from \\"./CreateTokenRequest\\";
export { GetTokenMetadataRequest } from \\"./GetTokenMetadataRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class TokenNotFoundError extends errors.FernApiError {
    constructor() {
        super({
            message: \\"TokenNotFoundError\\",
            statusCode: 404,
        });
        Object.setPrototypeOf(this, TokenNotFoundError.prototype);
    }
}
",
                        "name": "TokenNotFoundError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class UnknownError extends errors.FernApiError {
    constructor(body?: unknown) {
        super({
            message: \\"UnknownError\\",
            statusCode: 500,
            body: body,
        });
        Object.setPrototypeOf(this, UnknownError.prototype);
    }
}
",
                        "name": "UnknownError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TokenNotFoundError\\";
export * from \\"./UnknownError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "errors",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./errors\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface CreateTokenResponse {
    token: string;
    tokenId: FernApi.TokenId;
}
",
                        "name": "CreateTokenResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TokenId = string;
",
                        "name": "TokenId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface TokenMetadata {
    tokenId: FernApi.TokenId;
    ownerId: FernApi.OwnerId;
    description?: string;
    createdTime: Date;
    status: FernApi.TokenStatus;
}
",
                        "name": "TokenMetadata.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export type TokenStatus =
    | FernApi.TokenStatus.Active
    | FernApi.TokenStatus.Expired
    | FernApi.TokenStatus.Revoked
    | FernApi.TokenStatus._Unknown;

export declare namespace TokenStatus {
    interface Active extends _Utils {
        type: \\"active\\";
    }

    interface Expired extends _Utils {
        type: \\"expired\\";
    }

    interface Revoked extends _Utils {
        type: \\"revoked\\";
    }

    interface _Unknown extends _Utils {
        type: void;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.TokenStatus._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        active: () => _Result;
        expired: () => _Result;
        revoked: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const TokenStatus = {
    active: (): FernApi.TokenStatus.Active => {
        return {
            type: \\"active\\",
            _visit: function <_Result>(
                this: FernApi.TokenStatus.Active,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    expired: (): FernApi.TokenStatus.Expired => {
        return {
            type: \\"expired\\",
            _visit: function <_Result>(
                this: FernApi.TokenStatus.Expired,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    revoked: (): FernApi.TokenStatus.Revoked => {
        return {
            type: \\"revoked\\",
            _visit: function <_Result>(
                this: FernApi.TokenStatus.Revoked,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    _unknown: (value: { type: string }): FernApi.TokenStatus._Unknown => {
        return {
            ...(value as any),
            _visit: function <_Result>(
                this: FernApi.TokenStatus._Unknown,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.TokenStatus, visitor: FernApi.TokenStatus._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"active\\":
                return visitor.active();
            case \\"expired\\":
                return visitor.expired();
            case \\"revoked\\":
                return visitor.revoked();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "TokenStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TokenId\\";
export * from \\"./CreateTokenResponse\\";
export * from \\"./TokenMetadata\\";
export * from \\"./TokenStatus\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "token",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type RootString = string;
",
                "name": "RootString.ts",
                "type": "file",
              },
              Object {
                "contents": "export * from \\"./RootString\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "types",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "export type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;

export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}

export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.ts",
                "type": "file",
              },
              Object {
                "contents": "import axios, { AxiosError } from \\"axios\\";
import { APIResponse } from \\"./APIResponse\\";

export interface Fetcher {
    fetch: FetchFunction;
}

export type FetchFunction = (args: Fetcher.Args) => Promise<APIResponse<unknown, Fetcher.Error>>;

export declare namespace Fetcher {
    export interface Args {
        url: string;
        method: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
    }

    export type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;

    export interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }

    export interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }

    export interface TimeoutError {
        reason: \\"timeout\\";
    }

    export interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}

export const fetcher: FetchFunction = async (args) => {
    const headers: Record<string, string> = {
        \\"Content-Type\\": \\"application/json\\",
    };

    if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
            if (value != null) {
                headers[key] = value;
            }
        }
    }

    try {
        const response = await axios({
            url: args.url,
            params: args.queryParameters,
            method: args.method,
            headers,
            data: args.body,
            validateStatus: () => true,
            transformResponse: (response) => response,
            timeout: args.timeoutMs ?? 60_000,
            transitional: {
                clarifyTimeoutError: true,
            },
            withCredentials: args.withCredentials,
        });

        let body: unknown;
        if (response.data != null && response.data.length > 0) {
            try {
                body = JSON.parse(response.data) ?? undefined;
            } catch {
                return {
                    ok: false,
                    error: {
                        reason: \\"non-json\\",
                        statusCode: response.status,
                        rawBody: response.data,
                    },
                };
            }
        }

        if (response.status >= 200 && response.status < 300) {
            return {
                ok: true,
                body,
            };
        } else {
            return {
                ok: false,
                error: {
                    reason: \\"status-code\\",
                    statusCode: response.status,
                    body,
                },
            };
        }
    } catch (error) {
        if ((error as AxiosError).code === \\"ETIMEDOUT\\") {
            return {
                ok: false,
                error: {
                    reason: \\"timeout\\",
                },
            };
        }

        return {
            ok: false,
            error: {
                reason: \\"unknown\\",
                errorMessage: (error as AxiosError).message,
            },
        };
    }
};
",
                "name": "Fetcher.ts",
                "type": "file",
              },
              Object {
                "contents": "export type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);

export const Supplier = {
    get: async <T>(supplier: Supplier<T>): Promise<T> => {
        if (typeof supplier === \\"function\\") {
            return (supplier as () => T)();
        } else {
            return supplier;
        }
    },
};
",
                "name": "Supplier.ts",
                "type": "file",
              },
              Object {
                "contents": "export { type APIResponse } from \\"./APIResponse\\";
export { fetcher, type Fetcher, type FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * as serialization from \\"./schemas\\";
export * from \\"./fetcher\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";

export type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;

export type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;

export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}

export const SchemaType = {
    DATE: \\"date\\",
    ENUM: \\"enum\\",
    LIST: \\"list\\",
    STRING_LITERAL: \\"stringLiteral\\",
    OBJECT: \\"object\\",
    ANY: \\"any\\",
    BOOLEAN: \\"boolean\\",
    NUMBER: \\"number\\",
    STRING: \\"string\\",
    UNKNOWN: \\"unknown\\",
    RECORD: \\"record\\",
    SET: \\"set\\",
    UNION: \\"union\\",
    OPTIONAL: \\"optional\\",
} as const;
export type SchemaType = typeof SchemaType[keyof typeof SchemaType];

export type MaybeValid<T> = Valid<T> | Invalid;

export interface Valid<T> {
    ok: true;
    value: T;
}

export interface Invalid {
    ok: false;
    errors: ValidationError[];
}

export interface ValidationError {
    path: string[];
    message: string;
}

export interface SchemaOptions {
    /**
     * @default false
     */
    allowUnknownKeys?: boolean;
}
",
                "name": "Schema.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaType } from \\"../../Schema\\";
import { getSchemaUtils } from \\"../schema-utils\\";

// https://stackoverflow.com/questions/12756159/regex-and-iso8601-formatted-datetime
const ISO_8601_REGEX =
    /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;

export function date(): Schema<string, Date> {
    const baseSchema: BaseSchema<string, Date> = {
        parse: (raw) => {
            if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
                return {
                    ok: true,
                    value: new Date(raw),
                };
            } else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not an ISO 8601 date string\\",
                        },
                    ],
                };
            }
        },
        json: (date) => {
            if (date instanceof Date) {
                return {
                    ok: true,
                    value: date.toISOString(),
                };
            } else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Date object\\",
                        },
                    ],
                };
            }
        },
        getType: () => SchemaType.DATE,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "date.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { date } from \\"./date\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "date",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema, SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]> {
    const validValues = new Set<string>(values);

    const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
        if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
            return {
                ok: true,
                value: value as U,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \\"Not one of the allowed values\\",
                    },
                ],
            };
        }
    });

    return schemaCreator();
}
",
                        "name": "enum.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { enum_ } from \\"./enum\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "enum",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./union\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { lazy, type SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;

export function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed> {
    const baseSchema = constructLazyBaseSchema(getter);
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

export function constructLazyBaseSchema<Raw, Parsed>(
    getter: SchemaGetter<Schema<Raw, Parsed>>
): BaseSchema<Raw, Parsed> {
    return {
        parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
        json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
        getType: async () => (await getMemoizedSchema(getter)).getType(),
    };
}

type MemoizedGetter<SchemaType extends Schema<any, any>> = SchemaGetter<SchemaType> & { __zurg_memoized?: SchemaType };

export async function getMemoizedSchema<SchemaType extends Schema<any, any>>(
    getter: SchemaGetter<SchemaType>
): Promise<SchemaType> {
    const castedGetter = getter as MemoizedGetter<SchemaType>;
    if (castedGetter.__zurg_memoized == null) {
        castedGetter.__zurg_memoized = await getter();
    }
    return castedGetter.__zurg_memoized;
}
",
                        "name": "lazy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { getObjectUtils } from \\"../object\\";
import { getObjectLikeUtils } from \\"../object-like\\";
import { BaseObjectSchema, ObjectSchema } from \\"../object/types\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { constructLazyBaseSchema, getMemoizedSchema, SchemaGetter } from \\"./lazy\\";

export function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed> {
    const baseSchema: BaseObjectSchema<Raw, Parsed> = {
        ...constructLazyBaseSchema(getter),
        _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
        _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties(),
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}
",
                        "name": "lazyObject.ts",
                        "type": "file",
                      },
                    ],
                    "name": "lazy",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { list } from \\"./list\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]> {
    const baseSchema: BaseSchema<Raw[], Parsed[]> = {
        parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
        json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
        getType: () => SchemaType.LIST,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformArray<Raw, Parsed>(
    value: unknown,
    transformItem: (item: Raw) => MaybePromise<MaybeValid<Parsed>>
): Promise<MaybeValid<Parsed[]>> {
    if (!Array.isArray(value)) {
        return {
            ok: false,
            errors: [
                {
                    message: \\"Not a list\\",
                    path: [],
                },
            ],
        };
    }

    const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));

    return maybeValidItems.reduce<MaybeValid<Parsed[]>>(
        (acc, item, index) => {
            if (acc.ok && item.ok) {
                return {
                    ok: true,
                    value: [...acc.value, item.value],
                };
            }

            const errors: ValidationError[] = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!item.ok) {
                errors.push(
                    ...item.errors.map((error) => ({
                        path: [\`[\${index}]\`, ...error.path],
                        message: error.message,
                    }))
                );
            }

            return {
                ok: false,
                errors,
            };
        },
        { ok: true, value: [] }
    );
}
",
                        "name": "list.ts",
                        "type": "file",
                      },
                    ],
                    "name": "list",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema, SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export function stringLiteral<V extends string>(literal: V): Schema<V, V> {
    const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
        if (value === literal) {
            return {
                ok: true,
                value: literal,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \`Not equal to \\"\${literal}\\"\`,
                    },
                ],
            };
        }
    });

    return schemaCreator();
}
",
                        "name": "stringLiteral.ts",
                        "type": "file",
                      },
                    ],
                    "name": "literals",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { getObjectUtils, object } from \\"./object\\";
export { isProperty, property, type Property } from \\"./property\\";
export {
    type BaseObjectSchema,
    type inferObjectSchemaFromPropertySchemas,
    type inferParsedObject,
    type inferParsedObjectFromPropertySchemas,
    type inferParsedPropertySchema,
    type inferRawKey,
    type inferRawObject,
    type inferRawObjectFromPropertySchemas,
    type inferRawPropertySchema,
    type ObjectSchema,
    type ObjectUtils,
    type PropertySchemas,
} from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { entries } from \\"../../utils/entries\\";
import { filterObject } from \\"../../utils/filterObject\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { keys } from \\"../../utils/keys\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { partition } from \\"../../utils/partition\\";
import { getObjectLikeUtils } from \\"../object-like\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { isProperty } from \\"./property\\";
import {
    BaseObjectSchema,
    inferObjectSchemaFromPropertySchemas,
    inferParsedObjectFromPropertySchemas,
    inferRawObjectFromPropertySchemas,
    ObjectSchema,
    ObjectUtils,
    PropertySchemas,
} from \\"./types\\";

interface ObjectPropertyWithRawKey {
    rawKey: string;
    parsedKey: string;
    valueSchema: Schema<any, any>;
}

export function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(
    schemas: T
): inferObjectSchemaFromPropertySchemas<T> {
    const baseSchema: BaseObjectSchema<
        inferRawObjectFromPropertySchemas<T>,
        inferParsedObjectFromPropertySchemas<T>
    > = {
        _getRawProperties: () =>
            Promise.resolve(
                Object.entries(schemas).map(([parsedKey, propertySchema]) =>
                    isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
                ) as unknown as (keyof inferRawObjectFromPropertySchemas<T>)[]
            ),
        _getParsedProperties: () =>
            Promise.resolve(keys(schemas) as unknown as (keyof inferParsedObjectFromPropertySchemas<T>)[]),

        parse: async (raw, opts) => {
            const rawKeyToProperty: Record<string, ObjectPropertyWithRawKey> = {};
            const requiredKeys: string[] = [];

            for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
                const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
                const valueSchema: Schema<any, any> = isProperty(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;

                const property: ObjectPropertyWithRawKey = {
                    rawKey,
                    parsedKey: parsedKey as string,
                    valueSchema,
                };

                rawKeyToProperty[rawKey] = property;

                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(rawKey);
                }
            }

            return validateAndTransformObject({
                value: raw,
                requiredKeys,
                getProperty: (rawKey) => {
                    const property = rawKeyToProperty[rawKey];
                    if (property == null) {
                        return undefined;
                    }
                    return {
                        transformedKey: property.parsedKey,
                        transform: (propertyValue) => property.valueSchema.parse(propertyValue, opts),
                    };
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },

        json: async (parsed, opts) => {
            const requiredKeys: string[] = [];

            for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
                const valueSchema: Schema<any, any> = isProperty(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;

                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(parsedKey as string);
                }
            }

            return validateAndTransformObject({
                value: parsed,
                requiredKeys,
                getProperty: (
                    parsedKey
                ):
                    | { transformedKey: string; transform: (propertyValue: unknown) => MaybePromise<MaybeValid<any>> }
                    | undefined => {
                    const property = schemas[parsedKey as keyof T];

                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                    if (property == null) {
                        return undefined;
                    }

                    if (isProperty(property)) {
                        return {
                            transformedKey: property.rawKey,
                            transform: (propertyValue) => property.valueSchema.json(propertyValue, opts),
                        };
                    } else {
                        return {
                            transformedKey: parsedKey,
                            transform: (propertyValue) => property.json(propertyValue, opts),
                        };
                    }
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },

        getType: () => SchemaType.OBJECT,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}

async function validateAndTransformObject<Transformed>({
    value,
    requiredKeys,
    getProperty,
    allowUnknownKeys,
}: {
    value: unknown;
    requiredKeys: string[];
    getProperty: (
        preTransformedKey: string
    ) => { transformedKey: string; transform: (propertyValue: unknown) => MaybePromise<MaybeValid<any>> } | undefined;
    allowUnknownKeys: boolean;
}): Promise<MaybeValid<Transformed>> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }

    const missingRequiredKeys = new Set(requiredKeys);
    const errors: ValidationError[] = [];
    const transformed: Record<string | number | symbol, any> = {};

    for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
        const property = getProperty(preTransformedKey);

        if (property != null) {
            missingRequiredKeys.delete(preTransformedKey);

            const value = await property.transform(preTransformedItemValue);
            if (value.ok) {
                transformed[property.transformedKey] = value.value;
            } else {
                errors.push(
                    ...value.errors.map((error) => ({
                        path: [preTransformedKey, ...error.path],
                        message: error.message,
                    }))
                );
            }
        } else if (allowUnknownKeys) {
            transformed[preTransformedKey] = preTransformedItemValue;
        } else {
            errors.push({
                path: [preTransformedKey],
                message: \`Unrecognized key \\"\${preTransformedKey}\\"\`,
            });
        }
    }

    errors.push(
        ...requiredKeys
            .filter((key) => missingRequiredKeys.has(key))
            .map((key) => ({
                path: [],
                message: \`Missing required key \\"\${key}\\"\`,
            }))
    );

    if (errors.length === 0) {
        return {
            ok: true,
            value: transformed as Transformed,
        };
    } else {
        return {
            ok: false,
            errors,
        };
    }
}

export function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed> {
    return {
        extend: <RawExtension, ParsedExtension>(extension: ObjectSchema<RawExtension, ParsedExtension>) => {
            const baseSchema: BaseObjectSchema<Raw & RawExtension, Parsed & ParsedExtension> = {
                _getParsedProperties: async () => [
                    ...(await schema._getParsedProperties()),
                    ...(await extension._getParsedProperties()),
                ],
                _getRawProperties: async () => [
                    ...(await schema._getRawProperties()),
                    ...(await extension._getRawProperties()),
                ],
                parse: async (raw, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getRawProperties(),
                        value: raw,
                        transformBase: (rawBase) => schema.parse(rawBase, opts),
                        transformExtension: (rawExtension) => extension.parse(rawExtension, opts),
                    });
                },
                json: async (parsed, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getParsedProperties(),
                        value: parsed,
                        transformBase: (parsedBase) => schema.json(parsedBase, opts),
                        transformExtension: (parsedExtension) => extension.json(parsedExtension, opts),
                    });
                },
                getType: () => SchemaType.OBJECT,
            };

            return {
                ...baseSchema,
                ...getSchemaUtils(baseSchema),
                ...getObjectLikeUtils(baseSchema),
                ...getObjectUtils(baseSchema),
            };
        },
    };
}

async function validateAndTransformExtendedObject<PreTransformedExtension, TransformedBase, TransformedExtension>({
    extensionKeys,
    value,
    transformBase,
    transformExtension,
}: {
    extensionKeys: (keyof PreTransformedExtension)[];
    value: unknown;
    transformBase: (value: unknown) => MaybePromise<MaybeValid<TransformedBase>>;
    transformExtension: (value: unknown) => MaybePromise<MaybeValid<TransformedExtension>>;
}): Promise<MaybeValid<TransformedBase & TransformedExtension>> {
    const extensionPropertiesSet = new Set(extensionKeys);
    const [extensionProperties, baseProperties] = partition(keys(value), (key) =>
        extensionPropertiesSet.has(key as keyof PreTransformedExtension)
    );

    const transformedBase = await transformBase(filterObject(value, baseProperties));
    const transformedExtension = await transformExtension(filterObject(value, extensionProperties));

    if (transformedBase.ok && transformedExtension.ok) {
        return {
            ok: true,
            value: {
                ...transformedBase.value,
                ...transformedExtension.value,
            },
        };
    } else {
        return {
            ok: false,
            errors: [
                ...(transformedBase.ok ? [] : transformedBase.errors),
                ...(transformedExtension.ok ? [] : transformedExtension.errors),
            ],
        };
    }
}

async function isSchemaRequired(schema: Schema<any, any>): Promise<boolean> {
    return !(await isSchemaOptional(schema));
}

async function isSchemaOptional(schema: Schema<any, any>): Promise<boolean> {
    switch (await schema.getType()) {
        case SchemaType.ANY:
        case SchemaType.UNKNOWN:
        case SchemaType.OPTIONAL:
            return true;
        default:
            return false;
    }
}
",
                        "name": "object.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";

export function property<RawKey extends string, RawValue, ParsedValue>(
    rawKey: RawKey,
    valueSchema: Schema<RawValue, ParsedValue>
): Property<RawKey, RawValue, ParsedValue> {
    return {
        rawKey,
        valueSchema,
        isProperty: true,
    };
}

export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}

export function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O {
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    return (maybeProperty as O).isProperty;
}
",
                        "name": "property.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";

export type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> &
    ObjectLikeUtils<Raw, Parsed> &
    ObjectUtils<Raw, Parsed> &
    SchemaUtils<Raw, Parsed>;

export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}

export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(
        schemas: ObjectSchema<RawExtension, ParsedExtension>
    ) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}

export type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;

export type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed>
    ? Parsed
    : never;

export type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<
    inferRawObjectFromPropertySchemas<T>,
    inferParsedObjectFromPropertySchemas<T>
>;

export type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    addQuestionMarksToNullableProperties<{
        [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
    }>;

export type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    addQuestionMarksToNullableProperties<{
        [K in keyof T]: inferParsedPropertySchema<T[K]>;
    }>;

export type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<
    ParsedKeys,
    Property<any, any, any> | Schema<any, any>
>;

export type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<
    any,
    infer Raw,
    any
>
    ? Raw
    : P extends Schema<any, any>
    ? inferRaw<P>
    : never;

export type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<
    any,
    any,
    infer Parsed
>
    ? Parsed
    : P extends Schema<any, any>
    ? inferParsed<P>
    : never;

export type inferRawKey<
    ParsedKey extends string | number | symbol,
    P extends Property<any, any, any> | Schema<any, any>
> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "object",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { filterObject } from \\"../../utils/filterObject\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";

export function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed> {
    return {
        withParsedProperties: (properties) => withParsedProperties(schema, properties),
    };
}

/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */

export function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(
    objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>,
    properties: { [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]) }
): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties> {
    const objectSchema: BaseSchema<RawObjectShape, ParsedObjectShape & Properties> = {
        parse: async (raw, opts) => {
            const parsedObject = await objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
                return parsedObject;
            }

            const additionalProperties = Object.entries(properties).reduce<Record<string, any>>(
                (processed, [key, value]) => {
                    return {
                        ...processed,
                        [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value,
                    };
                },
                {}
            );

            return {
                ok: true,
                value: {
                    ...parsedObject.value,
                    ...(additionalProperties as Properties),
                },
            };
        },

        json: (parsed, opts) => {
            if (!isPlainObject(parsed)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: NOT_AN_OBJECT_ERROR_MESSAGE,
                        },
                    ],
                };
            }

            // strip out added properties
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = filterObject(
                parsed,
                Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
            );

            return objectLike.json(parsedWithoutAddedProperties as ParsedObjectShape, opts);
        },

        getType: () => objectLike.getType(),
    };

    return {
        ...objectSchema,
        ...getSchemaUtils(objectSchema),
        ...getObjectLikeUtils(objectSchema),
    };
}
",
                        "name": "getObjectLikeUtils.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export { type ObjectLikeSchema, type ObjectLikeUtils } from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";

export type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> &
    BaseSchema<Raw, Parsed> &
    ObjectLikeUtils<Raw, Parsed>;

export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "object-like",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const any = createIdentitySchemaCreator<any>(SchemaType.ANY, (value) => ({ ok: true, value }));
",
                        "name": "any.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const boolean = createIdentitySchemaCreator<boolean>(SchemaType.BOOLEAN, (value) => {
    if (typeof value === \\"boolean\\") {
        return {
            ok: true,
            value,
        };
    } else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a boolean\\",
                },
            ],
        };
    }
});
",
                        "name": "boolean.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const number = createIdentitySchemaCreator<number>(SchemaType.NUMBER, (value) => {
    if (typeof value === \\"number\\") {
        return {
            ok: true,
            value,
        };
    } else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a number\\",
                },
            ],
        };
    }
});
",
                        "name": "number.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const string = createIdentitySchemaCreator<string>(SchemaType.STRING, (value) => {
    if (typeof value === \\"string\\") {
        return {
            ok: true,
            value,
        };
    } else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a string\\",
                },
            ],
        };
    }
});
",
                        "name": "string.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const unknown = createIdentitySchemaCreator<unknown>(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
",
                        "name": "unknown.ts",
                        "type": "file",
                      },
                    ],
                    "name": "primitives",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { record } from \\"./record\\";
export { type BaseRecordSchema, type RecordSchema } from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { entries } from \\"../../utils/entries\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { BaseRecordSchema, RecordSchema } from \\"./types\\";

export function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(
    keySchema: Schema<RawKey, ParsedKey>,
    valueSchema: Schema<RawValue, ParsedValue>
): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> {
    const baseSchema: BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> = {
        parse: async (raw, opts) => {
            return validateAndTransformRecord({
                value: raw,
                isKeyNumeric: (await keySchema.getType()) === SchemaType.NUMBER,
                transformKey: (key) => keySchema.parse(key, opts),
                transformValue: (value) => valueSchema.parse(value, opts),
            });
        },
        json: async (parsed, opts) => {
            return validateAndTransformRecord({
                value: parsed,
                isKeyNumeric: (await keySchema.getType()) === SchemaType.NUMBER,
                transformKey: (key) => keySchema.json(key, opts),
                transformValue: (value) => valueSchema.json(value, opts),
            });
        },
        getType: () => SchemaType.RECORD,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformRecord<TransformedKey extends string | number, TransformedValue>({
    value,
    isKeyNumeric,
    transformKey,
    transformValue,
}: {
    value: unknown;
    isKeyNumeric: boolean;
    transformKey: (key: string | number) => MaybePromise<MaybeValid<TransformedKey>>;
    transformValue: (value: unknown) => MaybePromise<MaybeValid<TransformedValue>>;
}): Promise<MaybeValid<OptionalRecord<TransformedKey, TransformedValue>>> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }

    return entries(value).reduce<Promise<MaybeValid<OptionalRecord<TransformedKey, TransformedValue>>>>(
        async (accPromise, [stringKey, value]) => {
            // skip nullish keys
            if (value == null) {
                return accPromise;
            }

            const acc = await accPromise;

            let key: string | number = stringKey;
            if (isKeyNumeric) {
                const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
                if (!isNaN(numberKey)) {
                    key = numberKey;
                }
            }
            const transformedKey = await transformKey(key);

            const transformedValue = await transformValue(value);

            if (acc.ok && transformedKey.ok && transformedValue.ok) {
                return {
                    ok: true,
                    value: {
                        ...acc.value,
                        [transformedKey.value]: transformedValue.value,
                    },
                };
            }

            const errors: ValidationError[] = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!transformedKey.ok) {
                errors.push(
                    ...transformedKey.errors.map((error) => ({
                        path: [\`\${key} (key)\`, ...error.path],
                        message: error.message,
                    }))
                );
            }
            if (!transformedValue.ok) {
                errors.push(
                    ...transformedValue.errors.map((error) => ({
                        path: [stringKey, ...error.path],
                        message: error.message,
                    }))
                );
            }

            return {
                ok: false,
                errors,
            };
        },
        Promise.resolve({ ok: true, value: {} as OptionalRecord<TransformedKey, TransformedValue> })
    );
}
",
                        "name": "record.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { SchemaUtils } from \\"../schema-utils\\";

export type RecordSchema<
    RawKey extends string | number,
    RawValue,
    ParsedKey extends string | number,
    ParsedValue
> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> &
    SchemaUtils<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;

export type BaseRecordSchema<
    RawKey extends string | number,
    RawValue,
    ParsedKey extends string | number,
    ParsedValue
> = BaseSchema<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "record",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
import { stringifyValidationError } from \\"./stringifyValidationErrors\\";

export class JsonError extends Error {
    constructor(public readonly errors: ValidationError[]) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        Object.setPrototypeOf(this, JsonError.prototype);
    }
}
",
                        "name": "JsonError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
import { stringifyValidationError } from \\"./stringifyValidationErrors\\";

export class ParseError extends Error {
    constructor(public readonly errors: ValidationError[]) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        Object.setPrototypeOf(this, ParseError.prototype);
    }
}
",
                        "name": "ParseError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaOptions, SchemaType } from \\"../../Schema\\";
import { JsonError } from \\"./JsonError\\";
import { ParseError } from \\"./ParseError\\";

export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}

export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}

export function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed> {
    return {
        optional: () => optional(schema),
        transform: (transformer) => transform(schema, transformer),
        parseOrThrow: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (parsed.ok) {
                return parsed.value;
            }
            throw new ParseError(parsed.errors);
        },
        jsonOrThrow: async (parsed, opts) => {
            const raw = await schema.json(parsed, opts);
            if (raw.ok) {
                return raw.value;
            }
            throw new JsonError(raw.errors);
        },
    };
}

/**
 * schema utils are defined in one file to resolve issues with circular imports
 */

export function optional<Raw, Parsed>(
    schema: BaseSchema<Raw, Parsed>
): Schema<Raw | null | undefined, Parsed | undefined> {
    const baseSchema: BaseSchema<Raw | null | undefined, Parsed | undefined> = {
        parse: (raw, opts) => {
            if (raw == null) {
                return {
                    ok: true,
                    value: undefined,
                };
            }
            return schema.parse(raw, opts);
        },
        json: (parsed, opts) => {
            if (parsed == null) {
                return {
                    ok: true,
                    value: null,
                };
            }
            return schema.json(parsed, opts);
        },
        getType: () => SchemaType.OPTIONAL,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

export function transform<Raw, Parsed, Transformed>(
    schema: BaseSchema<Raw, Parsed>,
    transformer: SchemaTransformer<Parsed, Transformed>
): Schema<Raw, Transformed> {
    const baseSchema: BaseSchema<Raw, Transformed> = {
        parse: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (!parsed.ok) {
                return parsed;
            }
            return {
                ok: true,
                value: transformer.transform(parsed.value),
            };
        },
        json: async (transformed, opts) => {
            const parsed = await transformer.untransform(transformed);
            return schema.json(parsed, opts);
        },
        getType: () => schema.getType(),
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "getSchemaUtils.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getSchemaUtils, optional, transform, type SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";

export function stringifyValidationError(error: ValidationError): string {
    if (error.path.length === 0) {
        return error.message;
    }
    return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
",
                        "name": "stringifyValidationErrors.ts",
                        "type": "file",
                      },
                    ],
                    "name": "schema-utils",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { set } from \\"./set\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaType } from \\"../../Schema\\";
import { list } from \\"../list\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>> {
    const listSchema = list(schema);
    const baseSchema: BaseSchema<Raw[], Set<Parsed>> = {
        parse: async (raw, opts) => {
            const parsedList = await listSchema.parse(raw, opts);
            if (parsedList.ok) {
                return {
                    ok: true,
                    value: new Set(parsedList.value),
                };
            } else {
                return parsedList;
            }
        },
        json: async (parsed, opts) => {
            if (!(parsed instanceof Set)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Set\\",
                        },
                    ],
                };
            }
            const jsonList = await listSchema.json([...parsed], opts);
            return jsonList;
        },
        getType: () => SchemaType.SET,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "set.ts",
                        "type": "file",
                      },
                    ],
                    "name": "set",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(
    parsedDiscriminant: ParsedDiscriminant,
    rawDiscriminant: RawDiscriminant
): Discriminant<RawDiscriminant, ParsedDiscriminant> {
    return {
        parsedDiscriminant,
        rawDiscriminant,
    };
}

export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                        "name": "discriminant.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { discriminant, type Discriminant } from \\"./discriminant\\";
export {
    type inferParsedDiscriminant,
    type inferParsedUnion,
    type inferRawDiscriminant,
    type inferRawUnion,
    type UnionSubtypes,
} from \\"./types\\";
export { union } from \\"./union\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";

export type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};

export type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];

export type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];

export type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string
    ? D
    : D extends Discriminant<infer Raw, any>
    ? Raw
    : never;

export type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string
    ? D
    : D extends Discriminant<any, infer Parsed>
    ? Parsed
    : never;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, SchemaType } from \\"../../Schema\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { keys } from \\"../../utils/keys\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { enum_ } from \\"../enum\\";
import { ObjectSchema } from \\"../object\\";
import { getObjectLikeUtils, ObjectLikeSchema } from \\"../object-like\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedDiscriminant, inferParsedUnion, inferRawDiscriminant, inferRawUnion, UnionSubtypes } from \\"./types\\";

export function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(
    discriminant: D,
    union: U
): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>> {
    const rawDiscriminant =
        typeof discriminant === \\"string\\" ? discriminant : (discriminant.rawDiscriminant as inferRawDiscriminant<D>);
    const parsedDiscriminant =
        typeof discriminant === \\"string\\"
            ? discriminant
            : (discriminant.parsedDiscriminant as inferParsedDiscriminant<D>);

    const discriminantValueSchema = enum_(keys(union) as string[]);

    const baseSchema: BaseSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>> = {
        parse: async (raw, opts) => {
            return transformAndValidateUnion(
                raw,
                rawDiscriminant,
                parsedDiscriminant,
                (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
                (discriminantValue) => union[discriminantValue],
                opts?.allowUnknownKeys ?? false,
                (additionalProperties, additionalPropertiesSchema) =>
                    additionalPropertiesSchema.parse(additionalProperties, opts)
            );
        },
        json: async (parsed, opts) => {
            return transformAndValidateUnion(
                parsed,
                parsedDiscriminant,
                rawDiscriminant,
                (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
                (discriminantValue) => union[discriminantValue],
                opts?.allowUnknownKeys ?? false,
                (additionalProperties, additionalPropertiesSchema) =>
                    additionalPropertiesSchema.json(additionalProperties, opts)
            );
        },
        getType: () => SchemaType.UNION,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
    };
}

async function transformAndValidateUnion<
    TransformedDiscriminant extends string,
    TransformedDiscriminantValue extends string,
    TransformedAdditionalProperties
>(
    value: unknown,
    discriminant: string,
    transformedDiscriminant: TransformedDiscriminant,
    transformDiscriminantValue: (discriminantValue: unknown) => MaybePromise<MaybeValid<TransformedDiscriminantValue>>,
    getAdditionalPropertiesSchema: (discriminantValue: string) => ObjectSchema<any, any> | undefined,
    allowUnknownKeys: boolean,
    transformAdditionalProperties: (
        additionalProperties: unknown,
        additionalPropertiesSchema: ObjectSchema<any, any>
    ) => MaybePromise<MaybeValid<TransformedAdditionalProperties>>
): Promise<
    MaybeValid<Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties>
> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }

    const { [discriminant]: discriminantValue, ...additionalProperties } = value;

    if (discriminantValue == null) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \`Missing discriminant (\\"\${discriminant}\\")\`,
                },
            ],
        };
    }

    const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
    if (!transformedDiscriminantValue.ok) {
        return {
            ok: false,
            errors: transformedDiscriminantValue.errors.map((error) => ({
                path: [discriminant, ...error.path],
                message: error.message,
            })),
        };
    }

    const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);

    if (additionalPropertiesSchema == null) {
        if (allowUnknownKeys) {
            return {
                ok: true,
                value: {
                    [transformedDiscriminant]: transformedDiscriminantValue.value,
                    ...additionalProperties,
                } as Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [discriminant],
                        message: \\"Unrecognized discriminant value\\",
                    },
                ],
            };
        }
    }

    const transformedAdditionalProperties = await transformAdditionalProperties(
        additionalProperties,
        additionalPropertiesSchema
    );
    if (!transformedAdditionalProperties.ok) {
        return transformedAdditionalProperties;
    }

    return {
        ok: true,
        value: {
            [transformedDiscriminant]: discriminantValue,
            ...transformedAdditionalProperties.value,
        } as Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties,
    };
}
",
                        "name": "union.ts",
                        "type": "file",
                      },
                    ],
                    "name": "union",
                    "type": "directory",
                  },
                ],
                "name": "builders",
                "type": "directory",
              },
              Object {
                "contents": "export * from \\"./builders\\";
export { type inferParsed, type inferRaw, type Schema, type SchemaOptions } from \\"./Schema\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export type MaybePromise<T> = T | Promise<T>;
",
                    "name": "MaybePromise.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export type OptionalRecord<K extends string | number, V> = Record<K, V | undefined>;
",
                    "name": "OptionalRecord.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;

export type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K]
        ? K
        : null extends T[K]
        ? K
        : 1 extends (any extends T[K] ? 0 : 1)
        ? never
        : K;
}[keyof T];

export type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                    "name": "addQuestionMarksToNullableProperties.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { getSchemaUtils } from \\"../builders/schema-utils\\";
import { BaseSchema, MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";

export function createIdentitySchemaCreator<T>(
    schemaType: SchemaType,
    validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>
): () => Schema<T, T> {
    return () => {
        const baseSchema: BaseSchema<T, T> = {
            parse: validate,
            json: validate,
            getType: () => schemaType,
        };

        return {
            ...baseSchema,
            ...getSchemaUtils(baseSchema),
        };
    };
}
",
                    "name": "createIdentitySchemaCreator.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function entries<T>(object: T): [keyof T, T[keyof T]][] {
    return Object.entries(object) as [keyof T, T[keyof T]][];
}
",
                    "name": "entries.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K> {
    const keysToIncludeSet = new Set(keysToInclude);
    return Object.entries(obj).reduce((acc, [key, value]) => {
        if (keysToIncludeSet.has(key as K)) {
            acc[key as K] = value;
        }
        return acc;
        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
    }, {} as Pick<T, K>);
}
",
                    "name": "filterObject.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export const NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";

// borrowed from https://github.com/lodash/lodash/blob/master/isPlainObject.js
export function isPlainObject(value: unknown): value is Record<string, unknown> {
    if (typeof value !== \\"object\\" || value === null) {
        return false;
    }

    if (Object.getPrototypeOf(value) === null) {
        return true;
    }

    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }

    return Object.getPrototypeOf(value) === proto;
}
",
                    "name": "isPlainObject.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function keys<T>(object: T): (keyof T)[] {
    return Object.keys(object) as (keyof T)[];
}
",
                    "name": "keys.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]] {
    const trueItems: T[] = [],
        falseItems: T[] = [];
    for (const item of items) {
        if (predicate(item)) {
            trueItems.push(item);
        } else {
            falseItems.push(item);
        }
    }
    return [trueItems, falseItems];
}
",
                    "name": "partition.ts",
                    "type": "file",
                  },
                ],
                "name": "utils",
                "type": "directory",
              },
            ],
            "name": "schemas",
            "type": "directory",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FernApiEnvironmentUrls {
    serverA: string;
    serverB: string;
}

export const FernApiEnvironment = {
    Production: {
        serverA: \\"a.prod.com\\",
        serverB: \\"b.prod.com\\",
    },
    Staging: {
        serverA: \\"a.staging.com\\",
        serverB: \\"b.staging.com\\",
    },
} as const;

export type FernApiEnvironment = typeof FernApiEnvironment.Production | typeof FernApiEnvironment.Staging;
",
        "name": "environments.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;

    constructor({ message, statusCode, body }: { message?: string; statusCode?: number; body?: unknown }) {
        super(message);
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }

        if (body !== undefined) {
            this.body = body;
        }
    }
}
",
            "name": "FernApiError.ts",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
",
            "name": "FernApiTimeoutError.ts",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export * as FernApi from \\"./api\\";
export { FernApiClient } from \\"./Client\\";
export { FernApiEnvironment, FernApiEnvironmentUrls } from \\"./environments\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * as owner from \\"./owner\\";
export * from \\"./owner/types\\";
export * as package_ from \\"./package\\";
export * as token from \\"./token\\";
export * from \\"./token/types\\";
export * from \\"./owner/client/requests\\";
export * from \\"./token/client/requests\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const CreateOwnerRequest: core.serialization.Schema<
    serializers.CreateOwnerRequest.Raw,
    FernApi.CreateOwnerRequest
> = core.serialization.object({
    ownerId: core.serialization.lazy(async () => (await import(\\"../../../..\\")).OwnerId),
    data: core.serialization.unknown(),
});

export declare namespace CreateOwnerRequest {
    interface Raw {
        ownerId: serializers.OwnerId.Raw;
        data?: unknown;
    }
}
",
                            "name": "CreateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const UpdateOwnerRequest: core.serialization.Schema<
    serializers.UpdateOwnerRequest.Raw,
    FernApi.UpdateOwnerRequest
> = core.serialization.object({
    data: core.serialization.unknown(),
});

export declare namespace UpdateOwnerRequest {
    interface Raw {
        data?: unknown;
    }
}
",
                            "name": "UpdateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateOwnerRequest } from \\"./CreateOwnerRequest\\";
export { UpdateOwnerRequest } from \\"./UpdateOwnerRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const Owner: core.serialization.ObjectSchema<serializers.Owner.Raw, FernApi.Owner> = core.serialization.object({
    ownerId: core.serialization.lazy(async () => (await import(\\"../../..\\")).OwnerId),
    data: core.serialization.unknown(),
});

export declare namespace Owner {
    interface Raw {
        ownerId: serializers.OwnerId.Raw;
        data?: unknown;
    }
}
",
                        "name": "Owner.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const OwnerId: core.serialization.Schema<serializers.OwnerId.Raw, FernApi.OwnerId> = core.serialization.string();

export declare namespace OwnerId {
    type Raw = string;
}
",
                        "name": "OwnerId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OwnerId\\";
export * from \\"./Owner\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "owner",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as nested from \\"./nested\\";
export * from \\"./nested/types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export * from \\"./types\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../../core\\";

export const NestedString: core.serialization.Schema<
    serializers.package_.NestedString.Raw,
    FernApi.package_.NestedString
> = core.serialization.string();

export declare namespace NestedString {
    type Raw = string;
}
",
                                "name": "NestedString.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./NestedString\\";
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "nested",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const PackageString: core.serialization.Schema<
    serializers.package_.PackageString.Raw,
    FernApi.package_.PackageString
> = core.serialization.string();

export declare namespace PackageString {
    type Raw = string;
}
",
                        "name": "PackageString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PackageString\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "package",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const Response: core.serialization.Schema<
    serializers.token.getTokensForOwner.Response.Raw,
    FernApi.TokenMetadata[]
> = core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).TokenMetadata));

export declare namespace Response {
    type Raw = serializers.TokenMetadata.Raw[];
}
",
                        "name": "getTokensForOwner.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getTokensForOwner from \\"./getTokensForOwner\\";
export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const CreateTokenRequest: core.serialization.Schema<
    serializers.CreateTokenRequest.Raw,
    FernApi.CreateTokenRequest
> = core.serialization.object({
    ownerId: core.serialization.lazy(async () => (await import(\\"../../../..\\")).OwnerId),
    description: core.serialization.string().optional(),
});

export declare namespace CreateTokenRequest {
    interface Raw {
        ownerId: serializers.OwnerId.Raw;
        description?: string | null;
    }
}
",
                            "name": "CreateTokenRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const GetTokenMetadataRequest: core.serialization.Schema<
    serializers.GetTokenMetadataRequest.Raw,
    FernApi.GetTokenMetadataRequest
> = core.serialization.object({
    token: core.serialization.string(),
});

export declare namespace GetTokenMetadataRequest {
    interface Raw {
        token: string;
    }
}
",
                            "name": "GetTokenMetadataRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateTokenRequest } from \\"./CreateTokenRequest\\";
export { GetTokenMetadataRequest } from \\"./GetTokenMetadataRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const CreateTokenResponse: core.serialization.ObjectSchema<
    serializers.CreateTokenResponse.Raw,
    FernApi.CreateTokenResponse
> = core.serialization.object({
    token: core.serialization.string(),
    tokenId: core.serialization.lazy(async () => (await import(\\"../../..\\")).TokenId),
});

export declare namespace CreateTokenResponse {
    interface Raw {
        token: string;
        tokenId: serializers.TokenId.Raw;
    }
}
",
                        "name": "CreateTokenResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const TokenId: core.serialization.Schema<serializers.TokenId.Raw, FernApi.TokenId> = core.serialization.string();

export declare namespace TokenId {
    type Raw = string;
}
",
                        "name": "TokenId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const TokenMetadata: core.serialization.ObjectSchema<serializers.TokenMetadata.Raw, FernApi.TokenMetadata> =
    core.serialization.object({
        tokenId: core.serialization.lazy(async () => (await import(\\"../../..\\")).TokenId),
        ownerId: core.serialization.lazy(async () => (await import(\\"../../..\\")).OwnerId),
        description: core.serialization.string().optional(),
        createdTime: core.serialization.date(),
        status: core.serialization.lazy(async () => (await import(\\"../../..\\")).TokenStatus),
    });

export declare namespace TokenMetadata {
    interface Raw {
        tokenId: serializers.TokenId.Raw;
        ownerId: serializers.OwnerId.Raw;
        description?: string | null;
        createdTime: string;
        status: serializers.TokenStatus.Raw;
    }
}
",
                        "name": "TokenMetadata.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const TokenStatus: core.serialization.Schema<serializers.TokenStatus.Raw, FernApi.TokenStatus> =
    core.serialization
        .union(\\"type\\", {
            active: core.serialization.object({}),
            expired: core.serialization.object({}),
            revoked: core.serialization.object({}),
        })
        .transform<FernApi.TokenStatus>({
            transform: (value) => {
                switch (value.type) {
                    case \\"active\\":
                        return FernApi.TokenStatus.active();
                    case \\"expired\\":
                        return FernApi.TokenStatus.expired();
                    case \\"revoked\\":
                        return FernApi.TokenStatus.revoked();
                    default:
                        return FernApi.TokenStatus._unknown(value);
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace TokenStatus {
    type Raw = TokenStatus.Active | TokenStatus.Expired | TokenStatus.Revoked;

    interface Active {
        type: \\"active\\";
    }

    interface Expired {
        type: \\"expired\\";
    }

    interface Revoked {
        type: \\"revoked\\";
    }
}
",
                        "name": "TokenStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TokenId\\";
export * from \\"./CreateTokenResponse\\";
export * from \\"./TokenMetadata\\";
export * from \\"./TokenStatus\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "token",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../core\\";

export const RootString: core.serialization.Schema<serializers.RootString.Raw, FernApi.RootString> =
    core.serialization.string();

export declare namespace RootString {
    type Raw = string;
}
",
                "name": "RootString.ts",
                "type": "file",
              },
              Object {
                "contents": "export * from \\"./RootString\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "types",
            "type": "directory",
          },
        ],
        "name": "serialization",
        "type": "directory",
      },
    ],
    "name": "src",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"extendedDiagnostics\\": true,
        \\"strict\\": true,
        \\"target\\": \\"esnext\\",
        \\"module\\": \\"CommonJS\\",
        \\"moduleResolution\\": \\"node\\",
        \\"esModuleInterop\\": true,
        \\"skipLibCheck\\": true,
        \\"declaration\\": true,
        \\"noUnusedLocals\\": true,
        \\"noUnusedParameters\\": true,
        \\"outDir\\": \\"dist\\",
        \\"rootDir\\": \\"src\\",
        \\"baseUrl\\": \\"src\\",
        \\"paths\\": {
            \\"@fern/api\\": [
                \\".\\"
            ]
        }
    },
    \\"include\\": [
        \\"src\\"
    ],
    \\"exclude\\": []
}",
    "name": "tsconfig.json",
    "type": "file",
  },
  Object {
    "contents": "# This file is generated by running \\"yarn install\\" inside your project.
# Manual changes might be lost - proceed with caution!

__metadata:
  version: 6
  cacheKey: 8

\\"@fern/api@workspace:.\\":
  version: 0.0.0-use.local
  resolution: \\"@fern/api@workspace:.\\"
  dependencies:
    \\"@types/node\\": 17.0.33
    \\"@types/url-join\\": 4.0.1
    axios: ^0.27.2
    prettier: 2.7.1
    tsc-alias: 1.7.1
    typescript: 4.6.4
    url-join: 4.0.1
  languageName: unknown
  linkType: soft

\\"@gar/promisify@npm:^1.1.3\\":
  version: 1.1.3
  resolution: \\"@gar/promisify@npm:1.1.3\\"
  checksum: 4059f790e2d07bf3c3ff3e0fec0daa8144fe35c1f6e0111c9921bd32106adaa97a4ab096ad7dab1e28ee6a9060083c4d1a4ada42a7f5f3f7a96b8812e2b757c1
  languageName: node
  linkType: hard

\\"@nodelib/fs.scandir@npm:2.1.5\\":
  version: 2.1.5
  resolution: \\"@nodelib/fs.scandir@npm:2.1.5\\"
  dependencies:
    \\"@nodelib/fs.stat\\": 2.0.5
    run-parallel: ^1.1.9
  checksum: a970d595bd23c66c880e0ef1817791432dbb7acbb8d44b7e7d0e7a22f4521260d4a83f7f9fd61d44fda4610105577f8f58a60718105fb38352baed612fd79e59
  languageName: node
  linkType: hard

\\"@nodelib/fs.stat@npm:2.0.5, @nodelib/fs.stat@npm:^2.0.2\\":
  version: 2.0.5
  resolution: \\"@nodelib/fs.stat@npm:2.0.5\\"
  checksum: 012480b5ca9d97bff9261571dbbec7bbc6033f69cc92908bc1ecfad0792361a5a1994bc48674b9ef76419d056a03efadfce5a6cf6dbc0a36559571a7a483f6f0
  languageName: node
  linkType: hard

\\"@nodelib/fs.walk@npm:^1.2.3\\":
  version: 1.2.8
  resolution: \\"@nodelib/fs.walk@npm:1.2.8\\"
  dependencies:
    \\"@nodelib/fs.scandir\\": 2.1.5
    fastq: ^1.6.0
  checksum: 190c643f156d8f8f277bf2a6078af1ffde1fd43f498f187c2db24d35b4b4b5785c02c7dc52e356497b9a1b65b13edc996de08de0b961c32844364da02986dc53
  languageName: node
  linkType: hard

\\"@npmcli/fs@npm:^2.1.0\\":
  version: 2.1.2
  resolution: \\"@npmcli/fs@npm:2.1.2\\"
  dependencies:
    \\"@gar/promisify\\": ^1.1.3
    semver: ^7.3.5
  checksum: 405074965e72d4c9d728931b64d2d38e6ea12066d4fad651ac253d175e413c06fe4350970c783db0d749181da8fe49c42d3880bd1cbc12cd68e3a7964d820225
  languageName: node
  linkType: hard

\\"@npmcli/move-file@npm:^2.0.0\\":
  version: 2.0.1
  resolution: \\"@npmcli/move-file@npm:2.0.1\\"
  dependencies:
    mkdirp: ^1.0.4
    rimraf: ^3.0.2
  checksum: 52dc02259d98da517fae4cb3a0a3850227bdae4939dda1980b788a7670636ca2b4a01b58df03dd5f65c1e3cb70c50fa8ce5762b582b3f499ec30ee5ce1fd9380
  languageName: node
  linkType: hard

\\"@tootallnate/once@npm:2\\":
  version: 2.0.0
  resolution: \\"@tootallnate/once@npm:2.0.0\\"
  checksum: ad87447820dd3f24825d2d947ebc03072b20a42bfc96cbafec16bff8bbda6c1a81fcb0be56d5b21968560c5359a0af4038a68ba150c3e1694fe4c109a063bed8
  languageName: node
  linkType: hard

\\"@types/node@npm:17.0.33\\":
  version: 17.0.33
  resolution: \\"@types/node@npm:17.0.33\\"
  checksum: 6620652cc89ce125e1162e060ec4608c25b3635185e3e5dcaae4ed09e4770dc8bf168ba48bcd7059a1a56087a05000d7ed562e81aea7b6a512e2b13d4409c6b6
  languageName: node
  linkType: hard

\\"@types/url-join@npm:4.0.1\\":
  version: 4.0.1
  resolution: \\"@types/url-join@npm:4.0.1\\"
  checksum: 29444b90e165b3970c8ad3fcef1e2de092e72b67e1f3aaff3016eea1697f98a01a28fb4f71f8044e3338a95bd2262327e9299be416efe5297018658760a331b4
  languageName: node
  linkType: hard

\\"abbrev@npm:^1.0.0\\":
  version: 1.1.1
  resolution: \\"abbrev@npm:1.1.1\\"
  checksum: a4a97ec07d7ea112c517036882b2ac22f3109b7b19077dc656316d07d308438aac28e4d9746dc4d84bf6b1e75b4a7b0a5f3cb30592419f128ca9a8cee3bcfa17
  languageName: node
  linkType: hard

\\"agent-base@npm:6, agent-base@npm:^6.0.2\\":
  version: 6.0.2
  resolution: \\"agent-base@npm:6.0.2\\"
  dependencies:
    debug: 4
  checksum: f52b6872cc96fd5f622071b71ef200e01c7c4c454ee68bc9accca90c98cfb39f2810e3e9aa330435835eedc8c23f4f8a15267f67c6e245d2b33757575bdac49d
  languageName: node
  linkType: hard

\\"agentkeepalive@npm:^4.2.1\\":
  version: 4.2.1
  resolution: \\"agentkeepalive@npm:4.2.1\\"
  dependencies:
    debug: ^4.1.0
    depd: ^1.1.2
    humanize-ms: ^1.2.1
  checksum: 39cb49ed8cf217fd6da058a92828a0a84e0b74c35550f82ee0a10e1ee403c4b78ade7948be2279b188b7a7303f5d396ea2738b134731e464bf28de00a4f72a18
  languageName: node
  linkType: hard

\\"aggregate-error@npm:^3.0.0\\":
  version: 3.1.0
  resolution: \\"aggregate-error@npm:3.1.0\\"
  dependencies:
    clean-stack: ^2.0.0
    indent-string: ^4.0.0
  checksum: 1101a33f21baa27a2fa8e04b698271e64616b886795fd43c31068c07533c7b3facfcaf4e9e0cab3624bd88f729a592f1c901a1a229c9e490eafce411a8644b79
  languageName: node
  linkType: hard

\\"ansi-regex@npm:^5.0.1\\":
  version: 5.0.1
  resolution: \\"ansi-regex@npm:5.0.1\\"
  checksum: 2aa4bb54caf2d622f1afdad09441695af2a83aa3fe8b8afa581d205e57ed4261c183c4d3877cee25794443fde5876417d859c108078ab788d6af7e4fe52eb66b
  languageName: node
  linkType: hard

\\"anymatch@npm:~3.1.2\\":
  version: 3.1.3
  resolution: \\"anymatch@npm:3.1.3\\"
  dependencies:
    normalize-path: ^3.0.0
    picomatch: ^2.0.4
  checksum: 3e044fd6d1d26545f235a9fe4d7a534e2029d8e59fa7fd9f2a6eb21230f6b5380ea1eaf55136e60cbf8e613544b3b766e7a6fa2102e2a3a117505466e3025dc2
  languageName: node
  linkType: hard

\\"aproba@npm:^1.0.3 || ^2.0.0\\":
  version: 2.0.0
  resolution: \\"aproba@npm:2.0.0\\"
  checksum: 5615cadcfb45289eea63f8afd064ab656006361020e1735112e346593856f87435e02d8dcc7ff0d11928bc7d425f27bc7c2a84f6c0b35ab0ff659c814c138a24
  languageName: node
  linkType: hard

\\"are-we-there-yet@npm:^3.0.0\\":
  version: 3.0.1
  resolution: \\"are-we-there-yet@npm:3.0.1\\"
  dependencies:
    delegates: ^1.0.0
    readable-stream: ^3.6.0
  checksum: 52590c24860fa7173bedeb69a4c05fb573473e860197f618b9a28432ee4379049336727ae3a1f9c4cb083114601c1140cee578376164d0e651217a9843f9fe83
  languageName: node
  linkType: hard

\\"array-union@npm:^2.1.0\\":
  version: 2.1.0
  resolution: \\"array-union@npm:2.1.0\\"
  checksum: 5bee12395cba82da674931df6d0fea23c4aa4660cb3b338ced9f828782a65caa232573e6bf3968f23e0c5eb301764a382cef2f128b170a9dc59de0e36c39f98d
  languageName: node
  linkType: hard

\\"asynckit@npm:^0.4.0\\":
  version: 0.4.0
  resolution: \\"asynckit@npm:0.4.0\\"
  checksum: 7b78c451df768adba04e2d02e63e2d0bf3b07adcd6e42b4cf665cb7ce899bedd344c69a1dcbce355b5f972d597b25aaa1c1742b52cffd9caccb22f348114f6be
  languageName: node
  linkType: hard

\\"axios@npm:^0.27.2\\":
  version: 0.27.2
  resolution: \\"axios@npm:0.27.2\\"
  dependencies:
    follow-redirects: ^1.14.9
    form-data: ^4.0.0
  checksum: 38cb7540465fe8c4102850c4368053c21683af85c5fdf0ea619f9628abbcb59415d1e22ebc8a6390d2bbc9b58a9806c874f139767389c862ec9b772235f06854
  languageName: node
  linkType: hard

\\"balanced-match@npm:^1.0.0\\":
  version: 1.0.2
  resolution: \\"balanced-match@npm:1.0.2\\"
  checksum: 9706c088a283058a8a99e0bf91b0a2f75497f185980d9ffa8b304de1d9e58ebda7c72c07ebf01dadedaac5b2907b2c6f566f660d62bd336c3468e960403b9d65
  languageName: node
  linkType: hard

\\"binary-extensions@npm:^2.0.0\\":
  version: 2.2.0
  resolution: \\"binary-extensions@npm:2.2.0\\"
  checksum: ccd267956c58d2315f5d3ea6757cf09863c5fc703e50fbeb13a7dc849b812ef76e3cf9ca8f35a0c48498776a7478d7b4a0418e1e2b8cb9cb9731f2922aaad7f8
  languageName: node
  linkType: hard

\\"brace-expansion@npm:^1.1.7\\":
  version: 1.1.11
  resolution: \\"brace-expansion@npm:1.1.11\\"
  dependencies:
    balanced-match: ^1.0.0
    concat-map: 0.0.1
  checksum: faf34a7bb0c3fcf4b59c7808bc5d2a96a40988addf2e7e09dfbb67a2251800e0d14cd2bfc1aa79174f2f5095c54ff27f46fb1289fe2d77dac755b5eb3434cc07
  languageName: node
  linkType: hard

\\"brace-expansion@npm:^2.0.1\\":
  version: 2.0.1
  resolution: \\"brace-expansion@npm:2.0.1\\"
  dependencies:
    balanced-match: ^1.0.0
  checksum: a61e7cd2e8a8505e9f0036b3b6108ba5e926b4b55089eeb5550cd04a471fe216c96d4fe7e4c7f995c728c554ae20ddfc4244cad10aef255e72b62930afd233d1
  languageName: node
  linkType: hard

\\"braces@npm:^3.0.2, braces@npm:~3.0.2\\":
  version: 3.0.2
  resolution: \\"braces@npm:3.0.2\\"
  dependencies:
    fill-range: ^7.0.1
  checksum: e2a8e769a863f3d4ee887b5fe21f63193a891c68b612ddb4b68d82d1b5f3ff9073af066c343e9867a393fe4c2555dcb33e89b937195feb9c1613d259edfcd459
  languageName: node
  linkType: hard

\\"cacache@npm:^16.1.0\\":
  version: 16.1.3
  resolution: \\"cacache@npm:16.1.3\\"
  dependencies:
    \\"@npmcli/fs\\": ^2.1.0
    \\"@npmcli/move-file\\": ^2.0.0
    chownr: ^2.0.0
    fs-minipass: ^2.1.0
    glob: ^8.0.1
    infer-owner: ^1.0.4
    lru-cache: ^7.7.1
    minipass: ^3.1.6
    minipass-collect: ^1.0.2
    minipass-flush: ^1.0.5
    minipass-pipeline: ^1.2.4
    mkdirp: ^1.0.4
    p-map: ^4.0.0
    promise-inflight: ^1.0.1
    rimraf: ^3.0.2
    ssri: ^9.0.0
    tar: ^6.1.11
    unique-filename: ^2.0.0
  checksum: d91409e6e57d7d9a3a25e5dcc589c84e75b178ae8ea7de05cbf6b783f77a5fae938f6e8fda6f5257ed70000be27a681e1e44829251bfffe4c10216002f8f14e6
  languageName: node
  linkType: hard

\\"chokidar@npm:^3.5.3\\":
  version: 3.5.3
  resolution: \\"chokidar@npm:3.5.3\\"
  dependencies:
    anymatch: ~3.1.2
    braces: ~3.0.2
    fsevents: ~2.3.2
    glob-parent: ~5.1.2
    is-binary-path: ~2.1.0
    is-glob: ~4.0.1
    normalize-path: ~3.0.0
    readdirp: ~3.6.0
  dependenciesMeta:
    fsevents:
      optional: true
  checksum: b49fcde40176ba007ff361b198a2d35df60d9bb2a5aab228279eb810feae9294a6b4649ab15981304447afe1e6ffbf4788ad5db77235dc770ab777c6e771980c
  languageName: node
  linkType: hard

\\"chownr@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"chownr@npm:2.0.0\\"
  checksum: c57cf9dd0791e2f18a5ee9c1a299ae6e801ff58fee96dc8bfd0dcb4738a6ce58dd252a3605b1c93c6418fe4f9d5093b28ffbf4d66648cb2a9c67eaef9679be2f
  languageName: node
  linkType: hard

\\"clean-stack@npm:^2.0.0\\":
  version: 2.2.0
  resolution: \\"clean-stack@npm:2.2.0\\"
  checksum: 2ac8cd2b2f5ec986a3c743935ec85b07bc174d5421a5efc8017e1f146a1cf5f781ae962618f416352103b32c9cd7e203276e8c28241bbe946160cab16149fb68
  languageName: node
  linkType: hard

\\"color-support@npm:^1.1.3\\":
  version: 1.1.3
  resolution: \\"color-support@npm:1.1.3\\"
  bin:
    color-support: bin.js
  checksum: 9b7356817670b9a13a26ca5af1c21615463b500783b739b7634a0c2047c16cef4b2865d7576875c31c3cddf9dd621fa19285e628f20198b233a5cfdda6d0793b
  languageName: node
  linkType: hard

\\"combined-stream@npm:^1.0.8\\":
  version: 1.0.8
  resolution: \\"combined-stream@npm:1.0.8\\"
  dependencies:
    delayed-stream: ~1.0.0
  checksum: 49fa4aeb4916567e33ea81d088f6584749fc90c7abec76fd516bf1c5aa5c79f3584b5ba3de6b86d26ddd64bae5329c4c7479343250cfe71c75bb366eae53bb7c
  languageName: node
  linkType: hard

\\"commander@npm:^9.0.0\\":
  version: 9.5.0
  resolution: \\"commander@npm:9.5.0\\"
  checksum: c7a3e27aa59e913b54a1bafd366b88650bc41d6651f0cbe258d4ff09d43d6a7394232a4dadd0bf518b3e696fdf595db1028a0d82c785b88bd61f8a440cecfade
  languageName: node
  linkType: hard

\\"concat-map@npm:0.0.1\\":
  version: 0.0.1
  resolution: \\"concat-map@npm:0.0.1\\"
  checksum: 902a9f5d8967a3e2faf138d5cb784b9979bad2e6db5357c5b21c568df4ebe62bcb15108af1b2253744844eb964fc023fbd9afbbbb6ddd0bcc204c6fb5b7bf3af
  languageName: node
  linkType: hard

\\"console-control-strings@npm:^1.1.0\\":
  version: 1.1.0
  resolution: \\"console-control-strings@npm:1.1.0\\"
  checksum: 8755d76787f94e6cf79ce4666f0c5519906d7f5b02d4b884cf41e11dcd759ed69c57da0670afd9236d229a46e0f9cf519db0cd829c6dca820bb5a5c3def584ed
  languageName: node
  linkType: hard

\\"debug@npm:4, debug@npm:^4.1.0, debug@npm:^4.3.3\\":
  version: 4.3.4
  resolution: \\"debug@npm:4.3.4\\"
  dependencies:
    ms: 2.1.2
  peerDependenciesMeta:
    supports-color:
      optional: true
  checksum: 3dbad3f94ea64f34431a9cbf0bafb61853eda57bff2880036153438f50fb5a84f27683ba0d8e5426bf41a8c6ff03879488120cf5b3a761e77953169c0600a708
  languageName: node
  linkType: hard

\\"delayed-stream@npm:~1.0.0\\":
  version: 1.0.0
  resolution: \\"delayed-stream@npm:1.0.0\\"
  checksum: 46fe6e83e2cb1d85ba50bd52803c68be9bd953282fa7096f51fc29edd5d67ff84ff753c51966061e5ba7cb5e47ef6d36a91924eddb7f3f3483b1c560f77a0020
  languageName: node
  linkType: hard

\\"delegates@npm:^1.0.0\\":
  version: 1.0.0
  resolution: \\"delegates@npm:1.0.0\\"
  checksum: a51744d9b53c164ba9c0492471a1a2ffa0b6727451bdc89e31627fdf4adda9d51277cfcbfb20f0a6f08ccb3c436f341df3e92631a3440226d93a8971724771fd
  languageName: node
  linkType: hard

\\"depd@npm:^1.1.2\\":
  version: 1.1.2
  resolution: \\"depd@npm:1.1.2\\"
  checksum: 6b406620d269619852885ce15965272b829df6f409724415e0002c8632ab6a8c0a08ec1f0bd2add05dc7bd7507606f7e2cc034fa24224ab829580040b835ecd9
  languageName: node
  linkType: hard

\\"dir-glob@npm:^3.0.1\\":
  version: 3.0.1
  resolution: \\"dir-glob@npm:3.0.1\\"
  dependencies:
    path-type: ^4.0.0
  checksum: fa05e18324510d7283f55862f3161c6759a3f2f8dbce491a2fc14c8324c498286c54282c1f0e933cb930da8419b30679389499b919122952a4f8592362ef4615
  languageName: node
  linkType: hard

\\"emoji-regex@npm:^8.0.0\\":
  version: 8.0.0
  resolution: \\"emoji-regex@npm:8.0.0\\"
  checksum: d4c5c39d5a9868b5fa152f00cada8a936868fd3367f33f71be515ecee4c803132d11b31a6222b2571b1e5f7e13890156a94880345594d0ce7e3c9895f560f192
  languageName: node
  linkType: hard

\\"encoding@npm:^0.1.13\\":
  version: 0.1.13
  resolution: \\"encoding@npm:0.1.13\\"
  dependencies:
    iconv-lite: ^0.6.2
  checksum: bb98632f8ffa823996e508ce6a58ffcf5856330fde839ae42c9e1f436cc3b5cc651d4aeae72222916545428e54fd0f6aa8862fd8d25bdbcc4589f1e3f3715e7f
  languageName: node
  linkType: hard

\\"env-paths@npm:^2.2.0\\":
  version: 2.2.1
  resolution: \\"env-paths@npm:2.2.1\\"
  checksum: 65b5df55a8bab92229ab2b40dad3b387fad24613263d103a97f91c9fe43ceb21965cd3392b1ccb5d77088021e525c4e0481adb309625d0cb94ade1d1fb8dc17e
  languageName: node
  linkType: hard

\\"err-code@npm:^2.0.2\\":
  version: 2.0.3
  resolution: \\"err-code@npm:2.0.3\\"
  checksum: 8b7b1be20d2de12d2255c0bc2ca638b7af5171142693299416e6a9339bd7d88fc8d7707d913d78e0993176005405a236b066b45666b27b797252c771156ace54
  languageName: node
  linkType: hard

\\"fast-glob@npm:^3.2.9\\":
  version: 3.2.12
  resolution: \\"fast-glob@npm:3.2.12\\"
  dependencies:
    \\"@nodelib/fs.stat\\": ^2.0.2
    \\"@nodelib/fs.walk\\": ^1.2.3
    glob-parent: ^5.1.2
    merge2: ^1.3.0
    micromatch: ^4.0.4
  checksum: 0b1990f6ce831c7e28c4d505edcdaad8e27e88ab9fa65eedadb730438cfc7cde4910d6c975d6b7b8dc8a73da4773702ebcfcd6e3518e73938bb1383badfe01c2
  languageName: node
  linkType: hard

\\"fastq@npm:^1.6.0\\":
  version: 1.15.0
  resolution: \\"fastq@npm:1.15.0\\"
  dependencies:
    reusify: ^1.0.4
  checksum: 0170e6bfcd5d57a70412440b8ef600da6de3b2a6c5966aeaf0a852d542daff506a0ee92d6de7679d1de82e644bce69d7a574a6c93f0b03964b5337eed75ada1a
  languageName: node
  linkType: hard

\\"fill-range@npm:^7.0.1\\":
  version: 7.0.1
  resolution: \\"fill-range@npm:7.0.1\\"
  dependencies:
    to-regex-range: ^5.0.1
  checksum: cc283f4e65b504259e64fd969bcf4def4eb08d85565e906b7d36516e87819db52029a76b6363d0f02d0d532f0033c9603b9e2d943d56ee3b0d4f7ad3328ff917
  languageName: node
  linkType: hard

\\"follow-redirects@npm:^1.14.9\\":
  version: 1.15.2
  resolution: \\"follow-redirects@npm:1.15.2\\"
  peerDependenciesMeta:
    debug:
      optional: true
  checksum: faa66059b66358ba65c234c2f2a37fcec029dc22775f35d9ad6abac56003268baf41e55f9ee645957b32c7d9f62baf1f0b906e68267276f54ec4b4c597c2b190
  languageName: node
  linkType: hard

\\"form-data@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"form-data@npm:4.0.0\\"
  dependencies:
    asynckit: ^0.4.0
    combined-stream: ^1.0.8
    mime-types: ^2.1.12
  checksum: 01135bf8675f9d5c61ff18e2e2932f719ca4de964e3be90ef4c36aacfc7b9cb2fceb5eca0b7e0190e3383fe51c5b37f4cb80b62ca06a99aaabfcfd6ac7c9328c
  languageName: node
  linkType: hard

\\"fs-minipass@npm:^2.0.0, fs-minipass@npm:^2.1.0\\":
  version: 2.1.0
  resolution: \\"fs-minipass@npm:2.1.0\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 1b8d128dae2ac6cc94230cc5ead341ba3e0efaef82dab46a33d171c044caaa6ca001364178d42069b2809c35a1c3c35079a32107c770e9ffab3901b59af8c8b1
  languageName: node
  linkType: hard

\\"fs.realpath@npm:^1.0.0\\":
  version: 1.0.0
  resolution: \\"fs.realpath@npm:1.0.0\\"
  checksum: 99ddea01a7e75aa276c250a04eedeffe5662bce66c65c07164ad6264f9de18fb21be9433ead460e54cff20e31721c811f4fb5d70591799df5f85dce6d6746fd0
  languageName: node
  linkType: hard

\\"fsevents@npm:~2.3.2\\":
  version: 2.3.2
  resolution: \\"fsevents@npm:2.3.2\\"
  dependencies:
    node-gyp: latest
  checksum: 97ade64e75091afee5265e6956cb72ba34db7819b4c3e94c431d4be2b19b8bb7a2d4116da417950c3425f17c8fe693d25e20212cac583ac1521ad066b77ae31f
  conditions: os=darwin
  languageName: node
  linkType: hard

\\"fsevents@patch:fsevents@~2.3.2#~builtin<compat/fsevents>\\":
  version: 2.3.2
  resolution: \\"fsevents@patch:fsevents@npm%3A2.3.2#~builtin<compat/fsevents>::version=2.3.2&hash=18f3a7\\"
  dependencies:
    node-gyp: latest
  conditions: os=darwin
  languageName: node
  linkType: hard

\\"gauge@npm:^4.0.3\\":
  version: 4.0.4
  resolution: \\"gauge@npm:4.0.4\\"
  dependencies:
    aproba: ^1.0.3 || ^2.0.0
    color-support: ^1.1.3
    console-control-strings: ^1.1.0
    has-unicode: ^2.0.1
    signal-exit: ^3.0.7
    string-width: ^4.2.3
    strip-ansi: ^6.0.1
    wide-align: ^1.1.5
  checksum: 788b6bfe52f1dd8e263cda800c26ac0ca2ff6de0b6eee2fe0d9e3abf15e149b651bd27bf5226be10e6e3edb5c4e5d5985a5a1a98137e7a892f75eff76467ad2d
  languageName: node
  linkType: hard

\\"glob-parent@npm:^5.1.2, glob-parent@npm:~5.1.2\\":
  version: 5.1.2
  resolution: \\"glob-parent@npm:5.1.2\\"
  dependencies:
    is-glob: ^4.0.1
  checksum: f4f2bfe2425296e8a47e36864e4f42be38a996db40420fe434565e4480e3322f18eb37589617a98640c5dc8fdec1a387007ee18dbb1f3f5553409c34d17f425e
  languageName: node
  linkType: hard

\\"glob@npm:^7.1.3, glob@npm:^7.1.4\\":
  version: 7.2.3
  resolution: \\"glob@npm:7.2.3\\"
  dependencies:
    fs.realpath: ^1.0.0
    inflight: ^1.0.4
    inherits: 2
    minimatch: ^3.1.1
    once: ^1.3.0
    path-is-absolute: ^1.0.0
  checksum: 29452e97b38fa704dabb1d1045350fb2467cf0277e155aa9ff7077e90ad81d1ea9d53d3ee63bd37c05b09a065e90f16aec4a65f5b8de401d1dac40bc5605d133
  languageName: node
  linkType: hard

\\"glob@npm:^8.0.1\\":
  version: 8.1.0
  resolution: \\"glob@npm:8.1.0\\"
  dependencies:
    fs.realpath: ^1.0.0
    inflight: ^1.0.4
    inherits: 2
    minimatch: ^5.0.1
    once: ^1.3.0
  checksum: 92fbea3221a7d12075f26f0227abac435de868dd0736a17170663783296d0dd8d3d532a5672b4488a439bf5d7fb85cdd07c11185d6cd39184f0385cbdfb86a47
  languageName: node
  linkType: hard

\\"globby@npm:^11.0.4\\":
  version: 11.1.0
  resolution: \\"globby@npm:11.1.0\\"
  dependencies:
    array-union: ^2.1.0
    dir-glob: ^3.0.1
    fast-glob: ^3.2.9
    ignore: ^5.2.0
    merge2: ^1.4.1
    slash: ^3.0.0
  checksum: b4be8885e0cfa018fc783792942d53926c35c50b3aefd3fdcfb9d22c627639dc26bd2327a40a0b74b074100ce95bb7187bfeae2f236856aa3de183af7a02aea6
  languageName: node
  linkType: hard

\\"graceful-fs@npm:^4.2.6\\":
  version: 4.2.10
  resolution: \\"graceful-fs@npm:4.2.10\\"
  checksum: 3f109d70ae123951905d85032ebeae3c2a5a7a997430df00ea30df0e3a6c60cf6689b109654d6fdacd28810a053348c4d14642da1d075049e6be1ba5216218da
  languageName: node
  linkType: hard

\\"has-unicode@npm:^2.0.1\\":
  version: 2.0.1
  resolution: \\"has-unicode@npm:2.0.1\\"
  checksum: 1eab07a7436512db0be40a710b29b5dc21fa04880b7f63c9980b706683127e3c1b57cb80ea96d47991bdae2dfe479604f6a1ba410106ee1046a41d1bd0814400
  languageName: node
  linkType: hard

\\"http-cache-semantics@npm:^4.1.0\\":
  version: 4.1.1
  resolution: \\"http-cache-semantics@npm:4.1.1\\"
  checksum: 83ac0bc60b17a3a36f9953e7be55e5c8f41acc61b22583060e8dedc9dd5e3607c823a88d0926f9150e571f90946835c7fe150732801010845c72cd8bbff1a236
  languageName: node
  linkType: hard

\\"http-proxy-agent@npm:^5.0.0\\":
  version: 5.0.0
  resolution: \\"http-proxy-agent@npm:5.0.0\\"
  dependencies:
    \\"@tootallnate/once\\": 2
    agent-base: 6
    debug: 4
  checksum: e2ee1ff1656a131953839b2a19cd1f3a52d97c25ba87bd2559af6ae87114abf60971e498021f9b73f9fd78aea8876d1fb0d4656aac8a03c6caa9fc175f22b786
  languageName: node
  linkType: hard

\\"https-proxy-agent@npm:^5.0.0\\":
  version: 5.0.1
  resolution: \\"https-proxy-agent@npm:5.0.1\\"
  dependencies:
    agent-base: 6
    debug: 4
  checksum: 571fccdf38184f05943e12d37d6ce38197becdd69e58d03f43637f7fa1269cf303a7d228aa27e5b27bbd3af8f09fd938e1c91dcfefff2df7ba77c20ed8dfc765
  languageName: node
  linkType: hard

\\"humanize-ms@npm:^1.2.1\\":
  version: 1.2.1
  resolution: \\"humanize-ms@npm:1.2.1\\"
  dependencies:
    ms: ^2.0.0
  checksum: 9c7a74a2827f9294c009266c82031030eae811ca87b0da3dceb8d6071b9bde22c9f3daef0469c3c533cc67a97d8a167cd9fc0389350e5f415f61a79b171ded16
  languageName: node
  linkType: hard

\\"iconv-lite@npm:^0.6.2\\":
  version: 0.6.3
  resolution: \\"iconv-lite@npm:0.6.3\\"
  dependencies:
    safer-buffer: \\">= 2.1.2 < 3.0.0\\"
  checksum: 3f60d47a5c8fc3313317edfd29a00a692cc87a19cac0159e2ce711d0ebc9019064108323b5e493625e25594f11c6236647d8e256fbe7a58f4a3b33b89e6d30bf
  languageName: node
  linkType: hard

\\"ignore@npm:^5.2.0\\":
  version: 5.2.4
  resolution: \\"ignore@npm:5.2.4\\"
  checksum: 3d4c309c6006e2621659311783eaea7ebcd41fe4ca1d78c91c473157ad6666a57a2df790fe0d07a12300d9aac2888204d7be8d59f9aaf665b1c7fcdb432517ef
  languageName: node
  linkType: hard

\\"imurmurhash@npm:^0.1.4\\":
  version: 0.1.4
  resolution: \\"imurmurhash@npm:0.1.4\\"
  checksum: 7cae75c8cd9a50f57dadd77482359f659eaebac0319dd9368bcd1714f55e65badd6929ca58569da2b6494ef13fdd5598cd700b1eba23f8b79c5f19d195a3ecf7
  languageName: node
  linkType: hard

\\"indent-string@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"indent-string@npm:4.0.0\\"
  checksum: 824cfb9929d031dabf059bebfe08cf3137365e112019086ed3dcff6a0a7b698cb80cf67ccccde0e25b9e2d7527aa6cc1fed1ac490c752162496caba3e6699612
  languageName: node
  linkType: hard

\\"infer-owner@npm:^1.0.4\\":
  version: 1.0.4
  resolution: \\"infer-owner@npm:1.0.4\\"
  checksum: 181e732764e4a0611576466b4b87dac338972b839920b2a8cde43642e4ed6bd54dc1fb0b40874728f2a2df9a1b097b8ff83b56d5f8f8e3927f837fdcb47d8a89
  languageName: node
  linkType: hard

\\"inflight@npm:^1.0.4\\":
  version: 1.0.6
  resolution: \\"inflight@npm:1.0.6\\"
  dependencies:
    once: ^1.3.0
    wrappy: 1
  checksum: f4f76aa072ce19fae87ce1ef7d221e709afb59d445e05d47fba710e85470923a75de35bfae47da6de1b18afc3ce83d70facf44cfb0aff89f0a3f45c0a0244dfd
  languageName: node
  linkType: hard

\\"inherits@npm:2, inherits@npm:^2.0.3\\":
  version: 2.0.4
  resolution: \\"inherits@npm:2.0.4\\"
  checksum: 4a48a733847879d6cf6691860a6b1e3f0f4754176e4d71494c41f3475553768b10f84b5ce1d40fbd0e34e6bfbb864ee35858ad4dd2cf31e02fc4a154b724d7f1
  languageName: node
  linkType: hard

\\"ip@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"ip@npm:2.0.0\\"
  checksum: cfcfac6b873b701996d71ec82a7dd27ba92450afdb421e356f44044ed688df04567344c36cbacea7d01b1c39a4c732dc012570ebe9bebfb06f27314bca625349
  languageName: node
  linkType: hard

\\"is-binary-path@npm:~2.1.0\\":
  version: 2.1.0
  resolution: \\"is-binary-path@npm:2.1.0\\"
  dependencies:
    binary-extensions: ^2.0.0
  checksum: 84192eb88cff70d320426f35ecd63c3d6d495da9d805b19bc65b518984b7c0760280e57dbf119b7e9be6b161784a5a673ab2c6abe83abb5198a432232ad5b35c
  languageName: node
  linkType: hard

\\"is-extglob@npm:^2.1.1\\":
  version: 2.1.1
  resolution: \\"is-extglob@npm:2.1.1\\"
  checksum: df033653d06d0eb567461e58a7a8c9f940bd8c22274b94bf7671ab36df5719791aae15eef6d83bbb5e23283967f2f984b8914559d4449efda578c775c4be6f85
  languageName: node
  linkType: hard

\\"is-fullwidth-code-point@npm:^3.0.0\\":
  version: 3.0.0
  resolution: \\"is-fullwidth-code-point@npm:3.0.0\\"
  checksum: 44a30c29457c7fb8f00297bce733f0a64cd22eca270f83e58c105e0d015e45c019491a4ab2faef91ab51d4738c670daff901c799f6a700e27f7314029e99e348
  languageName: node
  linkType: hard

\\"is-glob@npm:^4.0.1, is-glob@npm:~4.0.1\\":
  version: 4.0.3
  resolution: \\"is-glob@npm:4.0.3\\"
  dependencies:
    is-extglob: ^2.1.1
  checksum: d381c1319fcb69d341cc6e6c7cd588e17cd94722d9a32dbd60660b993c4fb7d0f19438674e68dfec686d09b7c73139c9166b47597f846af387450224a8101ab4
  languageName: node
  linkType: hard

\\"is-lambda@npm:^1.0.1\\":
  version: 1.0.1
  resolution: \\"is-lambda@npm:1.0.1\\"
  checksum: 93a32f01940220532e5948538699ad610d5924ac86093fcee83022252b363eb0cc99ba53ab084a04e4fb62bf7b5731f55496257a4c38adf87af9c4d352c71c35
  languageName: node
  linkType: hard

\\"is-number@npm:^7.0.0\\":
  version: 7.0.0
  resolution: \\"is-number@npm:7.0.0\\"
  checksum: 456ac6f8e0f3111ed34668a624e45315201dff921e5ac181f8ec24923b99e9f32ca1a194912dc79d539c97d33dba17dc635202ff0b2cf98326f608323276d27a
  languageName: node
  linkType: hard

\\"isexe@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"isexe@npm:2.0.0\\"
  checksum: 26bf6c5480dda5161c820c5b5c751ae1e766c587b1f951ea3fcfc973bafb7831ae5b54a31a69bd670220e42e99ec154475025a468eae58ea262f813fdc8d1c62
  languageName: node
  linkType: hard

\\"lru-cache@npm:^6.0.0\\":
  version: 6.0.0
  resolution: \\"lru-cache@npm:6.0.0\\"
  dependencies:
    yallist: ^4.0.0
  checksum: f97f499f898f23e4585742138a22f22526254fdba6d75d41a1c2526b3b6cc5747ef59c5612ba7375f42aca4f8461950e925ba08c991ead0651b4918b7c978297
  languageName: node
  linkType: hard

\\"lru-cache@npm:^7.7.1\\":
  version: 7.16.0
  resolution: \\"lru-cache@npm:7.16.0\\"
  checksum: 1a5511a0e695154c37f443c495ebcf3170ec8c291df62e140329cf0c48e2549db836e69371853a28286dc9de73a98f486a7566c64246249a6041c43d4a28bc60
  languageName: node
  linkType: hard

\\"make-fetch-happen@npm:^10.0.3\\":
  version: 10.2.1
  resolution: \\"make-fetch-happen@npm:10.2.1\\"
  dependencies:
    agentkeepalive: ^4.2.1
    cacache: ^16.1.0
    http-cache-semantics: ^4.1.0
    http-proxy-agent: ^5.0.0
    https-proxy-agent: ^5.0.0
    is-lambda: ^1.0.1
    lru-cache: ^7.7.1
    minipass: ^3.1.6
    minipass-collect: ^1.0.2
    minipass-fetch: ^2.0.3
    minipass-flush: ^1.0.5
    minipass-pipeline: ^1.2.4
    negotiator: ^0.6.3
    promise-retry: ^2.0.1
    socks-proxy-agent: ^7.0.0
    ssri: ^9.0.0
  checksum: 2332eb9a8ec96f1ffeeea56ccefabcb4193693597b132cd110734d50f2928842e22b84cfa1508e921b8385cdfd06dda9ad68645fed62b50fff629a580f5fb72c
  languageName: node
  linkType: hard

\\"merge2@npm:^1.3.0, merge2@npm:^1.4.1\\":
  version: 1.4.1
  resolution: \\"merge2@npm:1.4.1\\"
  checksum: 7268db63ed5169466540b6fb947aec313200bcf6d40c5ab722c22e242f651994619bcd85601602972d3c85bd2cc45a358a4c61937e9f11a061919a1da569b0c2
  languageName: node
  linkType: hard

\\"micromatch@npm:^4.0.4\\":
  version: 4.0.5
  resolution: \\"micromatch@npm:4.0.5\\"
  dependencies:
    braces: ^3.0.2
    picomatch: ^2.3.1
  checksum: 02a17b671c06e8fefeeb6ef996119c1e597c942e632a21ef589154f23898c9c6a9858526246abb14f8bca6e77734aa9dcf65476fca47cedfb80d9577d52843fc
  languageName: node
  linkType: hard

\\"mime-db@npm:1.52.0\\":
  version: 1.52.0
  resolution: \\"mime-db@npm:1.52.0\\"
  checksum: 0d99a03585f8b39d68182803b12ac601d9c01abfa28ec56204fa330bc9f3d1c5e14beb049bafadb3dbdf646dfb94b87e24d4ec7b31b7279ef906a8ea9b6a513f
  languageName: node
  linkType: hard

\\"mime-types@npm:^2.1.12\\":
  version: 2.1.35
  resolution: \\"mime-types@npm:2.1.35\\"
  dependencies:
    mime-db: 1.52.0
  checksum: 89a5b7f1def9f3af5dad6496c5ed50191ae4331cc5389d7c521c8ad28d5fdad2d06fd81baf38fed813dc4e46bb55c8145bb0ff406330818c9cf712fb2e9b3836
  languageName: node
  linkType: hard

\\"minimatch@npm:^3.1.1\\":
  version: 3.1.2
  resolution: \\"minimatch@npm:3.1.2\\"
  dependencies:
    brace-expansion: ^1.1.7
  checksum: c154e566406683e7bcb746e000b84d74465b3a832c45d59912b9b55cd50dee66e5c4b1e5566dba26154040e51672f9aa450a9aef0c97cfc7336b78b7afb9540a
  languageName: node
  linkType: hard

\\"minimatch@npm:^5.0.1\\":
  version: 5.1.6
  resolution: \\"minimatch@npm:5.1.6\\"
  dependencies:
    brace-expansion: ^2.0.1
  checksum: 7564208ef81d7065a370f788d337cd80a689e981042cb9a1d0e6580b6c6a8c9279eba80010516e258835a988363f99f54a6f711a315089b8b42694f5da9d0d77
  languageName: node
  linkType: hard

\\"minipass-collect@npm:^1.0.2\\":
  version: 1.0.2
  resolution: \\"minipass-collect@npm:1.0.2\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 14df761028f3e47293aee72888f2657695ec66bd7d09cae7ad558da30415fdc4752bbfee66287dcc6fd5e6a2fa3466d6c484dc1cbd986525d9393b9523d97f10
  languageName: node
  linkType: hard

\\"minipass-fetch@npm:^2.0.3\\":
  version: 2.1.2
  resolution: \\"minipass-fetch@npm:2.1.2\\"
  dependencies:
    encoding: ^0.1.13
    minipass: ^3.1.6
    minipass-sized: ^1.0.3
    minizlib: ^2.1.2
  dependenciesMeta:
    encoding:
      optional: true
  checksum: 3f216be79164e915fc91210cea1850e488793c740534985da017a4cbc7a5ff50506956d0f73bb0cb60e4fe91be08b6b61ef35101706d3ef5da2c8709b5f08f91
  languageName: node
  linkType: hard

\\"minipass-flush@npm:^1.0.5\\":
  version: 1.0.5
  resolution: \\"minipass-flush@npm:1.0.5\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 56269a0b22bad756a08a94b1ffc36b7c9c5de0735a4dd1ab2b06c066d795cfd1f0ac44a0fcae13eece5589b908ecddc867f04c745c7009be0b566421ea0944cf
  languageName: node
  linkType: hard

\\"minipass-pipeline@npm:^1.2.4\\":
  version: 1.2.4
  resolution: \\"minipass-pipeline@npm:1.2.4\\"
  dependencies:
    minipass: ^3.0.0
  checksum: b14240dac0d29823c3d5911c286069e36d0b81173d7bdf07a7e4a91ecdef92cdff4baaf31ea3746f1c61e0957f652e641223970870e2353593f382112257971b
  languageName: node
  linkType: hard

\\"minipass-sized@npm:^1.0.3\\":
  version: 1.0.3
  resolution: \\"minipass-sized@npm:1.0.3\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 79076749fcacf21b5d16dd596d32c3b6bf4d6e62abb43868fac21674078505c8b15eaca4e47ed844985a4514854f917d78f588fcd029693709417d8f98b2bd60
  languageName: node
  linkType: hard

\\"minipass@npm:^3.0.0, minipass@npm:^3.1.1, minipass@npm:^3.1.6\\":
  version: 3.3.6
  resolution: \\"minipass@npm:3.3.6\\"
  dependencies:
    yallist: ^4.0.0
  checksum: a30d083c8054cee83cdcdc97f97e4641a3f58ae743970457b1489ce38ee1167b3aaf7d815cd39ec7a99b9c40397fd4f686e83750e73e652b21cb516f6d845e48
  languageName: node
  linkType: hard

\\"minipass@npm:^4.0.0\\":
  version: 4.0.3
  resolution: \\"minipass@npm:4.0.3\\"
  checksum: a09f405e2f380ae7f6ee0cbb53b45c1fcc1b6c70fc3896f4d20649d92a10e61892c57bd9960a64cedf6c90b50022cb6c195905b515039c335b423202f99e6f18
  languageName: node
  linkType: hard

\\"minizlib@npm:^2.1.1, minizlib@npm:^2.1.2\\":
  version: 2.1.2
  resolution: \\"minizlib@npm:2.1.2\\"
  dependencies:
    minipass: ^3.0.0
    yallist: ^4.0.0
  checksum: f1fdeac0b07cf8f30fcf12f4b586795b97be856edea22b5e9072707be51fc95d41487faec3f265b42973a304fe3a64acd91a44a3826a963e37b37bafde0212c3
  languageName: node
  linkType: hard

\\"mkdirp@npm:^1.0.3, mkdirp@npm:^1.0.4\\":
  version: 1.0.4
  resolution: \\"mkdirp@npm:1.0.4\\"
  bin:
    mkdirp: bin/cmd.js
  checksum: a96865108c6c3b1b8e1d5e9f11843de1e077e57737602de1b82030815f311be11f96f09cce59bd5b903d0b29834733e5313f9301e3ed6d6f6fba2eae0df4298f
  languageName: node
  linkType: hard

\\"ms@npm:2.1.2\\":
  version: 2.1.2
  resolution: \\"ms@npm:2.1.2\\"
  checksum: 673cdb2c3133eb050c745908d8ce632ed2c02d85640e2edb3ace856a2266a813b30c613569bf3354fdf4ea7d1a1494add3bfa95e2713baa27d0c2c71fc44f58f
  languageName: node
  linkType: hard

\\"ms@npm:^2.0.0\\":
  version: 2.1.3
  resolution: \\"ms@npm:2.1.3\\"
  checksum: aa92de608021b242401676e35cfa5aa42dd70cbdc082b916da7fb925c542173e36bce97ea3e804923fe92c0ad991434e4a38327e15a1b5b5f945d66df615ae6d
  languageName: node
  linkType: hard

\\"mylas@npm:^2.1.9\\":
  version: 2.1.13
  resolution: \\"mylas@npm:2.1.13\\"
  checksum: f861d092137a9ac268cba88042392a5dc2a290eed5c8543954eae849d85e5961332211161d2c08c3644ad893f20dbe9de89b07f5dc027f1f92f13f2d38f4b81f
  languageName: node
  linkType: hard

\\"negotiator@npm:^0.6.3\\":
  version: 0.6.3
  resolution: \\"negotiator@npm:0.6.3\\"
  checksum: b8ffeb1e262eff7968fc90a2b6767b04cfd9842582a9d0ece0af7049537266e7b2506dfb1d107a32f06dd849ab2aea834d5830f7f4d0e5cb7d36e1ae55d021d9
  languageName: node
  linkType: hard

\\"node-gyp@npm:latest\\":
  version: 9.3.1
  resolution: \\"node-gyp@npm:9.3.1\\"
  dependencies:
    env-paths: ^2.2.0
    glob: ^7.1.4
    graceful-fs: ^4.2.6
    make-fetch-happen: ^10.0.3
    nopt: ^6.0.0
    npmlog: ^6.0.0
    rimraf: ^3.0.2
    semver: ^7.3.5
    tar: ^6.1.2
    which: ^2.0.2
  bin:
    node-gyp: bin/node-gyp.js
  checksum: b860e9976fa645ca0789c69e25387401b4396b93c8375489b5151a6c55cf2640a3b6183c212b38625ef7c508994930b72198338e3d09b9d7ade5acc4aaf51ea7
  languageName: node
  linkType: hard

\\"nopt@npm:^6.0.0\\":
  version: 6.0.0
  resolution: \\"nopt@npm:6.0.0\\"
  dependencies:
    abbrev: ^1.0.0
  bin:
    nopt: bin/nopt.js
  checksum: 82149371f8be0c4b9ec2f863cc6509a7fd0fa729929c009f3a58e4eb0c9e4cae9920e8f1f8eb46e7d032fec8fb01bede7f0f41a67eb3553b7b8e14fa53de1dac
  languageName: node
  linkType: hard

\\"normalize-path@npm:^3.0.0, normalize-path@npm:~3.0.0\\":
  version: 3.0.0
  resolution: \\"normalize-path@npm:3.0.0\\"
  checksum: 88eeb4da891e10b1318c4b2476b6e2ecbeb5ff97d946815ffea7794c31a89017c70d7f34b3c2ebf23ef4e9fc9fb99f7dffe36da22011b5b5c6ffa34f4873ec20
  languageName: node
  linkType: hard

\\"npmlog@npm:^6.0.0\\":
  version: 6.0.2
  resolution: \\"npmlog@npm:6.0.2\\"
  dependencies:
    are-we-there-yet: ^3.0.0
    console-control-strings: ^1.1.0
    gauge: ^4.0.3
    set-blocking: ^2.0.0
  checksum: ae238cd264a1c3f22091cdd9e2b106f684297d3c184f1146984ecbe18aaa86343953f26b9520dedd1b1372bc0316905b736c1932d778dbeb1fcf5a1001390e2a
  languageName: node
  linkType: hard

\\"once@npm:^1.3.0\\":
  version: 1.4.0
  resolution: \\"once@npm:1.4.0\\"
  dependencies:
    wrappy: 1
  checksum: cd0a88501333edd640d95f0d2700fbde6bff20b3d4d9bdc521bdd31af0656b5706570d6c6afe532045a20bb8dc0849f8332d6f2a416e0ba6d3d3b98806c7db68
  languageName: node
  linkType: hard

\\"p-map@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"p-map@npm:4.0.0\\"
  dependencies:
    aggregate-error: ^3.0.0
  checksum: cb0ab21ec0f32ddffd31dfc250e3afa61e103ef43d957cc45497afe37513634589316de4eb88abdfd969fe6410c22c0b93ab24328833b8eb1ccc087fc0442a1c
  languageName: node
  linkType: hard

\\"path-is-absolute@npm:^1.0.0\\":
  version: 1.0.1
  resolution: \\"path-is-absolute@npm:1.0.1\\"
  checksum: 060840f92cf8effa293bcc1bea81281bd7d363731d214cbe5c227df207c34cd727430f70c6037b5159c8a870b9157cba65e775446b0ab06fd5ecc7e54615a3b8
  languageName: node
  linkType: hard

\\"path-type@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"path-type@npm:4.0.0\\"
  checksum: 5b1e2daa247062061325b8fdbfd1fb56dde0a448fb1455453276ea18c60685bdad23a445dc148cf87bc216be1573357509b7d4060494a6fd768c7efad833ee45
  languageName: node
  linkType: hard

\\"picomatch@npm:^2.0.4, picomatch@npm:^2.2.1, picomatch@npm:^2.3.1\\":
  version: 2.3.1
  resolution: \\"picomatch@npm:2.3.1\\"
  checksum: 050c865ce81119c4822c45d3c84f1ced46f93a0126febae20737bd05ca20589c564d6e9226977df859ed5e03dc73f02584a2b0faad36e896936238238b0446cf
  languageName: node
  linkType: hard

\\"plimit-lit@npm:^1.2.6\\":
  version: 1.5.0
  resolution: \\"plimit-lit@npm:1.5.0\\"
  dependencies:
    queue-lit: ^1.5.0
  checksum: a956e4e5e515a980403ca840b00c9e2381710a3a30e60e0e38f76b7842b24a345c9e59ef03568cb5925b4e9cdf67c088008148febec59e55bd47d1cb4003b024
  languageName: node
  linkType: hard

\\"prettier@npm:2.7.1\\":
  version: 2.7.1
  resolution: \\"prettier@npm:2.7.1\\"
  bin:
    prettier: bin-prettier.js
  checksum: 55a4409182260866ab31284d929b3cb961e5fdb91fe0d2e099dac92eaecec890f36e524b4c19e6ceae839c99c6d7195817579cdffc8e2c80da0cb794463a748b
  languageName: node
  linkType: hard

\\"promise-inflight@npm:^1.0.1\\":
  version: 1.0.1
  resolution: \\"promise-inflight@npm:1.0.1\\"
  checksum: 22749483091d2c594261517f4f80e05226d4d5ecc1fc917e1886929da56e22b5718b7f2a75f3807e7a7d471bc3be2907fe92e6e8f373ddf5c64bae35b5af3981
  languageName: node
  linkType: hard

\\"promise-retry@npm:^2.0.1\\":
  version: 2.0.1
  resolution: \\"promise-retry@npm:2.0.1\\"
  dependencies:
    err-code: ^2.0.2
    retry: ^0.12.0
  checksum: f96a3f6d90b92b568a26f71e966cbbc0f63ab85ea6ff6c81284dc869b41510e6cdef99b6b65f9030f0db422bf7c96652a3fff9f2e8fb4a0f069d8f4430359429
  languageName: node
  linkType: hard

\\"queue-lit@npm:^1.5.0\\":
  version: 1.5.0
  resolution: \\"queue-lit@npm:1.5.0\\"
  checksum: 2e714b74072e1be9bd76356710af1d3b03763859f466a10ed74f36b5ccc524dbd0d299239adfc5cbd3a4a416c5fc69cf4af34f13ef4f95f6da70cad12cb79771
  languageName: node
  linkType: hard

\\"queue-microtask@npm:^1.2.2\\":
  version: 1.2.3
  resolution: \\"queue-microtask@npm:1.2.3\\"
  checksum: b676f8c040cdc5b12723ad2f91414d267605b26419d5c821ff03befa817ddd10e238d22b25d604920340fd73efd8ba795465a0377c4adf45a4a41e4234e42dc4
  languageName: node
  linkType: hard

\\"readable-stream@npm:^3.6.0\\":
  version: 3.6.0
  resolution: \\"readable-stream@npm:3.6.0\\"
  dependencies:
    inherits: ^2.0.3
    string_decoder: ^1.1.1
    util-deprecate: ^1.0.1
  checksum: d4ea81502d3799439bb955a3a5d1d808592cf3133350ed352aeaa499647858b27b1c4013984900238b0873ec8d0d8defce72469fb7a83e61d53f5ad61cb80dc8
  languageName: node
  linkType: hard

\\"readdirp@npm:~3.6.0\\":
  version: 3.6.0
  resolution: \\"readdirp@npm:3.6.0\\"
  dependencies:
    picomatch: ^2.2.1
  checksum: 1ced032e6e45670b6d7352d71d21ce7edf7b9b928494dcaba6f11fba63180d9da6cd7061ebc34175ffda6ff529f481818c962952004d273178acd70f7059b320
  languageName: node
  linkType: hard

\\"retry@npm:^0.12.0\\":
  version: 0.12.0
  resolution: \\"retry@npm:0.12.0\\"
  checksum: 623bd7d2e5119467ba66202d733ec3c2e2e26568074923bc0585b6b99db14f357e79bdedb63cab56cec47491c4a0da7e6021a7465ca6dc4f481d3898fdd3158c
  languageName: node
  linkType: hard

\\"reusify@npm:^1.0.4\\":
  version: 1.0.4
  resolution: \\"reusify@npm:1.0.4\\"
  checksum: c3076ebcc22a6bc252cb0b9c77561795256c22b757f40c0d8110b1300723f15ec0fc8685e8d4ea6d7666f36c79ccc793b1939c748bf36f18f542744a4e379fcc
  languageName: node
  linkType: hard

\\"rimraf@npm:^3.0.2\\":
  version: 3.0.2
  resolution: \\"rimraf@npm:3.0.2\\"
  dependencies:
    glob: ^7.1.3
  bin:
    rimraf: bin.js
  checksum: 87f4164e396f0171b0a3386cc1877a817f572148ee13a7e113b238e48e8a9f2f31d009a92ec38a591ff1567d9662c6b67fd8818a2dbbaed74bc26a87a2a4a9a0
  languageName: node
  linkType: hard

\\"run-parallel@npm:^1.1.9\\":
  version: 1.2.0
  resolution: \\"run-parallel@npm:1.2.0\\"
  dependencies:
    queue-microtask: ^1.2.2
  checksum: cb4f97ad25a75ebc11a8ef4e33bb962f8af8516bb2001082ceabd8902e15b98f4b84b4f8a9b222e5d57fc3bd1379c483886ed4619367a7680dad65316993021d
  languageName: node
  linkType: hard

\\"safe-buffer@npm:~5.2.0\\":
  version: 5.2.1
  resolution: \\"safe-buffer@npm:5.2.1\\"
  checksum: b99c4b41fdd67a6aaf280fcd05e9ffb0813654894223afb78a31f14a19ad220bba8aba1cb14eddce1fcfb037155fe6de4e861784eb434f7d11ed58d1e70dd491
  languageName: node
  linkType: hard

\\"safer-buffer@npm:>= 2.1.2 < 3.0.0\\":
  version: 2.1.2
  resolution: \\"safer-buffer@npm:2.1.2\\"
  checksum: cab8f25ae6f1434abee8d80023d7e72b598cf1327164ddab31003c51215526801e40b66c5e65d658a0af1e9d6478cadcb4c745f4bd6751f97d8644786c0978b0
  languageName: node
  linkType: hard

\\"semver@npm:^7.3.5\\":
  version: 7.3.8
  resolution: \\"semver@npm:7.3.8\\"
  dependencies:
    lru-cache: ^6.0.0
  bin:
    semver: bin/semver.js
  checksum: ba9c7cbbf2b7884696523450a61fee1a09930d888b7a8d7579025ad93d459b2d1949ee5bbfeb188b2be5f4ac163544c5e98491ad6152df34154feebc2cc337c1
  languageName: node
  linkType: hard

\\"set-blocking@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"set-blocking@npm:2.0.0\\"
  checksum: 6e65a05f7cf7ebdf8b7c75b101e18c0b7e3dff4940d480efed8aad3a36a4005140b660fa1d804cb8bce911cac290441dc728084a30504d3516ac2ff7ad607b02
  languageName: node
  linkType: hard

\\"signal-exit@npm:^3.0.7\\":
  version: 3.0.7
  resolution: \\"signal-exit@npm:3.0.7\\"
  checksum: a2f098f247adc367dffc27845853e9959b9e88b01cb301658cfe4194352d8d2bb32e18467c786a7fe15f1d44b233ea35633d076d5e737870b7139949d1ab6318
  languageName: node
  linkType: hard

\\"slash@npm:^3.0.0\\":
  version: 3.0.0
  resolution: \\"slash@npm:3.0.0\\"
  checksum: 94a93fff615f25a999ad4b83c9d5e257a7280c90a32a7cb8b4a87996e4babf322e469c42b7f649fd5796edd8687652f3fb452a86dc97a816f01113183393f11c
  languageName: node
  linkType: hard

\\"smart-buffer@npm:^4.2.0\\":
  version: 4.2.0
  resolution: \\"smart-buffer@npm:4.2.0\\"
  checksum: b5167a7142c1da704c0e3af85c402002b597081dd9575031a90b4f229ca5678e9a36e8a374f1814c8156a725d17008ae3bde63b92f9cfd132526379e580bec8b
  languageName: node
  linkType: hard

\\"socks-proxy-agent@npm:^7.0.0\\":
  version: 7.0.0
  resolution: \\"socks-proxy-agent@npm:7.0.0\\"
  dependencies:
    agent-base: ^6.0.2
    debug: ^4.3.3
    socks: ^2.6.2
  checksum: 720554370154cbc979e2e9ce6a6ec6ced205d02757d8f5d93fe95adae454fc187a5cbfc6b022afab850a5ce9b4c7d73e0f98e381879cf45f66317a4895953846
  languageName: node
  linkType: hard

\\"socks@npm:^2.6.2\\":
  version: 2.7.1
  resolution: \\"socks@npm:2.7.1\\"
  dependencies:
    ip: ^2.0.0
    smart-buffer: ^4.2.0
  checksum: 259d9e3e8e1c9809a7f5c32238c3d4d2a36b39b83851d0f573bfde5f21c4b1288417ce1af06af1452569cd1eb0841169afd4998f0e04ba04656f6b7f0e46d748
  languageName: node
  linkType: hard

\\"ssri@npm:^9.0.0\\":
  version: 9.0.1
  resolution: \\"ssri@npm:9.0.1\\"
  dependencies:
    minipass: ^3.1.1
  checksum: fb58f5e46b6923ae67b87ad5ef1c5ab6d427a17db0bead84570c2df3cd50b4ceb880ebdba2d60726588272890bae842a744e1ecce5bd2a2a582fccd5068309eb
  languageName: node
  linkType: hard

\\"string-width@npm:^1.0.2 || 2 || 3 || 4, string-width@npm:^4.2.3\\":
  version: 4.2.3
  resolution: \\"string-width@npm:4.2.3\\"
  dependencies:
    emoji-regex: ^8.0.0
    is-fullwidth-code-point: ^3.0.0
    strip-ansi: ^6.0.1
  checksum: e52c10dc3fbfcd6c3a15f159f54a90024241d0f149cf8aed2982a2d801d2e64df0bf1dc351cf8e95c3319323f9f220c16e740b06faecd53e2462df1d2b5443fb
  languageName: node
  linkType: hard

\\"string_decoder@npm:^1.1.1\\":
  version: 1.3.0
  resolution: \\"string_decoder@npm:1.3.0\\"
  dependencies:
    safe-buffer: ~5.2.0
  checksum: 8417646695a66e73aefc4420eb3b84cc9ffd89572861fe004e6aeb13c7bc00e2f616247505d2dbbef24247c372f70268f594af7126f43548565c68c117bdeb56
  languageName: node
  linkType: hard

\\"strip-ansi@npm:^6.0.1\\":
  version: 6.0.1
  resolution: \\"strip-ansi@npm:6.0.1\\"
  dependencies:
    ansi-regex: ^5.0.1
  checksum: f3cd25890aef3ba6e1a74e20896c21a46f482e93df4a06567cebf2b57edabb15133f1f94e57434e0a958d61186087b1008e89c94875d019910a213181a14fc8c
  languageName: node
  linkType: hard

\\"tar@npm:^6.1.11, tar@npm:^6.1.2\\":
  version: 6.1.13
  resolution: \\"tar@npm:6.1.13\\"
  dependencies:
    chownr: ^2.0.0
    fs-minipass: ^2.0.0
    minipass: ^4.0.0
    minizlib: ^2.1.1
    mkdirp: ^1.0.3
    yallist: ^4.0.0
  checksum: 8a278bed123aa9f53549b256a36b719e317c8b96fe86a63406f3c62887f78267cea9b22dc6f7007009738509800d4a4dccc444abd71d762287c90f35b002eb1c
  languageName: node
  linkType: hard

\\"to-regex-range@npm:^5.0.1\\":
  version: 5.0.1
  resolution: \\"to-regex-range@npm:5.0.1\\"
  dependencies:
    is-number: ^7.0.0
  checksum: f76fa01b3d5be85db6a2a143e24df9f60dd047d151062d0ba3df62953f2f697b16fe5dad9b0ac6191c7efc7b1d9dcaa4b768174b7b29da89d4428e64bc0a20ed
  languageName: node
  linkType: hard

\\"tsc-alias@npm:1.7.1\\":
  version: 1.7.1
  resolution: \\"tsc-alias@npm:1.7.1\\"
  dependencies:
    chokidar: ^3.5.3
    commander: ^9.0.0
    globby: ^11.0.4
    mylas: ^2.1.9
    normalize-path: ^3.0.0
    plimit-lit: ^1.2.6
  bin:
    tsc-alias: dist/bin/index.js
  checksum: 3e153cad544997303c1ff030358f898b4b381e692a05170e772fb35182d23c3c52c5e604ff00752f33a6133b27552f6b3794b05d8b9e0d8997cd3fe76a03bafd
  languageName: node
  linkType: hard

\\"typescript@npm:4.6.4\\":
  version: 4.6.4
  resolution: \\"typescript@npm:4.6.4\\"
  bin:
    tsc: bin/tsc
    tsserver: bin/tsserver
  checksum: e7bfcc39cd4571a63a54e5ea21f16b8445268b9900bf55aee0e02ad981be576acc140eba24f1af5e3c1457767c96cea6d12861768fb386cf3ffb34013718631a
  languageName: node
  linkType: hard

\\"typescript@patch:typescript@4.6.4#~builtin<compat/typescript>\\":
  version: 4.6.4
  resolution: \\"typescript@patch:typescript@npm%3A4.6.4#~builtin<compat/typescript>::version=4.6.4&hash=a1c5e5\\"
  bin:
    tsc: bin/tsc
    tsserver: bin/tsserver
  checksum: 1cb434fbc637d347be90e3a0c6cd05e33c38f941713c8786d3031faf1842c2c148ba91d2fac01e7276b0ae3249b8633f1660e32686cc7a8c6a8fd5361dc52c66
  languageName: node
  linkType: hard

\\"unique-filename@npm:^2.0.0\\":
  version: 2.0.1
  resolution: \\"unique-filename@npm:2.0.1\\"
  dependencies:
    unique-slug: ^3.0.0
  checksum: 807acf3381aff319086b64dc7125a9a37c09c44af7620bd4f7f3247fcd5565660ac12d8b80534dcbfd067e6fe88a67e621386dd796a8af828d1337a8420a255f
  languageName: node
  linkType: hard

\\"unique-slug@npm:^3.0.0\\":
  version: 3.0.0
  resolution: \\"unique-slug@npm:3.0.0\\"
  dependencies:
    imurmurhash: ^0.1.4
  checksum: 49f8d915ba7f0101801b922062ee46b7953256c93ceca74303bd8e6413ae10aa7e8216556b54dc5382895e8221d04f1efaf75f945c2e4a515b4139f77aa6640c
  languageName: node
  linkType: hard

\\"url-join@npm:4.0.1\\":
  version: 4.0.1
  resolution: \\"url-join@npm:4.0.1\\"
  checksum: f74e868bf25dbc8be6a8d7237d4c36bb5b6c62c72e594d5ab1347fe91d6af7ccd9eb5d621e30152e4da45c2e9a26bec21390e911ab54a62d4d82e76028374ee5
  languageName: node
  linkType: hard

\\"util-deprecate@npm:^1.0.1\\":
  version: 1.0.2
  resolution: \\"util-deprecate@npm:1.0.2\\"
  checksum: 474acf1146cb2701fe3b074892217553dfcf9a031280919ba1b8d651a068c9b15d863b7303cb15bd00a862b498e6cf4ad7b4a08fb134edd5a6f7641681cb54a2
  languageName: node
  linkType: hard

\\"which@npm:^2.0.2\\":
  version: 2.0.2
  resolution: \\"which@npm:2.0.2\\"
  dependencies:
    isexe: ^2.0.0
  bin:
    node-which: ./bin/node-which
  checksum: 1a5c563d3c1b52d5f893c8b61afe11abc3bab4afac492e8da5bde69d550de701cf9806235f20a47b5c8fa8a1d6a9135841de2596535e998027a54589000e66d1
  languageName: node
  linkType: hard

\\"wide-align@npm:^1.1.5\\":
  version: 1.1.5
  resolution: \\"wide-align@npm:1.1.5\\"
  dependencies:
    string-width: ^1.0.2 || 2 || 3 || 4
  checksum: d5fc37cd561f9daee3c80e03b92ed3e84d80dde3365a8767263d03dacfc8fa06b065ffe1df00d8c2a09f731482fcacae745abfbb478d4af36d0a891fad4834d3
  languageName: node
  linkType: hard

\\"wrappy@npm:1\\":
  version: 1.0.2
  resolution: \\"wrappy@npm:1.0.2\\"
  checksum: 159da4805f7e84a3d003d8841557196034155008f817172d4e986bd591f74aa82aa7db55929a54222309e01079a65a92a9e6414da5a6aa4b01ee44a511ac3ee5
  languageName: node
  linkType: hard

\\"yallist@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"yallist@npm:4.0.0\\"
  checksum: 343617202af32df2a15a3be36a5a8c0c8545208f3d3dfbc6bb7c3e3b7e8c6f8e7485432e4f3b88da3031a6e20afa7c711eded32ddfb122896ac5d914e75848d5
  languageName: node
  linkType: hard
",
    "name": "yarn.lock",
    "type": "file",
  },
]
`;

exports[`runGenerator nursery-status-code 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "name: ci

on: [push]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: yarn && yarn build
  
  publish:
    needs: [ compile ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken \${NPM_TOKEN}
          npm publish --ignore-scripts --access restricted
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}",
            "name": "ci.yml",
            "type": "file",
          },
        ],
        "name": "workflows",
        "type": "directory",
      },
    ],
    "name": ".github",
    "type": "directory",
  },
  Object {
    "contents": "node_modules
.DS_Store
/dist
/Client.d.ts
/Client.js
/environments.d.ts
/environments.js
/index.d.ts
/index.js
/api
/core
/errors
/serialization

# yarn berry
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions",
    "name": ".gitignore",
    "type": "file",
  },
  Object {
    "contents": "tabWidth: 4
printWidth: 120
",
    "name": ".prettierrc.yml",
    "type": "file",
  },
  Object {
    "contents": "{
    \\"name\\": \\"@fern/api\\",
    \\"version\\": \\"0.0.1\\",
    \\"private\\": true,
    \\"repository\\": \\"https://github.com/fern/api}\\",
    \\"files\\": [
        \\"Client.d.ts\\",
        \\"Client.js\\",
        \\"environments.d.ts\\",
        \\"environments.js\\",
        \\"index.d.ts\\",
        \\"index.js\\",
        \\"api\\",
        \\"core\\",
        \\"errors\\",
        \\"serialization\\"
    ],
    \\"main\\": \\"./index.js\\",
    \\"types\\": \\"./index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"build\\": \\"tsc && tsc-alias\\",
        \\"prepack\\": \\"cp -rv dist/. .\\"
    },
    \\"dependencies\\": {
        \\"@types/url-join\\": \\"4.0.1\\",
        \\"axios\\": \\"^0.27.2\\",
        \\"url-join\\": \\"4.0.1\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"tsc-alias\\": \\"1.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
    "name": "package.json",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"./environments\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"./core\\";
import * as serializers from \\"./serialization\\";
import * as errors from \\"./errors\\";
import { Owner } from \\"./api/resources/owner/client/Client\\";
import { Package } from \\"./api/resources/package/client/Client\\";
import { Token } from \\"./api/resources/token/client/Client\\";

export declare namespace FernApiClient {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class FernApiClient {
    constructor(private readonly options: FernApiClient.Options) {}

    public async getString(): Promise<FernApi.RootString> {
        const _response = await core.fetcher({
            url: (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.RootString.parseOrThrow(_response.body as serializers.RootString.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    private _owner: Owner | undefined;

    public get owner(): Owner {
        return (this._owner ??= new Owner(this.options));
    }

    private _package: Package | undefined;

    public get package(): Package {
        return (this._package ??= new Package(this.options));
    }

    private _token: Token | undefined;

    public get token(): Token {
        return (this._token ??= new Token(this.options));
    }
}
",
        "name": "Client.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * as owner from \\"./owner\\";
export * from \\"./owner/types\\";
export * as package_ from \\"./package\\";
export * as token from \\"./token\\";
export * from \\"./token/types\\";
export * from \\"./owner/errors\\";
export * from \\"./token/errors\\";
export * from \\"./owner/client/requests\\";
export * from \\"./token/client/requests\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import urlJoin from \\"url-join\\";
import * as serializers from \\"../../../../serialization\\";
import * as core from \\"../../../../core\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Owner {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Owner {
    constructor(private readonly options: Owner.Options) {}

    /**
     * @throws {FernApi.OwnerAlreadyExistsError}
     */
    public async create(request: FernApi.CreateOwnerRequest): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin((this.options.environment ?? environments.FernApiEnvironment.Production).serverA, \\"/owner\\"),
            method: \\"POST\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.CreateOwnerRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.statusCode) {
                case 400:
                    throw new FernApi.OwnerAlreadyExistsError(
                        await serializers.OwnerId.parseOrThrow(_response.error.body as serializers.OwnerId.Raw, {
                            allowUnknownKeys: true,
                        })
                    );
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.OwnerNotFoundError}
     */
    public async get(ownerId: FernApi.OwnerId): Promise<FernApi.Owner> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
                \`/owner/\${await serializers.OwnerId.jsonOrThrow(ownerId)}\`
            ),
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.Owner.parseOrThrow(_response.body as serializers.Owner.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.statusCode) {
                case 404:
                    throw new FernApi.OwnerNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.OwnerNotFoundError}
     */
    public async update(ownerId: FernApi.OwnerId, request: FernApi.UpdateOwnerRequest): Promise<FernApi.Owner> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
                \`/owner/\${await serializers.OwnerId.jsonOrThrow(ownerId)}\`
            ),
            method: \\"PUT\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.UpdateOwnerRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return await serializers.Owner.parseOrThrow(_response.body as serializers.Owner.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.statusCode) {
                case 404:
                    throw new FernApi.OwnerNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface CreateOwnerRequest {
    ownerId: FernApi.OwnerId;
    data?: unknown;
}
",
                            "name": "CreateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface UpdateOwnerRequest {
    data?: unknown;
}
",
                            "name": "UpdateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateOwnerRequest } from \\"./CreateOwnerRequest\\";
export { UpdateOwnerRequest } from \\"./UpdateOwnerRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";
import { FernApi } from \\"@fern/api\\";

export class OwnerAlreadyExistsError extends errors.FernApiError {
    constructor(body: FernApi.OwnerId) {
        super({
            message: \\"OwnerAlreadyExistsError\\",
            statusCode: 400,
            body: body,
        });
        Object.setPrototypeOf(this, OwnerAlreadyExistsError.prototype);
    }
}
",
                        "name": "OwnerAlreadyExistsError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class OwnerNotFoundError extends errors.FernApiError {
    constructor() {
        super({
            message: \\"OwnerNotFoundError\\",
            statusCode: 404,
        });
        Object.setPrototypeOf(this, OwnerNotFoundError.prototype);
    }
}
",
                        "name": "OwnerNotFoundError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OwnerAlreadyExistsError\\";
export * from \\"./OwnerNotFoundError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "errors",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./errors\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface Owner {
    ownerId: FernApi.OwnerId;
    data?: unknown;
}
",
                        "name": "Owner.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Unique id for an owner.
 */
export type OwnerId = string;
",
                        "name": "OwnerId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OwnerId\\";
export * from \\"./Owner\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "owner",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";
import * as serializers from \\"../../../../serialization\\";
import * as errors from \\"../../../../errors\\";
import { Nested } from \\"../resources/nested/client/Client\\";

export declare namespace Package {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Package {
    constructor(private readonly options: Package.Options) {}

    public async getString(): Promise<FernApi.package_.PackageString> {
        const _response = await core.fetcher({
            url: (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.package_.PackageString.parseOrThrow(
                _response.body as serializers.package_.PackageString.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    private _nested: Nested | undefined;

    public get nested(): Nested {
        return (this._nested ??= new Nested(this.options));
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as nested from \\"./nested\\";
export * from \\"./nested/types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../../core\\";
import * as serializers from \\"../../../../../../serialization\\";
import * as errors from \\"../../../../../../errors\\";

export declare namespace Nested {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Nested {
    constructor(private readonly options: Nested.Options) {}

    public async getString(): Promise<FernApi.package_.NestedString> {
        const _response = await core.fetcher({
            url: (this.options.environment ?? environments.FernApiEnvironment.Production).serverA,
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.package_.NestedString.parseOrThrow(
                _response.body as serializers.package_.NestedString.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                                "name": "Client.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type NestedString = string;
",
                                "name": "NestedString.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./NestedString\\";
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "nested",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type PackageString = string;
",
                        "name": "PackageString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PackageString\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "package",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import { FernApi } from \\"@fern/api\\";
import urlJoin from \\"url-join\\";
import * as serializers from \\"../../../../serialization\\";
import * as core from \\"../../../../core\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Token {
    interface Options {
        environment?: environments.FernApiEnvironment | environments.FernApiEnvironmentUrls;
        apiVersion: string;
    }
}

export class Token {
    constructor(private readonly options: Token.Options) {}

    /**
     * @throws {FernApi.OwnerNotFoundError}
     */
    public async create(request: FernApi.CreateTokenRequest): Promise<FernApi.CreateTokenResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverB,
                \\"/tokens/create\\"
            ),
            method: \\"POST\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.CreateTokenRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return await serializers.CreateTokenResponse.parseOrThrow(
                _response.body as serializers.CreateTokenResponse.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.statusCode) {
                case 404:
                    throw new FernApi.OwnerNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.TokenNotFoundError}
     */
    public async getTokenMetadata(request: FernApi.GetTokenMetadataRequest): Promise<FernApi.TokenMetadata> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverB,
                \\"/tokens/metadata\\"
            ),
            method: \\"POST\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
            body: await serializers.GetTokenMetadataRequest.jsonOrThrow(request),
        });
        if (_response.ok) {
            return await serializers.TokenMetadata.parseOrThrow(_response.body as serializers.TokenMetadata.Raw, {
                allowUnknownKeys: true,
            });
        }

        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.statusCode) {
                case 404:
                    throw new FernApi.TokenNotFoundError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * @throws {FernApi.OwnerNotFoundError}
     * @throws {FernApi.UnknownError}
     */
    public async getTokensForOwner(ownerId: FernApi.OwnerId): Promise<FernApi.TokenMetadata[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (this.options.environment ?? environments.FernApiEnvironment.Production).serverB,
                \`/tokens/owner/\${await serializers.OwnerId.jsonOrThrow(ownerId)}\`
            ),
            method: \\"GET\\",
            headers: {
                \\"X-API-Version\\": this.options.apiVersion,
            },
        });
        if (_response.ok) {
            return await serializers.token.getTokensForOwner.Response.parseOrThrow(
                _response.body as serializers.token.getTokensForOwner.Response.Raw,
                { allowUnknownKeys: true }
            );
        }

        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.statusCode) {
                case 404:
                    throw new FernApi.OwnerNotFoundError();
                case 500:
                    throw new FernApi.UnknownError(_response.error.body);
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface CreateTokenRequest {
    ownerId: FernApi.OwnerId;
    description?: string;
}
",
                            "name": "CreateTokenRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GetTokenMetadataRequest {
    token: string;
}
",
                            "name": "GetTokenMetadataRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateTokenRequest } from \\"./CreateTokenRequest\\";
export { GetTokenMetadataRequest } from \\"./GetTokenMetadataRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class TokenNotFoundError extends errors.FernApiError {
    constructor() {
        super({
            message: \\"TokenNotFoundError\\",
            statusCode: 404,
        });
        Object.setPrototypeOf(this, TokenNotFoundError.prototype);
    }
}
",
                        "name": "TokenNotFoundError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class UnknownError extends errors.FernApiError {
    constructor(body?: unknown) {
        super({
            message: \\"UnknownError\\",
            statusCode: 500,
            body: body,
        });
        Object.setPrototypeOf(this, UnknownError.prototype);
    }
}
",
                        "name": "UnknownError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TokenNotFoundError\\";
export * from \\"./UnknownError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "errors",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./errors\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface CreateTokenResponse {
    token: string;
    tokenId: FernApi.TokenId;
}
",
                        "name": "CreateTokenResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TokenId = string;
",
                        "name": "TokenId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export interface TokenMetadata {
    tokenId: FernApi.TokenId;
    ownerId: FernApi.OwnerId;
    description?: string;
    createdTime: Date;
    status: FernApi.TokenStatus;
}
",
                        "name": "TokenMetadata.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { FernApi } from \\"@fern/api\\";

export type TokenStatus =
    | FernApi.TokenStatus.Active
    | FernApi.TokenStatus.Expired
    | FernApi.TokenStatus.Revoked
    | FernApi.TokenStatus._Unknown;

export declare namespace TokenStatus {
    interface Active extends _Utils {
        type: \\"active\\";
    }

    interface Expired extends _Utils {
        type: \\"expired\\";
    }

    interface Revoked extends _Utils {
        type: \\"revoked\\";
    }

    interface _Unknown extends _Utils {
        type: void;
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernApi.TokenStatus._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        active: () => _Result;
        expired: () => _Result;
        revoked: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const TokenStatus = {
    active: (): FernApi.TokenStatus.Active => {
        return {
            type: \\"active\\",
            _visit: function <_Result>(
                this: FernApi.TokenStatus.Active,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    expired: (): FernApi.TokenStatus.Expired => {
        return {
            type: \\"expired\\",
            _visit: function <_Result>(
                this: FernApi.TokenStatus.Expired,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    revoked: (): FernApi.TokenStatus.Revoked => {
        return {
            type: \\"revoked\\",
            _visit: function <_Result>(
                this: FernApi.TokenStatus.Revoked,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    _unknown: (value: { type: string }): FernApi.TokenStatus._Unknown => {
        return {
            ...(value as any),
            _visit: function <_Result>(
                this: FernApi.TokenStatus._Unknown,
                visitor: FernApi.TokenStatus._Visitor<_Result>
            ) {
                return FernApi.TokenStatus._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernApi.TokenStatus, visitor: FernApi.TokenStatus._Visitor<_Result>): _Result => {
        switch (value.type) {
            case \\"active\\":
                return visitor.active();
            case \\"expired\\":
                return visitor.expired();
            case \\"revoked\\":
                return visitor.revoked();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
",
                        "name": "TokenStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TokenId\\";
export * from \\"./CreateTokenResponse\\";
export * from \\"./TokenMetadata\\";
export * from \\"./TokenStatus\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "token",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type RootString = string;
",
                "name": "RootString.ts",
                "type": "file",
              },
              Object {
                "contents": "export * from \\"./RootString\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "types",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "export type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;

export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}

export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.ts",
                "type": "file",
              },
              Object {
                "contents": "import axios, { AxiosError } from \\"axios\\";
import { APIResponse } from \\"./APIResponse\\";

export interface Fetcher {
    fetch: FetchFunction;
}

export type FetchFunction = (args: Fetcher.Args) => Promise<APIResponse<unknown, Fetcher.Error>>;

export declare namespace Fetcher {
    export interface Args {
        url: string;
        method: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
    }

    export type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;

    export interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }

    export interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }

    export interface TimeoutError {
        reason: \\"timeout\\";
    }

    export interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}

export const fetcher: FetchFunction = async (args) => {
    const headers: Record<string, string> = {
        \\"Content-Type\\": \\"application/json\\",
    };

    if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
            if (value != null) {
                headers[key] = value;
            }
        }
    }

    try {
        const response = await axios({
            url: args.url,
            params: args.queryParameters,
            method: args.method,
            headers,
            data: args.body,
            validateStatus: () => true,
            transformResponse: (response) => response,
            timeout: args.timeoutMs ?? 60_000,
            transitional: {
                clarifyTimeoutError: true,
            },
            withCredentials: args.withCredentials,
        });

        let body: unknown;
        if (response.data != null && response.data.length > 0) {
            try {
                body = JSON.parse(response.data) ?? undefined;
            } catch {
                return {
                    ok: false,
                    error: {
                        reason: \\"non-json\\",
                        statusCode: response.status,
                        rawBody: response.data,
                    },
                };
            }
        }

        if (response.status >= 200 && response.status < 300) {
            return {
                ok: true,
                body,
            };
        } else {
            return {
                ok: false,
                error: {
                    reason: \\"status-code\\",
                    statusCode: response.status,
                    body,
                },
            };
        }
    } catch (error) {
        if ((error as AxiosError).code === \\"ETIMEDOUT\\") {
            return {
                ok: false,
                error: {
                    reason: \\"timeout\\",
                },
            };
        }

        return {
            ok: false,
            error: {
                reason: \\"unknown\\",
                errorMessage: (error as AxiosError).message,
            },
        };
    }
};
",
                "name": "Fetcher.ts",
                "type": "file",
              },
              Object {
                "contents": "export type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);

export const Supplier = {
    get: async <T>(supplier: Supplier<T>): Promise<T> => {
        if (typeof supplier === \\"function\\") {
            return (supplier as () => T)();
        } else {
            return supplier;
        }
    },
};
",
                "name": "Supplier.ts",
                "type": "file",
              },
              Object {
                "contents": "export { type APIResponse } from \\"./APIResponse\\";
export { fetcher, type Fetcher, type FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * as serialization from \\"./schemas\\";
export * from \\"./fetcher\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";

export type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;

export type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;

export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}

export const SchemaType = {
    DATE: \\"date\\",
    ENUM: \\"enum\\",
    LIST: \\"list\\",
    STRING_LITERAL: \\"stringLiteral\\",
    OBJECT: \\"object\\",
    ANY: \\"any\\",
    BOOLEAN: \\"boolean\\",
    NUMBER: \\"number\\",
    STRING: \\"string\\",
    UNKNOWN: \\"unknown\\",
    RECORD: \\"record\\",
    SET: \\"set\\",
    UNION: \\"union\\",
    OPTIONAL: \\"optional\\",
} as const;
export type SchemaType = typeof SchemaType[keyof typeof SchemaType];

export type MaybeValid<T> = Valid<T> | Invalid;

export interface Valid<T> {
    ok: true;
    value: T;
}

export interface Invalid {
    ok: false;
    errors: ValidationError[];
}

export interface ValidationError {
    path: string[];
    message: string;
}

export interface SchemaOptions {
    /**
     * @default false
     */
    allowUnknownKeys?: boolean;
}
",
                "name": "Schema.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaType } from \\"../../Schema\\";
import { getSchemaUtils } from \\"../schema-utils\\";

// https://stackoverflow.com/questions/12756159/regex-and-iso8601-formatted-datetime
const ISO_8601_REGEX =
    /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;

export function date(): Schema<string, Date> {
    const baseSchema: BaseSchema<string, Date> = {
        parse: (raw) => {
            if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
                return {
                    ok: true,
                    value: new Date(raw),
                };
            } else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not an ISO 8601 date string\\",
                        },
                    ],
                };
            }
        },
        json: (date) => {
            if (date instanceof Date) {
                return {
                    ok: true,
                    value: date.toISOString(),
                };
            } else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Date object\\",
                        },
                    ],
                };
            }
        },
        getType: () => SchemaType.DATE,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "date.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { date } from \\"./date\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "date",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema, SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]> {
    const validValues = new Set<string>(values);

    const schemaCreator = createIdentitySchemaCreator(SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
        if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
            return {
                ok: true,
                value: value as U,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \\"Not one of the allowed values\\",
                    },
                ],
            };
        }
    });

    return schemaCreator();
}
",
                        "name": "enum.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { enum_ } from \\"./enum\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "enum",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./union\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { lazy, type SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;

export function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed> {
    const baseSchema = constructLazyBaseSchema(getter);
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

export function constructLazyBaseSchema<Raw, Parsed>(
    getter: SchemaGetter<Schema<Raw, Parsed>>
): BaseSchema<Raw, Parsed> {
    return {
        parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
        json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
        getType: async () => (await getMemoizedSchema(getter)).getType(),
    };
}

type MemoizedGetter<SchemaType extends Schema<any, any>> = SchemaGetter<SchemaType> & { __zurg_memoized?: SchemaType };

export async function getMemoizedSchema<SchemaType extends Schema<any, any>>(
    getter: SchemaGetter<SchemaType>
): Promise<SchemaType> {
    const castedGetter = getter as MemoizedGetter<SchemaType>;
    if (castedGetter.__zurg_memoized == null) {
        castedGetter.__zurg_memoized = await getter();
    }
    return castedGetter.__zurg_memoized;
}
",
                        "name": "lazy.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { getObjectUtils } from \\"../object\\";
import { getObjectLikeUtils } from \\"../object-like\\";
import { BaseObjectSchema, ObjectSchema } from \\"../object/types\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { constructLazyBaseSchema, getMemoizedSchema, SchemaGetter } from \\"./lazy\\";

export function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed> {
    const baseSchema: BaseObjectSchema<Raw, Parsed> = {
        ...constructLazyBaseSchema(getter),
        _getRawProperties: async () => (await getMemoizedSchema(getter))._getRawProperties(),
        _getParsedProperties: async () => (await getMemoizedSchema(getter))._getParsedProperties(),
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}
",
                        "name": "lazyObject.ts",
                        "type": "file",
                      },
                    ],
                    "name": "lazy",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { list } from \\"./list\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]> {
    const baseSchema: BaseSchema<Raw[], Parsed[]> = {
        parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
        json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
        getType: () => SchemaType.LIST,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformArray<Raw, Parsed>(
    value: unknown,
    transformItem: (item: Raw) => MaybePromise<MaybeValid<Parsed>>
): Promise<MaybeValid<Parsed[]>> {
    if (!Array.isArray(value)) {
        return {
            ok: false,
            errors: [
                {
                    message: \\"Not a list\\",
                    path: [],
                },
            ],
        };
    }

    const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));

    return maybeValidItems.reduce<MaybeValid<Parsed[]>>(
        (acc, item, index) => {
            if (acc.ok && item.ok) {
                return {
                    ok: true,
                    value: [...acc.value, item.value],
                };
            }

            const errors: ValidationError[] = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!item.ok) {
                errors.push(
                    ...item.errors.map((error) => ({
                        path: [\`[\${index}]\`, ...error.path],
                        message: error.message,
                    }))
                );
            }

            return {
                ok: false,
                errors,
            };
        },
        { ok: true, value: [] }
    );
}
",
                        "name": "list.ts",
                        "type": "file",
                      },
                    ],
                    "name": "list",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema, SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export function stringLiteral<V extends string>(literal: V): Schema<V, V> {
    const schemaCreator = createIdentitySchemaCreator(SchemaType.STRING_LITERAL, (value) => {
        if (value === literal) {
            return {
                ok: true,
                value: literal,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \`Not equal to \\"\${literal}\\"\`,
                    },
                ],
            };
        }
    });

    return schemaCreator();
}
",
                        "name": "stringLiteral.ts",
                        "type": "file",
                      },
                    ],
                    "name": "literals",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { getObjectUtils, object } from \\"./object\\";
export { isProperty, property, type Property } from \\"./property\\";
export {
    type BaseObjectSchema,
    type inferObjectSchemaFromPropertySchemas,
    type inferParsedObject,
    type inferParsedObjectFromPropertySchemas,
    type inferParsedPropertySchema,
    type inferRawKey,
    type inferRawObject,
    type inferRawObjectFromPropertySchemas,
    type inferRawPropertySchema,
    type ObjectSchema,
    type ObjectUtils,
    type PropertySchemas,
} from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { entries } from \\"../../utils/entries\\";
import { filterObject } from \\"../../utils/filterObject\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { keys } from \\"../../utils/keys\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { partition } from \\"../../utils/partition\\";
import { getObjectLikeUtils } from \\"../object-like\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { isProperty } from \\"./property\\";
import {
    BaseObjectSchema,
    inferObjectSchemaFromPropertySchemas,
    inferParsedObjectFromPropertySchemas,
    inferRawObjectFromPropertySchemas,
    ObjectSchema,
    ObjectUtils,
    PropertySchemas,
} from \\"./types\\";

interface ObjectPropertyWithRawKey {
    rawKey: string;
    parsedKey: string;
    valueSchema: Schema<any, any>;
}

export function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(
    schemas: T
): inferObjectSchemaFromPropertySchemas<T> {
    const baseSchema: BaseObjectSchema<
        inferRawObjectFromPropertySchemas<T>,
        inferParsedObjectFromPropertySchemas<T>
    > = {
        _getRawProperties: () =>
            Promise.resolve(
                Object.entries(schemas).map(([parsedKey, propertySchema]) =>
                    isProperty(propertySchema) ? propertySchema.rawKey : parsedKey
                ) as unknown as (keyof inferRawObjectFromPropertySchemas<T>)[]
            ),
        _getParsedProperties: () =>
            Promise.resolve(keys(schemas) as unknown as (keyof inferParsedObjectFromPropertySchemas<T>)[]),

        parse: async (raw, opts) => {
            const rawKeyToProperty: Record<string, ObjectPropertyWithRawKey> = {};
            const requiredKeys: string[] = [];

            for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
                const rawKey = isProperty(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
                const valueSchema: Schema<any, any> = isProperty(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;

                const property: ObjectPropertyWithRawKey = {
                    rawKey,
                    parsedKey: parsedKey as string,
                    valueSchema,
                };

                rawKeyToProperty[rawKey] = property;

                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(rawKey);
                }
            }

            return validateAndTransformObject({
                value: raw,
                requiredKeys,
                getProperty: (rawKey) => {
                    const property = rawKeyToProperty[rawKey];
                    if (property == null) {
                        return undefined;
                    }
                    return {
                        transformedKey: property.parsedKey,
                        transform: (propertyValue) => property.valueSchema.parse(propertyValue, opts),
                    };
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },

        json: async (parsed, opts) => {
            const requiredKeys: string[] = [];

            for (const [parsedKey, schemaOrObjectProperty] of entries(schemas)) {
                const valueSchema: Schema<any, any> = isProperty(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;

                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(parsedKey as string);
                }
            }

            return validateAndTransformObject({
                value: parsed,
                requiredKeys,
                getProperty: (
                    parsedKey
                ):
                    | { transformedKey: string; transform: (propertyValue: unknown) => MaybePromise<MaybeValid<any>> }
                    | undefined => {
                    const property = schemas[parsedKey as keyof T];

                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                    if (property == null) {
                        return undefined;
                    }

                    if (isProperty(property)) {
                        return {
                            transformedKey: property.rawKey,
                            transform: (propertyValue) => property.valueSchema.json(propertyValue, opts),
                        };
                    } else {
                        return {
                            transformedKey: parsedKey,
                            transform: (propertyValue) => property.json(propertyValue, opts),
                        };
                    }
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },

        getType: () => SchemaType.OBJECT,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}

async function validateAndTransformObject<Transformed>({
    value,
    requiredKeys,
    getProperty,
    allowUnknownKeys,
}: {
    value: unknown;
    requiredKeys: string[];
    getProperty: (
        preTransformedKey: string
    ) => { transformedKey: string; transform: (propertyValue: unknown) => MaybePromise<MaybeValid<any>> } | undefined;
    allowUnknownKeys: boolean;
}): Promise<MaybeValid<Transformed>> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }

    const missingRequiredKeys = new Set(requiredKeys);
    const errors: ValidationError[] = [];
    const transformed: Record<string | number | symbol, any> = {};

    for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
        const property = getProperty(preTransformedKey);

        if (property != null) {
            missingRequiredKeys.delete(preTransformedKey);

            const value = await property.transform(preTransformedItemValue);
            if (value.ok) {
                transformed[property.transformedKey] = value.value;
            } else {
                errors.push(
                    ...value.errors.map((error) => ({
                        path: [preTransformedKey, ...error.path],
                        message: error.message,
                    }))
                );
            }
        } else if (allowUnknownKeys) {
            transformed[preTransformedKey] = preTransformedItemValue;
        } else {
            errors.push({
                path: [preTransformedKey],
                message: \`Unrecognized key \\"\${preTransformedKey}\\"\`,
            });
        }
    }

    errors.push(
        ...requiredKeys
            .filter((key) => missingRequiredKeys.has(key))
            .map((key) => ({
                path: [],
                message: \`Missing required key \\"\${key}\\"\`,
            }))
    );

    if (errors.length === 0) {
        return {
            ok: true,
            value: transformed as Transformed,
        };
    } else {
        return {
            ok: false,
            errors,
        };
    }
}

export function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed> {
    return {
        extend: <RawExtension, ParsedExtension>(extension: ObjectSchema<RawExtension, ParsedExtension>) => {
            const baseSchema: BaseObjectSchema<Raw & RawExtension, Parsed & ParsedExtension> = {
                _getParsedProperties: async () => [
                    ...(await schema._getParsedProperties()),
                    ...(await extension._getParsedProperties()),
                ],
                _getRawProperties: async () => [
                    ...(await schema._getRawProperties()),
                    ...(await extension._getRawProperties()),
                ],
                parse: async (raw, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getRawProperties(),
                        value: raw,
                        transformBase: (rawBase) => schema.parse(rawBase, opts),
                        transformExtension: (rawExtension) => extension.parse(rawExtension, opts),
                    });
                },
                json: async (parsed, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getParsedProperties(),
                        value: parsed,
                        transformBase: (parsedBase) => schema.json(parsedBase, opts),
                        transformExtension: (parsedExtension) => extension.json(parsedExtension, opts),
                    });
                },
                getType: () => SchemaType.OBJECT,
            };

            return {
                ...baseSchema,
                ...getSchemaUtils(baseSchema),
                ...getObjectLikeUtils(baseSchema),
                ...getObjectUtils(baseSchema),
            };
        },
    };
}

async function validateAndTransformExtendedObject<PreTransformedExtension, TransformedBase, TransformedExtension>({
    extensionKeys,
    value,
    transformBase,
    transformExtension,
}: {
    extensionKeys: (keyof PreTransformedExtension)[];
    value: unknown;
    transformBase: (value: unknown) => MaybePromise<MaybeValid<TransformedBase>>;
    transformExtension: (value: unknown) => MaybePromise<MaybeValid<TransformedExtension>>;
}): Promise<MaybeValid<TransformedBase & TransformedExtension>> {
    const extensionPropertiesSet = new Set(extensionKeys);
    const [extensionProperties, baseProperties] = partition(keys(value), (key) =>
        extensionPropertiesSet.has(key as keyof PreTransformedExtension)
    );

    const transformedBase = await transformBase(filterObject(value, baseProperties));
    const transformedExtension = await transformExtension(filterObject(value, extensionProperties));

    if (transformedBase.ok && transformedExtension.ok) {
        return {
            ok: true,
            value: {
                ...transformedBase.value,
                ...transformedExtension.value,
            },
        };
    } else {
        return {
            ok: false,
            errors: [
                ...(transformedBase.ok ? [] : transformedBase.errors),
                ...(transformedExtension.ok ? [] : transformedExtension.errors),
            ],
        };
    }
}

async function isSchemaRequired(schema: Schema<any, any>): Promise<boolean> {
    return !(await isSchemaOptional(schema));
}

async function isSchemaOptional(schema: Schema<any, any>): Promise<boolean> {
    switch (await schema.getType()) {
        case SchemaType.ANY:
        case SchemaType.UNKNOWN:
        case SchemaType.OPTIONAL:
            return true;
        default:
            return false;
    }
}
",
                        "name": "object.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";

export function property<RawKey extends string, RawValue, ParsedValue>(
    rawKey: RawKey,
    valueSchema: Schema<RawValue, ParsedValue>
): Property<RawKey, RawValue, ParsedValue> {
    return {
        rawKey,
        valueSchema,
        isProperty: true,
    };
}

export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}

export function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O {
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    return (maybeProperty as O).isProperty;
}
",
                        "name": "property.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";

export type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> &
    ObjectLikeUtils<Raw, Parsed> &
    ObjectUtils<Raw, Parsed> &
    SchemaUtils<Raw, Parsed>;

export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}

export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(
        schemas: ObjectSchema<RawExtension, ParsedExtension>
    ) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}

export type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;

export type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed>
    ? Parsed
    : never;

export type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<
    inferRawObjectFromPropertySchemas<T>,
    inferParsedObjectFromPropertySchemas<T>
>;

export type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    addQuestionMarksToNullableProperties<{
        [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
    }>;

export type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> =
    addQuestionMarksToNullableProperties<{
        [K in keyof T]: inferParsedPropertySchema<T[K]>;
    }>;

export type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<
    ParsedKeys,
    Property<any, any, any> | Schema<any, any>
>;

export type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<
    any,
    infer Raw,
    any
>
    ? Raw
    : P extends Schema<any, any>
    ? inferRaw<P>
    : never;

export type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<
    any,
    any,
    infer Parsed
>
    ? Parsed
    : P extends Schema<any, any>
    ? inferParsed<P>
    : never;

export type inferRawKey<
    ParsedKey extends string | number | symbol,
    P extends Property<any, any, any> | Schema<any, any>
> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "object",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { filterObject } from \\"../../utils/filterObject\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";

export function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed> {
    return {
        withParsedProperties: (properties) => withParsedProperties(schema, properties),
    };
}

/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */

export function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(
    objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>,
    properties: { [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]) }
): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties> {
    const objectSchema: BaseSchema<RawObjectShape, ParsedObjectShape & Properties> = {
        parse: async (raw, opts) => {
            const parsedObject = await objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
                return parsedObject;
            }

            const additionalProperties = Object.entries(properties).reduce<Record<string, any>>(
                (processed, [key, value]) => {
                    return {
                        ...processed,
                        [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value,
                    };
                },
                {}
            );

            return {
                ok: true,
                value: {
                    ...parsedObject.value,
                    ...(additionalProperties as Properties),
                },
            };
        },

        json: (parsed, opts) => {
            if (!isPlainObject(parsed)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: NOT_AN_OBJECT_ERROR_MESSAGE,
                        },
                    ],
                };
            }

            // strip out added properties
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = filterObject(
                parsed,
                Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key))
            );

            return objectLike.json(parsedWithoutAddedProperties as ParsedObjectShape, opts);
        },

        getType: () => objectLike.getType(),
    };

    return {
        ...objectSchema,
        ...getSchemaUtils(objectSchema),
        ...getObjectLikeUtils(objectSchema),
    };
}
",
                        "name": "getObjectLikeUtils.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export { type ObjectLikeSchema, type ObjectLikeUtils } from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";

export type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> &
    BaseSchema<Raw, Parsed> &
    ObjectLikeUtils<Raw, Parsed>;

export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "object-like",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const any = createIdentitySchemaCreator<any>(SchemaType.ANY, (value) => ({ ok: true, value }));
",
                        "name": "any.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const boolean = createIdentitySchemaCreator<boolean>(SchemaType.BOOLEAN, (value) => {
    if (typeof value === \\"boolean\\") {
        return {
            ok: true,
            value,
        };
    } else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a boolean\\",
                },
            ],
        };
    }
});
",
                        "name": "boolean.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const number = createIdentitySchemaCreator<number>(SchemaType.NUMBER, (value) => {
    if (typeof value === \\"number\\") {
        return {
            ok: true,
            value,
        };
    } else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a number\\",
                },
            ],
        };
    }
});
",
                        "name": "number.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const string = createIdentitySchemaCreator<string>(SchemaType.STRING, (value) => {
    if (typeof value === \\"string\\") {
        return {
            ok: true,
            value,
        };
    } else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a string\\",
                },
            ],
        };
    }
});
",
                        "name": "string.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { SchemaType } from \\"../../Schema\\";
import { createIdentitySchemaCreator } from \\"../../utils/createIdentitySchemaCreator\\";

export const unknown = createIdentitySchemaCreator<unknown>(SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
",
                        "name": "unknown.ts",
                        "type": "file",
                      },
                    ],
                    "name": "primitives",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { record } from \\"./record\\";
export { type BaseRecordSchema, type RecordSchema } from \\"./types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { MaybeValid, Schema, SchemaType, ValidationError } from \\"../../Schema\\";
import { entries } from \\"../../utils/entries\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { BaseRecordSchema, RecordSchema } from \\"./types\\";

export function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(
    keySchema: Schema<RawKey, ParsedKey>,
    valueSchema: Schema<RawValue, ParsedValue>
): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> {
    const baseSchema: BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> = {
        parse: async (raw, opts) => {
            return validateAndTransformRecord({
                value: raw,
                isKeyNumeric: (await keySchema.getType()) === SchemaType.NUMBER,
                transformKey: (key) => keySchema.parse(key, opts),
                transformValue: (value) => valueSchema.parse(value, opts),
            });
        },
        json: async (parsed, opts) => {
            return validateAndTransformRecord({
                value: parsed,
                isKeyNumeric: (await keySchema.getType()) === SchemaType.NUMBER,
                transformKey: (key) => keySchema.json(key, opts),
                transformValue: (value) => valueSchema.json(value, opts),
            });
        },
        getType: () => SchemaType.RECORD,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

async function validateAndTransformRecord<TransformedKey extends string | number, TransformedValue>({
    value,
    isKeyNumeric,
    transformKey,
    transformValue,
}: {
    value: unknown;
    isKeyNumeric: boolean;
    transformKey: (key: string | number) => MaybePromise<MaybeValid<TransformedKey>>;
    transformValue: (value: unknown) => MaybePromise<MaybeValid<TransformedValue>>;
}): Promise<MaybeValid<OptionalRecord<TransformedKey, TransformedValue>>> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }

    return entries(value).reduce<Promise<MaybeValid<OptionalRecord<TransformedKey, TransformedValue>>>>(
        async (accPromise, [stringKey, value]) => {
            // skip nullish keys
            if (value == null) {
                return accPromise;
            }

            const acc = await accPromise;

            let key: string | number = stringKey;
            if (isKeyNumeric) {
                const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
                if (!isNaN(numberKey)) {
                    key = numberKey;
                }
            }
            const transformedKey = await transformKey(key);

            const transformedValue = await transformValue(value);

            if (acc.ok && transformedKey.ok && transformedValue.ok) {
                return {
                    ok: true,
                    value: {
                        ...acc.value,
                        [transformedKey.value]: transformedValue.value,
                    },
                };
            }

            const errors: ValidationError[] = [];
            if (!acc.ok) {
                errors.push(...acc.errors);
            }
            if (!transformedKey.ok) {
                errors.push(
                    ...transformedKey.errors.map((error) => ({
                        path: [\`\${key} (key)\`, ...error.path],
                        message: error.message,
                    }))
                );
            }
            if (!transformedValue.ok) {
                errors.push(
                    ...transformedValue.errors.map((error) => ({
                        path: [stringKey, ...error.path],
                        message: error.message,
                    }))
                );
            }

            return {
                ok: false,
                errors,
            };
        },
        Promise.resolve({ ok: true, value: {} as OptionalRecord<TransformedKey, TransformedValue> })
    );
}
",
                        "name": "record.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { SchemaUtils } from \\"../schema-utils\\";

export type RecordSchema<
    RawKey extends string | number,
    RawValue,
    ParsedKey extends string | number,
    ParsedValue
> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> &
    SchemaUtils<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;

export type BaseRecordSchema<
    RawKey extends string | number,
    RawValue,
    ParsedKey extends string | number,
    ParsedValue
> = BaseSchema<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                    ],
                    "name": "record",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
import { stringifyValidationError } from \\"./stringifyValidationErrors\\";

export class JsonError extends Error {
    constructor(public readonly errors: ValidationError[]) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        Object.setPrototypeOf(this, JsonError.prototype);
    }
}
",
                        "name": "JsonError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
import { stringifyValidationError } from \\"./stringifyValidationErrors\\";

export class ParseError extends Error {
    constructor(public readonly errors: ValidationError[]) {
        super(errors.map(stringifyValidationError).join(\\"; \\"));
        Object.setPrototypeOf(this, ParseError.prototype);
    }
}
",
                        "name": "ParseError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaOptions, SchemaType } from \\"../../Schema\\";
import { JsonError } from \\"./JsonError\\";
import { ParseError } from \\"./ParseError\\";

export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}

export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}

export function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed> {
    return {
        optional: () => optional(schema),
        transform: (transformer) => transform(schema, transformer),
        parseOrThrow: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (parsed.ok) {
                return parsed.value;
            }
            throw new ParseError(parsed.errors);
        },
        jsonOrThrow: async (parsed, opts) => {
            const raw = await schema.json(parsed, opts);
            if (raw.ok) {
                return raw.value;
            }
            throw new JsonError(raw.errors);
        },
    };
}

/**
 * schema utils are defined in one file to resolve issues with circular imports
 */

export function optional<Raw, Parsed>(
    schema: BaseSchema<Raw, Parsed>
): Schema<Raw | null | undefined, Parsed | undefined> {
    const baseSchema: BaseSchema<Raw | null | undefined, Parsed | undefined> = {
        parse: (raw, opts) => {
            if (raw == null) {
                return {
                    ok: true,
                    value: undefined,
                };
            }
            return schema.parse(raw, opts);
        },
        json: (parsed, opts) => {
            if (parsed == null) {
                return {
                    ok: true,
                    value: null,
                };
            }
            return schema.json(parsed, opts);
        },
        getType: () => SchemaType.OPTIONAL,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}

export function transform<Raw, Parsed, Transformed>(
    schema: BaseSchema<Raw, Parsed>,
    transformer: SchemaTransformer<Parsed, Transformed>
): Schema<Raw, Transformed> {
    const baseSchema: BaseSchema<Raw, Transformed> = {
        parse: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (!parsed.ok) {
                return parsed;
            }
            return {
                ok: true,
                value: transformer.transform(parsed.value),
            };
        },
        json: async (transformed, opts) => {
            const parsed = await transformer.untransform(transformed);
            return schema.json(parsed, opts);
        },
        getType: () => schema.getType(),
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "getSchemaUtils.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getSchemaUtils, optional, transform, type SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";

export function stringifyValidationError(error: ValidationError): string {
    if (error.path.length === 0) {
        return error.message;
    }
    return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
",
                        "name": "stringifyValidationErrors.ts",
                        "type": "file",
                      },
                    ],
                    "name": "schema-utils",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { set } from \\"./set\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaType } from \\"../../Schema\\";
import { list } from \\"../list\\";
import { getSchemaUtils } from \\"../schema-utils\\";

export function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>> {
    const listSchema = list(schema);
    const baseSchema: BaseSchema<Raw[], Set<Parsed>> = {
        parse: async (raw, opts) => {
            const parsedList = await listSchema.parse(raw, opts);
            if (parsedList.ok) {
                return {
                    ok: true,
                    value: new Set(parsedList.value),
                };
            } else {
                return parsedList;
            }
        },
        json: async (parsed, opts) => {
            if (!(parsed instanceof Set)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Set\\",
                        },
                    ],
                };
            }
            const jsonList = await listSchema.json([...parsed], opts);
            return jsonList;
        },
        getType: () => SchemaType.SET,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
",
                        "name": "set.ts",
                        "type": "file",
                      },
                    ],
                    "name": "set",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(
    parsedDiscriminant: ParsedDiscriminant,
    rawDiscriminant: RawDiscriminant
): Discriminant<RawDiscriminant, ParsedDiscriminant> {
    return {
        parsedDiscriminant,
        rawDiscriminant,
    };
}

export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                        "name": "discriminant.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { discriminant, type Discriminant } from \\"./discriminant\\";
export {
    type inferParsedDiscriminant,
    type inferParsedUnion,
    type inferRawDiscriminant,
    type inferRawUnion,
    type UnionSubtypes,
} from \\"./types\\";
export { union } from \\"./union\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";

export type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};

export type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];

export type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];

export type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string
    ? D
    : D extends Discriminant<infer Raw, any>
    ? Raw
    : never;

export type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string
    ? D
    : D extends Discriminant<any, infer Parsed>
    ? Parsed
    : never;
",
                        "name": "types.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, MaybeValid, SchemaType } from \\"../../Schema\\";
import { isPlainObject, NOT_AN_OBJECT_ERROR_MESSAGE } from \\"../../utils/isPlainObject\\";
import { keys } from \\"../../utils/keys\\";
import { MaybePromise } from \\"../../utils/MaybePromise\\";
import { enum_ } from \\"../enum\\";
import { ObjectSchema } from \\"../object\\";
import { getObjectLikeUtils, ObjectLikeSchema } from \\"../object-like\\";
import { getSchemaUtils } from \\"../schema-utils\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedDiscriminant, inferParsedUnion, inferRawDiscriminant, inferRawUnion, UnionSubtypes } from \\"./types\\";

export function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(
    discriminant: D,
    union: U
): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>> {
    const rawDiscriminant =
        typeof discriminant === \\"string\\" ? discriminant : (discriminant.rawDiscriminant as inferRawDiscriminant<D>);
    const parsedDiscriminant =
        typeof discriminant === \\"string\\"
            ? discriminant
            : (discriminant.parsedDiscriminant as inferParsedDiscriminant<D>);

    const discriminantValueSchema = enum_(keys(union) as string[]);

    const baseSchema: BaseSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>> = {
        parse: async (raw, opts) => {
            return transformAndValidateUnion(
                raw,
                rawDiscriminant,
                parsedDiscriminant,
                (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts),
                (discriminantValue) => union[discriminantValue],
                opts?.allowUnknownKeys ?? false,
                (additionalProperties, additionalPropertiesSchema) =>
                    additionalPropertiesSchema.parse(additionalProperties, opts)
            );
        },
        json: async (parsed, opts) => {
            return transformAndValidateUnion(
                parsed,
                parsedDiscriminant,
                rawDiscriminant,
                (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts),
                (discriminantValue) => union[discriminantValue],
                opts?.allowUnknownKeys ?? false,
                (additionalProperties, additionalPropertiesSchema) =>
                    additionalPropertiesSchema.json(additionalProperties, opts)
            );
        },
        getType: () => SchemaType.UNION,
    };

    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
        ...getObjectLikeUtils(baseSchema),
    };
}

async function transformAndValidateUnion<
    TransformedDiscriminant extends string,
    TransformedDiscriminantValue extends string,
    TransformedAdditionalProperties
>(
    value: unknown,
    discriminant: string,
    transformedDiscriminant: TransformedDiscriminant,
    transformDiscriminantValue: (discriminantValue: unknown) => MaybePromise<MaybeValid<TransformedDiscriminantValue>>,
    getAdditionalPropertiesSchema: (discriminantValue: string) => ObjectSchema<any, any> | undefined,
    allowUnknownKeys: boolean,
    transformAdditionalProperties: (
        additionalProperties: unknown,
        additionalPropertiesSchema: ObjectSchema<any, any>
    ) => MaybePromise<MaybeValid<TransformedAdditionalProperties>>
): Promise<
    MaybeValid<Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties>
> {
    if (!isPlainObject(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }

    const { [discriminant]: discriminantValue, ...additionalProperties } = value;

    if (discriminantValue == null) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \`Missing discriminant (\\"\${discriminant}\\")\`,
                },
            ],
        };
    }

    const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
    if (!transformedDiscriminantValue.ok) {
        return {
            ok: false,
            errors: transformedDiscriminantValue.errors.map((error) => ({
                path: [discriminant, ...error.path],
                message: error.message,
            })),
        };
    }

    const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);

    if (additionalPropertiesSchema == null) {
        if (allowUnknownKeys) {
            return {
                ok: true,
                value: {
                    [transformedDiscriminant]: transformedDiscriminantValue.value,
                    ...additionalProperties,
                } as Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties,
            };
        } else {
            return {
                ok: false,
                errors: [
                    {
                        path: [discriminant],
                        message: \\"Unrecognized discriminant value\\",
                    },
                ],
            };
        }
    }

    const transformedAdditionalProperties = await transformAdditionalProperties(
        additionalProperties,
        additionalPropertiesSchema
    );
    if (!transformedAdditionalProperties.ok) {
        return transformedAdditionalProperties;
    }

    return {
        ok: true,
        value: {
            [transformedDiscriminant]: discriminantValue,
            ...transformedAdditionalProperties.value,
        } as Record<TransformedDiscriminant, TransformedDiscriminantValue> & TransformedAdditionalProperties,
    };
}
",
                        "name": "union.ts",
                        "type": "file",
                      },
                    ],
                    "name": "union",
                    "type": "directory",
                  },
                ],
                "name": "builders",
                "type": "directory",
              },
              Object {
                "contents": "export * from \\"./builders\\";
export { type inferParsed, type inferRaw, type Schema, type SchemaOptions } from \\"./Schema\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export type MaybePromise<T> = T | Promise<T>;
",
                    "name": "MaybePromise.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export type OptionalRecord<K extends string | number, V> = Record<K, V | undefined>;
",
                    "name": "OptionalRecord.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;

export type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K]
        ? K
        : null extends T[K]
        ? K
        : 1 extends (any extends T[K] ? 0 : 1)
        ? never
        : K;
}[keyof T];

export type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                    "name": "addQuestionMarksToNullableProperties.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { getSchemaUtils } from \\"../builders/schema-utils\\";
import { BaseSchema, MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";

export function createIdentitySchemaCreator<T>(
    schemaType: SchemaType,
    validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>
): () => Schema<T, T> {
    return () => {
        const baseSchema: BaseSchema<T, T> = {
            parse: validate,
            json: validate,
            getType: () => schemaType,
        };

        return {
            ...baseSchema,
            ...getSchemaUtils(baseSchema),
        };
    };
}
",
                    "name": "createIdentitySchemaCreator.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function entries<T>(object: T): [keyof T, T[keyof T]][] {
    return Object.entries(object) as [keyof T, T[keyof T]][];
}
",
                    "name": "entries.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K> {
    const keysToIncludeSet = new Set(keysToInclude);
    return Object.entries(obj).reduce((acc, [key, value]) => {
        if (keysToIncludeSet.has(key as K)) {
            acc[key as K] = value;
        }
        return acc;
        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
    }, {} as Pick<T, K>);
}
",
                    "name": "filterObject.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export const NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";

// borrowed from https://github.com/lodash/lodash/blob/master/isPlainObject.js
export function isPlainObject(value: unknown): value is Record<string, unknown> {
    if (typeof value !== \\"object\\" || value === null) {
        return false;
    }

    if (Object.getPrototypeOf(value) === null) {
        return true;
    }

    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }

    return Object.getPrototypeOf(value) === proto;
}
",
                    "name": "isPlainObject.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function keys<T>(object: T): (keyof T)[] {
    return Object.keys(object) as (keyof T)[];
}
",
                    "name": "keys.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "export function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]] {
    const trueItems: T[] = [],
        falseItems: T[] = [];
    for (const item of items) {
        if (predicate(item)) {
            trueItems.push(item);
        } else {
            falseItems.push(item);
        }
    }
    return [trueItems, falseItems];
}
",
                    "name": "partition.ts",
                    "type": "file",
                  },
                ],
                "name": "utils",
                "type": "directory",
              },
            ],
            "name": "schemas",
            "type": "directory",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FernApiEnvironmentUrls {
    serverA: string;
    serverB: string;
}

export const FernApiEnvironment = {
    Production: {
        serverA: \\"a.prod.com\\",
        serverB: \\"b.prod.com\\",
    },
    Staging: {
        serverA: \\"a.staging.com\\",
        serverB: \\"b.staging.com\\",
    },
} as const;

export type FernApiEnvironment = typeof FernApiEnvironment.Production | typeof FernApiEnvironment.Staging;
",
        "name": "environments.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;

    constructor({ message, statusCode, body }: { message?: string; statusCode?: number; body?: unknown }) {
        super(message);
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }

        if (body !== undefined) {
            this.body = body;
        }
    }
}
",
            "name": "FernApiError.ts",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
",
            "name": "FernApiTimeoutError.ts",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export * as FernApi from \\"./api\\";
export { FernApiClient } from \\"./Client\\";
export { FernApiEnvironment, FernApiEnvironmentUrls } from \\"./environments\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * as owner from \\"./owner\\";
export * from \\"./owner/types\\";
export * as package_ from \\"./package\\";
export * as token from \\"./token\\";
export * from \\"./token/types\\";
export * from \\"./owner/client/requests\\";
export * from \\"./token/client/requests\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const CreateOwnerRequest: core.serialization.Schema<
    serializers.CreateOwnerRequest.Raw,
    FernApi.CreateOwnerRequest
> = core.serialization.object({
    ownerId: core.serialization.lazy(async () => (await import(\\"../../../..\\")).OwnerId),
    data: core.serialization.unknown(),
});

export declare namespace CreateOwnerRequest {
    interface Raw {
        ownerId: serializers.OwnerId.Raw;
        data?: unknown;
    }
}
",
                            "name": "CreateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const UpdateOwnerRequest: core.serialization.Schema<
    serializers.UpdateOwnerRequest.Raw,
    FernApi.UpdateOwnerRequest
> = core.serialization.object({
    data: core.serialization.unknown(),
});

export declare namespace UpdateOwnerRequest {
    interface Raw {
        data?: unknown;
    }
}
",
                            "name": "UpdateOwnerRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateOwnerRequest } from \\"./CreateOwnerRequest\\";
export { UpdateOwnerRequest } from \\"./UpdateOwnerRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const Owner: core.serialization.ObjectSchema<serializers.Owner.Raw, FernApi.Owner> = core.serialization.object({
    ownerId: core.serialization.lazy(async () => (await import(\\"../../..\\")).OwnerId),
    data: core.serialization.unknown(),
});

export declare namespace Owner {
    interface Raw {
        ownerId: serializers.OwnerId.Raw;
        data?: unknown;
    }
}
",
                        "name": "Owner.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const OwnerId: core.serialization.Schema<serializers.OwnerId.Raw, FernApi.OwnerId> = core.serialization.string();

export declare namespace OwnerId {
    type Raw = string;
}
",
                        "name": "OwnerId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OwnerId\\";
export * from \\"./Owner\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "owner",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as nested from \\"./nested\\";
export * from \\"./nested/types\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export * from \\"./types\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../../core\\";

export const NestedString: core.serialization.Schema<
    serializers.package_.NestedString.Raw,
    FernApi.package_.NestedString
> = core.serialization.string();

export declare namespace NestedString {
    type Raw = string;
}
",
                                "name": "NestedString.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./NestedString\\";
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "nested",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const PackageString: core.serialization.Schema<
    serializers.package_.PackageString.Raw,
    FernApi.package_.PackageString
> = core.serialization.string();

export declare namespace PackageString {
    type Raw = string;
}
",
                        "name": "PackageString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PackageString\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "package",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const Response: core.serialization.Schema<
    serializers.token.getTokensForOwner.Response.Raw,
    FernApi.TokenMetadata[]
> = core.serialization.list(core.serialization.lazyObject(async () => (await import(\\"../../..\\")).TokenMetadata));

export declare namespace Response {
    type Raw = serializers.TokenMetadata.Raw[];
}
",
                        "name": "getTokensForOwner.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getTokensForOwner from \\"./getTokensForOwner\\";
export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const CreateTokenRequest: core.serialization.Schema<
    serializers.CreateTokenRequest.Raw,
    FernApi.CreateTokenRequest
> = core.serialization.object({
    ownerId: core.serialization.lazy(async () => (await import(\\"../../../..\\")).OwnerId),
    description: core.serialization.string().optional(),
});

export declare namespace CreateTokenRequest {
    interface Raw {
        ownerId: serializers.OwnerId.Raw;
        description?: string | null;
    }
}
",
                            "name": "CreateTokenRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../../core\\";

export const GetTokenMetadataRequest: core.serialization.Schema<
    serializers.GetTokenMetadataRequest.Raw,
    FernApi.GetTokenMetadataRequest
> = core.serialization.object({
    token: core.serialization.string(),
});

export declare namespace GetTokenMetadataRequest {
    interface Raw {
        token: string;
    }
}
",
                            "name": "GetTokenMetadataRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { CreateTokenRequest } from \\"./CreateTokenRequest\\";
export { GetTokenMetadataRequest } from \\"./GetTokenMetadataRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const CreateTokenResponse: core.serialization.ObjectSchema<
    serializers.CreateTokenResponse.Raw,
    FernApi.CreateTokenResponse
> = core.serialization.object({
    token: core.serialization.string(),
    tokenId: core.serialization.lazy(async () => (await import(\\"../../..\\")).TokenId),
});

export declare namespace CreateTokenResponse {
    interface Raw {
        token: string;
        tokenId: serializers.TokenId.Raw;
    }
}
",
                        "name": "CreateTokenResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const TokenId: core.serialization.Schema<serializers.TokenId.Raw, FernApi.TokenId> = core.serialization.string();

export declare namespace TokenId {
    type Raw = string;
}
",
                        "name": "TokenId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const TokenMetadata: core.serialization.ObjectSchema<serializers.TokenMetadata.Raw, FernApi.TokenMetadata> =
    core.serialization.object({
        tokenId: core.serialization.lazy(async () => (await import(\\"../../..\\")).TokenId),
        ownerId: core.serialization.lazy(async () => (await import(\\"../../..\\")).OwnerId),
        description: core.serialization.string().optional(),
        createdTime: core.serialization.date(),
        status: core.serialization.lazy(async () => (await import(\\"../../..\\")).TokenStatus),
    });

export declare namespace TokenMetadata {
    interface Raw {
        tokenId: serializers.TokenId.Raw;
        ownerId: serializers.OwnerId.Raw;
        description?: string | null;
        createdTime: string;
        status: serializers.TokenStatus.Raw;
    }
}
",
                        "name": "TokenMetadata.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"../../..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../../../core\\";

export const TokenStatus: core.serialization.Schema<serializers.TokenStatus.Raw, FernApi.TokenStatus> =
    core.serialization
        .union(\\"type\\", {
            active: core.serialization.object({}),
            expired: core.serialization.object({}),
            revoked: core.serialization.object({}),
        })
        .transform<FernApi.TokenStatus>({
            transform: (value) => {
                switch (value.type) {
                    case \\"active\\":
                        return FernApi.TokenStatus.active();
                    case \\"expired\\":
                        return FernApi.TokenStatus.expired();
                    case \\"revoked\\":
                        return FernApi.TokenStatus.revoked();
                    default:
                        return FernApi.TokenStatus._unknown(value);
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace TokenStatus {
    type Raw = TokenStatus.Active | TokenStatus.Expired | TokenStatus.Revoked;

    interface Active {
        type: \\"active\\";
    }

    interface Expired {
        type: \\"expired\\";
    }

    interface Revoked {
        type: \\"revoked\\";
    }
}
",
                        "name": "TokenStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./TokenId\\";
export * from \\"./CreateTokenResponse\\";
export * from \\"./TokenMetadata\\";
export * from \\"./TokenStatus\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "token",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from \\"..\\";
import { FernApi } from \\"@fern/api\\";
import * as core from \\"../../core\\";

export const RootString: core.serialization.Schema<serializers.RootString.Raw, FernApi.RootString> =
    core.serialization.string();

export declare namespace RootString {
    type Raw = string;
}
",
                "name": "RootString.ts",
                "type": "file",
              },
              Object {
                "contents": "export * from \\"./RootString\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "types",
            "type": "directory",
          },
        ],
        "name": "serialization",
        "type": "directory",
      },
    ],
    "name": "src",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"extendedDiagnostics\\": true,
        \\"strict\\": true,
        \\"target\\": \\"esnext\\",
        \\"module\\": \\"CommonJS\\",
        \\"moduleResolution\\": \\"node\\",
        \\"esModuleInterop\\": true,
        \\"skipLibCheck\\": true,
        \\"declaration\\": true,
        \\"noUnusedLocals\\": true,
        \\"noUnusedParameters\\": true,
        \\"outDir\\": \\"dist\\",
        \\"rootDir\\": \\"src\\",
        \\"baseUrl\\": \\"src\\",
        \\"paths\\": {
            \\"@fern/api\\": [
                \\".\\"
            ]
        }
    },
    \\"include\\": [
        \\"src\\"
    ],
    \\"exclude\\": []
}",
    "name": "tsconfig.json",
    "type": "file",
  },
  Object {
    "contents": "# This file is generated by running \\"yarn install\\" inside your project.
# Manual changes might be lost - proceed with caution!

__metadata:
  version: 6
  cacheKey: 8

\\"@fern/api@workspace:.\\":
  version: 0.0.0-use.local
  resolution: \\"@fern/api@workspace:.\\"
  dependencies:
    \\"@types/node\\": 17.0.33
    \\"@types/url-join\\": 4.0.1
    axios: ^0.27.2
    prettier: 2.7.1
    tsc-alias: 1.7.1
    typescript: 4.6.4
    url-join: 4.0.1
  languageName: unknown
  linkType: soft

\\"@gar/promisify@npm:^1.1.3\\":
  version: 1.1.3
  resolution: \\"@gar/promisify@npm:1.1.3\\"
  checksum: 4059f790e2d07bf3c3ff3e0fec0daa8144fe35c1f6e0111c9921bd32106adaa97a4ab096ad7dab1e28ee6a9060083c4d1a4ada42a7f5f3f7a96b8812e2b757c1
  languageName: node
  linkType: hard

\\"@nodelib/fs.scandir@npm:2.1.5\\":
  version: 2.1.5
  resolution: \\"@nodelib/fs.scandir@npm:2.1.5\\"
  dependencies:
    \\"@nodelib/fs.stat\\": 2.0.5
    run-parallel: ^1.1.9
  checksum: a970d595bd23c66c880e0ef1817791432dbb7acbb8d44b7e7d0e7a22f4521260d4a83f7f9fd61d44fda4610105577f8f58a60718105fb38352baed612fd79e59
  languageName: node
  linkType: hard

\\"@nodelib/fs.stat@npm:2.0.5, @nodelib/fs.stat@npm:^2.0.2\\":
  version: 2.0.5
  resolution: \\"@nodelib/fs.stat@npm:2.0.5\\"
  checksum: 012480b5ca9d97bff9261571dbbec7bbc6033f69cc92908bc1ecfad0792361a5a1994bc48674b9ef76419d056a03efadfce5a6cf6dbc0a36559571a7a483f6f0
  languageName: node
  linkType: hard

\\"@nodelib/fs.walk@npm:^1.2.3\\":
  version: 1.2.8
  resolution: \\"@nodelib/fs.walk@npm:1.2.8\\"
  dependencies:
    \\"@nodelib/fs.scandir\\": 2.1.5
    fastq: ^1.6.0
  checksum: 190c643f156d8f8f277bf2a6078af1ffde1fd43f498f187c2db24d35b4b4b5785c02c7dc52e356497b9a1b65b13edc996de08de0b961c32844364da02986dc53
  languageName: node
  linkType: hard

\\"@npmcli/fs@npm:^2.1.0\\":
  version: 2.1.2
  resolution: \\"@npmcli/fs@npm:2.1.2\\"
  dependencies:
    \\"@gar/promisify\\": ^1.1.3
    semver: ^7.3.5
  checksum: 405074965e72d4c9d728931b64d2d38e6ea12066d4fad651ac253d175e413c06fe4350970c783db0d749181da8fe49c42d3880bd1cbc12cd68e3a7964d820225
  languageName: node
  linkType: hard

\\"@npmcli/move-file@npm:^2.0.0\\":
  version: 2.0.1
  resolution: \\"@npmcli/move-file@npm:2.0.1\\"
  dependencies:
    mkdirp: ^1.0.4
    rimraf: ^3.0.2
  checksum: 52dc02259d98da517fae4cb3a0a3850227bdae4939dda1980b788a7670636ca2b4a01b58df03dd5f65c1e3cb70c50fa8ce5762b582b3f499ec30ee5ce1fd9380
  languageName: node
  linkType: hard

\\"@tootallnate/once@npm:2\\":
  version: 2.0.0
  resolution: \\"@tootallnate/once@npm:2.0.0\\"
  checksum: ad87447820dd3f24825d2d947ebc03072b20a42bfc96cbafec16bff8bbda6c1a81fcb0be56d5b21968560c5359a0af4038a68ba150c3e1694fe4c109a063bed8
  languageName: node
  linkType: hard

\\"@types/node@npm:17.0.33\\":
  version: 17.0.33
  resolution: \\"@types/node@npm:17.0.33\\"
  checksum: 6620652cc89ce125e1162e060ec4608c25b3635185e3e5dcaae4ed09e4770dc8bf168ba48bcd7059a1a56087a05000d7ed562e81aea7b6a512e2b13d4409c6b6
  languageName: node
  linkType: hard

\\"@types/url-join@npm:4.0.1\\":
  version: 4.0.1
  resolution: \\"@types/url-join@npm:4.0.1\\"
  checksum: 29444b90e165b3970c8ad3fcef1e2de092e72b67e1f3aaff3016eea1697f98a01a28fb4f71f8044e3338a95bd2262327e9299be416efe5297018658760a331b4
  languageName: node
  linkType: hard

\\"abbrev@npm:^1.0.0\\":
  version: 1.1.1
  resolution: \\"abbrev@npm:1.1.1\\"
  checksum: a4a97ec07d7ea112c517036882b2ac22f3109b7b19077dc656316d07d308438aac28e4d9746dc4d84bf6b1e75b4a7b0a5f3cb30592419f128ca9a8cee3bcfa17
  languageName: node
  linkType: hard

\\"agent-base@npm:6, agent-base@npm:^6.0.2\\":
  version: 6.0.2
  resolution: \\"agent-base@npm:6.0.2\\"
  dependencies:
    debug: 4
  checksum: f52b6872cc96fd5f622071b71ef200e01c7c4c454ee68bc9accca90c98cfb39f2810e3e9aa330435835eedc8c23f4f8a15267f67c6e245d2b33757575bdac49d
  languageName: node
  linkType: hard

\\"agentkeepalive@npm:^4.2.1\\":
  version: 4.2.1
  resolution: \\"agentkeepalive@npm:4.2.1\\"
  dependencies:
    debug: ^4.1.0
    depd: ^1.1.2
    humanize-ms: ^1.2.1
  checksum: 39cb49ed8cf217fd6da058a92828a0a84e0b74c35550f82ee0a10e1ee403c4b78ade7948be2279b188b7a7303f5d396ea2738b134731e464bf28de00a4f72a18
  languageName: node
  linkType: hard

\\"aggregate-error@npm:^3.0.0\\":
  version: 3.1.0
  resolution: \\"aggregate-error@npm:3.1.0\\"
  dependencies:
    clean-stack: ^2.0.0
    indent-string: ^4.0.0
  checksum: 1101a33f21baa27a2fa8e04b698271e64616b886795fd43c31068c07533c7b3facfcaf4e9e0cab3624bd88f729a592f1c901a1a229c9e490eafce411a8644b79
  languageName: node
  linkType: hard

\\"ansi-regex@npm:^5.0.1\\":
  version: 5.0.1
  resolution: \\"ansi-regex@npm:5.0.1\\"
  checksum: 2aa4bb54caf2d622f1afdad09441695af2a83aa3fe8b8afa581d205e57ed4261c183c4d3877cee25794443fde5876417d859c108078ab788d6af7e4fe52eb66b
  languageName: node
  linkType: hard

\\"anymatch@npm:~3.1.2\\":
  version: 3.1.3
  resolution: \\"anymatch@npm:3.1.3\\"
  dependencies:
    normalize-path: ^3.0.0
    picomatch: ^2.0.4
  checksum: 3e044fd6d1d26545f235a9fe4d7a534e2029d8e59fa7fd9f2a6eb21230f6b5380ea1eaf55136e60cbf8e613544b3b766e7a6fa2102e2a3a117505466e3025dc2
  languageName: node
  linkType: hard

\\"aproba@npm:^1.0.3 || ^2.0.0\\":
  version: 2.0.0
  resolution: \\"aproba@npm:2.0.0\\"
  checksum: 5615cadcfb45289eea63f8afd064ab656006361020e1735112e346593856f87435e02d8dcc7ff0d11928bc7d425f27bc7c2a84f6c0b35ab0ff659c814c138a24
  languageName: node
  linkType: hard

\\"are-we-there-yet@npm:^3.0.0\\":
  version: 3.0.1
  resolution: \\"are-we-there-yet@npm:3.0.1\\"
  dependencies:
    delegates: ^1.0.0
    readable-stream: ^3.6.0
  checksum: 52590c24860fa7173bedeb69a4c05fb573473e860197f618b9a28432ee4379049336727ae3a1f9c4cb083114601c1140cee578376164d0e651217a9843f9fe83
  languageName: node
  linkType: hard

\\"array-union@npm:^2.1.0\\":
  version: 2.1.0
  resolution: \\"array-union@npm:2.1.0\\"
  checksum: 5bee12395cba82da674931df6d0fea23c4aa4660cb3b338ced9f828782a65caa232573e6bf3968f23e0c5eb301764a382cef2f128b170a9dc59de0e36c39f98d
  languageName: node
  linkType: hard

\\"asynckit@npm:^0.4.0\\":
  version: 0.4.0
  resolution: \\"asynckit@npm:0.4.0\\"
  checksum: 7b78c451df768adba04e2d02e63e2d0bf3b07adcd6e42b4cf665cb7ce899bedd344c69a1dcbce355b5f972d597b25aaa1c1742b52cffd9caccb22f348114f6be
  languageName: node
  linkType: hard

\\"axios@npm:^0.27.2\\":
  version: 0.27.2
  resolution: \\"axios@npm:0.27.2\\"
  dependencies:
    follow-redirects: ^1.14.9
    form-data: ^4.0.0
  checksum: 38cb7540465fe8c4102850c4368053c21683af85c5fdf0ea619f9628abbcb59415d1e22ebc8a6390d2bbc9b58a9806c874f139767389c862ec9b772235f06854
  languageName: node
  linkType: hard

\\"balanced-match@npm:^1.0.0\\":
  version: 1.0.2
  resolution: \\"balanced-match@npm:1.0.2\\"
  checksum: 9706c088a283058a8a99e0bf91b0a2f75497f185980d9ffa8b304de1d9e58ebda7c72c07ebf01dadedaac5b2907b2c6f566f660d62bd336c3468e960403b9d65
  languageName: node
  linkType: hard

\\"binary-extensions@npm:^2.0.0\\":
  version: 2.2.0
  resolution: \\"binary-extensions@npm:2.2.0\\"
  checksum: ccd267956c58d2315f5d3ea6757cf09863c5fc703e50fbeb13a7dc849b812ef76e3cf9ca8f35a0c48498776a7478d7b4a0418e1e2b8cb9cb9731f2922aaad7f8
  languageName: node
  linkType: hard

\\"brace-expansion@npm:^1.1.7\\":
  version: 1.1.11
  resolution: \\"brace-expansion@npm:1.1.11\\"
  dependencies:
    balanced-match: ^1.0.0
    concat-map: 0.0.1
  checksum: faf34a7bb0c3fcf4b59c7808bc5d2a96a40988addf2e7e09dfbb67a2251800e0d14cd2bfc1aa79174f2f5095c54ff27f46fb1289fe2d77dac755b5eb3434cc07
  languageName: node
  linkType: hard

\\"brace-expansion@npm:^2.0.1\\":
  version: 2.0.1
  resolution: \\"brace-expansion@npm:2.0.1\\"
  dependencies:
    balanced-match: ^1.0.0
  checksum: a61e7cd2e8a8505e9f0036b3b6108ba5e926b4b55089eeb5550cd04a471fe216c96d4fe7e4c7f995c728c554ae20ddfc4244cad10aef255e72b62930afd233d1
  languageName: node
  linkType: hard

\\"braces@npm:^3.0.2, braces@npm:~3.0.2\\":
  version: 3.0.2
  resolution: \\"braces@npm:3.0.2\\"
  dependencies:
    fill-range: ^7.0.1
  checksum: e2a8e769a863f3d4ee887b5fe21f63193a891c68b612ddb4b68d82d1b5f3ff9073af066c343e9867a393fe4c2555dcb33e89b937195feb9c1613d259edfcd459
  languageName: node
  linkType: hard

\\"cacache@npm:^16.1.0\\":
  version: 16.1.3
  resolution: \\"cacache@npm:16.1.3\\"
  dependencies:
    \\"@npmcli/fs\\": ^2.1.0
    \\"@npmcli/move-file\\": ^2.0.0
    chownr: ^2.0.0
    fs-minipass: ^2.1.0
    glob: ^8.0.1
    infer-owner: ^1.0.4
    lru-cache: ^7.7.1
    minipass: ^3.1.6
    minipass-collect: ^1.0.2
    minipass-flush: ^1.0.5
    minipass-pipeline: ^1.2.4
    mkdirp: ^1.0.4
    p-map: ^4.0.0
    promise-inflight: ^1.0.1
    rimraf: ^3.0.2
    ssri: ^9.0.0
    tar: ^6.1.11
    unique-filename: ^2.0.0
  checksum: d91409e6e57d7d9a3a25e5dcc589c84e75b178ae8ea7de05cbf6b783f77a5fae938f6e8fda6f5257ed70000be27a681e1e44829251bfffe4c10216002f8f14e6
  languageName: node
  linkType: hard

\\"chokidar@npm:^3.5.3\\":
  version: 3.5.3
  resolution: \\"chokidar@npm:3.5.3\\"
  dependencies:
    anymatch: ~3.1.2
    braces: ~3.0.2
    fsevents: ~2.3.2
    glob-parent: ~5.1.2
    is-binary-path: ~2.1.0
    is-glob: ~4.0.1
    normalize-path: ~3.0.0
    readdirp: ~3.6.0
  dependenciesMeta:
    fsevents:
      optional: true
  checksum: b49fcde40176ba007ff361b198a2d35df60d9bb2a5aab228279eb810feae9294a6b4649ab15981304447afe1e6ffbf4788ad5db77235dc770ab777c6e771980c
  languageName: node
  linkType: hard

\\"chownr@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"chownr@npm:2.0.0\\"
  checksum: c57cf9dd0791e2f18a5ee9c1a299ae6e801ff58fee96dc8bfd0dcb4738a6ce58dd252a3605b1c93c6418fe4f9d5093b28ffbf4d66648cb2a9c67eaef9679be2f
  languageName: node
  linkType: hard

\\"clean-stack@npm:^2.0.0\\":
  version: 2.2.0
  resolution: \\"clean-stack@npm:2.2.0\\"
  checksum: 2ac8cd2b2f5ec986a3c743935ec85b07bc174d5421a5efc8017e1f146a1cf5f781ae962618f416352103b32c9cd7e203276e8c28241bbe946160cab16149fb68
  languageName: node
  linkType: hard

\\"color-support@npm:^1.1.3\\":
  version: 1.1.3
  resolution: \\"color-support@npm:1.1.3\\"
  bin:
    color-support: bin.js
  checksum: 9b7356817670b9a13a26ca5af1c21615463b500783b739b7634a0c2047c16cef4b2865d7576875c31c3cddf9dd621fa19285e628f20198b233a5cfdda6d0793b
  languageName: node
  linkType: hard

\\"combined-stream@npm:^1.0.8\\":
  version: 1.0.8
  resolution: \\"combined-stream@npm:1.0.8\\"
  dependencies:
    delayed-stream: ~1.0.0
  checksum: 49fa4aeb4916567e33ea81d088f6584749fc90c7abec76fd516bf1c5aa5c79f3584b5ba3de6b86d26ddd64bae5329c4c7479343250cfe71c75bb366eae53bb7c
  languageName: node
  linkType: hard

\\"commander@npm:^9.0.0\\":
  version: 9.5.0
  resolution: \\"commander@npm:9.5.0\\"
  checksum: c7a3e27aa59e913b54a1bafd366b88650bc41d6651f0cbe258d4ff09d43d6a7394232a4dadd0bf518b3e696fdf595db1028a0d82c785b88bd61f8a440cecfade
  languageName: node
  linkType: hard

\\"concat-map@npm:0.0.1\\":
  version: 0.0.1
  resolution: \\"concat-map@npm:0.0.1\\"
  checksum: 902a9f5d8967a3e2faf138d5cb784b9979bad2e6db5357c5b21c568df4ebe62bcb15108af1b2253744844eb964fc023fbd9afbbbb6ddd0bcc204c6fb5b7bf3af
  languageName: node
  linkType: hard

\\"console-control-strings@npm:^1.1.0\\":
  version: 1.1.0
  resolution: \\"console-control-strings@npm:1.1.0\\"
  checksum: 8755d76787f94e6cf79ce4666f0c5519906d7f5b02d4b884cf41e11dcd759ed69c57da0670afd9236d229a46e0f9cf519db0cd829c6dca820bb5a5c3def584ed
  languageName: node
  linkType: hard

\\"debug@npm:4, debug@npm:^4.1.0, debug@npm:^4.3.3\\":
  version: 4.3.4
  resolution: \\"debug@npm:4.3.4\\"
  dependencies:
    ms: 2.1.2
  peerDependenciesMeta:
    supports-color:
      optional: true
  checksum: 3dbad3f94ea64f34431a9cbf0bafb61853eda57bff2880036153438f50fb5a84f27683ba0d8e5426bf41a8c6ff03879488120cf5b3a761e77953169c0600a708
  languageName: node
  linkType: hard

\\"delayed-stream@npm:~1.0.0\\":
  version: 1.0.0
  resolution: \\"delayed-stream@npm:1.0.0\\"
  checksum: 46fe6e83e2cb1d85ba50bd52803c68be9bd953282fa7096f51fc29edd5d67ff84ff753c51966061e5ba7cb5e47ef6d36a91924eddb7f3f3483b1c560f77a0020
  languageName: node
  linkType: hard

\\"delegates@npm:^1.0.0\\":
  version: 1.0.0
  resolution: \\"delegates@npm:1.0.0\\"
  checksum: a51744d9b53c164ba9c0492471a1a2ffa0b6727451bdc89e31627fdf4adda9d51277cfcbfb20f0a6f08ccb3c436f341df3e92631a3440226d93a8971724771fd
  languageName: node
  linkType: hard

\\"depd@npm:^1.1.2\\":
  version: 1.1.2
  resolution: \\"depd@npm:1.1.2\\"
  checksum: 6b406620d269619852885ce15965272b829df6f409724415e0002c8632ab6a8c0a08ec1f0bd2add05dc7bd7507606f7e2cc034fa24224ab829580040b835ecd9
  languageName: node
  linkType: hard

\\"dir-glob@npm:^3.0.1\\":
  version: 3.0.1
  resolution: \\"dir-glob@npm:3.0.1\\"
  dependencies:
    path-type: ^4.0.0
  checksum: fa05e18324510d7283f55862f3161c6759a3f2f8dbce491a2fc14c8324c498286c54282c1f0e933cb930da8419b30679389499b919122952a4f8592362ef4615
  languageName: node
  linkType: hard

\\"emoji-regex@npm:^8.0.0\\":
  version: 8.0.0
  resolution: \\"emoji-regex@npm:8.0.0\\"
  checksum: d4c5c39d5a9868b5fa152f00cada8a936868fd3367f33f71be515ecee4c803132d11b31a6222b2571b1e5f7e13890156a94880345594d0ce7e3c9895f560f192
  languageName: node
  linkType: hard

\\"encoding@npm:^0.1.13\\":
  version: 0.1.13
  resolution: \\"encoding@npm:0.1.13\\"
  dependencies:
    iconv-lite: ^0.6.2
  checksum: bb98632f8ffa823996e508ce6a58ffcf5856330fde839ae42c9e1f436cc3b5cc651d4aeae72222916545428e54fd0f6aa8862fd8d25bdbcc4589f1e3f3715e7f
  languageName: node
  linkType: hard

\\"env-paths@npm:^2.2.0\\":
  version: 2.2.1
  resolution: \\"env-paths@npm:2.2.1\\"
  checksum: 65b5df55a8bab92229ab2b40dad3b387fad24613263d103a97f91c9fe43ceb21965cd3392b1ccb5d77088021e525c4e0481adb309625d0cb94ade1d1fb8dc17e
  languageName: node
  linkType: hard

\\"err-code@npm:^2.0.2\\":
  version: 2.0.3
  resolution: \\"err-code@npm:2.0.3\\"
  checksum: 8b7b1be20d2de12d2255c0bc2ca638b7af5171142693299416e6a9339bd7d88fc8d7707d913d78e0993176005405a236b066b45666b27b797252c771156ace54
  languageName: node
  linkType: hard

\\"fast-glob@npm:^3.2.9\\":
  version: 3.2.12
  resolution: \\"fast-glob@npm:3.2.12\\"
  dependencies:
    \\"@nodelib/fs.stat\\": ^2.0.2
    \\"@nodelib/fs.walk\\": ^1.2.3
    glob-parent: ^5.1.2
    merge2: ^1.3.0
    micromatch: ^4.0.4
  checksum: 0b1990f6ce831c7e28c4d505edcdaad8e27e88ab9fa65eedadb730438cfc7cde4910d6c975d6b7b8dc8a73da4773702ebcfcd6e3518e73938bb1383badfe01c2
  languageName: node
  linkType: hard

\\"fastq@npm:^1.6.0\\":
  version: 1.15.0
  resolution: \\"fastq@npm:1.15.0\\"
  dependencies:
    reusify: ^1.0.4
  checksum: 0170e6bfcd5d57a70412440b8ef600da6de3b2a6c5966aeaf0a852d542daff506a0ee92d6de7679d1de82e644bce69d7a574a6c93f0b03964b5337eed75ada1a
  languageName: node
  linkType: hard

\\"fill-range@npm:^7.0.1\\":
  version: 7.0.1
  resolution: \\"fill-range@npm:7.0.1\\"
  dependencies:
    to-regex-range: ^5.0.1
  checksum: cc283f4e65b504259e64fd969bcf4def4eb08d85565e906b7d36516e87819db52029a76b6363d0f02d0d532f0033c9603b9e2d943d56ee3b0d4f7ad3328ff917
  languageName: node
  linkType: hard

\\"follow-redirects@npm:^1.14.9\\":
  version: 1.15.2
  resolution: \\"follow-redirects@npm:1.15.2\\"
  peerDependenciesMeta:
    debug:
      optional: true
  checksum: faa66059b66358ba65c234c2f2a37fcec029dc22775f35d9ad6abac56003268baf41e55f9ee645957b32c7d9f62baf1f0b906e68267276f54ec4b4c597c2b190
  languageName: node
  linkType: hard

\\"form-data@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"form-data@npm:4.0.0\\"
  dependencies:
    asynckit: ^0.4.0
    combined-stream: ^1.0.8
    mime-types: ^2.1.12
  checksum: 01135bf8675f9d5c61ff18e2e2932f719ca4de964e3be90ef4c36aacfc7b9cb2fceb5eca0b7e0190e3383fe51c5b37f4cb80b62ca06a99aaabfcfd6ac7c9328c
  languageName: node
  linkType: hard

\\"fs-minipass@npm:^2.0.0, fs-minipass@npm:^2.1.0\\":
  version: 2.1.0
  resolution: \\"fs-minipass@npm:2.1.0\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 1b8d128dae2ac6cc94230cc5ead341ba3e0efaef82dab46a33d171c044caaa6ca001364178d42069b2809c35a1c3c35079a32107c770e9ffab3901b59af8c8b1
  languageName: node
  linkType: hard

\\"fs.realpath@npm:^1.0.0\\":
  version: 1.0.0
  resolution: \\"fs.realpath@npm:1.0.0\\"
  checksum: 99ddea01a7e75aa276c250a04eedeffe5662bce66c65c07164ad6264f9de18fb21be9433ead460e54cff20e31721c811f4fb5d70591799df5f85dce6d6746fd0
  languageName: node
  linkType: hard

\\"fsevents@npm:~2.3.2\\":
  version: 2.3.2
  resolution: \\"fsevents@npm:2.3.2\\"
  dependencies:
    node-gyp: latest
  checksum: 97ade64e75091afee5265e6956cb72ba34db7819b4c3e94c431d4be2b19b8bb7a2d4116da417950c3425f17c8fe693d25e20212cac583ac1521ad066b77ae31f
  conditions: os=darwin
  languageName: node
  linkType: hard

\\"fsevents@patch:fsevents@~2.3.2#~builtin<compat/fsevents>\\":
  version: 2.3.2
  resolution: \\"fsevents@patch:fsevents@npm%3A2.3.2#~builtin<compat/fsevents>::version=2.3.2&hash=18f3a7\\"
  dependencies:
    node-gyp: latest
  conditions: os=darwin
  languageName: node
  linkType: hard

\\"gauge@npm:^4.0.3\\":
  version: 4.0.4
  resolution: \\"gauge@npm:4.0.4\\"
  dependencies:
    aproba: ^1.0.3 || ^2.0.0
    color-support: ^1.1.3
    console-control-strings: ^1.1.0
    has-unicode: ^2.0.1
    signal-exit: ^3.0.7
    string-width: ^4.2.3
    strip-ansi: ^6.0.1
    wide-align: ^1.1.5
  checksum: 788b6bfe52f1dd8e263cda800c26ac0ca2ff6de0b6eee2fe0d9e3abf15e149b651bd27bf5226be10e6e3edb5c4e5d5985a5a1a98137e7a892f75eff76467ad2d
  languageName: node
  linkType: hard

\\"glob-parent@npm:^5.1.2, glob-parent@npm:~5.1.2\\":
  version: 5.1.2
  resolution: \\"glob-parent@npm:5.1.2\\"
  dependencies:
    is-glob: ^4.0.1
  checksum: f4f2bfe2425296e8a47e36864e4f42be38a996db40420fe434565e4480e3322f18eb37589617a98640c5dc8fdec1a387007ee18dbb1f3f5553409c34d17f425e
  languageName: node
  linkType: hard

\\"glob@npm:^7.1.3, glob@npm:^7.1.4\\":
  version: 7.2.3
  resolution: \\"glob@npm:7.2.3\\"
  dependencies:
    fs.realpath: ^1.0.0
    inflight: ^1.0.4
    inherits: 2
    minimatch: ^3.1.1
    once: ^1.3.0
    path-is-absolute: ^1.0.0
  checksum: 29452e97b38fa704dabb1d1045350fb2467cf0277e155aa9ff7077e90ad81d1ea9d53d3ee63bd37c05b09a065e90f16aec4a65f5b8de401d1dac40bc5605d133
  languageName: node
  linkType: hard

\\"glob@npm:^8.0.1\\":
  version: 8.1.0
  resolution: \\"glob@npm:8.1.0\\"
  dependencies:
    fs.realpath: ^1.0.0
    inflight: ^1.0.4
    inherits: 2
    minimatch: ^5.0.1
    once: ^1.3.0
  checksum: 92fbea3221a7d12075f26f0227abac435de868dd0736a17170663783296d0dd8d3d532a5672b4488a439bf5d7fb85cdd07c11185d6cd39184f0385cbdfb86a47
  languageName: node
  linkType: hard

\\"globby@npm:^11.0.4\\":
  version: 11.1.0
  resolution: \\"globby@npm:11.1.0\\"
  dependencies:
    array-union: ^2.1.0
    dir-glob: ^3.0.1
    fast-glob: ^3.2.9
    ignore: ^5.2.0
    merge2: ^1.4.1
    slash: ^3.0.0
  checksum: b4be8885e0cfa018fc783792942d53926c35c50b3aefd3fdcfb9d22c627639dc26bd2327a40a0b74b074100ce95bb7187bfeae2f236856aa3de183af7a02aea6
  languageName: node
  linkType: hard

\\"graceful-fs@npm:^4.2.6\\":
  version: 4.2.10
  resolution: \\"graceful-fs@npm:4.2.10\\"
  checksum: 3f109d70ae123951905d85032ebeae3c2a5a7a997430df00ea30df0e3a6c60cf6689b109654d6fdacd28810a053348c4d14642da1d075049e6be1ba5216218da
  languageName: node
  linkType: hard

\\"has-unicode@npm:^2.0.1\\":
  version: 2.0.1
  resolution: \\"has-unicode@npm:2.0.1\\"
  checksum: 1eab07a7436512db0be40a710b29b5dc21fa04880b7f63c9980b706683127e3c1b57cb80ea96d47991bdae2dfe479604f6a1ba410106ee1046a41d1bd0814400
  languageName: node
  linkType: hard

\\"http-cache-semantics@npm:^4.1.0\\":
  version: 4.1.1
  resolution: \\"http-cache-semantics@npm:4.1.1\\"
  checksum: 83ac0bc60b17a3a36f9953e7be55e5c8f41acc61b22583060e8dedc9dd5e3607c823a88d0926f9150e571f90946835c7fe150732801010845c72cd8bbff1a236
  languageName: node
  linkType: hard

\\"http-proxy-agent@npm:^5.0.0\\":
  version: 5.0.0
  resolution: \\"http-proxy-agent@npm:5.0.0\\"
  dependencies:
    \\"@tootallnate/once\\": 2
    agent-base: 6
    debug: 4
  checksum: e2ee1ff1656a131953839b2a19cd1f3a52d97c25ba87bd2559af6ae87114abf60971e498021f9b73f9fd78aea8876d1fb0d4656aac8a03c6caa9fc175f22b786
  languageName: node
  linkType: hard

\\"https-proxy-agent@npm:^5.0.0\\":
  version: 5.0.1
  resolution: \\"https-proxy-agent@npm:5.0.1\\"
  dependencies:
    agent-base: 6
    debug: 4
  checksum: 571fccdf38184f05943e12d37d6ce38197becdd69e58d03f43637f7fa1269cf303a7d228aa27e5b27bbd3af8f09fd938e1c91dcfefff2df7ba77c20ed8dfc765
  languageName: node
  linkType: hard

\\"humanize-ms@npm:^1.2.1\\":
  version: 1.2.1
  resolution: \\"humanize-ms@npm:1.2.1\\"
  dependencies:
    ms: ^2.0.0
  checksum: 9c7a74a2827f9294c009266c82031030eae811ca87b0da3dceb8d6071b9bde22c9f3daef0469c3c533cc67a97d8a167cd9fc0389350e5f415f61a79b171ded16
  languageName: node
  linkType: hard

\\"iconv-lite@npm:^0.6.2\\":
  version: 0.6.3
  resolution: \\"iconv-lite@npm:0.6.3\\"
  dependencies:
    safer-buffer: \\">= 2.1.2 < 3.0.0\\"
  checksum: 3f60d47a5c8fc3313317edfd29a00a692cc87a19cac0159e2ce711d0ebc9019064108323b5e493625e25594f11c6236647d8e256fbe7a58f4a3b33b89e6d30bf
  languageName: node
  linkType: hard

\\"ignore@npm:^5.2.0\\":
  version: 5.2.4
  resolution: \\"ignore@npm:5.2.4\\"
  checksum: 3d4c309c6006e2621659311783eaea7ebcd41fe4ca1d78c91c473157ad6666a57a2df790fe0d07a12300d9aac2888204d7be8d59f9aaf665b1c7fcdb432517ef
  languageName: node
  linkType: hard

\\"imurmurhash@npm:^0.1.4\\":
  version: 0.1.4
  resolution: \\"imurmurhash@npm:0.1.4\\"
  checksum: 7cae75c8cd9a50f57dadd77482359f659eaebac0319dd9368bcd1714f55e65badd6929ca58569da2b6494ef13fdd5598cd700b1eba23f8b79c5f19d195a3ecf7
  languageName: node
  linkType: hard

\\"indent-string@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"indent-string@npm:4.0.0\\"
  checksum: 824cfb9929d031dabf059bebfe08cf3137365e112019086ed3dcff6a0a7b698cb80cf67ccccde0e25b9e2d7527aa6cc1fed1ac490c752162496caba3e6699612
  languageName: node
  linkType: hard

\\"infer-owner@npm:^1.0.4\\":
  version: 1.0.4
  resolution: \\"infer-owner@npm:1.0.4\\"
  checksum: 181e732764e4a0611576466b4b87dac338972b839920b2a8cde43642e4ed6bd54dc1fb0b40874728f2a2df9a1b097b8ff83b56d5f8f8e3927f837fdcb47d8a89
  languageName: node
  linkType: hard

\\"inflight@npm:^1.0.4\\":
  version: 1.0.6
  resolution: \\"inflight@npm:1.0.6\\"
  dependencies:
    once: ^1.3.0
    wrappy: 1
  checksum: f4f76aa072ce19fae87ce1ef7d221e709afb59d445e05d47fba710e85470923a75de35bfae47da6de1b18afc3ce83d70facf44cfb0aff89f0a3f45c0a0244dfd
  languageName: node
  linkType: hard

\\"inherits@npm:2, inherits@npm:^2.0.3\\":
  version: 2.0.4
  resolution: \\"inherits@npm:2.0.4\\"
  checksum: 4a48a733847879d6cf6691860a6b1e3f0f4754176e4d71494c41f3475553768b10f84b5ce1d40fbd0e34e6bfbb864ee35858ad4dd2cf31e02fc4a154b724d7f1
  languageName: node
  linkType: hard

\\"ip@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"ip@npm:2.0.0\\"
  checksum: cfcfac6b873b701996d71ec82a7dd27ba92450afdb421e356f44044ed688df04567344c36cbacea7d01b1c39a4c732dc012570ebe9bebfb06f27314bca625349
  languageName: node
  linkType: hard

\\"is-binary-path@npm:~2.1.0\\":
  version: 2.1.0
  resolution: \\"is-binary-path@npm:2.1.0\\"
  dependencies:
    binary-extensions: ^2.0.0
  checksum: 84192eb88cff70d320426f35ecd63c3d6d495da9d805b19bc65b518984b7c0760280e57dbf119b7e9be6b161784a5a673ab2c6abe83abb5198a432232ad5b35c
  languageName: node
  linkType: hard

\\"is-extglob@npm:^2.1.1\\":
  version: 2.1.1
  resolution: \\"is-extglob@npm:2.1.1\\"
  checksum: df033653d06d0eb567461e58a7a8c9f940bd8c22274b94bf7671ab36df5719791aae15eef6d83bbb5e23283967f2f984b8914559d4449efda578c775c4be6f85
  languageName: node
  linkType: hard

\\"is-fullwidth-code-point@npm:^3.0.0\\":
  version: 3.0.0
  resolution: \\"is-fullwidth-code-point@npm:3.0.0\\"
  checksum: 44a30c29457c7fb8f00297bce733f0a64cd22eca270f83e58c105e0d015e45c019491a4ab2faef91ab51d4738c670daff901c799f6a700e27f7314029e99e348
  languageName: node
  linkType: hard

\\"is-glob@npm:^4.0.1, is-glob@npm:~4.0.1\\":
  version: 4.0.3
  resolution: \\"is-glob@npm:4.0.3\\"
  dependencies:
    is-extglob: ^2.1.1
  checksum: d381c1319fcb69d341cc6e6c7cd588e17cd94722d9a32dbd60660b993c4fb7d0f19438674e68dfec686d09b7c73139c9166b47597f846af387450224a8101ab4
  languageName: node
  linkType: hard

\\"is-lambda@npm:^1.0.1\\":
  version: 1.0.1
  resolution: \\"is-lambda@npm:1.0.1\\"
  checksum: 93a32f01940220532e5948538699ad610d5924ac86093fcee83022252b363eb0cc99ba53ab084a04e4fb62bf7b5731f55496257a4c38adf87af9c4d352c71c35
  languageName: node
  linkType: hard

\\"is-number@npm:^7.0.0\\":
  version: 7.0.0
  resolution: \\"is-number@npm:7.0.0\\"
  checksum: 456ac6f8e0f3111ed34668a624e45315201dff921e5ac181f8ec24923b99e9f32ca1a194912dc79d539c97d33dba17dc635202ff0b2cf98326f608323276d27a
  languageName: node
  linkType: hard

\\"isexe@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"isexe@npm:2.0.0\\"
  checksum: 26bf6c5480dda5161c820c5b5c751ae1e766c587b1f951ea3fcfc973bafb7831ae5b54a31a69bd670220e42e99ec154475025a468eae58ea262f813fdc8d1c62
  languageName: node
  linkType: hard

\\"lru-cache@npm:^6.0.0\\":
  version: 6.0.0
  resolution: \\"lru-cache@npm:6.0.0\\"
  dependencies:
    yallist: ^4.0.0
  checksum: f97f499f898f23e4585742138a22f22526254fdba6d75d41a1c2526b3b6cc5747ef59c5612ba7375f42aca4f8461950e925ba08c991ead0651b4918b7c978297
  languageName: node
  linkType: hard

\\"lru-cache@npm:^7.7.1\\":
  version: 7.16.0
  resolution: \\"lru-cache@npm:7.16.0\\"
  checksum: 1a5511a0e695154c37f443c495ebcf3170ec8c291df62e140329cf0c48e2549db836e69371853a28286dc9de73a98f486a7566c64246249a6041c43d4a28bc60
  languageName: node
  linkType: hard

\\"make-fetch-happen@npm:^10.0.3\\":
  version: 10.2.1
  resolution: \\"make-fetch-happen@npm:10.2.1\\"
  dependencies:
    agentkeepalive: ^4.2.1
    cacache: ^16.1.0
    http-cache-semantics: ^4.1.0
    http-proxy-agent: ^5.0.0
    https-proxy-agent: ^5.0.0
    is-lambda: ^1.0.1
    lru-cache: ^7.7.1
    minipass: ^3.1.6
    minipass-collect: ^1.0.2
    minipass-fetch: ^2.0.3
    minipass-flush: ^1.0.5
    minipass-pipeline: ^1.2.4
    negotiator: ^0.6.3
    promise-retry: ^2.0.1
    socks-proxy-agent: ^7.0.0
    ssri: ^9.0.0
  checksum: 2332eb9a8ec96f1ffeeea56ccefabcb4193693597b132cd110734d50f2928842e22b84cfa1508e921b8385cdfd06dda9ad68645fed62b50fff629a580f5fb72c
  languageName: node
  linkType: hard

\\"merge2@npm:^1.3.0, merge2@npm:^1.4.1\\":
  version: 1.4.1
  resolution: \\"merge2@npm:1.4.1\\"
  checksum: 7268db63ed5169466540b6fb947aec313200bcf6d40c5ab722c22e242f651994619bcd85601602972d3c85bd2cc45a358a4c61937e9f11a061919a1da569b0c2
  languageName: node
  linkType: hard

\\"micromatch@npm:^4.0.4\\":
  version: 4.0.5
  resolution: \\"micromatch@npm:4.0.5\\"
  dependencies:
    braces: ^3.0.2
    picomatch: ^2.3.1
  checksum: 02a17b671c06e8fefeeb6ef996119c1e597c942e632a21ef589154f23898c9c6a9858526246abb14f8bca6e77734aa9dcf65476fca47cedfb80d9577d52843fc
  languageName: node
  linkType: hard

\\"mime-db@npm:1.52.0\\":
  version: 1.52.0
  resolution: \\"mime-db@npm:1.52.0\\"
  checksum: 0d99a03585f8b39d68182803b12ac601d9c01abfa28ec56204fa330bc9f3d1c5e14beb049bafadb3dbdf646dfb94b87e24d4ec7b31b7279ef906a8ea9b6a513f
  languageName: node
  linkType: hard

\\"mime-types@npm:^2.1.12\\":
  version: 2.1.35
  resolution: \\"mime-types@npm:2.1.35\\"
  dependencies:
    mime-db: 1.52.0
  checksum: 89a5b7f1def9f3af5dad6496c5ed50191ae4331cc5389d7c521c8ad28d5fdad2d06fd81baf38fed813dc4e46bb55c8145bb0ff406330818c9cf712fb2e9b3836
  languageName: node
  linkType: hard

\\"minimatch@npm:^3.1.1\\":
  version: 3.1.2
  resolution: \\"minimatch@npm:3.1.2\\"
  dependencies:
    brace-expansion: ^1.1.7
  checksum: c154e566406683e7bcb746e000b84d74465b3a832c45d59912b9b55cd50dee66e5c4b1e5566dba26154040e51672f9aa450a9aef0c97cfc7336b78b7afb9540a
  languageName: node
  linkType: hard

\\"minimatch@npm:^5.0.1\\":
  version: 5.1.6
  resolution: \\"minimatch@npm:5.1.6\\"
  dependencies:
    brace-expansion: ^2.0.1
  checksum: 7564208ef81d7065a370f788d337cd80a689e981042cb9a1d0e6580b6c6a8c9279eba80010516e258835a988363f99f54a6f711a315089b8b42694f5da9d0d77
  languageName: node
  linkType: hard

\\"minipass-collect@npm:^1.0.2\\":
  version: 1.0.2
  resolution: \\"minipass-collect@npm:1.0.2\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 14df761028f3e47293aee72888f2657695ec66bd7d09cae7ad558da30415fdc4752bbfee66287dcc6fd5e6a2fa3466d6c484dc1cbd986525d9393b9523d97f10
  languageName: node
  linkType: hard

\\"minipass-fetch@npm:^2.0.3\\":
  version: 2.1.2
  resolution: \\"minipass-fetch@npm:2.1.2\\"
  dependencies:
    encoding: ^0.1.13
    minipass: ^3.1.6
    minipass-sized: ^1.0.3
    minizlib: ^2.1.2
  dependenciesMeta:
    encoding:
      optional: true
  checksum: 3f216be79164e915fc91210cea1850e488793c740534985da017a4cbc7a5ff50506956d0f73bb0cb60e4fe91be08b6b61ef35101706d3ef5da2c8709b5f08f91
  languageName: node
  linkType: hard

\\"minipass-flush@npm:^1.0.5\\":
  version: 1.0.5
  resolution: \\"minipass-flush@npm:1.0.5\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 56269a0b22bad756a08a94b1ffc36b7c9c5de0735a4dd1ab2b06c066d795cfd1f0ac44a0fcae13eece5589b908ecddc867f04c745c7009be0b566421ea0944cf
  languageName: node
  linkType: hard

\\"minipass-pipeline@npm:^1.2.4\\":
  version: 1.2.4
  resolution: \\"minipass-pipeline@npm:1.2.4\\"
  dependencies:
    minipass: ^3.0.0
  checksum: b14240dac0d29823c3d5911c286069e36d0b81173d7bdf07a7e4a91ecdef92cdff4baaf31ea3746f1c61e0957f652e641223970870e2353593f382112257971b
  languageName: node
  linkType: hard

\\"minipass-sized@npm:^1.0.3\\":
  version: 1.0.3
  resolution: \\"minipass-sized@npm:1.0.3\\"
  dependencies:
    minipass: ^3.0.0
  checksum: 79076749fcacf21b5d16dd596d32c3b6bf4d6e62abb43868fac21674078505c8b15eaca4e47ed844985a4514854f917d78f588fcd029693709417d8f98b2bd60
  languageName: node
  linkType: hard

\\"minipass@npm:^3.0.0, minipass@npm:^3.1.1, minipass@npm:^3.1.6\\":
  version: 3.3.6
  resolution: \\"minipass@npm:3.3.6\\"
  dependencies:
    yallist: ^4.0.0
  checksum: a30d083c8054cee83cdcdc97f97e4641a3f58ae743970457b1489ce38ee1167b3aaf7d815cd39ec7a99b9c40397fd4f686e83750e73e652b21cb516f6d845e48
  languageName: node
  linkType: hard

\\"minipass@npm:^4.0.0\\":
  version: 4.0.3
  resolution: \\"minipass@npm:4.0.3\\"
  checksum: a09f405e2f380ae7f6ee0cbb53b45c1fcc1b6c70fc3896f4d20649d92a10e61892c57bd9960a64cedf6c90b50022cb6c195905b515039c335b423202f99e6f18
  languageName: node
  linkType: hard

\\"minizlib@npm:^2.1.1, minizlib@npm:^2.1.2\\":
  version: 2.1.2
  resolution: \\"minizlib@npm:2.1.2\\"
  dependencies:
    minipass: ^3.0.0
    yallist: ^4.0.0
  checksum: f1fdeac0b07cf8f30fcf12f4b586795b97be856edea22b5e9072707be51fc95d41487faec3f265b42973a304fe3a64acd91a44a3826a963e37b37bafde0212c3
  languageName: node
  linkType: hard

\\"mkdirp@npm:^1.0.3, mkdirp@npm:^1.0.4\\":
  version: 1.0.4
  resolution: \\"mkdirp@npm:1.0.4\\"
  bin:
    mkdirp: bin/cmd.js
  checksum: a96865108c6c3b1b8e1d5e9f11843de1e077e57737602de1b82030815f311be11f96f09cce59bd5b903d0b29834733e5313f9301e3ed6d6f6fba2eae0df4298f
  languageName: node
  linkType: hard

\\"ms@npm:2.1.2\\":
  version: 2.1.2
  resolution: \\"ms@npm:2.1.2\\"
  checksum: 673cdb2c3133eb050c745908d8ce632ed2c02d85640e2edb3ace856a2266a813b30c613569bf3354fdf4ea7d1a1494add3bfa95e2713baa27d0c2c71fc44f58f
  languageName: node
  linkType: hard

\\"ms@npm:^2.0.0\\":
  version: 2.1.3
  resolution: \\"ms@npm:2.1.3\\"
  checksum: aa92de608021b242401676e35cfa5aa42dd70cbdc082b916da7fb925c542173e36bce97ea3e804923fe92c0ad991434e4a38327e15a1b5b5f945d66df615ae6d
  languageName: node
  linkType: hard

\\"mylas@npm:^2.1.9\\":
  version: 2.1.13
  resolution: \\"mylas@npm:2.1.13\\"
  checksum: f861d092137a9ac268cba88042392a5dc2a290eed5c8543954eae849d85e5961332211161d2c08c3644ad893f20dbe9de89b07f5dc027f1f92f13f2d38f4b81f
  languageName: node
  linkType: hard

\\"negotiator@npm:^0.6.3\\":
  version: 0.6.3
  resolution: \\"negotiator@npm:0.6.3\\"
  checksum: b8ffeb1e262eff7968fc90a2b6767b04cfd9842582a9d0ece0af7049537266e7b2506dfb1d107a32f06dd849ab2aea834d5830f7f4d0e5cb7d36e1ae55d021d9
  languageName: node
  linkType: hard

\\"node-gyp@npm:latest\\":
  version: 9.3.1
  resolution: \\"node-gyp@npm:9.3.1\\"
  dependencies:
    env-paths: ^2.2.0
    glob: ^7.1.4
    graceful-fs: ^4.2.6
    make-fetch-happen: ^10.0.3
    nopt: ^6.0.0
    npmlog: ^6.0.0
    rimraf: ^3.0.2
    semver: ^7.3.5
    tar: ^6.1.2
    which: ^2.0.2
  bin:
    node-gyp: bin/node-gyp.js
  checksum: b860e9976fa645ca0789c69e25387401b4396b93c8375489b5151a6c55cf2640a3b6183c212b38625ef7c508994930b72198338e3d09b9d7ade5acc4aaf51ea7
  languageName: node
  linkType: hard

\\"nopt@npm:^6.0.0\\":
  version: 6.0.0
  resolution: \\"nopt@npm:6.0.0\\"
  dependencies:
    abbrev: ^1.0.0
  bin:
    nopt: bin/nopt.js
  checksum: 82149371f8be0c4b9ec2f863cc6509a7fd0fa729929c009f3a58e4eb0c9e4cae9920e8f1f8eb46e7d032fec8fb01bede7f0f41a67eb3553b7b8e14fa53de1dac
  languageName: node
  linkType: hard

\\"normalize-path@npm:^3.0.0, normalize-path@npm:~3.0.0\\":
  version: 3.0.0
  resolution: \\"normalize-path@npm:3.0.0\\"
  checksum: 88eeb4da891e10b1318c4b2476b6e2ecbeb5ff97d946815ffea7794c31a89017c70d7f34b3c2ebf23ef4e9fc9fb99f7dffe36da22011b5b5c6ffa34f4873ec20
  languageName: node
  linkType: hard

\\"npmlog@npm:^6.0.0\\":
  version: 6.0.2
  resolution: \\"npmlog@npm:6.0.2\\"
  dependencies:
    are-we-there-yet: ^3.0.0
    console-control-strings: ^1.1.0
    gauge: ^4.0.3
    set-blocking: ^2.0.0
  checksum: ae238cd264a1c3f22091cdd9e2b106f684297d3c184f1146984ecbe18aaa86343953f26b9520dedd1b1372bc0316905b736c1932d778dbeb1fcf5a1001390e2a
  languageName: node
  linkType: hard

\\"once@npm:^1.3.0\\":
  version: 1.4.0
  resolution: \\"once@npm:1.4.0\\"
  dependencies:
    wrappy: 1
  checksum: cd0a88501333edd640d95f0d2700fbde6bff20b3d4d9bdc521bdd31af0656b5706570d6c6afe532045a20bb8dc0849f8332d6f2a416e0ba6d3d3b98806c7db68
  languageName: node
  linkType: hard

\\"p-map@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"p-map@npm:4.0.0\\"
  dependencies:
    aggregate-error: ^3.0.0
  checksum: cb0ab21ec0f32ddffd31dfc250e3afa61e103ef43d957cc45497afe37513634589316de4eb88abdfd969fe6410c22c0b93ab24328833b8eb1ccc087fc0442a1c
  languageName: node
  linkType: hard

\\"path-is-absolute@npm:^1.0.0\\":
  version: 1.0.1
  resolution: \\"path-is-absolute@npm:1.0.1\\"
  checksum: 060840f92cf8effa293bcc1bea81281bd7d363731d214cbe5c227df207c34cd727430f70c6037b5159c8a870b9157cba65e775446b0ab06fd5ecc7e54615a3b8
  languageName: node
  linkType: hard

\\"path-type@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"path-type@npm:4.0.0\\"
  checksum: 5b1e2daa247062061325b8fdbfd1fb56dde0a448fb1455453276ea18c60685bdad23a445dc148cf87bc216be1573357509b7d4060494a6fd768c7efad833ee45
  languageName: node
  linkType: hard

\\"picomatch@npm:^2.0.4, picomatch@npm:^2.2.1, picomatch@npm:^2.3.1\\":
  version: 2.3.1
  resolution: \\"picomatch@npm:2.3.1\\"
  checksum: 050c865ce81119c4822c45d3c84f1ced46f93a0126febae20737bd05ca20589c564d6e9226977df859ed5e03dc73f02584a2b0faad36e896936238238b0446cf
  languageName: node
  linkType: hard

\\"plimit-lit@npm:^1.2.6\\":
  version: 1.5.0
  resolution: \\"plimit-lit@npm:1.5.0\\"
  dependencies:
    queue-lit: ^1.5.0
  checksum: a956e4e5e515a980403ca840b00c9e2381710a3a30e60e0e38f76b7842b24a345c9e59ef03568cb5925b4e9cdf67c088008148febec59e55bd47d1cb4003b024
  languageName: node
  linkType: hard

\\"prettier@npm:2.7.1\\":
  version: 2.7.1
  resolution: \\"prettier@npm:2.7.1\\"
  bin:
    prettier: bin-prettier.js
  checksum: 55a4409182260866ab31284d929b3cb961e5fdb91fe0d2e099dac92eaecec890f36e524b4c19e6ceae839c99c6d7195817579cdffc8e2c80da0cb794463a748b
  languageName: node
  linkType: hard

\\"promise-inflight@npm:^1.0.1\\":
  version: 1.0.1
  resolution: \\"promise-inflight@npm:1.0.1\\"
  checksum: 22749483091d2c594261517f4f80e05226d4d5ecc1fc917e1886929da56e22b5718b7f2a75f3807e7a7d471bc3be2907fe92e6e8f373ddf5c64bae35b5af3981
  languageName: node
  linkType: hard

\\"promise-retry@npm:^2.0.1\\":
  version: 2.0.1
  resolution: \\"promise-retry@npm:2.0.1\\"
  dependencies:
    err-code: ^2.0.2
    retry: ^0.12.0
  checksum: f96a3f6d90b92b568a26f71e966cbbc0f63ab85ea6ff6c81284dc869b41510e6cdef99b6b65f9030f0db422bf7c96652a3fff9f2e8fb4a0f069d8f4430359429
  languageName: node
  linkType: hard

\\"queue-lit@npm:^1.5.0\\":
  version: 1.5.0
  resolution: \\"queue-lit@npm:1.5.0\\"
  checksum: 2e714b74072e1be9bd76356710af1d3b03763859f466a10ed74f36b5ccc524dbd0d299239adfc5cbd3a4a416c5fc69cf4af34f13ef4f95f6da70cad12cb79771
  languageName: node
  linkType: hard

\\"queue-microtask@npm:^1.2.2\\":
  version: 1.2.3
  resolution: \\"queue-microtask@npm:1.2.3\\"
  checksum: b676f8c040cdc5b12723ad2f91414d267605b26419d5c821ff03befa817ddd10e238d22b25d604920340fd73efd8ba795465a0377c4adf45a4a41e4234e42dc4
  languageName: node
  linkType: hard

\\"readable-stream@npm:^3.6.0\\":
  version: 3.6.0
  resolution: \\"readable-stream@npm:3.6.0\\"
  dependencies:
    inherits: ^2.0.3
    string_decoder: ^1.1.1
    util-deprecate: ^1.0.1
  checksum: d4ea81502d3799439bb955a3a5d1d808592cf3133350ed352aeaa499647858b27b1c4013984900238b0873ec8d0d8defce72469fb7a83e61d53f5ad61cb80dc8
  languageName: node
  linkType: hard

\\"readdirp@npm:~3.6.0\\":
  version: 3.6.0
  resolution: \\"readdirp@npm:3.6.0\\"
  dependencies:
    picomatch: ^2.2.1
  checksum: 1ced032e6e45670b6d7352d71d21ce7edf7b9b928494dcaba6f11fba63180d9da6cd7061ebc34175ffda6ff529f481818c962952004d273178acd70f7059b320
  languageName: node
  linkType: hard

\\"retry@npm:^0.12.0\\":
  version: 0.12.0
  resolution: \\"retry@npm:0.12.0\\"
  checksum: 623bd7d2e5119467ba66202d733ec3c2e2e26568074923bc0585b6b99db14f357e79bdedb63cab56cec47491c4a0da7e6021a7465ca6dc4f481d3898fdd3158c
  languageName: node
  linkType: hard

\\"reusify@npm:^1.0.4\\":
  version: 1.0.4
  resolution: \\"reusify@npm:1.0.4\\"
  checksum: c3076ebcc22a6bc252cb0b9c77561795256c22b757f40c0d8110b1300723f15ec0fc8685e8d4ea6d7666f36c79ccc793b1939c748bf36f18f542744a4e379fcc
  languageName: node
  linkType: hard

\\"rimraf@npm:^3.0.2\\":
  version: 3.0.2
  resolution: \\"rimraf@npm:3.0.2\\"
  dependencies:
    glob: ^7.1.3
  bin:
    rimraf: bin.js
  checksum: 87f4164e396f0171b0a3386cc1877a817f572148ee13a7e113b238e48e8a9f2f31d009a92ec38a591ff1567d9662c6b67fd8818a2dbbaed74bc26a87a2a4a9a0
  languageName: node
  linkType: hard

\\"run-parallel@npm:^1.1.9\\":
  version: 1.2.0
  resolution: \\"run-parallel@npm:1.2.0\\"
  dependencies:
    queue-microtask: ^1.2.2
  checksum: cb4f97ad25a75ebc11a8ef4e33bb962f8af8516bb2001082ceabd8902e15b98f4b84b4f8a9b222e5d57fc3bd1379c483886ed4619367a7680dad65316993021d
  languageName: node
  linkType: hard

\\"safe-buffer@npm:~5.2.0\\":
  version: 5.2.1
  resolution: \\"safe-buffer@npm:5.2.1\\"
  checksum: b99c4b41fdd67a6aaf280fcd05e9ffb0813654894223afb78a31f14a19ad220bba8aba1cb14eddce1fcfb037155fe6de4e861784eb434f7d11ed58d1e70dd491
  languageName: node
  linkType: hard

\\"safer-buffer@npm:>= 2.1.2 < 3.0.0\\":
  version: 2.1.2
  resolution: \\"safer-buffer@npm:2.1.2\\"
  checksum: cab8f25ae6f1434abee8d80023d7e72b598cf1327164ddab31003c51215526801e40b66c5e65d658a0af1e9d6478cadcb4c745f4bd6751f97d8644786c0978b0
  languageName: node
  linkType: hard

\\"semver@npm:^7.3.5\\":
  version: 7.3.8
  resolution: \\"semver@npm:7.3.8\\"
  dependencies:
    lru-cache: ^6.0.0
  bin:
    semver: bin/semver.js
  checksum: ba9c7cbbf2b7884696523450a61fee1a09930d888b7a8d7579025ad93d459b2d1949ee5bbfeb188b2be5f4ac163544c5e98491ad6152df34154feebc2cc337c1
  languageName: node
  linkType: hard

\\"set-blocking@npm:^2.0.0\\":
  version: 2.0.0
  resolution: \\"set-blocking@npm:2.0.0\\"
  checksum: 6e65a05f7cf7ebdf8b7c75b101e18c0b7e3dff4940d480efed8aad3a36a4005140b660fa1d804cb8bce911cac290441dc728084a30504d3516ac2ff7ad607b02
  languageName: node
  linkType: hard

\\"signal-exit@npm:^3.0.7\\":
  version: 3.0.7
  resolution: \\"signal-exit@npm:3.0.7\\"
  checksum: a2f098f247adc367dffc27845853e9959b9e88b01cb301658cfe4194352d8d2bb32e18467c786a7fe15f1d44b233ea35633d076d5e737870b7139949d1ab6318
  languageName: node
  linkType: hard

\\"slash@npm:^3.0.0\\":
  version: 3.0.0
  resolution: \\"slash@npm:3.0.0\\"
  checksum: 94a93fff615f25a999ad4b83c9d5e257a7280c90a32a7cb8b4a87996e4babf322e469c42b7f649fd5796edd8687652f3fb452a86dc97a816f01113183393f11c
  languageName: node
  linkType: hard

\\"smart-buffer@npm:^4.2.0\\":
  version: 4.2.0
  resolution: \\"smart-buffer@npm:4.2.0\\"
  checksum: b5167a7142c1da704c0e3af85c402002b597081dd9575031a90b4f229ca5678e9a36e8a374f1814c8156a725d17008ae3bde63b92f9cfd132526379e580bec8b
  languageName: node
  linkType: hard

\\"socks-proxy-agent@npm:^7.0.0\\":
  version: 7.0.0
  resolution: \\"socks-proxy-agent@npm:7.0.0\\"
  dependencies:
    agent-base: ^6.0.2
    debug: ^4.3.3
    socks: ^2.6.2
  checksum: 720554370154cbc979e2e9ce6a6ec6ced205d02757d8f5d93fe95adae454fc187a5cbfc6b022afab850a5ce9b4c7d73e0f98e381879cf45f66317a4895953846
  languageName: node
  linkType: hard

\\"socks@npm:^2.6.2\\":
  version: 2.7.1
  resolution: \\"socks@npm:2.7.1\\"
  dependencies:
    ip: ^2.0.0
    smart-buffer: ^4.2.0
  checksum: 259d9e3e8e1c9809a7f5c32238c3d4d2a36b39b83851d0f573bfde5f21c4b1288417ce1af06af1452569cd1eb0841169afd4998f0e04ba04656f6b7f0e46d748
  languageName: node
  linkType: hard

\\"ssri@npm:^9.0.0\\":
  version: 9.0.1
  resolution: \\"ssri@npm:9.0.1\\"
  dependencies:
    minipass: ^3.1.1
  checksum: fb58f5e46b6923ae67b87ad5ef1c5ab6d427a17db0bead84570c2df3cd50b4ceb880ebdba2d60726588272890bae842a744e1ecce5bd2a2a582fccd5068309eb
  languageName: node
  linkType: hard

\\"string-width@npm:^1.0.2 || 2 || 3 || 4, string-width@npm:^4.2.3\\":
  version: 4.2.3
  resolution: \\"string-width@npm:4.2.3\\"
  dependencies:
    emoji-regex: ^8.0.0
    is-fullwidth-code-point: ^3.0.0
    strip-ansi: ^6.0.1
  checksum: e52c10dc3fbfcd6c3a15f159f54a90024241d0f149cf8aed2982a2d801d2e64df0bf1dc351cf8e95c3319323f9f220c16e740b06faecd53e2462df1d2b5443fb
  languageName: node
  linkType: hard

\\"string_decoder@npm:^1.1.1\\":
  version: 1.3.0
  resolution: \\"string_decoder@npm:1.3.0\\"
  dependencies:
    safe-buffer: ~5.2.0
  checksum: 8417646695a66e73aefc4420eb3b84cc9ffd89572861fe004e6aeb13c7bc00e2f616247505d2dbbef24247c372f70268f594af7126f43548565c68c117bdeb56
  languageName: node
  linkType: hard

\\"strip-ansi@npm:^6.0.1\\":
  version: 6.0.1
  resolution: \\"strip-ansi@npm:6.0.1\\"
  dependencies:
    ansi-regex: ^5.0.1
  checksum: f3cd25890aef3ba6e1a74e20896c21a46f482e93df4a06567cebf2b57edabb15133f1f94e57434e0a958d61186087b1008e89c94875d019910a213181a14fc8c
  languageName: node
  linkType: hard

\\"tar@npm:^6.1.11, tar@npm:^6.1.2\\":
  version: 6.1.13
  resolution: \\"tar@npm:6.1.13\\"
  dependencies:
    chownr: ^2.0.0
    fs-minipass: ^2.0.0
    minipass: ^4.0.0
    minizlib: ^2.1.1
    mkdirp: ^1.0.3
    yallist: ^4.0.0
  checksum: 8a278bed123aa9f53549b256a36b719e317c8b96fe86a63406f3c62887f78267cea9b22dc6f7007009738509800d4a4dccc444abd71d762287c90f35b002eb1c
  languageName: node
  linkType: hard

\\"to-regex-range@npm:^5.0.1\\":
  version: 5.0.1
  resolution: \\"to-regex-range@npm:5.0.1\\"
  dependencies:
    is-number: ^7.0.0
  checksum: f76fa01b3d5be85db6a2a143e24df9f60dd047d151062d0ba3df62953f2f697b16fe5dad9b0ac6191c7efc7b1d9dcaa4b768174b7b29da89d4428e64bc0a20ed
  languageName: node
  linkType: hard

\\"tsc-alias@npm:1.7.1\\":
  version: 1.7.1
  resolution: \\"tsc-alias@npm:1.7.1\\"
  dependencies:
    chokidar: ^3.5.3
    commander: ^9.0.0
    globby: ^11.0.4
    mylas: ^2.1.9
    normalize-path: ^3.0.0
    plimit-lit: ^1.2.6
  bin:
    tsc-alias: dist/bin/index.js
  checksum: 3e153cad544997303c1ff030358f898b4b381e692a05170e772fb35182d23c3c52c5e604ff00752f33a6133b27552f6b3794b05d8b9e0d8997cd3fe76a03bafd
  languageName: node
  linkType: hard

\\"typescript@npm:4.6.4\\":
  version: 4.6.4
  resolution: \\"typescript@npm:4.6.4\\"
  bin:
    tsc: bin/tsc
    tsserver: bin/tsserver
  checksum: e7bfcc39cd4571a63a54e5ea21f16b8445268b9900bf55aee0e02ad981be576acc140eba24f1af5e3c1457767c96cea6d12861768fb386cf3ffb34013718631a
  languageName: node
  linkType: hard

\\"typescript@patch:typescript@4.6.4#~builtin<compat/typescript>\\":
  version: 4.6.4
  resolution: \\"typescript@patch:typescript@npm%3A4.6.4#~builtin<compat/typescript>::version=4.6.4&hash=a1c5e5\\"
  bin:
    tsc: bin/tsc
    tsserver: bin/tsserver
  checksum: 1cb434fbc637d347be90e3a0c6cd05e33c38f941713c8786d3031faf1842c2c148ba91d2fac01e7276b0ae3249b8633f1660e32686cc7a8c6a8fd5361dc52c66
  languageName: node
  linkType: hard

\\"unique-filename@npm:^2.0.0\\":
  version: 2.0.1
  resolution: \\"unique-filename@npm:2.0.1\\"
  dependencies:
    unique-slug: ^3.0.0
  checksum: 807acf3381aff319086b64dc7125a9a37c09c44af7620bd4f7f3247fcd5565660ac12d8b80534dcbfd067e6fe88a67e621386dd796a8af828d1337a8420a255f
  languageName: node
  linkType: hard

\\"unique-slug@npm:^3.0.0\\":
  version: 3.0.0
  resolution: \\"unique-slug@npm:3.0.0\\"
  dependencies:
    imurmurhash: ^0.1.4
  checksum: 49f8d915ba7f0101801b922062ee46b7953256c93ceca74303bd8e6413ae10aa7e8216556b54dc5382895e8221d04f1efaf75f945c2e4a515b4139f77aa6640c
  languageName: node
  linkType: hard

\\"url-join@npm:4.0.1\\":
  version: 4.0.1
  resolution: \\"url-join@npm:4.0.1\\"
  checksum: f74e868bf25dbc8be6a8d7237d4c36bb5b6c62c72e594d5ab1347fe91d6af7ccd9eb5d621e30152e4da45c2e9a26bec21390e911ab54a62d4d82e76028374ee5
  languageName: node
  linkType: hard

\\"util-deprecate@npm:^1.0.1\\":
  version: 1.0.2
  resolution: \\"util-deprecate@npm:1.0.2\\"
  checksum: 474acf1146cb2701fe3b074892217553dfcf9a031280919ba1b8d651a068c9b15d863b7303cb15bd00a862b498e6cf4ad7b4a08fb134edd5a6f7641681cb54a2
  languageName: node
  linkType: hard

\\"which@npm:^2.0.2\\":
  version: 2.0.2
  resolution: \\"which@npm:2.0.2\\"
  dependencies:
    isexe: ^2.0.0
  bin:
    node-which: ./bin/node-which
  checksum: 1a5c563d3c1b52d5f893c8b61afe11abc3bab4afac492e8da5bde69d550de701cf9806235f20a47b5c8fa8a1d6a9135841de2596535e998027a54589000e66d1
  languageName: node
  linkType: hard

\\"wide-align@npm:^1.1.5\\":
  version: 1.1.5
  resolution: \\"wide-align@npm:1.1.5\\"
  dependencies:
    string-width: ^1.0.2 || 2 || 3 || 4
  checksum: d5fc37cd561f9daee3c80e03b92ed3e84d80dde3365a8767263d03dacfc8fa06b065ffe1df00d8c2a09f731482fcacae745abfbb478d4af36d0a891fad4834d3
  languageName: node
  linkType: hard

\\"wrappy@npm:1\\":
  version: 1.0.2
  resolution: \\"wrappy@npm:1.0.2\\"
  checksum: 159da4805f7e84a3d003d8841557196034155008f817172d4e986bd591f74aa82aa7db55929a54222309e01079a65a92a9e6414da5a6aa4b01ee44a511ac3ee5
  languageName: node
  linkType: hard

\\"yallist@npm:^4.0.0\\":
  version: 4.0.0
  resolution: \\"yallist@npm:4.0.0\\"
  checksum: 343617202af32df2a15a3be36a5a8c0c8545208f3d3dfbc6bb7c3e3b7e8c6f8e7485432e4f3b88da3031a6e20afa7c711eded32ddfb122896ac5d914e75848d5
  languageName: node
  linkType: hard
",
    "name": "yarn.lock",
    "type": "file",
  },
]
`;

exports[`runGenerator reserved-keywords 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": "export * from \\"./resources\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
        "name": "index.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * as package_ from \\"./package\\";
export * from \\"./package/types\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.package_ = void 0;
exports.package_ = __importStar(require(\\"./package\\"));
__exportStar(require(\\"./package/types\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * from \\"./types\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface Package {
    name: string;
}
",
                    "name": "Package.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "Package.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export * from \\"./Package\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./Package\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "types",
                "type": "directory",
              },
            ],
            "name": "package",
            "type": "directory",
          },
        ],
        "name": "resources",
        "type": "directory",
      },
    ],
    "name": "api",
    "type": "directory",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "export * as serialization from \\"./schemas\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.serialization = void 0;
exports.serialization = __importStar(require(\\"./schemas\\"));
",
        "name": "index.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";
export declare type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export declare type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export declare type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;
export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}
export declare const SchemaType: {
    readonly DATE: \\"date\\";
    readonly ENUM: \\"enum\\";
    readonly LIST: \\"list\\";
    readonly STRING_LITERAL: \\"stringLiteral\\";
    readonly OBJECT: \\"object\\";
    readonly ANY: \\"any\\";
    readonly BOOLEAN: \\"boolean\\";
    readonly NUMBER: \\"number\\";
    readonly STRING: \\"string\\";
    readonly UNKNOWN: \\"unknown\\";
    readonly RECORD: \\"record\\";
    readonly SET: \\"set\\";
    readonly UNION: \\"union\\";
    readonly OPTIONAL: \\"optional\\";
};
export declare type SchemaType = typeof SchemaType[keyof typeof SchemaType];
export declare type MaybeValid<T> = Valid<T> | Invalid;
export interface Valid<T> {
    ok: true;
    value: T;
}
export interface Invalid {
    ok: false;
    errors: ValidationError[];
}
export interface ValidationError {
    path: string[];
    message: string;
}
export interface SchemaOptions {
    /**
     * @default false
     */
    allowUnknownKeys?: boolean;
}
",
            "name": "Schema.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SchemaType = void 0;
exports.SchemaType = {
    DATE: \\"date\\",
    ENUM: \\"enum\\",
    LIST: \\"list\\",
    STRING_LITERAL: \\"stringLiteral\\",
    OBJECT: \\"object\\",
    ANY: \\"any\\",
    BOOLEAN: \\"boolean\\",
    NUMBER: \\"number\\",
    STRING: \\"string\\",
    UNKNOWN: \\"unknown\\",
    RECORD: \\"record\\",
    SET: \\"set\\",
    UNION: \\"union\\",
    OPTIONAL: \\"optional\\",
};
",
            "name": "Schema.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
export declare function date(): Schema<string, Date>;
",
                    "name": "date.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.date = void 0;
const Schema_1 = require(\\"../../Schema\\");
const schema_utils_1 = require(\\"../schema-utils\\");
// https://stackoverflow.com/questions/12756159/regex-and-iso8601-formatted-datetime
const ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
function date() {
    const baseSchema = {
        parse: (raw) => {
            if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
                return {
                    ok: true,
                    value: new Date(raw),
                };
            }
            else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not an ISO 8601 date string\\",
                        },
                    ],
                };
            }
        },
        json: (date) => {
            if (date instanceof Date) {
                return {
                    ok: true,
                    value: date.toISOString(),
                };
            }
            else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Date object\\",
                        },
                    ],
                };
            }
        },
        getType: () => Schema_1.SchemaType.DATE,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.date = date;
",
                    "name": "date.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { date } from \\"./date\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.date = void 0;
var date_1 = require(\\"./date\\");
Object.defineProperty(exports, \\"date\\", { enumerable: true, get: function () { return date_1.date; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "date",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
export declare function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]>;
",
                    "name": "enum.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.enum_ = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
function enum_(values) {
    const validValues = new Set(values);
    const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
        if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
            return {
                ok: true,
                value: value,
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \\"Not one of the allowed values\\",
                    },
                ],
            };
        }
    });
    return schemaCreator();
}
exports.enum_ = enum_;
",
                    "name": "enum.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { enum_ } from \\"./enum\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.enum_ = void 0;
var enum_1 = require(\\"./enum\\");
Object.defineProperty(exports, \\"enum_\\", { enumerable: true, get: function () { return enum_1.enum_; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "enum",
                "type": "directory",
              },
              Object {
                "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./union\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./date\\"), exports);
__exportStar(require(\\"./enum\\"), exports);
__exportStar(require(\\"./lazy\\"), exports);
__exportStar(require(\\"./list\\"), exports);
__exportStar(require(\\"./literals\\"), exports);
__exportStar(require(\\"./object\\"), exports);
__exportStar(require(\\"./object-like\\"), exports);
__exportStar(require(\\"./primitives\\"), exports);
__exportStar(require(\\"./record\\"), exports);
__exportStar(require(\\"./schema-utils\\"), exports);
__exportStar(require(\\"./set\\"), exports);
__exportStar(require(\\"./union\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export { lazy, type SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.lazyObject = exports.lazy = void 0;
var lazy_1 = require(\\"./lazy\\");
Object.defineProperty(exports, \\"lazy\\", { enumerable: true, get: function () { return lazy_1.lazy; } });
var lazyObject_1 = require(\\"./lazyObject\\");
Object.defineProperty(exports, \\"lazyObject\\", { enumerable: true, get: function () { return lazyObject_1.lazyObject; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;
export declare function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed>;
export declare function constructLazyBaseSchema<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): BaseSchema<Raw, Parsed>;
export declare function getMemoizedSchema<SchemaType extends Schema<any, any>>(getter: SchemaGetter<SchemaType>): Promise<SchemaType>;
",
                    "name": "lazy.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getMemoizedSchema = exports.constructLazyBaseSchema = exports.lazy = void 0;
const schema_utils_1 = require(\\"../schema-utils\\");
function lazy(getter) {
    const baseSchema = constructLazyBaseSchema(getter);
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.lazy = lazy;
function constructLazyBaseSchema(getter) {
    return {
        parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
        json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
        getType: async () => (await getMemoizedSchema(getter)).getType(),
    };
}
exports.constructLazyBaseSchema = constructLazyBaseSchema;
async function getMemoizedSchema(getter) {
    const castedGetter = getter;
    if (castedGetter.__zurg_memoized == null) {
        castedGetter.__zurg_memoized = await getter();
    }
    return castedGetter.__zurg_memoized;
}
exports.getMemoizedSchema = getMemoizedSchema;
",
                    "name": "lazy.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { ObjectSchema } from \\"../object/types\\";
import { SchemaGetter } from \\"./lazy\\";
export declare function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed>;
",
                    "name": "lazyObject.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.lazyObject = void 0;
const object_1 = require(\\"../object\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
const lazy_1 = require(\\"./lazy\\");
function lazyObject(getter) {
    const baseSchema = {
        ...(0, lazy_1.constructLazyBaseSchema)(getter),
        _getRawProperties: async () => (await (0, lazy_1.getMemoizedSchema)(getter))._getRawProperties(),
        _getParsedProperties: async () => (await (0, lazy_1.getMemoizedSchema)(getter))._getParsedProperties(),
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
        ...(0, object_1.getObjectUtils)(baseSchema),
    };
}
exports.lazyObject = lazyObject;
",
                    "name": "lazyObject.js",
                    "type": "file",
                  },
                ],
                "name": "lazy",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export { list } from \\"./list\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.list = void 0;
var list_1 = require(\\"./list\\");
Object.defineProperty(exports, \\"list\\", { enumerable: true, get: function () { return list_1.list; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
export declare function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]>;
",
                    "name": "list.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.list = void 0;
const Schema_1 = require(\\"../../Schema\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function list(schema) {
    const baseSchema = {
        parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
        json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
        getType: () => Schema_1.SchemaType.LIST,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.list = list;
async function validateAndTransformArray(value, transformItem) {
    if (!Array.isArray(value)) {
        return {
            ok: false,
            errors: [
                {
                    message: \\"Not a list\\",
                    path: [],
                },
            ],
        };
    }
    const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
    return maybeValidItems.reduce((acc, item, index) => {
        if (acc.ok && item.ok) {
            return {
                ok: true,
                value: [...acc.value, item.value],
            };
        }
        const errors = [];
        if (!acc.ok) {
            errors.push(...acc.errors);
        }
        if (!item.ok) {
            errors.push(...item.errors.map((error) => ({
                path: [\`[\${index}]\`, ...error.path],
                message: error.message,
            })));
        }
        return {
            ok: false,
            errors,
        };
    }, { ok: true, value: [] });
}
",
                    "name": "list.js",
                    "type": "file",
                  },
                ],
                "name": "list",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringLiteral = void 0;
var stringLiteral_1 = require(\\"./stringLiteral\\");
Object.defineProperty(exports, \\"stringLiteral\\", { enumerable: true, get: function () { return stringLiteral_1.stringLiteral; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
export declare function stringLiteral<V extends string>(literal: V): Schema<V, V>;
",
                    "name": "stringLiteral.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringLiteral = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
function stringLiteral(literal) {
    const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING_LITERAL, (value) => {
        if (value === literal) {
            return {
                ok: true,
                value: literal,
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \`Not equal to \\"\${literal}\\"\`,
                    },
                ],
            };
        }
    });
    return schemaCreator();
}
exports.stringLiteral = stringLiteral;
",
                    "name": "stringLiteral.js",
                    "type": "file",
                  },
                ],
                "name": "literals",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export { getObjectUtils, object } from \\"./object\\";
export { isProperty, property, type Property } from \\"./property\\";
export { type BaseObjectSchema, type inferObjectSchemaFromPropertySchemas, type inferParsedObject, type inferParsedObjectFromPropertySchemas, type inferParsedPropertySchema, type inferRawKey, type inferRawObject, type inferRawObjectFromPropertySchemas, type inferRawPropertySchema, type ObjectSchema, type ObjectUtils, type PropertySchemas, } from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.property = exports.isProperty = exports.object = exports.getObjectUtils = void 0;
var object_1 = require(\\"./object\\");
Object.defineProperty(exports, \\"getObjectUtils\\", { enumerable: true, get: function () { return object_1.getObjectUtils; } });
Object.defineProperty(exports, \\"object\\", { enumerable: true, get: function () { return object_1.object; } });
var property_1 = require(\\"./property\\");
Object.defineProperty(exports, \\"isProperty\\", { enumerable: true, get: function () { return property_1.isProperty; } });
Object.defineProperty(exports, \\"property\\", { enumerable: true, get: function () { return property_1.property; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseObjectSchema, inferObjectSchemaFromPropertySchemas, ObjectUtils, PropertySchemas } from \\"./types\\";
export declare function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(schemas: T): inferObjectSchemaFromPropertySchemas<T>;
export declare function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed>;
",
                    "name": "object.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getObjectUtils = exports.object = void 0;
const Schema_1 = require(\\"../../Schema\\");
const entries_1 = require(\\"../../utils/entries\\");
const filterObject_1 = require(\\"../../utils/filterObject\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const keys_1 = require(\\"../../utils/keys\\");
const partition_1 = require(\\"../../utils/partition\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
const property_1 = require(\\"./property\\");
function object(schemas) {
    const baseSchema = {
        _getRawProperties: () => Promise.resolve(Object.entries(schemas).map(([parsedKey, propertySchema]) => (0, property_1.isProperty)(propertySchema) ? propertySchema.rawKey : parsedKey)),
        _getParsedProperties: () => Promise.resolve((0, keys_1.keys)(schemas)),
        parse: async (raw, opts) => {
            const rawKeyToProperty = {};
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
                const rawKey = (0, property_1.isProperty)(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
                const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;
                const property = {
                    rawKey,
                    parsedKey: parsedKey,
                    valueSchema,
                };
                rawKeyToProperty[rawKey] = property;
                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(rawKey);
                }
            }
            return validateAndTransformObject({
                value: raw,
                requiredKeys,
                getProperty: (rawKey) => {
                    const property = rawKeyToProperty[rawKey];
                    if (property == null) {
                        return undefined;
                    }
                    return {
                        transformedKey: property.parsedKey,
                        transform: (propertyValue) => property.valueSchema.parse(propertyValue, opts),
                    };
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },
        json: async (parsed, opts) => {
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
                const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;
                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(parsedKey);
                }
            }
            return validateAndTransformObject({
                value: parsed,
                requiredKeys,
                getProperty: (parsedKey) => {
                    const property = schemas[parsedKey];
                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                    if (property == null) {
                        return undefined;
                    }
                    if ((0, property_1.isProperty)(property)) {
                        return {
                            transformedKey: property.rawKey,
                            transform: (propertyValue) => property.valueSchema.json(propertyValue, opts),
                        };
                    }
                    else {
                        return {
                            transformedKey: parsedKey,
                            transform: (propertyValue) => property.json(propertyValue, opts),
                        };
                    }
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },
        getType: () => Schema_1.SchemaType.OBJECT,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}
exports.object = object;
async function validateAndTransformObject({ value, requiredKeys, getProperty, allowUnknownKeys, }) {
    if (!(0, isPlainObject_1.isPlainObject)(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }
    const missingRequiredKeys = new Set(requiredKeys);
    const errors = [];
    const transformed = {};
    for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
        const property = getProperty(preTransformedKey);
        if (property != null) {
            missingRequiredKeys.delete(preTransformedKey);
            const value = await property.transform(preTransformedItemValue);
            if (value.ok) {
                transformed[property.transformedKey] = value.value;
            }
            else {
                errors.push(...value.errors.map((error) => ({
                    path: [preTransformedKey, ...error.path],
                    message: error.message,
                })));
            }
        }
        else if (allowUnknownKeys) {
            transformed[preTransformedKey] = preTransformedItemValue;
        }
        else {
            errors.push({
                path: [preTransformedKey],
                message: \`Unrecognized key \\"\${preTransformedKey}\\"\`,
            });
        }
    }
    errors.push(...requiredKeys
        .filter((key) => missingRequiredKeys.has(key))
        .map((key) => ({
        path: [],
        message: \`Missing required key \\"\${key}\\"\`,
    })));
    if (errors.length === 0) {
        return {
            ok: true,
            value: transformed,
        };
    }
    else {
        return {
            ok: false,
            errors,
        };
    }
}
function getObjectUtils(schema) {
    return {
        extend: (extension) => {
            const baseSchema = {
                _getParsedProperties: async () => [
                    ...(await schema._getParsedProperties()),
                    ...(await extension._getParsedProperties()),
                ],
                _getRawProperties: async () => [
                    ...(await schema._getRawProperties()),
                    ...(await extension._getRawProperties()),
                ],
                parse: async (raw, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getRawProperties(),
                        value: raw,
                        transformBase: (rawBase) => schema.parse(rawBase, opts),
                        transformExtension: (rawExtension) => extension.parse(rawExtension, opts),
                    });
                },
                json: async (parsed, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getParsedProperties(),
                        value: parsed,
                        transformBase: (parsedBase) => schema.json(parsedBase, opts),
                        transformExtension: (parsedExtension) => extension.json(parsedExtension, opts),
                    });
                },
                getType: () => Schema_1.SchemaType.OBJECT,
            };
            return {
                ...baseSchema,
                ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
                ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
                ...getObjectUtils(baseSchema),
            };
        },
    };
}
exports.getObjectUtils = getObjectUtils;
async function validateAndTransformExtendedObject({ extensionKeys, value, transformBase, transformExtension, }) {
    const extensionPropertiesSet = new Set(extensionKeys);
    const [extensionProperties, baseProperties] = (0, partition_1.partition)((0, keys_1.keys)(value), (key) => extensionPropertiesSet.has(key));
    const transformedBase = await transformBase((0, filterObject_1.filterObject)(value, baseProperties));
    const transformedExtension = await transformExtension((0, filterObject_1.filterObject)(value, extensionProperties));
    if (transformedBase.ok && transformedExtension.ok) {
        return {
            ok: true,
            value: {
                ...transformedBase.value,
                ...transformedExtension.value,
            },
        };
    }
    else {
        return {
            ok: false,
            errors: [
                ...(transformedBase.ok ? [] : transformedBase.errors),
                ...(transformedExtension.ok ? [] : transformedExtension.errors),
            ],
        };
    }
}
async function isSchemaRequired(schema) {
    return !(await isSchemaOptional(schema));
}
async function isSchemaOptional(schema) {
    switch (await schema.getType()) {
        case Schema_1.SchemaType.ANY:
        case Schema_1.SchemaType.UNKNOWN:
        case Schema_1.SchemaType.OPTIONAL:
            return true;
        default:
            return false;
    }
}
",
                    "name": "object.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
export declare function property<RawKey extends string, RawValue, ParsedValue>(rawKey: RawKey, valueSchema: Schema<RawValue, ParsedValue>): Property<RawKey, RawValue, ParsedValue>;
export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}
export declare function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O;
",
                    "name": "property.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.isProperty = exports.property = void 0;
function property(rawKey, valueSchema) {
    return {
        rawKey,
        valueSchema,
        isProperty: true,
    };
}
exports.property = property;
function isProperty(maybeProperty) {
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    return maybeProperty.isProperty;
}
exports.isProperty = isProperty;
",
                    "name": "property.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";
export declare type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed> & ObjectUtils<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}
export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(schemas: ObjectSchema<RawExtension, ParsedExtension>) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}
export declare type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;
export declare type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed> ? Parsed : never;
export declare type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<inferRawObjectFromPropertySchemas<T>, inferParsedObjectFromPropertySchemas<T>>;
export declare type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
}>;
export declare type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [K in keyof T]: inferParsedPropertySchema<T[K]>;
}>;
export declare type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<ParsedKeys, Property<any, any, any> | Schema<any, any>>;
export declare type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, infer Raw, any> ? Raw : P extends Schema<any, any> ? inferRaw<P> : never;
export declare type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, any, infer Parsed> ? Parsed : P extends Schema<any, any> ? inferParsed<P> : never;
export declare type inferRawKey<ParsedKey extends string | number | symbol, P extends Property<any, any, any> | Schema<any, any>> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                    "name": "types.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "types.js",
                    "type": "file",
                  },
                ],
                "name": "object",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "import { BaseSchema } from \\"../../Schema\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";
export declare function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed>;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
export declare function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>, properties: {
    [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]);
}): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties>;
",
                    "name": "getObjectLikeUtils.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
const filterObject_1 = require(\\"../../utils/filterObject\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function getObjectLikeUtils(schema) {
    return {
        withParsedProperties: (properties) => withParsedProperties(schema, properties),
    };
}
exports.getObjectLikeUtils = getObjectLikeUtils;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
function withParsedProperties(objectLike, properties) {
    const objectSchema = {
        parse: async (raw, opts) => {
            const parsedObject = await objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
                return parsedObject;
            }
            const additionalProperties = Object.entries(properties).reduce((processed, [key, value]) => {
                return {
                    ...processed,
                    [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value,
                };
            }, {});
            return {
                ok: true,
                value: {
                    ...parsedObject.value,
                    ...additionalProperties,
                },
            };
        },
        json: (parsed, opts) => {
            if (!(0, isPlainObject_1.isPlainObject)(parsed)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                        },
                    ],
                };
            }
            // strip out added properties
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = (0, filterObject_1.filterObject)(parsed, Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key)));
            return objectLike.json(parsedWithoutAddedProperties, opts);
        },
        getType: () => objectLike.getType(),
    };
    return {
        ...objectSchema,
        ...(0, schema_utils_1.getSchemaUtils)(objectSchema),
        ...getObjectLikeUtils(objectSchema),
    };
}
exports.withParsedProperties = withParsedProperties;
",
                    "name": "getObjectLikeUtils.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export { type ObjectLikeSchema, type ObjectLikeUtils } from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
var getObjectLikeUtils_1 = require(\\"./getObjectLikeUtils\\");
Object.defineProperty(exports, \\"getObjectLikeUtils\\", { enumerable: true, get: function () { return getObjectLikeUtils_1.getObjectLikeUtils; } });
Object.defineProperty(exports, \\"withParsedProperties\\", { enumerable: true, get: function () { return getObjectLikeUtils_1.withParsedProperties; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> & BaseSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed>;
export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                    "name": "types.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "types.js",
                    "type": "file",
                  },
                ],
                "name": "object-like",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export declare const any: () => import(\\"../../Schema\\").Schema<any, any>;
",
                    "name": "any.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.any = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.any = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ANY, (value) => ({ ok: true, value }));
",
                    "name": "any.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare const boolean: () => import(\\"../../Schema\\").Schema<boolean, boolean>;
",
                    "name": "boolean.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.boolean = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.boolean = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.BOOLEAN, (value) => {
    if (typeof value === \\"boolean\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a boolean\\",
                },
            ],
        };
    }
});
",
                    "name": "boolean.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.unknown = exports.string = exports.number = exports.boolean = exports.any = void 0;
var any_1 = require(\\"./any\\");
Object.defineProperty(exports, \\"any\\", { enumerable: true, get: function () { return any_1.any; } });
var boolean_1 = require(\\"./boolean\\");
Object.defineProperty(exports, \\"boolean\\", { enumerable: true, get: function () { return boolean_1.boolean; } });
var number_1 = require(\\"./number\\");
Object.defineProperty(exports, \\"number\\", { enumerable: true, get: function () { return number_1.number; } });
var string_1 = require(\\"./string\\");
Object.defineProperty(exports, \\"string\\", { enumerable: true, get: function () { return string_1.string; } });
var unknown_1 = require(\\"./unknown\\");
Object.defineProperty(exports, \\"unknown\\", { enumerable: true, get: function () { return unknown_1.unknown; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare const number: () => import(\\"../../Schema\\").Schema<number, number>;
",
                    "name": "number.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.number = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.number = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.NUMBER, (value) => {
    if (typeof value === \\"number\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a number\\",
                },
            ],
        };
    }
});
",
                    "name": "number.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare const string: () => import(\\"../../Schema\\").Schema<string, string>;
",
                    "name": "string.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.string = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.string = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING, (value) => {
    if (typeof value === \\"string\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a string\\",
                },
            ],
        };
    }
});
",
                    "name": "string.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare const unknown: () => import(\\"../../Schema\\").Schema<unknown, unknown>;
",
                    "name": "unknown.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.unknown = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.unknown = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
",
                    "name": "unknown.js",
                    "type": "file",
                  },
                ],
                "name": "primitives",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export { record } from \\"./record\\";
export { type BaseRecordSchema, type RecordSchema } from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.record = void 0;
var record_1 = require(\\"./record\\");
Object.defineProperty(exports, \\"record\\", { enumerable: true, get: function () { return record_1.record; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
import { RecordSchema } from \\"./types\\";
export declare function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(keySchema: Schema<RawKey, ParsedKey>, valueSchema: Schema<RawValue, ParsedValue>): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue>;
",
                    "name": "record.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.record = void 0;
const Schema_1 = require(\\"../../Schema\\");
const entries_1 = require(\\"../../utils/entries\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function record(keySchema, valueSchema) {
    const baseSchema = {
        parse: async (raw, opts) => {
            return validateAndTransformRecord({
                value: raw,
                isKeyNumeric: (await keySchema.getType()) === Schema_1.SchemaType.NUMBER,
                transformKey: (key) => keySchema.parse(key, opts),
                transformValue: (value) => valueSchema.parse(value, opts),
            });
        },
        json: async (parsed, opts) => {
            return validateAndTransformRecord({
                value: parsed,
                isKeyNumeric: (await keySchema.getType()) === Schema_1.SchemaType.NUMBER,
                transformKey: (key) => keySchema.json(key, opts),
                transformValue: (value) => valueSchema.json(value, opts),
            });
        },
        getType: () => Schema_1.SchemaType.RECORD,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.record = record;
async function validateAndTransformRecord({ value, isKeyNumeric, transformKey, transformValue, }) {
    if (!(0, isPlainObject_1.isPlainObject)(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }
    return (0, entries_1.entries)(value).reduce(async (accPromise, [stringKey, value]) => {
        // skip nullish keys
        if (value == null) {
            return accPromise;
        }
        const acc = await accPromise;
        let key = stringKey;
        if (isKeyNumeric) {
            const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
            if (!isNaN(numberKey)) {
                key = numberKey;
            }
        }
        const transformedKey = await transformKey(key);
        const transformedValue = await transformValue(value);
        if (acc.ok && transformedKey.ok && transformedValue.ok) {
            return {
                ok: true,
                value: {
                    ...acc.value,
                    [transformedKey.value]: transformedValue.value,
                },
            };
        }
        const errors = [];
        if (!acc.ok) {
            errors.push(...acc.errors);
        }
        if (!transformedKey.ok) {
            errors.push(...transformedKey.errors.map((error) => ({
                path: [\`\${key} (key)\`, ...error.path],
                message: error.message,
            })));
        }
        if (!transformedValue.ok) {
            errors.push(...transformedValue.errors.map((error) => ({
                path: [stringKey, ...error.path],
                message: error.message,
            })));
        }
        return {
            ok: false,
            errors,
        };
    }, Promise.resolve({ ok: true, value: {} }));
}
",
                    "name": "record.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema } from \\"../../Schema\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { SchemaUtils } from \\"../schema-utils\\";
export declare type RecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> & SchemaUtils<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
export declare type BaseRecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseSchema<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
",
                    "name": "types.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "types.js",
                    "type": "file",
                  },
                ],
                "name": "record",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class JsonError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                    "name": "JsonError.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.JsonError = void 0;
const stringifyValidationErrors_1 = require(\\"./stringifyValidationErrors\\");
class JsonError extends Error {
    errors;
    constructor(errors) {
        super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
    }
}
exports.JsonError = JsonError;
",
                    "name": "JsonError.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class ParseError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                    "name": "ParseError.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParseError = void 0;
const stringifyValidationErrors_1 = require(\\"./stringifyValidationErrors\\");
class ParseError extends Error {
    errors;
    constructor(errors) {
        super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
    }
}
exports.ParseError = ParseError;
",
                    "name": "ParseError.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { BaseSchema, Schema, SchemaOptions } from \\"../../Schema\\";
export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}
export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}
export declare function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed>;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
export declare function optional<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): Schema<Raw | null | undefined, Parsed | undefined>;
export declare function transform<Raw, Parsed, Transformed>(schema: BaseSchema<Raw, Parsed>, transformer: SchemaTransformer<Parsed, Transformed>): Schema<Raw, Transformed>;
",
                    "name": "getSchemaUtils.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.transform = exports.optional = exports.getSchemaUtils = void 0;
const Schema_1 = require(\\"../../Schema\\");
const JsonError_1 = require(\\"./JsonError\\");
const ParseError_1 = require(\\"./ParseError\\");
function getSchemaUtils(schema) {
    return {
        optional: () => optional(schema),
        transform: (transformer) => transform(schema, transformer),
        parseOrThrow: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (parsed.ok) {
                return parsed.value;
            }
            throw new ParseError_1.ParseError(parsed.errors);
        },
        jsonOrThrow: async (parsed, opts) => {
            const raw = await schema.json(parsed, opts);
            if (raw.ok) {
                return raw.value;
            }
            throw new JsonError_1.JsonError(raw.errors);
        },
    };
}
exports.getSchemaUtils = getSchemaUtils;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
function optional(schema) {
    const baseSchema = {
        parse: (raw, opts) => {
            if (raw == null) {
                return {
                    ok: true,
                    value: undefined,
                };
            }
            return schema.parse(raw, opts);
        },
        json: (parsed, opts) => {
            if (parsed == null) {
                return {
                    ok: true,
                    value: null,
                };
            }
            return schema.json(parsed, opts);
        },
        getType: () => Schema_1.SchemaType.OPTIONAL,
    };
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
exports.optional = optional;
function transform(schema, transformer) {
    const baseSchema = {
        parse: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (!parsed.ok) {
                return parsed;
            }
            return {
                ok: true,
                value: transformer.transform(parsed.value),
            };
        },
        json: async (transformed, opts) => {
            const parsed = await transformer.untransform(transformed);
            return schema.json(parsed, opts);
        },
        getType: () => schema.getType(),
    };
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
exports.transform = transform;
",
                    "name": "getSchemaUtils.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { getSchemaUtils, optional, transform, type SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParseError = exports.JsonError = exports.transform = exports.optional = exports.getSchemaUtils = void 0;
var getSchemaUtils_1 = require(\\"./getSchemaUtils\\");
Object.defineProperty(exports, \\"getSchemaUtils\\", { enumerable: true, get: function () { return getSchemaUtils_1.getSchemaUtils; } });
Object.defineProperty(exports, \\"optional\\", { enumerable: true, get: function () { return getSchemaUtils_1.optional; } });
Object.defineProperty(exports, \\"transform\\", { enumerable: true, get: function () { return getSchemaUtils_1.transform; } });
var JsonError_1 = require(\\"./JsonError\\");
Object.defineProperty(exports, \\"JsonError\\", { enumerable: true, get: function () { return JsonError_1.JsonError; } });
var ParseError_1 = require(\\"./ParseError\\");
Object.defineProperty(exports, \\"ParseError\\", { enumerable: true, get: function () { return ParseError_1.ParseError; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { ValidationError } from \\"../../Schema\\";
export declare function stringifyValidationError(error: ValidationError): string;
",
                    "name": "stringifyValidationErrors.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringifyValidationError = void 0;
function stringifyValidationError(error) {
    if (error.path.length === 0) {
        return error.message;
    }
    return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
exports.stringifyValidationError = stringifyValidationError;
",
                    "name": "stringifyValidationErrors.js",
                    "type": "file",
                  },
                ],
                "name": "schema-utils",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export { set } from \\"./set\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.set = void 0;
var set_1 = require(\\"./set\\");
Object.defineProperty(exports, \\"set\\", { enumerable: true, get: function () { return set_1.set; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { Schema } from \\"../../Schema\\";
export declare function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>>;
",
                    "name": "set.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.set = void 0;
const Schema_1 = require(\\"../../Schema\\");
const list_1 = require(\\"../list\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function set(schema) {
    const listSchema = (0, list_1.list)(schema);
    const baseSchema = {
        parse: async (raw, opts) => {
            const parsedList = await listSchema.parse(raw, opts);
            if (parsedList.ok) {
                return {
                    ok: true,
                    value: new Set(parsedList.value),
                };
            }
            else {
                return parsedList;
            }
        },
        json: async (parsed, opts) => {
            if (!(parsed instanceof Set)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Set\\",
                        },
                    ],
                };
            }
            const jsonList = await listSchema.json([...parsed], opts);
            return jsonList;
        },
        getType: () => Schema_1.SchemaType.SET,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.set = set;
",
                    "name": "set.js",
                    "type": "file",
                  },
                ],
                "name": "set",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export declare function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(parsedDiscriminant: ParsedDiscriminant, rawDiscriminant: RawDiscriminant): Discriminant<RawDiscriminant, ParsedDiscriminant>;
export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                    "name": "discriminant.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.discriminant = void 0;
function discriminant(parsedDiscriminant, rawDiscriminant) {
    return {
        parsedDiscriminant,
        rawDiscriminant,
    };
}
exports.discriminant = discriminant;
",
                    "name": "discriminant.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export { discriminant, type Discriminant } from \\"./discriminant\\";
export { type inferParsedDiscriminant, type inferParsedUnion, type inferRawDiscriminant, type inferRawUnion, type UnionSubtypes, } from \\"./types\\";
export { union } from \\"./union\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.union = exports.discriminant = void 0;
var discriminant_1 = require(\\"./discriminant\\");
Object.defineProperty(exports, \\"discriminant\\", { enumerable: true, get: function () { return discriminant_1.discriminant; } });
var union_1 = require(\\"./union\\");
Object.defineProperty(exports, \\"union\\", { enumerable: true, get: function () { return union_1.union; } });
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";
export declare type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};
export declare type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];
export declare type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];
export declare type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<infer Raw, any> ? Raw : never;
export declare type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<any, infer Parsed> ? Parsed : never;
",
                    "name": "types.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "types.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { ObjectLikeSchema } from \\"../object-like\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedUnion, inferRawUnion, UnionSubtypes } from \\"./types\\";
export declare function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(discriminant: D, union: U): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>>;
",
                    "name": "union.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.union = void 0;
const Schema_1 = require(\\"../../Schema\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const keys_1 = require(\\"../../utils/keys\\");
const enum_1 = require(\\"../enum\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function union(discriminant, union) {
    const rawDiscriminant = typeof discriminant === \\"string\\" ? discriminant : discriminant.rawDiscriminant;
    const parsedDiscriminant = typeof discriminant === \\"string\\"
        ? discriminant
        : discriminant.parsedDiscriminant;
    const discriminantValueSchema = (0, enum_1.enum_)((0, keys_1.keys)(union));
    const baseSchema = {
        parse: async (raw, opts) => {
            return transformAndValidateUnion(raw, rawDiscriminant, parsedDiscriminant, (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts), (discriminantValue) => union[discriminantValue], opts?.allowUnknownKeys ?? false, (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts));
        },
        json: async (parsed, opts) => {
            return transformAndValidateUnion(parsed, parsedDiscriminant, rawDiscriminant, (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts), (discriminantValue) => union[discriminantValue], opts?.allowUnknownKeys ?? false, (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts));
        },
        getType: () => Schema_1.SchemaType.UNION,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
    };
}
exports.union = union;
async function transformAndValidateUnion(value, discriminant, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
    if (!(0, isPlainObject_1.isPlainObject)(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }
    const { [discriminant]: discriminantValue, ...additionalProperties } = value;
    if (discriminantValue == null) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \`Missing discriminant (\\"\${discriminant}\\")\`,
                },
            ],
        };
    }
    const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
    if (!transformedDiscriminantValue.ok) {
        return {
            ok: false,
            errors: transformedDiscriminantValue.errors.map((error) => ({
                path: [discriminant, ...error.path],
                message: error.message,
            })),
        };
    }
    const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
    if (additionalPropertiesSchema == null) {
        if (allowUnknownKeys) {
            return {
                ok: true,
                value: {
                    [transformedDiscriminant]: transformedDiscriminantValue.value,
                    ...additionalProperties,
                },
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: [discriminant],
                        message: \\"Unrecognized discriminant value\\",
                    },
                ],
            };
        }
    }
    const transformedAdditionalProperties = await transformAdditionalProperties(additionalProperties, additionalPropertiesSchema);
    if (!transformedAdditionalProperties.ok) {
        return transformedAdditionalProperties;
    }
    return {
        ok: true,
        value: {
            [transformedDiscriminant]: discriminantValue,
            ...transformedAdditionalProperties.value,
        },
    };
}
",
                    "name": "union.js",
                    "type": "file",
                  },
                ],
                "name": "union",
                "type": "directory",
              },
            ],
            "name": "builders",
            "type": "directory",
          },
          Object {
            "contents": "export * from \\"./builders\\";
export { type inferParsed, type inferRaw, type Schema, type SchemaOptions } from \\"./Schema\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./builders\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export declare type MaybePromise<T> = T | Promise<T>;
",
                "name": "MaybePromise.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                "name": "MaybePromise.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type OptionalRecord<K extends string | number, V> = Record<K, V | undefined>;
",
                "name": "OptionalRecord.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                "name": "OptionalRecord.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;
export declare type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K] ? K : null extends T[K] ? K : 1 extends (any extends T[K] ? 0 : 1) ? never : K;
}[keyof T];
export declare type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                "name": "addQuestionMarksToNullableProperties.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                "name": "addQuestionMarksToNullableProperties.js",
                "type": "file",
              },
              Object {
                "contents": "import { MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";
export declare function createIdentitySchemaCreator<T>(schemaType: SchemaType, validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>): () => Schema<T, T>;
",
                "name": "createIdentitySchemaCreator.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.createIdentitySchemaCreator = void 0;
const schema_utils_1 = require(\\"../builders/schema-utils\\");
function createIdentitySchemaCreator(schemaType, validate) {
    return () => {
        const baseSchema = {
            parse: validate,
            json: validate,
            getType: () => schemaType,
        };
        return {
            ...baseSchema,
            ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        };
    };
}
exports.createIdentitySchemaCreator = createIdentitySchemaCreator;
",
                "name": "createIdentitySchemaCreator.js",
                "type": "file",
              },
              Object {
                "contents": "export declare function entries<T>(object: T): [keyof T, T[keyof T]][];
",
                "name": "entries.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.entries = void 0;
function entries(object) {
    return Object.entries(object);
}
exports.entries = entries;
",
                "name": "entries.js",
                "type": "file",
              },
              Object {
                "contents": "export declare function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K>;
",
                "name": "filterObject.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.filterObject = void 0;
function filterObject(obj, keysToInclude) {
    const keysToIncludeSet = new Set(keysToInclude);
    return Object.entries(obj).reduce((acc, [key, value]) => {
        if (keysToIncludeSet.has(key)) {
            acc[key] = value;
        }
        return acc;
        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
    }, {});
}
exports.filterObject = filterObject;
",
                "name": "filterObject.js",
                "type": "file",
              },
              Object {
                "contents": "export declare const NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
export declare function isPlainObject(value: unknown): value is Record<string, unknown>;
",
                "name": "isPlainObject.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.isPlainObject = exports.NOT_AN_OBJECT_ERROR_MESSAGE = void 0;
exports.NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
// borrowed from https://github.com/lodash/lodash/blob/master/isPlainObject.js
function isPlainObject(value) {
    if (typeof value !== \\"object\\" || value === null) {
        return false;
    }
    if (Object.getPrototypeOf(value) === null) {
        return true;
    }
    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
}
exports.isPlainObject = isPlainObject;
",
                "name": "isPlainObject.js",
                "type": "file",
              },
              Object {
                "contents": "export declare function keys<T>(object: T): (keyof T)[];
",
                "name": "keys.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.keys = void 0;
function keys(object) {
    return Object.keys(object);
}
exports.keys = keys;
",
                "name": "keys.js",
                "type": "file",
              },
              Object {
                "contents": "export declare function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]];
",
                "name": "partition.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.partition = void 0;
function partition(items, predicate) {
    const trueItems = [], falseItems = [];
    for (const item of items) {
        if (predicate(item)) {
            trueItems.push(item);
        }
        else {
            falseItems.push(item);
        }
    }
    return [trueItems, falseItems];
}
exports.partition = partition;
",
                "name": "partition.js",
                "type": "file",
              },
            ],
            "name": "utils",
            "type": "directory",
          },
        ],
        "name": "schemas",
        "type": "directory",
      },
    ],
    "name": "core",
    "type": "directory",
  },
  Object {
    "contents": "export * as FernApi from \\"./api\\";
",
    "name": "index.d.ts",
    "type": "file",
  },
  Object {
    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApi = void 0;
exports.FernApi = __importStar(require(\\"./api\\"));
",
    "name": "index.js",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "export * from \\"./resources\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
        "name": "index.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * as package_ from \\"./package\\";
export * from \\"./package/types\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.package_ = void 0;
exports.package_ = __importStar(require(\\"./package\\"));
__exportStar(require(\\"./package/types\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * from \\"./types\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { FernApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Package: core.serialization.ObjectSchema<serializers.Package.Raw, FernApi.Package>;
export declare namespace Package {
    interface Raw {
        name: string;
    }
}
",
                    "name": "Package.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Package = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Package = core.serialization.object({
    name: core.serialization.string(),
});
",
                    "name": "Package.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export * from \\"./Package\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./Package\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "types",
                "type": "directory",
              },
            ],
            "name": "package",
            "type": "directory",
          },
        ],
        "name": "resources",
        "type": "directory",
      },
    ],
    "name": "serialization",
    "type": "directory",
  },
]
`;

exports[`runGenerator trace 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"./environments\\";
import * as core from \\"./core\\";
import { Admin } from \\"./api/resources/admin/client/Client\\";
import { Homepage } from \\"./api/resources/homepage/client/Client\\";
import { Migration } from \\"./api/resources/migration/client/Client\\";
import { Playlist } from \\"./api/resources/playlist/client/Client\\";
import { Problem } from \\"./api/resources/problem/client/Client\\";
import { Submission } from \\"./api/resources/submission/client/Client\\";
import { Sysprop } from \\"./api/resources/sysprop/client/Client\\";
import { V2 } from \\"./api/resources/v2/client/Client\\";
export declare namespace TraceApiClient {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class TraceApiClient {
    private readonly options;
    constructor(options: TraceApiClient.Options);
    private _admin;
    get admin(): Admin;
    private _homepage;
    get homepage(): Homepage;
    private _migration;
    get migration(): Migration;
    private _playlist;
    get playlist(): Playlist;
    private _problem;
    get problem(): Problem;
    private _submission;
    get submission(): Submission;
    private _sysprop;
    get sysprop(): Sysprop;
    private _v2;
    get v2(): V2;
}
",
        "name": "Client.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceApiClient = void 0;
const Client_1 = require(\\"./api/resources/admin/client/Client\\");
const Client_2 = require(\\"./api/resources/homepage/client/Client\\");
const Client_3 = require(\\"./api/resources/migration/client/Client\\");
const Client_4 = require(\\"./api/resources/playlist/client/Client\\");
const Client_5 = require(\\"./api/resources/problem/client/Client\\");
const Client_6 = require(\\"./api/resources/submission/client/Client\\");
const Client_7 = require(\\"./api/resources/sysprop/client/Client\\");
const Client_8 = require(\\"./api/resources/v2/client/Client\\");
class TraceApiClient {
    options;
    constructor(options) {
        this.options = options;
    }
    _admin;
    get admin() {
        return (this._admin ??= new Client_1.Admin(this.options));
    }
    _homepage;
    get homepage() {
        return (this._homepage ??= new Client_2.Homepage(this.options));
    }
    _migration;
    get migration() {
        return (this._migration ??= new Client_3.Migration(this.options));
    }
    _playlist;
    get playlist() {
        return (this._playlist ??= new Client_4.Playlist(this.options));
    }
    _problem;
    get problem() {
        return (this._problem ??= new Client_5.Problem(this.options));
    }
    _submission;
    get submission() {
        return (this._submission ??= new Client_6.Submission(this.options));
    }
    _sysprop;
    get sysprop() {
        return (this._sysprop ??= new Client_7.Sysprop(this.options));
    }
    _v2;
    get v2() {
        return (this._v2 ??= new Client_8.V2(this.options));
    }
}
exports.TraceApiClient = TraceApiClient;
",
        "name": "Client.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Admin {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Admin {
    private readonly options;
    constructor(options: Admin.Options);
    updateTestSubmissionStatus(submissionId: TraceApi.SubmissionId, request: TraceApi.TestSubmissionStatus): Promise<core.APIResponse<void, TraceApi.admin.updateTestSubmissionStatus.Error>>;
    sendTestSubmissionUpdate(submissionId: TraceApi.SubmissionId, request: TraceApi.TestSubmissionUpdate): Promise<core.APIResponse<void, TraceApi.admin.sendTestSubmissionUpdate.Error>>;
    updateWorkspaceSubmissionStatus(submissionId: TraceApi.SubmissionId, request: TraceApi.WorkspaceSubmissionStatus): Promise<core.APIResponse<void, TraceApi.admin.updateWorkspaceSubmissionStatus.Error>>;
    sendWorkspaceSubmissionUpdate(submissionId: TraceApi.SubmissionId, request: TraceApi.WorkspaceSubmissionUpdate): Promise<core.APIResponse<void, TraceApi.admin.sendWorkspaceSubmissionUpdate.Error>>;
    storeTracedTestCase(submissionId: TraceApi.SubmissionId, testCaseId: string, request: TraceApi.StoreTracedTestCaseRequest): Promise<core.APIResponse<void, TraceApi.admin.storeTracedTestCase.Error>>;
    storeTracedTestCaseV2(submissionId: TraceApi.SubmissionId, testCaseId: TraceApi.v2.TestCaseId, request: TraceApi.TraceResponseV2[]): Promise<core.APIResponse<void, TraceApi.admin.storeTracedTestCaseV2.Error>>;
    storeTracedWorkspace(submissionId: TraceApi.SubmissionId, request: TraceApi.StoreTracedWorkspaceRequest): Promise<core.APIResponse<void, TraceApi.admin.storeTracedWorkspace.Error>>;
    storeTracedWorkspaceV2(submissionId: TraceApi.SubmissionId, request: TraceApi.TraceResponseV2[]): Promise<core.APIResponse<void, TraceApi.admin.storeTracedWorkspaceV2.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Admin = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const serializers = __importStar(require(\\"../../../../serialization\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
class Admin {
    options;
    constructor(options) {
        this.options = options;
    }
    async updateTestSubmissionStatus(submissionId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-test-submission-status/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.TestSubmissionStatus.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.updateTestSubmissionStatus.Error._unknown(_response.error),
        };
    }
    async sendTestSubmissionUpdate(submissionId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-test-submission-status-v2/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.TestSubmissionUpdate.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.sendTestSubmissionUpdate.Error._unknown(_response.error),
        };
    }
    async updateWorkspaceSubmissionStatus(submissionId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-workspace-submission-status/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.WorkspaceSubmissionStatus.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.updateWorkspaceSubmissionStatus.Error._unknown(_response.error),
        };
    }
    async sendWorkspaceSubmissionUpdate(submissionId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-workspace-submission-status-v2/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.WorkspaceSubmissionUpdate.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.sendWorkspaceSubmissionUpdate.Error._unknown(_response.error),
        };
    }
    async storeTracedTestCase(submissionId, testCaseId, request) {
        const { someQueryParam, referenceToOptionalString, ..._body } = request;
        const _queryParams = new URLSearchParams();
        if (someQueryParam != null) {
            _queryParams.append(\\"some-query-param\\", someQueryParam);
        }
        if (referenceToOptionalString != null) {
            _queryParams.append(\\"reference-to-optional-string\\", referenceToOptionalString);
        }
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-test-trace/submission/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}/testCase/\${testCaseId}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            queryParameters: _queryParams,
            body: await serializers.StoreTracedTestCaseRequest.jsonOrThrow(_body),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.storeTracedTestCase.Error._unknown(_response.error),
        };
    }
    async storeTracedTestCaseV2(submissionId, testCaseId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-test-trace-v2/submission/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}/testCase/\${await serializers.v2.TestCaseId.jsonOrThrow(testCaseId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.admin.storeTracedTestCaseV2.Request.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.storeTracedTestCaseV2.Error._unknown(_response.error),
        };
    }
    async storeTracedWorkspace(submissionId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-workspace-trace/submission/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.StoreTracedWorkspaceRequest.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.storeTracedWorkspace.Error._unknown(_response.error),
        };
    }
    async storeTracedWorkspaceV2(submissionId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/admin/store-workspace-trace-v2/submission/\${await serializers.SubmissionId.jsonOrThrow(submissionId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.admin.storeTracedWorkspaceV2.Request.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.admin.storeTracedWorkspaceV2.Error._unknown(_response.error),
        };
    }
}
exports.Admin = Admin;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
export * as updateTestSubmissionStatus from \\"./updateTestSubmissionStatus\\";
export * as sendTestSubmissionUpdate from \\"./sendTestSubmissionUpdate\\";
export * as updateWorkspaceSubmissionStatus from \\"./updateWorkspaceSubmissionStatus\\";
export * as sendWorkspaceSubmissionUpdate from \\"./sendWorkspaceSubmissionUpdate\\";
export * as storeTracedTestCase from \\"./storeTracedTestCase\\";
export * as storeTracedTestCaseV2 from \\"./storeTracedTestCaseV2\\";
export * as storeTracedWorkspace from \\"./storeTracedWorkspace\\";
export * as storeTracedWorkspaceV2 from \\"./storeTracedWorkspaceV2\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.storeTracedWorkspaceV2 = exports.storeTracedWorkspace = exports.storeTracedTestCaseV2 = exports.storeTracedTestCase = exports.sendWorkspaceSubmissionUpdate = exports.updateWorkspaceSubmissionStatus = exports.sendTestSubmissionUpdate = exports.updateTestSubmissionStatus = void 0;
__exportStar(require(\\"./requests\\"), exports);
exports.updateTestSubmissionStatus = __importStar(require(\\"./updateTestSubmissionStatus\\"));
exports.sendTestSubmissionUpdate = __importStar(require(\\"./sendTestSubmissionUpdate\\"));
exports.updateWorkspaceSubmissionStatus = __importStar(require(\\"./updateWorkspaceSubmissionStatus\\"));
exports.sendWorkspaceSubmissionUpdate = __importStar(require(\\"./sendWorkspaceSubmissionUpdate\\"));
exports.storeTracedTestCase = __importStar(require(\\"./storeTracedTestCase\\"));
exports.storeTracedTestCaseV2 = __importStar(require(\\"./storeTracedTestCaseV2\\"));
exports.storeTracedWorkspace = __importStar(require(\\"./storeTracedWorkspace\\"));
exports.storeTracedWorkspaceV2 = __importStar(require(\\"./storeTracedWorkspaceV2\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../..\\";
export interface StoreTracedTestCaseRequest {
    someQueryParam?: string;
    referenceToOptionalString?: TraceApi.OptionalString;
    result: TraceApi.TestCaseResultWithStdout;
    traceResponses: TraceApi.TraceResponse[];
}
",
                            "name": "StoreTracedTestCaseRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "StoreTracedTestCaseRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../..\\";
export interface StoreTracedWorkspaceRequest {
    workspaceRunDetails: TraceApi.WorkspaceRunDetails;
    traceResponses: TraceApi.TraceResponse[];
}
",
                            "name": "StoreTracedWorkspaceRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "StoreTracedWorkspaceRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { StoreTracedTestCaseRequest } from \\"./StoreTracedTestCaseRequest\\";
export { StoreTracedWorkspaceRequest } from \\"./StoreTracedWorkspaceRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.sendTestSubmissionUpdate.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.sendTestSubmissionUpdate.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.sendTestSubmissionUpdate.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.sendTestSubmissionUpdate.Error, visitor: TraceApi.admin.sendTestSubmissionUpdate.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "sendTestSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.sendTestSubmissionUpdate.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "sendTestSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.sendWorkspaceSubmissionUpdate.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.sendWorkspaceSubmissionUpdate.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.sendWorkspaceSubmissionUpdate.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.sendWorkspaceSubmissionUpdate.Error, visitor: TraceApi.admin.sendWorkspaceSubmissionUpdate.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "sendWorkspaceSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.sendWorkspaceSubmissionUpdate.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "sendWorkspaceSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.storeTracedTestCase.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.storeTracedTestCase.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.storeTracedTestCase.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.storeTracedTestCase.Error, visitor: TraceApi.admin.storeTracedTestCase.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "storeTracedTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.storeTracedTestCase.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "storeTracedTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.storeTracedTestCaseV2.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.storeTracedTestCaseV2.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.storeTracedTestCaseV2.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.storeTracedTestCaseV2.Error, visitor: TraceApi.admin.storeTracedTestCaseV2.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "storeTracedTestCaseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.storeTracedTestCaseV2.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "storeTracedTestCaseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.storeTracedWorkspace.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.storeTracedWorkspace.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.storeTracedWorkspace.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.storeTracedWorkspace.Error, visitor: TraceApi.admin.storeTracedWorkspace.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "storeTracedWorkspace.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.storeTracedWorkspace.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "storeTracedWorkspace.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.storeTracedWorkspaceV2.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.storeTracedWorkspaceV2.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.storeTracedWorkspaceV2.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.storeTracedWorkspaceV2.Error, visitor: TraceApi.admin.storeTracedWorkspaceV2.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "storeTracedWorkspaceV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.storeTracedWorkspaceV2.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "storeTracedWorkspaceV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.updateTestSubmissionStatus.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.updateTestSubmissionStatus.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.updateTestSubmissionStatus.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.updateTestSubmissionStatus.Error, visitor: TraceApi.admin.updateTestSubmissionStatus.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "updateTestSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.updateTestSubmissionStatus.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "updateTestSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.admin.updateWorkspaceSubmissionStatus.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.admin.updateWorkspaceSubmissionStatus.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.admin.updateWorkspaceSubmissionStatus.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.admin.updateWorkspaceSubmissionStatus.Error, visitor: TraceApi.admin.updateWorkspaceSubmissionStatus.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "updateWorkspaceSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.admin.updateWorkspaceSubmissionStatus.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "updateWorkspaceSubmissionStatus.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type OptionalString = string | undefined;
",
                        "name": "OptionalString.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "OptionalString.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OptionalString\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./OptionalString\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "admin",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface BinaryTreeNodeAndTreeValue {
    nodeId: TraceApi.NodeId;
    fullTree: TraceApi.BinaryTreeValue;
}
",
                        "name": "BinaryTreeNodeAndTreeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BinaryTreeNodeAndTreeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface BinaryTreeNodeValue {
    nodeId: TraceApi.NodeId;
    val: number;
    right?: TraceApi.NodeId;
    left?: TraceApi.NodeId;
}
",
                        "name": "BinaryTreeNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BinaryTreeNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface BinaryTreeValue {
    root?: TraceApi.NodeId;
    nodes: Record<TraceApi.NodeId, TraceApi.BinaryTreeNodeValue | undefined>;
}
",
                        "name": "BinaryTreeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BinaryTreeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
/**
 * ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)
 */
export declare type Date = string & {
    Date: void;
};
export declare function Date(value: string): TraceApi.Date;
",
                        "name": "Date.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Date = void 0;
function Date(value) {
    return value;
}
exports.Date = Date;
",
                        "name": "Date.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface DebugKeyValuePairs {
    key: TraceApi.DebugVariableValue;
    value: TraceApi.DebugVariableValue;
}
",
                        "name": "DebugKeyValuePairs.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DebugKeyValuePairs.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface DebugMapValue {
    keyValuePairs: TraceApi.DebugKeyValuePairs[];
}
",
                        "name": "DebugMapValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DebugMapValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type DebugVariableValue = TraceApi.DebugVariableValue.IntegerValue | TraceApi.DebugVariableValue.BooleanValue | TraceApi.DebugVariableValue.DoubleValue | TraceApi.DebugVariableValue.StringValue | TraceApi.DebugVariableValue.CharValue | TraceApi.DebugVariableValue.MapValue | TraceApi.DebugVariableValue.ListValue | TraceApi.DebugVariableValue.BinaryTreeNodeValue | TraceApi.DebugVariableValue.SinglyLinkedListNodeValue | TraceApi.DebugVariableValue.DoublyLinkedListNodeValue | TraceApi.DebugVariableValue.UndefinedValue | TraceApi.DebugVariableValue.NullValue | TraceApi.DebugVariableValue.GenericValue | TraceApi.DebugVariableValue._Unknown;
export declare namespace DebugVariableValue {
    interface IntegerValue extends _Utils {
        type: \\"integerValue\\";
        value: number;
    }
    interface BooleanValue extends _Utils {
        type: \\"booleanValue\\";
        value: boolean;
    }
    interface DoubleValue extends _Utils {
        type: \\"doubleValue\\";
        value: number;
    }
    interface StringValue extends _Utils {
        type: \\"stringValue\\";
        value: string;
    }
    interface CharValue extends _Utils {
        type: \\"charValue\\";
        value: string;
    }
    interface MapValue extends TraceApi.DebugMapValue, _Utils {
        type: \\"mapValue\\";
    }
    interface ListValue extends _Utils {
        type: \\"listValue\\";
        value: TraceApi.DebugVariableValue[];
    }
    interface BinaryTreeNodeValue extends TraceApi.BinaryTreeNodeAndTreeValue, _Utils {
        type: \\"binaryTreeNodeValue\\";
    }
    interface SinglyLinkedListNodeValue extends TraceApi.SinglyLinkedListNodeAndListValue, _Utils {
        type: \\"singlyLinkedListNodeValue\\";
    }
    interface DoublyLinkedListNodeValue extends TraceApi.DoublyLinkedListNodeAndListValue, _Utils {
        type: \\"doublyLinkedListNodeValue\\";
    }
    interface UndefinedValue extends _Utils {
        type: \\"undefinedValue\\";
    }
    interface NullValue extends _Utils {
        type: \\"nullValue\\";
    }
    interface GenericValue extends TraceApi.GenericValue, _Utils {
        type: \\"genericValue\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.DebugVariableValue._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        integerValue: (value: number) => _Result;
        booleanValue: (value: boolean) => _Result;
        doubleValue: (value: number) => _Result;
        stringValue: (value: string) => _Result;
        charValue: (value: string) => _Result;
        mapValue: (value: TraceApi.DebugMapValue) => _Result;
        listValue: (value: TraceApi.DebugVariableValue[]) => _Result;
        binaryTreeNodeValue: (value: TraceApi.BinaryTreeNodeAndTreeValue) => _Result;
        singlyLinkedListNodeValue: (value: TraceApi.SinglyLinkedListNodeAndListValue) => _Result;
        doublyLinkedListNodeValue: (value: TraceApi.DoublyLinkedListNodeAndListValue) => _Result;
        undefinedValue: () => _Result;
        nullValue: () => _Result;
        genericValue: (value: TraceApi.GenericValue) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const DebugVariableValue: {
    readonly integerValue: (value: number) => TraceApi.DebugVariableValue.IntegerValue;
    readonly booleanValue: (value: boolean) => TraceApi.DebugVariableValue.BooleanValue;
    readonly doubleValue: (value: number) => TraceApi.DebugVariableValue.DoubleValue;
    readonly stringValue: (value: string) => TraceApi.DebugVariableValue.StringValue;
    readonly charValue: (value: string) => TraceApi.DebugVariableValue.CharValue;
    readonly mapValue: (value: TraceApi.DebugMapValue) => TraceApi.DebugVariableValue.MapValue;
    readonly listValue: (value: TraceApi.DebugVariableValue[]) => TraceApi.DebugVariableValue.ListValue;
    readonly binaryTreeNodeValue: (value: TraceApi.BinaryTreeNodeAndTreeValue) => TraceApi.DebugVariableValue.BinaryTreeNodeValue;
    readonly singlyLinkedListNodeValue: (value: TraceApi.SinglyLinkedListNodeAndListValue) => TraceApi.DebugVariableValue.SinglyLinkedListNodeValue;
    readonly doublyLinkedListNodeValue: (value: TraceApi.DoublyLinkedListNodeAndListValue) => TraceApi.DebugVariableValue.DoublyLinkedListNodeValue;
    readonly undefinedValue: () => TraceApi.DebugVariableValue.UndefinedValue;
    readonly nullValue: () => TraceApi.DebugVariableValue.NullValue;
    readonly genericValue: (value: TraceApi.GenericValue) => TraceApi.DebugVariableValue.GenericValue;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.DebugVariableValue._Unknown;
    readonly _visit: <_Result>(value: TraceApi.DebugVariableValue, visitor: TraceApi.DebugVariableValue._Visitor<_Result>) => _Result;
};
",
                        "name": "DebugVariableValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DebugVariableValue = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.DebugVariableValue = {
    integerValue: (value) => {
        return {
            value: value,
            type: \\"integerValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    booleanValue: (value) => {
        return {
            value: value,
            type: \\"booleanValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    doubleValue: (value) => {
        return {
            value: value,
            type: \\"doubleValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    stringValue: (value) => {
        return {
            value: value,
            type: \\"stringValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    charValue: (value) => {
        return {
            value: value,
            type: \\"charValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    mapValue: (value) => {
        return {
            ...value,
            type: \\"mapValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    listValue: (value) => {
        return {
            value: value,
            type: \\"listValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    binaryTreeNodeValue: (value) => {
        return {
            ...value,
            type: \\"binaryTreeNodeValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    singlyLinkedListNodeValue: (value) => {
        return {
            ...value,
            type: \\"singlyLinkedListNodeValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    doublyLinkedListNodeValue: (value) => {
        return {
            ...value,
            type: \\"doublyLinkedListNodeValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    undefinedValue: () => {
        return {
            type: \\"undefinedValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    nullValue: () => {
        return {
            type: \\"nullValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    genericValue: (value) => {
        return {
            ...value,
            type: \\"genericValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DebugVariableValue._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"integerValue\\":
                return visitor.integerValue(value.value);
            case \\"booleanValue\\":
                return visitor.booleanValue(value.value);
            case \\"doubleValue\\":
                return visitor.doubleValue(value.value);
            case \\"stringValue\\":
                return visitor.stringValue(value.value);
            case \\"charValue\\":
                return visitor.charValue(value.value);
            case \\"mapValue\\":
                return visitor.mapValue(value);
            case \\"listValue\\":
                return visitor.listValue(value.value);
            case \\"binaryTreeNodeValue\\":
                return visitor.binaryTreeNodeValue(value);
            case \\"singlyLinkedListNodeValue\\":
                return visitor.singlyLinkedListNodeValue(value);
            case \\"doublyLinkedListNodeValue\\":
                return visitor.doublyLinkedListNodeValue(value);
            case \\"undefinedValue\\":
                return visitor.undefinedValue();
            case \\"nullValue\\":
                return visitor.nullValue();
            case \\"genericValue\\":
                return visitor.genericValue(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "DebugVariableValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface DoublyLinkedListNodeAndListValue {
    nodeId: TraceApi.NodeId;
    fullList: TraceApi.DoublyLinkedListValue;
}
",
                        "name": "DoublyLinkedListNodeAndListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DoublyLinkedListNodeAndListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface DoublyLinkedListNodeValue {
    nodeId: TraceApi.NodeId;
    val: number;
    next?: TraceApi.NodeId;
    prev?: TraceApi.NodeId;
}
",
                        "name": "DoublyLinkedListNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DoublyLinkedListNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface DoublyLinkedListValue {
    head?: TraceApi.NodeId;
    nodes: Record<TraceApi.NodeId, TraceApi.DoublyLinkedListNodeValue | undefined>;
}
",
                        "name": "DoublyLinkedListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DoublyLinkedListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FileInfo {
    filename: string;
    contents: string;
}
",
                        "name": "FileInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FileInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GenericValue {
    stringifiedType?: string;
    stringifiedValue: string;
}
",
                        "name": "GenericValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GenericValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface KeyValuePair {
    key: TraceApi.VariableValue;
    value: TraceApi.VariableValue;
}
",
                        "name": "KeyValuePair.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "KeyValuePair.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * @example
 *     TraceApi.Language.Java
 */
export declare type Language = \\"JAVA\\" | \\"JAVASCRIPT\\" | \\"PYTHON\\";
export declare const Language: {
    readonly Java: \\"JAVA\\";
    readonly Javascript: \\"JAVASCRIPT\\";
    readonly Python: \\"PYTHON\\";
};
",
                        "name": "Language.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Language = void 0;
exports.Language = {
    Java: \\"JAVA\\",
    Javascript: \\"JAVASCRIPT\\",
    Python: \\"PYTHON\\",
};
",
                        "name": "Language.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ListType {
    valueType: TraceApi.VariableType;
    /** Whether this list is fixed-size (for languages that supports fixed-size lists). Defaults to false. */
    isFixedLength?: boolean;
}
",
                        "name": "ListType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ListType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface MapType {
    keyType: TraceApi.VariableType;
    valueType: TraceApi.VariableType;
}
",
                        "name": "MapType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface MapValue {
    keyValuePairs: TraceApi.KeyValuePair[];
}
",
                        "name": "MapValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type NodeId = string & {
    NodeId: void;
};
export declare function NodeId(value: string): TraceApi.NodeId;
",
                        "name": "NodeId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NodeId = void 0;
function NodeId(value) {
    return value;
}
exports.NodeId = NodeId;
",
                        "name": "NodeId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type ProblemId = string & {
    ProblemId: void;
};
export declare function ProblemId(value: string): TraceApi.ProblemId;
",
                        "name": "ProblemId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemId = void 0;
function ProblemId(value) {
    return value;
}
exports.ProblemId = ProblemId;
",
                        "name": "ProblemId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * @example
 *     {
 *         \\"foo\\": \\"hello\\",
 *         \\"bar\\": {
 *             \\"yo\\": 123
 *         }
 *     }
 */
export declare type RandomUnknownType = unknown;
",
                        "name": "RandomUnknownType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RandomUnknownType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface SinglyLinkedListNodeAndListValue {
    nodeId: TraceApi.NodeId;
    fullList: TraceApi.SinglyLinkedListValue;
}
",
                        "name": "SinglyLinkedListNodeAndListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SinglyLinkedListNodeAndListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface SinglyLinkedListNodeValue {
    nodeId: TraceApi.NodeId;
    val: number;
    next?: TraceApi.NodeId;
}
",
                        "name": "SinglyLinkedListNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SinglyLinkedListNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface SinglyLinkedListValue {
    head?: TraceApi.NodeId;
    nodes: Record<TraceApi.NodeId, TraceApi.SinglyLinkedListNodeValue | undefined>;
}
",
                        "name": "SinglyLinkedListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SinglyLinkedListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestCase {
    id: string;
    params: TraceApi.VariableValue[];
}
",
                        "name": "TestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestCaseWithExpectedResult {
    testCase: TraceApi.TestCase;
    expectedResult: TraceApi.VariableValue;
}
",
                        "name": "TestCaseWithExpectedResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseWithExpectedResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
/**
 * @example
 *     TraceApi.UserId(\\"user12345\\")
 */
export declare type UserId = string & {
    UserId: void;
};
export declare function UserId(value: string): TraceApi.UserId;
",
                        "name": "UserId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UserId = void 0;
function UserId(value) {
    return value;
}
exports.UserId = UserId;
",
                        "name": "UserId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type VariableType = TraceApi.VariableType.MemberWithColon | TraceApi.VariableType.IntegerType | TraceApi.VariableType.DoubleType | TraceApi.VariableType.BooleanType | TraceApi.VariableType.StringType | TraceApi.VariableType.CharType | TraceApi.VariableType.ListType | TraceApi.VariableType.MapType | TraceApi.VariableType.BinaryTreeType | TraceApi.VariableType.SinglyLinkedListType | TraceApi.VariableType.DoublyLinkedListType | TraceApi.VariableType._Unknown;
export declare namespace VariableType {
    interface MemberWithColon extends _Utils {
        type: \\"member:with:colon\\";
    }
    interface IntegerType extends _Utils {
        type: \\"integerType\\";
    }
    interface DoubleType extends _Utils {
        type: \\"doubleType\\";
    }
    interface BooleanType extends _Utils {
        type: \\"booleanType\\";
    }
    interface StringType extends _Utils {
        type: \\"stringType\\";
    }
    interface CharType extends _Utils {
        type: \\"charType\\";
    }
    interface ListType extends TraceApi.ListType, _Utils {
        type: \\"listType\\";
    }
    interface MapType extends TraceApi.MapType, _Utils {
        type: \\"mapType\\";
    }
    interface BinaryTreeType extends _Utils {
        type: \\"binaryTreeType\\";
    }
    interface SinglyLinkedListType extends _Utils {
        type: \\"singlyLinkedListType\\";
    }
    interface DoublyLinkedListType extends _Utils {
        type: \\"doublyLinkedListType\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.VariableType._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        memberWithColon: () => _Result;
        integerType: () => _Result;
        doubleType: () => _Result;
        booleanType: () => _Result;
        stringType: () => _Result;
        charType: () => _Result;
        listType: (value: TraceApi.ListType) => _Result;
        mapType: (value: TraceApi.MapType) => _Result;
        binaryTreeType: () => _Result;
        singlyLinkedListType: () => _Result;
        doublyLinkedListType: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const VariableType: {
    readonly memberWithColon: () => TraceApi.VariableType.MemberWithColon;
    readonly integerType: () => TraceApi.VariableType.IntegerType;
    readonly doubleType: () => TraceApi.VariableType.DoubleType;
    readonly booleanType: () => TraceApi.VariableType.BooleanType;
    readonly stringType: () => TraceApi.VariableType.StringType;
    readonly charType: () => TraceApi.VariableType.CharType;
    readonly listType: (value: TraceApi.ListType) => TraceApi.VariableType.ListType;
    readonly mapType: (value: TraceApi.MapType) => TraceApi.VariableType.MapType;
    readonly binaryTreeType: () => TraceApi.VariableType.BinaryTreeType;
    readonly singlyLinkedListType: () => TraceApi.VariableType.SinglyLinkedListType;
    readonly doublyLinkedListType: () => TraceApi.VariableType.DoublyLinkedListType;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.VariableType._Unknown;
    readonly _visit: <_Result>(value: TraceApi.VariableType, visitor: TraceApi.VariableType._Visitor<_Result>) => _Result;
};
",
                        "name": "VariableType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableType = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.VariableType = {
    memberWithColon: () => {
        return {
            type: \\"member:with:colon\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    integerType: () => {
        return {
            type: \\"integerType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    doubleType: () => {
        return {
            type: \\"doubleType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    booleanType: () => {
        return {
            type: \\"booleanType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    stringType: () => {
        return {
            type: \\"stringType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    charType: () => {
        return {
            type: \\"charType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    listType: (value) => {
        return {
            ...value,
            type: \\"listType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    mapType: (value) => {
        return {
            ...value,
            type: \\"mapType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    binaryTreeType: () => {
        return {
            type: \\"binaryTreeType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    singlyLinkedListType: () => {
        return {
            type: \\"singlyLinkedListType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    doublyLinkedListType: () => {
        return {
            type: \\"doublyLinkedListType\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableType._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"member:with:colon\\":
                return visitor.memberWithColon();
            case \\"integerType\\":
                return visitor.integerType();
            case \\"doubleType\\":
                return visitor.doubleType();
            case \\"booleanType\\":
                return visitor.booleanType();
            case \\"stringType\\":
                return visitor.stringType();
            case \\"charType\\":
                return visitor.charType();
            case \\"listType\\":
                return visitor.listType(value);
            case \\"mapType\\":
                return visitor.mapType(value);
            case \\"binaryTreeType\\":
                return visitor.binaryTreeType();
            case \\"singlyLinkedListType\\":
                return visitor.singlyLinkedListType();
            case \\"doublyLinkedListType\\":
                return visitor.doublyLinkedListType();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "VariableType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type VariableValue = TraceApi.VariableValue.IntegerValue | TraceApi.VariableValue.BooleanValue | TraceApi.VariableValue.DoubleValue | TraceApi.VariableValue.StringValue | TraceApi.VariableValue.CharValue | TraceApi.VariableValue.MapValue | TraceApi.VariableValue.ListValue | TraceApi.VariableValue.BinaryTreeValue | TraceApi.VariableValue.SinglyLinkedListValue | TraceApi.VariableValue.DoublyLinkedListValue | TraceApi.VariableValue.NullValue | TraceApi.VariableValue._Unknown;
export declare namespace VariableValue {
    interface IntegerValue extends _Utils {
        type: \\"integerValue\\";
        value: number;
    }
    interface BooleanValue extends _Utils {
        type: \\"booleanValue\\";
        value: boolean;
    }
    interface DoubleValue extends _Utils {
        type: \\"doubleValue\\";
        value: number;
    }
    interface StringValue extends _Utils {
        type: \\"stringValue\\";
        value: string;
    }
    interface CharValue extends _Utils {
        type: \\"charValue\\";
        value: string;
    }
    interface MapValue extends TraceApi.MapValue, _Utils {
        type: \\"mapValue\\";
    }
    interface ListValue extends _Utils {
        type: \\"listValue\\";
        value: TraceApi.VariableValue[];
    }
    interface BinaryTreeValue extends TraceApi.BinaryTreeValue, _Utils {
        type: \\"binaryTreeValue\\";
    }
    interface SinglyLinkedListValue extends TraceApi.SinglyLinkedListValue, _Utils {
        type: \\"singlyLinkedListValue\\";
    }
    interface DoublyLinkedListValue extends TraceApi.DoublyLinkedListValue, _Utils {
        type: \\"doublyLinkedListValue\\";
    }
    interface NullValue extends _Utils {
        type: \\"nullValue\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.VariableValue._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        integerValue: (value: number) => _Result;
        booleanValue: (value: boolean) => _Result;
        doubleValue: (value: number) => _Result;
        stringValue: (value: string) => _Result;
        charValue: (value: string) => _Result;
        mapValue: (value: TraceApi.MapValue) => _Result;
        listValue: (value: TraceApi.VariableValue[]) => _Result;
        binaryTreeValue: (value: TraceApi.BinaryTreeValue) => _Result;
        singlyLinkedListValue: (value: TraceApi.SinglyLinkedListValue) => _Result;
        doublyLinkedListValue: (value: TraceApi.DoublyLinkedListValue) => _Result;
        nullValue: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const VariableValue: {
    readonly integerValue: (value: number) => TraceApi.VariableValue.IntegerValue;
    readonly booleanValue: (value: boolean) => TraceApi.VariableValue.BooleanValue;
    readonly doubleValue: (value: number) => TraceApi.VariableValue.DoubleValue;
    readonly stringValue: (value: string) => TraceApi.VariableValue.StringValue;
    readonly charValue: (value: string) => TraceApi.VariableValue.CharValue;
    readonly mapValue: (value: TraceApi.MapValue) => TraceApi.VariableValue.MapValue;
    readonly listValue: (value: TraceApi.VariableValue[]) => TraceApi.VariableValue.ListValue;
    readonly binaryTreeValue: (value: TraceApi.BinaryTreeValue) => TraceApi.VariableValue.BinaryTreeValue;
    readonly singlyLinkedListValue: (value: TraceApi.SinglyLinkedListValue) => TraceApi.VariableValue.SinglyLinkedListValue;
    readonly doublyLinkedListValue: (value: TraceApi.DoublyLinkedListValue) => TraceApi.VariableValue.DoublyLinkedListValue;
    readonly nullValue: () => TraceApi.VariableValue.NullValue;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.VariableValue._Unknown;
    readonly _visit: <_Result>(value: TraceApi.VariableValue, visitor: TraceApi.VariableValue._Visitor<_Result>) => _Result;
};
",
                        "name": "VariableValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableValue = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.VariableValue = {
    integerValue: (value) => {
        return {
            value: value,
            type: \\"integerValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    booleanValue: (value) => {
        return {
            value: value,
            type: \\"booleanValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    doubleValue: (value) => {
        return {
            value: value,
            type: \\"doubleValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    stringValue: (value) => {
        return {
            value: value,
            type: \\"stringValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    charValue: (value) => {
        return {
            value: value,
            type: \\"charValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    mapValue: (value) => {
        return {
            ...value,
            type: \\"mapValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    listValue: (value) => {
        return {
            value: value,
            type: \\"listValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    binaryTreeValue: (value) => {
        return {
            ...value,
            type: \\"binaryTreeValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    singlyLinkedListValue: (value) => {
        return {
            ...value,
            type: \\"singlyLinkedListValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    doublyLinkedListValue: (value) => {
        return {
            ...value,
            type: \\"doublyLinkedListValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    nullValue: () => {
        return {
            type: \\"nullValue\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.VariableValue._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"integerValue\\":
                return visitor.integerValue(value.value);
            case \\"booleanValue\\":
                return visitor.booleanValue(value.value);
            case \\"doubleValue\\":
                return visitor.doubleValue(value.value);
            case \\"stringValue\\":
                return visitor.stringValue(value.value);
            case \\"charValue\\":
                return visitor.charValue(value.value);
            case \\"mapValue\\":
                return visitor.mapValue(value);
            case \\"listValue\\":
                return visitor.listValue(value.value);
            case \\"binaryTreeValue\\":
                return visitor.binaryTreeValue(value);
            case \\"singlyLinkedListValue\\":
                return visitor.singlyLinkedListValue(value);
            case \\"doublyLinkedListValue\\":
                return visitor.doublyLinkedListValue(value);
            case \\"nullValue\\":
                return visitor.nullValue();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "VariableValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./UserId\\";
export * from \\"./ProblemId\\";
export * from \\"./NodeId\\";
export * from \\"./VariableType\\";
export * from \\"./ListType\\";
export * from \\"./MapType\\";
export * from \\"./VariableValue\\";
export * from \\"./DebugVariableValue\\";
export * from \\"./GenericValue\\";
export * from \\"./MapValue\\";
export * from \\"./KeyValuePair\\";
export * from \\"./BinaryTreeValue\\";
export * from \\"./BinaryTreeNodeValue\\";
export * from \\"./BinaryTreeNodeAndTreeValue\\";
export * from \\"./SinglyLinkedListValue\\";
export * from \\"./SinglyLinkedListNodeValue\\";
export * from \\"./SinglyLinkedListNodeAndListValue\\";
export * from \\"./DoublyLinkedListValue\\";
export * from \\"./DoublyLinkedListNodeValue\\";
export * from \\"./DoublyLinkedListNodeAndListValue\\";
export * from \\"./DebugMapValue\\";
export * from \\"./DebugKeyValuePairs\\";
export * from \\"./TestCase\\";
export * from \\"./TestCaseWithExpectedResult\\";
export * from \\"./FileInfo\\";
export * from \\"./Language\\";
export * from \\"./RandomUnknownType\\";
export * from \\"./Date\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./UserId\\"), exports);
__exportStar(require(\\"./ProblemId\\"), exports);
__exportStar(require(\\"./NodeId\\"), exports);
__exportStar(require(\\"./VariableType\\"), exports);
__exportStar(require(\\"./ListType\\"), exports);
__exportStar(require(\\"./MapType\\"), exports);
__exportStar(require(\\"./VariableValue\\"), exports);
__exportStar(require(\\"./DebugVariableValue\\"), exports);
__exportStar(require(\\"./GenericValue\\"), exports);
__exportStar(require(\\"./MapValue\\"), exports);
__exportStar(require(\\"./KeyValuePair\\"), exports);
__exportStar(require(\\"./BinaryTreeValue\\"), exports);
__exportStar(require(\\"./BinaryTreeNodeValue\\"), exports);
__exportStar(require(\\"./BinaryTreeNodeAndTreeValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListNodeValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListNodeAndListValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListNodeValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListNodeAndListValue\\"), exports);
__exportStar(require(\\"./DebugMapValue\\"), exports);
__exportStar(require(\\"./DebugKeyValuePairs\\"), exports);
__exportStar(require(\\"./TestCase\\"), exports);
__exportStar(require(\\"./TestCaseWithExpectedResult\\"), exports);
__exportStar(require(\\"./FileInfo\\"), exports);
__exportStar(require(\\"./Language\\"), exports);
__exportStar(require(\\"./RandomUnknownType\\"), exports);
__exportStar(require(\\"./Date\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Homepage {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Homepage {
    private readonly options;
    constructor(options: Homepage.Options);
    getHomepageProblems(): Promise<core.APIResponse<TraceApi.ProblemId[], TraceApi.homepage.getHomepageProblems.Error>>;
    setHomepageProblems(request: TraceApi.ProblemId[]): Promise<core.APIResponse<void, TraceApi.homepage.setHomepageProblems.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Homepage = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const url_join_1 = __importDefault(require(\\"url-join\\"));
const serializers = __importStar(require(\\"../../../../serialization\\"));
class Homepage {
    options;
    constructor(options) {
        this.options = options;
    }
    async getHomepageProblems() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/homepage-problems\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.homepage.getHomepageProblems.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.homepage.getHomepageProblems.Error._unknown(_response.error),
        };
    }
    async setHomepageProblems(request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/homepage-problems\\"),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.homepage.setHomepageProblems.Request.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.homepage.setHomepageProblems.Error._unknown(_response.error),
        };
    }
}
exports.Homepage = Homepage;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.homepage.getHomepageProblems.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.homepage.getHomepageProblems.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.homepage.getHomepageProblems.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.homepage.getHomepageProblems.Error, visitor: TraceApi.homepage.getHomepageProblems.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getHomepageProblems.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.homepage.getHomepageProblems.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getHomepageProblems.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getHomepageProblems from \\"./getHomepageProblems\\";
export * as setHomepageProblems from \\"./setHomepageProblems\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.setHomepageProblems = exports.getHomepageProblems = void 0;
exports.getHomepageProblems = __importStar(require(\\"./getHomepageProblems\\"));
exports.setHomepageProblems = __importStar(require(\\"./setHomepageProblems\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.homepage.setHomepageProblems.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.homepage.setHomepageProblems.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.homepage.setHomepageProblems.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.homepage.setHomepageProblems.Error, visitor: TraceApi.homepage.setHomepageProblems.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "setHomepageProblems.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.homepage.setHomepageProblems.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "setHomepageProblems.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "homepage",
                "type": "directory",
              },
              Object {
                "contents": "export * as admin from \\"./admin\\";
export * from \\"./admin/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as langServer from \\"./langServer\\";
export * from \\"./langServer/types\\";
export * as migration from \\"./migration\\";
export * from \\"./migration/types\\";
export * as playlist from \\"./playlist\\";
export * from \\"./playlist/types\\";
export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as submission from \\"./submission\\";
export * from \\"./submission/types\\";
export * as v2 from \\"./v2\\";
export * as homepage from \\"./homepage\\";
export * as sysprop from \\"./sysprop\\";
export * from \\"./admin/client/requests\\";
export * from \\"./playlist/client/requests\\";
export * from \\"./problem/client/requests\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.sysprop = exports.homepage = exports.v2 = exports.submission = exports.problem = exports.playlist = exports.migration = exports.langServer = exports.commons = exports.admin = void 0;
exports.admin = __importStar(require(\\"./admin\\"));
__exportStar(require(\\"./admin/types\\"), exports);
exports.commons = __importStar(require(\\"./commons\\"));
__exportStar(require(\\"./commons/types\\"), exports);
exports.langServer = __importStar(require(\\"./langServer\\"));
__exportStar(require(\\"./langServer/types\\"), exports);
exports.migration = __importStar(require(\\"./migration\\"));
__exportStar(require(\\"./migration/types\\"), exports);
exports.playlist = __importStar(require(\\"./playlist\\"));
__exportStar(require(\\"./playlist/types\\"), exports);
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
exports.submission = __importStar(require(\\"./submission\\"));
__exportStar(require(\\"./submission/types\\"), exports);
exports.v2 = __importStar(require(\\"./v2\\"));
exports.homepage = __importStar(require(\\"./homepage\\"));
exports.sysprop = __importStar(require(\\"./sysprop\\"));
__exportStar(require(\\"./admin/client/requests\\"), exports);
__exportStar(require(\\"./playlist/client/requests\\"), exports);
__exportStar(require(\\"./problem/client/requests\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface LangServerRequest {
    request?: unknown;
}
",
                        "name": "LangServerRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "LangServerRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface LangServerResponse {
    response?: unknown;
}
",
                        "name": "LangServerResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "LangServerResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./LangServerRequest\\";
export * from \\"./LangServerResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./LangServerRequest\\"), exports);
__exportStar(require(\\"./LangServerResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "langServer",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Migration {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Migration {
    private readonly options;
    constructor(options: Migration.Options);
    getAttemptedMigrations(): Promise<core.APIResponse<TraceApi.Migration[], TraceApi.migration.getAttemptedMigrations.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Migration = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const url_join_1 = __importDefault(require(\\"url-join\\"));
const serializers = __importStar(require(\\"../../../../serialization\\"));
class Migration {
    options;
    constructor(options) {
        this.options = options;
    }
    async getAttemptedMigrations() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/migration-info/all\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.migration.getAttemptedMigrations.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.migration.getAttemptedMigrations.Error._unknown(_response.error),
        };
    }
}
exports.Migration = Migration;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.migration.getAttemptedMigrations.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.migration.getAttemptedMigrations.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.migration.getAttemptedMigrations.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.migration.getAttemptedMigrations.Error, visitor: TraceApi.migration.getAttemptedMigrations.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getAttemptedMigrations.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.migration.getAttemptedMigrations.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getAttemptedMigrations.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getAttemptedMigrations from \\"./getAttemptedMigrations\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getAttemptedMigrations = void 0;
exports.getAttemptedMigrations = __importStar(require(\\"./getAttemptedMigrations\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface Migration {
    name: string;
    status: TraceApi.MigrationStatus;
}
",
                        "name": "Migration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Migration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type MigrationStatus = \\"RUNNING\\" | \\"FAILED\\" | \\"FINISHED\\";
export declare const MigrationStatus: {
    readonly Running: \\"RUNNING\\";
    readonly Failed: \\"FAILED\\";
    readonly Finished: \\"FINISHED\\";
};
",
                        "name": "MigrationStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MigrationStatus = void 0;
exports.MigrationStatus = {
    Running: \\"RUNNING\\",
    Failed: \\"FAILED\\",
    Finished: \\"FINISHED\\",
};
",
                        "name": "MigrationStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./MigrationStatus\\";
export * from \\"./Migration\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./MigrationStatus\\"), exports);
__exportStar(require(\\"./Migration\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "migration",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Playlist {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Playlist {
    private readonly options;
    constructor(options: Playlist.Options);
    /**
     * Create a new playlist
     */
    createPlaylist(serviceParam: number, request: TraceApi.PlaylistCreateRequestWrapper): Promise<core.APIResponse<TraceApi.Playlist, TraceApi.playlist.createPlaylist.Error>>;
    /**
     * Returns the user's playlists
     */
    getPlaylists(serviceParam: number, request: TraceApi.GetPlaylistsRequest): Promise<core.APIResponse<TraceApi.Playlist[], TraceApi.playlist.getPlaylists.Error>>;
    /**
     * Returns a playlist
     */
    getPlaylist(serviceParam: number, playlistId: TraceApi.PlaylistId, request?: TraceApi.GetPlaylistRequest): Promise<core.APIResponse<TraceApi.Playlist, TraceApi.playlist.getPlaylist.Error>>;
    /**
     * Updates a playlist
     */
    updatePlaylist(serviceParam: number, playlistId: TraceApi.PlaylistId, request?: TraceApi.UpdatePlaylistRequest): Promise<core.APIResponse<TraceApi.Playlist | undefined, TraceApi.playlist.updatePlaylist.Error>>;
    /**
     * Deletes a playlist
     */
    deletePlaylist(serviceParam: number, playlistId: TraceApi.PlaylistId): Promise<core.APIResponse<void, TraceApi.playlist.deletePlaylist.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Playlist = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const url_join_1 = __importDefault(require(\\"url-join\\"));
const serializers = __importStar(require(\\"../../../../serialization\\"));
class Playlist {
    options;
    constructor(options) {
        this.options = options;
    }
    /**
     * Create a new playlist
     */
    async createPlaylist(serviceParam, request) {
        const { multiple, multipleOptional, aliasQueryParam, body: _body } = request;
        const _queryParams = new URLSearchParams();
        if (Array.isArray(multiple)) {
            for (const _item of multiple) {
                _queryParams.append(\\"multiple\\", _item.toString());
            }
        }
        else {
            _queryParams.append(\\"multiple\\", multiple.toString());
        }
        if (multipleOptional != null) {
            if (Array.isArray(multipleOptional)) {
                for (const _item of multipleOptional) {
                    _queryParams.append(\\"multipleOptional\\", _item.toString());
                }
            }
            else {
                _queryParams.append(\\"multipleOptional\\", multipleOptional.toString());
            }
        }
        _queryParams.append(\\"aliasQueryParam\\", aliasQueryParam.toString());
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/create\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            queryParameters: _queryParams,
            body: await serializers.PlaylistCreateRequest.jsonOrThrow(_body),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.Playlist.parseOrThrow(_response.body, {
                    allowUnknownKeys: true,
                }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.playlist.createPlaylist.Error._unknown(_response.error),
        };
    }
    /**
     * Returns the user's playlists
     */
    async getPlaylists(serviceParam, request) {
        const { limit, otherField } = request;
        const _queryParams = new URLSearchParams();
        if (limit != null) {
            _queryParams.append(\\"limit\\", limit.toString());
        }
        _queryParams.append(\\"otherField\\", otherField);
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/all\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            queryParameters: _queryParams,
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.playlist.getPlaylists.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.playlist.getPlaylists.Error._unknown(_response.error),
        };
    }
    /**
     * Returns a playlist
     */
    async getPlaylist(serviceParam, playlistId, request = {}) {
        const { optionalQueryParam } = request;
        const _queryParams = new URLSearchParams();
        if (optionalQueryParam != null) {
            _queryParams.append(\\"optionalQueryParam\\", optionalQueryParam.toString());
        }
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/\${await serializers.PlaylistId.jsonOrThrow(playlistId)}\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            queryParameters: _queryParams,
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.Playlist.parseOrThrow(_response.body, {
                    allowUnknownKeys: true,
                }),
            };
        }
        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.body?.errorName) {
                case \\"PlaylistIdNotFoundError\\":
                case \\"UnauthorizedError\\":
                    return {
                        ok: false,
                        error: await serializers.playlist.getPlaylist.Error.parseOrThrow(_response.error.body, { allowUnknownKeys: true }),
                    };
            }
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.playlist.getPlaylist.Error._unknown(_response.error),
        };
    }
    /**
     * Updates a playlist
     */
    async updatePlaylist(serviceParam, playlistId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/\${await serializers.PlaylistId.jsonOrThrow(playlistId)}\`),
            method: \\"PUT\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.playlist.updatePlaylist.Request.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.playlist.updatePlaylist.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        if (_response.error.reason === \\"status-code\\") {
            switch (_response.error.body?.errorName) {
                case \\"PlaylistIdNotFoundError\\":
                    return {
                        ok: false,
                        error: await serializers.playlist.updatePlaylist.Error.parseOrThrow(_response.error.body, { allowUnknownKeys: true }),
                    };
            }
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.playlist.updatePlaylist.Error._unknown(_response.error),
        };
    }
    /**
     * Deletes a playlist
     */
    async deletePlaylist(serviceParam, playlistId) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/\${await serializers.PlaylistId.jsonOrThrow(playlistId)}\`),
            method: \\"DELETE\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.playlist.deletePlaylist.Error._unknown(_response.error),
        };
    }
}
exports.Playlist = Playlist;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.playlist.createPlaylist.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.playlist.createPlaylist.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.playlist.createPlaylist.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.playlist.createPlaylist.Error, visitor: TraceApi.playlist.createPlaylist.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "createPlaylist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.createPlaylist.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "createPlaylist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.playlist.deletePlaylist.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.playlist.deletePlaylist.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.playlist.deletePlaylist.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.playlist.deletePlaylist.Error, visitor: TraceApi.playlist.deletePlaylist.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "deletePlaylist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.deletePlaylist.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "deletePlaylist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.playlist.getPlaylist.Error.PlaylistIdNotFoundError | TraceApi.playlist.getPlaylist.Error.UnauthorizedError | TraceApi.playlist.getPlaylist.Error._Unknown;
export declare namespace Error {
    interface PlaylistIdNotFoundError extends _Utils {
        errorName: \\"PlaylistIdNotFoundError\\";
        content: TraceApi.PlaylistIdNotFoundErrorBody;
    }
    interface UnauthorizedError extends _Utils {
        errorName: \\"UnauthorizedError\\";
    }
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.playlist.getPlaylist.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        playlistIdNotFoundError: (value: TraceApi.PlaylistIdNotFoundErrorBody) => _Result;
        unauthorizedError: () => _Result;
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly playlistIdNotFoundError: (value: TraceApi.PlaylistIdNotFoundErrorBody) => TraceApi.playlist.getPlaylist.Error.PlaylistIdNotFoundError;
    readonly unauthorizedError: () => TraceApi.playlist.getPlaylist.Error.UnauthorizedError;
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.playlist.getPlaylist.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.playlist.getPlaylist.Error, visitor: TraceApi.playlist.getPlaylist.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getPlaylist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    playlistIdNotFoundError: (value) => {
        return {
            content: value,
            errorName: \\"PlaylistIdNotFoundError\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.getPlaylist.Error._visit(this, visitor);
            },
        };
    },
    unauthorizedError: () => {
        return {
            errorName: \\"UnauthorizedError\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.getPlaylist.Error._visit(this, visitor);
            },
        };
    },
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.getPlaylist.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            case \\"PlaylistIdNotFoundError\\":
                return visitor.playlistIdNotFoundError(value.content);
            case \\"UnauthorizedError\\":
                return visitor.unauthorizedError();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getPlaylist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.playlist.getPlaylists.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.playlist.getPlaylists.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.playlist.getPlaylists.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.playlist.getPlaylists.Error, visitor: TraceApi.playlist.getPlaylists.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getPlaylists.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.getPlaylists.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getPlaylists.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
export * as createPlaylist from \\"./createPlaylist\\";
export * as getPlaylists from \\"./getPlaylists\\";
export * as getPlaylist from \\"./getPlaylist\\";
export * as updatePlaylist from \\"./updatePlaylist\\";
export * as deletePlaylist from \\"./deletePlaylist\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.deletePlaylist = exports.updatePlaylist = exports.getPlaylist = exports.getPlaylists = exports.createPlaylist = void 0;
__exportStar(require(\\"./requests\\"), exports);
exports.createPlaylist = __importStar(require(\\"./createPlaylist\\"));
exports.getPlaylists = __importStar(require(\\"./getPlaylists\\"));
exports.getPlaylist = __importStar(require(\\"./getPlaylist\\"));
exports.updatePlaylist = __importStar(require(\\"./updatePlaylist\\"));
exports.deletePlaylist = __importStar(require(\\"./deletePlaylist\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GetPlaylistRequest {
    optionalQueryParam?: number;
}
",
                            "name": "GetPlaylistRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "GetPlaylistRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GetPlaylistsRequest {
    limit?: number;
    otherField: string;
}
",
                            "name": "GetPlaylistsRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "GetPlaylistsRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../..\\";
export interface PlaylistCreateRequestWrapper {
    multiple: number | number[];
    multipleOptional?: boolean | boolean[];
    aliasQueryParam: TraceApi.PlaylistId;
    body: TraceApi.PlaylistCreateRequest;
}
",
                            "name": "PlaylistCreateRequestWrapper.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "PlaylistCreateRequestWrapper.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { PlaylistCreateRequestWrapper } from \\"./PlaylistCreateRequestWrapper\\";
export { GetPlaylistsRequest } from \\"./GetPlaylistsRequest\\";
export { GetPlaylistRequest } from \\"./GetPlaylistRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.playlist.updatePlaylist.Error.PlaylistIdNotFoundError | TraceApi.playlist.updatePlaylist.Error._Unknown;
export declare namespace Error {
    interface PlaylistIdNotFoundError extends _Utils {
        errorName: \\"PlaylistIdNotFoundError\\";
        content: TraceApi.PlaylistIdNotFoundErrorBody;
    }
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.playlist.updatePlaylist.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        playlistIdNotFoundError: (value: TraceApi.PlaylistIdNotFoundErrorBody) => _Result;
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly playlistIdNotFoundError: (value: TraceApi.PlaylistIdNotFoundErrorBody) => TraceApi.playlist.updatePlaylist.Error.PlaylistIdNotFoundError;
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.playlist.updatePlaylist.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.playlist.updatePlaylist.Error, visitor: TraceApi.playlist.updatePlaylist.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "updatePlaylist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    playlistIdNotFoundError: (value) => {
        return {
            content: value,
            errorName: \\"PlaylistIdNotFoundError\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.updatePlaylist.Error._visit(this, visitor);
            },
        };
    },
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.playlist.updatePlaylist.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            case \\"PlaylistIdNotFoundError\\":
                return visitor.playlistIdNotFoundError(value.content);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "updatePlaylist.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type Color = \\"RED\\" | \\"BLUE\\";
export declare const Color: {
    readonly Red: \\"RED\\";
    readonly Blue: \\"BLUE\\";
};
",
                        "name": "Color.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Color = void 0;
exports.Color = {
    Red: \\"RED\\",
    Blue: \\"BLUE\\",
};
",
                        "name": "Color.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type DateUnion = TraceApi.DateUnion.Date_ | TraceApi.DateUnion.Datetime | TraceApi.DateUnion._Unknown;
export declare namespace DateUnion {
    interface Date_ extends _Utils {
        type: \\"date\\";
        value: TraceApi.Date;
    }
    interface Datetime extends _Utils {
        type: \\"datetime\\";
        value: Date;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.DateUnion._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        date: (value: TraceApi.Date) => _Result;
        datetime: (value: Date) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const DateUnion: {
    readonly date: (value: TraceApi.Date) => TraceApi.DateUnion.Date_;
    readonly datetime: (value: Date) => TraceApi.DateUnion.Datetime;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.DateUnion._Unknown;
    readonly _visit: <_Result>(value: TraceApi.DateUnion, visitor: TraceApi.DateUnion._Visitor<_Result>) => _Result;
};
",
                        "name": "DateUnion.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DateUnion = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.DateUnion = {
    date: (value) => {
        return {
            value: value,
            type: \\"date\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DateUnion._visit(this, visitor);
            },
        };
    },
    datetime: (value) => {
        return {
            value: value,
            type: \\"datetime\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DateUnion._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.DateUnion._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"date\\":
                return visitor.date(value.value);
            case \\"datetime\\":
                return visitor.datetime(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "DateUnion.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
/**
 * @example
 *     {
 *         [TraceApi.Color.Red]: true
 *     }
 */
export declare type MapWithEnumKey = Record<TraceApi.Color, boolean | undefined>;
",
                        "name": "MapWithEnumKey.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapWithEnumKey.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
/**
 * @example
 *     {
 *         [TraceApi.Color.Red]: true
 *     }
 */
export declare type MapWithEnumKeyAndOptionalValue = Record<TraceApi.Color, boolean | undefined>;
",
                        "name": "MapWithEnumKeyAndOptionalValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapWithEnumKeyAndOptionalValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface Playlist extends TraceApi.PlaylistCreateRequest {
    playlistId: TraceApi.PlaylistId;
    ownerId: TraceApi.UserId;
}
",
                        "name": "Playlist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Playlist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface PlaylistCreateRequest {
    name: string;
    problems: TraceApi.ProblemId[];
}
",
                        "name": "PlaylistCreateRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlaylistCreateRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type PlaylistId = number;
",
                        "name": "PlaylistId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlaylistId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type PlaylistIdNotFoundErrorBody = TraceApi.PlaylistIdNotFoundErrorBody.PlaylistId | TraceApi.PlaylistIdNotFoundErrorBody._Unknown;
export declare namespace PlaylistIdNotFoundErrorBody {
    interface PlaylistId extends _Utils {
        type: \\"playlistId\\";
        value: TraceApi.PlaylistId;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.PlaylistIdNotFoundErrorBody._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        playlistId: (value: TraceApi.PlaylistId) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const PlaylistIdNotFoundErrorBody: {
    readonly playlistId: (value: TraceApi.PlaylistId) => TraceApi.PlaylistIdNotFoundErrorBody.PlaylistId;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.PlaylistIdNotFoundErrorBody._Unknown;
    readonly _visit: <_Result>(value: TraceApi.PlaylistIdNotFoundErrorBody, visitor: TraceApi.PlaylistIdNotFoundErrorBody._Visitor<_Result>) => _Result;
};
",
                        "name": "PlaylistIdNotFoundErrorBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PlaylistIdNotFoundErrorBody = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.PlaylistIdNotFoundErrorBody = {
    playlistId: (value) => {
        return {
            value: value,
            type: \\"playlistId\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.PlaylistIdNotFoundErrorBody._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.PlaylistIdNotFoundErrorBody._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"playlistId\\":
                return visitor.playlistId(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "PlaylistIdNotFoundErrorBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ReservedKeywordEnum = \\"is\\" | \\"as\\" | \\"date\\";
export declare const ReservedKeywordEnum: {
    readonly Is: \\"is\\";
    readonly As: \\"as\\";
    readonly Date: \\"date\\";
};
",
                        "name": "ReservedKeywordEnum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ReservedKeywordEnum = void 0;
exports.ReservedKeywordEnum = {
    Is: \\"is\\",
    As: \\"as\\",
    Date: \\"date\\",
};
",
                        "name": "ReservedKeywordEnum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface UpdatePlaylistRequest {
    name: string;
    problems: TraceApi.ProblemId[];
}
",
                        "name": "UpdatePlaylistRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UpdatePlaylistRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PlaylistId\\";
export * from \\"./Playlist\\";
export * from \\"./PlaylistCreateRequest\\";
export * from \\"./UpdatePlaylistRequest\\";
export * from \\"./PlaylistIdNotFoundErrorBody\\";
export * from \\"./DateUnion\\";
export * from \\"./ReservedKeywordEnum\\";
export * from \\"./MapWithEnumKey\\";
export * from \\"./MapWithEnumKeyAndOptionalValue\\";
export * from \\"./Color\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./PlaylistId\\"), exports);
__exportStar(require(\\"./Playlist\\"), exports);
__exportStar(require(\\"./PlaylistCreateRequest\\"), exports);
__exportStar(require(\\"./UpdatePlaylistRequest\\"), exports);
__exportStar(require(\\"./PlaylistIdNotFoundErrorBody\\"), exports);
__exportStar(require(\\"./DateUnion\\"), exports);
__exportStar(require(\\"./ReservedKeywordEnum\\"), exports);
__exportStar(require(\\"./MapWithEnumKey\\"), exports);
__exportStar(require(\\"./MapWithEnumKeyAndOptionalValue\\"), exports);
__exportStar(require(\\"./Color\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "playlist",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Problem {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Problem {
    private readonly options;
    constructor(options: Problem.Options);
    /**
     * Creates a problem
     */
    createProblem(request: TraceApi.CreateProblemRequest): Promise<core.APIResponse<TraceApi.CreateProblemResponse, TraceApi.problem.createProblem.Error>>;
    /**
     * Updates a problem
     */
    updateProblem(problemId: TraceApi.ProblemId, request: TraceApi.CreateProblemRequest): Promise<core.APIResponse<TraceApi.UpdateProblemResponse, TraceApi.problem.updateProblem.Error>>;
    /**
     * Soft deletes a problem
     */
    deleteProblem(problemId: TraceApi.ProblemId): Promise<core.APIResponse<void, TraceApi.problem.deleteProblem.Error>>;
    /**
     * Returns default starter files for problem
     */
    getDefaultStarterFiles(request: TraceApi.GetDefaultStarterFilesRequest): Promise<core.APIResponse<TraceApi.GetDefaultStarterFilesResponse, TraceApi.problem.getDefaultStarterFiles.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Problem = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const url_join_1 = __importDefault(require(\\"url-join\\"));
const serializers = __importStar(require(\\"../../../../serialization\\"));
class Problem {
    options;
    constructor(options) {
        this.options = options;
    }
    /**
     * Creates a problem
     */
    async createProblem(request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/problem-crud/create\\"),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.CreateProblemRequest.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.CreateProblemResponse.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.problem.createProblem.Error._unknown(_response.error),
        };
    }
    /**
     * Updates a problem
     */
    async updateProblem(problemId, request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/problem-crud/update/\${await serializers.ProblemId.jsonOrThrow(problemId)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.CreateProblemRequest.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.UpdateProblemResponse.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.problem.updateProblem.Error._unknown(_response.error),
        };
    }
    /**
     * Soft deletes a problem
     */
    async deleteProblem(problemId) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/problem-crud/delete/\${await serializers.ProblemId.jsonOrThrow(problemId)}\`),
            method: \\"DELETE\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.problem.deleteProblem.Error._unknown(_response.error),
        };
    }
    /**
     * Returns default starter files for problem
     */
    async getDefaultStarterFiles(request) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/problem-crud/default-starter-files\\"),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            body: await serializers.GetDefaultStarterFilesRequest.jsonOrThrow(request),
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.GetDefaultStarterFilesResponse.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.problem.getDefaultStarterFiles.Error._unknown(_response.error),
        };
    }
}
exports.Problem = Problem;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.problem.createProblem.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.problem.createProblem.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.problem.createProblem.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.problem.createProblem.Error, visitor: TraceApi.problem.createProblem.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "createProblem.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.problem.createProblem.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "createProblem.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.problem.deleteProblem.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.problem.deleteProblem.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.problem.deleteProblem.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.problem.deleteProblem.Error, visitor: TraceApi.problem.deleteProblem.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "deleteProblem.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.problem.deleteProblem.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "deleteProblem.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.problem.getDefaultStarterFiles.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.problem.getDefaultStarterFiles.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.problem.getDefaultStarterFiles.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.problem.getDefaultStarterFiles.Error, visitor: TraceApi.problem.getDefaultStarterFiles.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getDefaultStarterFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.problem.getDefaultStarterFiles.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getDefaultStarterFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
export * as createProblem from \\"./createProblem\\";
export * as updateProblem from \\"./updateProblem\\";
export * as deleteProblem from \\"./deleteProblem\\";
export * as getDefaultStarterFiles from \\"./getDefaultStarterFiles\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getDefaultStarterFiles = exports.deleteProblem = exports.updateProblem = exports.createProblem = void 0;
__exportStar(require(\\"./requests\\"), exports);
exports.createProblem = __importStar(require(\\"./createProblem\\"));
exports.updateProblem = __importStar(require(\\"./updateProblem\\"));
exports.deleteProblem = __importStar(require(\\"./deleteProblem\\"));
exports.getDefaultStarterFiles = __importStar(require(\\"./getDefaultStarterFiles\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../..\\";
export interface GetDefaultStarterFilesRequest {
    inputParams: TraceApi.VariableTypeAndName[];
    outputType: TraceApi.VariableType;
    methodName: string;
}
",
                            "name": "GetDefaultStarterFilesRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "GetDefaultStarterFilesRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { GetDefaultStarterFilesRequest } from \\"./GetDefaultStarterFilesRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.problem.updateProblem.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.problem.updateProblem.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.problem.updateProblem.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.problem.updateProblem.Error, visitor: TraceApi.problem.updateProblem.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "updateProblem.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.problem.updateProblem.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "updateProblem.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type CreateProblemError = TraceApi.CreateProblemError.Generic | TraceApi.CreateProblemError._Unknown;
export declare namespace CreateProblemError {
    interface Generic extends TraceApi.GenericCreateProblemError, _Utils {
        errorType: \\"generic\\";
    }
    interface _Unknown extends _Utils {
        errorType: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.CreateProblemError._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        generic: (value: TraceApi.GenericCreateProblemError) => _Result;
        _other: (value: {
            errorType: string;
        }) => _Result;
    }
}
export declare const CreateProblemError: {
    readonly generic: (value: TraceApi.GenericCreateProblemError) => TraceApi.CreateProblemError.Generic;
    readonly _unknown: (value: {
        errorType: string;
    }) => TraceApi.CreateProblemError._Unknown;
    readonly _visit: <_Result>(value: TraceApi.CreateProblemError, visitor: TraceApi.CreateProblemError._Visitor<_Result>) => _Result;
};
",
                        "name": "CreateProblemError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemError = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.CreateProblemError = {
    generic: (value) => {
        return {
            ...value,
            errorType: \\"generic\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CreateProblemError._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CreateProblemError._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorType) {
            case \\"generic\\":
                return visitor.generic(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "CreateProblemError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface CreateProblemRequest {
    problemName: string;
    problemDescription: TraceApi.ProblemDescription;
    files: Record<TraceApi.Language, TraceApi.ProblemFiles | undefined>;
    inputParams: TraceApi.VariableTypeAndName[];
    outputType: TraceApi.VariableType;
    testcases: TraceApi.TestCaseWithExpectedResult[];
    methodName: string;
}
",
                        "name": "CreateProblemRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CreateProblemRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type CreateProblemResponse = TraceApi.CreateProblemResponse.Success | TraceApi.CreateProblemResponse.Error_ | TraceApi.CreateProblemResponse._Unknown;
export declare namespace CreateProblemResponse {
    interface Success extends _Utils {
        type: \\"success\\";
        value: TraceApi.ProblemId;
    }
    interface Error_ extends _Utils {
        type: \\"error\\";
        value: TraceApi.CreateProblemError;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.CreateProblemResponse._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        success: (value: TraceApi.ProblemId) => _Result;
        error: (value: TraceApi.CreateProblemError) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const CreateProblemResponse: {
    readonly success: (value: TraceApi.ProblemId) => TraceApi.CreateProblemResponse.Success;
    readonly error: (value: TraceApi.CreateProblemError) => TraceApi.CreateProblemResponse.Error_;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.CreateProblemResponse._Unknown;
    readonly _visit: <_Result>(value: TraceApi.CreateProblemResponse, visitor: TraceApi.CreateProblemResponse._Visitor<_Result>) => _Result;
};
",
                        "name": "CreateProblemResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemResponse = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.CreateProblemResponse = {
    success: (value) => {
        return {
            value: value,
            type: \\"success\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CreateProblemResponse._visit(this, visitor);
            },
        };
    },
    error: (value) => {
        return {
            value: value,
            type: \\"error\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CreateProblemResponse._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CreateProblemResponse._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"success\\":
                return visitor.success(value.value);
            case \\"error\\":
                return visitor.error(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "CreateProblemResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GenericCreateProblemError {
    message: string;
    type: string;
    stacktrace: string;
}
",
                        "name": "GenericCreateProblemError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GenericCreateProblemError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface GetDefaultStarterFilesResponse {
    files: Record<TraceApi.Language, TraceApi.ProblemFiles | undefined>;
}
",
                        "name": "GetDefaultStarterFilesResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetDefaultStarterFilesResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ProblemDescription {
    boards: TraceApi.ProblemDescriptionBoard[];
}
",
                        "name": "ProblemDescription.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemDescription.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
/**
 * @example
 *     TraceApi.ProblemDescriptionBoard.html(\\"<div>hello world</div>\\")
 *
 * @example
 *     TraceApi.ProblemDescriptionBoard.testCaseId(\\"test-case-id-1\\")
 */
export declare type ProblemDescriptionBoard = TraceApi.ProblemDescriptionBoard.Html | TraceApi.ProblemDescriptionBoard.Variable | TraceApi.ProblemDescriptionBoard.TestCaseId | TraceApi.ProblemDescriptionBoard._Unknown;
export declare namespace ProblemDescriptionBoard {
    interface Html extends _Utils {
        type: \\"html\\";
        value: string;
    }
    interface Variable extends _Utils {
        type: \\"variable\\";
        value: TraceApi.VariableValue;
    }
    interface TestCaseId extends _Utils {
        type: \\"testCaseId\\";
        value: string;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.ProblemDescriptionBoard._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        html: (value: string) => _Result;
        variable: (value: TraceApi.VariableValue) => _Result;
        testCaseId: (value: string) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ProblemDescriptionBoard: {
    readonly html: (value: string) => TraceApi.ProblemDescriptionBoard.Html;
    readonly variable: (value: TraceApi.VariableValue) => TraceApi.ProblemDescriptionBoard.Variable;
    readonly testCaseId: (value: string) => TraceApi.ProblemDescriptionBoard.TestCaseId;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.ProblemDescriptionBoard._Unknown;
    readonly _visit: <_Result>(value: TraceApi.ProblemDescriptionBoard, visitor: TraceApi.ProblemDescriptionBoard._Visitor<_Result>) => _Result;
};
",
                        "name": "ProblemDescriptionBoard.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemDescriptionBoard = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.ProblemDescriptionBoard = {
    html: (value) => {
        return {
            value: value,
            type: \\"html\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ProblemDescriptionBoard._visit(this, visitor);
            },
        };
    },
    variable: (value) => {
        return {
            value: value,
            type: \\"variable\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ProblemDescriptionBoard._visit(this, visitor);
            },
        };
    },
    testCaseId: (value) => {
        return {
            value: value,
            type: \\"testCaseId\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ProblemDescriptionBoard._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ProblemDescriptionBoard._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"html\\":
                return visitor.html(value.value);
            case \\"variable\\":
                return visitor.variable(value.value);
            case \\"testCaseId\\":
                return visitor.testCaseId(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ProblemDescriptionBoard.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
/**
 * @example
 *     {
 *         solutionFile: {
 *             filename: \\"hello.txt\\",
 *             contents: \\"I'm some file content\\"
 *         },
 *         readOnlyFiles: []
 *     }
 */
export interface ProblemFiles {
    solutionFile: TraceApi.FileInfo;
    readOnlyFiles: TraceApi.FileInfo[];
}
",
                        "name": "ProblemFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ProblemInfo {
    problemId: TraceApi.ProblemId;
    problemDescription: TraceApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    files: Record<TraceApi.Language, TraceApi.ProblemFiles | undefined>;
    inputParams: TraceApi.VariableTypeAndName[];
    outputType: TraceApi.VariableType;
    testcases: TraceApi.TestCaseWithExpectedResult[];
    methodName: string;
    supportsCustomTestCases: boolean;
}
",
                        "name": "ProblemInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ProblemsMap {
    problemsById: Record<TraceApi.ProblemId, TraceApi.ProblemInfo | undefined>;
}
",
                        "name": "ProblemsMap.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemsMap.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface UpdateProblemResponse {
    problemVersion: number;
}
",
                        "name": "UpdateProblemResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UpdateProblemResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface VariableTypeAndName {
    variableType: TraceApi.VariableType;
    name: string;
}
",
                        "name": "VariableTypeAndName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "VariableTypeAndName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ProblemInfo\\";
export * from \\"./ProblemsMap\\";
export * from \\"./ProblemDescription\\";
export * from \\"./ProblemDescriptionBoard\\";
export * from \\"./ProblemFiles\\";
export * from \\"./VariableTypeAndName\\";
export * from \\"./CreateProblemRequest\\";
export * from \\"./CreateProblemResponse\\";
export * from \\"./UpdateProblemResponse\\";
export * from \\"./CreateProblemError\\";
export * from \\"./GenericCreateProblemError\\";
export * from \\"./GetDefaultStarterFilesResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ProblemInfo\\"), exports);
__exportStar(require(\\"./ProblemsMap\\"), exports);
__exportStar(require(\\"./ProblemDescription\\"), exports);
__exportStar(require(\\"./ProblemDescriptionBoard\\"), exports);
__exportStar(require(\\"./ProblemFiles\\"), exports);
__exportStar(require(\\"./VariableTypeAndName\\"), exports);
__exportStar(require(\\"./CreateProblemRequest\\"), exports);
__exportStar(require(\\"./CreateProblemResponse\\"), exports);
__exportStar(require(\\"./UpdateProblemResponse\\"), exports);
__exportStar(require(\\"./CreateProblemError\\"), exports);
__exportStar(require(\\"./GenericCreateProblemError\\"), exports);
__exportStar(require(\\"./GetDefaultStarterFilesResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "problem",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Submission {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
/**
 * Responsible for spinning up and spinning down execution.
 */
export declare class Submission {
    private readonly options;
    constructor(options: Submission.Options);
    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    createExecutionSession(language: TraceApi.Language): Promise<core.APIResponse<TraceApi.ExecutionSessionResponse, TraceApi.submission.createExecutionSession.Error>>;
    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    getExecutionSession(sessionId: string): Promise<core.APIResponse<TraceApi.ExecutionSessionResponse | undefined, TraceApi.submission.getExecutionSession.Error>>;
    /**
     * Stops execution session.
     */
    stopExecutionSession(sessionId: string): Promise<core.APIResponse<void, TraceApi.submission.stopExecutionSession.Error>>;
    getExecutionSessionsState(): Promise<core.APIResponse<TraceApi.GetExecutionSessionStateResponse, TraceApi.submission.getExecutionSessionsState.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Submission = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const serializers = __importStar(require(\\"../../../../serialization\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
/**
 * Responsible for spinning up and spinning down execution.
 */
class Submission {
    options;
    constructor(options) {
        this.options = options;
    }
    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    async createExecutionSession(language) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/sessions/create-session/\${await serializers.Language.jsonOrThrow(language)}\`),
            method: \\"POST\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.ExecutionSessionResponse.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.submission.createExecutionSession.Error._unknown(_response.error),
        };
    }
    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    async getExecutionSession(sessionId) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/sessions/\${sessionId}\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.submission.getExecutionSession.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.submission.getExecutionSession.Error._unknown(_response.error),
        };
    }
    /**
     * Stops execution session.
     */
    async stopExecutionSession(sessionId) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/sessions/stop/\${sessionId}\`),
            method: \\"DELETE\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.submission.stopExecutionSession.Error._unknown(_response.error),
        };
    }
    async getExecutionSessionsState() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/sessions/execution-sessions-state\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.GetExecutionSessionStateResponse.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.submission.getExecutionSessionsState.Error._unknown(_response.error),
        };
    }
}
exports.Submission = Submission;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.submission.createExecutionSession.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.submission.createExecutionSession.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.submission.createExecutionSession.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.submission.createExecutionSession.Error, visitor: TraceApi.submission.createExecutionSession.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "createExecutionSession.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.submission.createExecutionSession.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "createExecutionSession.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.submission.getExecutionSession.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.submission.getExecutionSession.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.submission.getExecutionSession.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.submission.getExecutionSession.Error, visitor: TraceApi.submission.getExecutionSession.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getExecutionSession.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.submission.getExecutionSession.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getExecutionSession.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.submission.getExecutionSessionsState.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.submission.getExecutionSessionsState.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.submission.getExecutionSessionsState.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.submission.getExecutionSessionsState.Error, visitor: TraceApi.submission.getExecutionSessionsState.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getExecutionSessionsState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.submission.getExecutionSessionsState.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getExecutionSessionsState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as createExecutionSession from \\"./createExecutionSession\\";
export * as getExecutionSession from \\"./getExecutionSession\\";
export * as stopExecutionSession from \\"./stopExecutionSession\\";
export * as getExecutionSessionsState from \\"./getExecutionSessionsState\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getExecutionSessionsState = exports.stopExecutionSession = exports.getExecutionSession = exports.createExecutionSession = void 0;
exports.createExecutionSession = __importStar(require(\\"./createExecutionSession\\"));
exports.getExecutionSession = __importStar(require(\\"./getExecutionSession\\"));
exports.stopExecutionSession = __importStar(require(\\"./stopExecutionSession\\"));
exports.getExecutionSessionsState = __importStar(require(\\"./getExecutionSessionsState\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.submission.stopExecutionSession.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.submission.stopExecutionSession.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.submission.stopExecutionSession.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.submission.stopExecutionSession.Error, visitor: TraceApi.submission.stopExecutionSession.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "stopExecutionSession.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.submission.stopExecutionSession.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "stopExecutionSession.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type ActualResult = TraceApi.ActualResult.Value | TraceApi.ActualResult.Exception | TraceApi.ActualResult.ExceptionV2 | TraceApi.ActualResult._Unknown;
export declare namespace ActualResult {
    interface Value extends _Utils {
        type: \\"value\\";
        value: TraceApi.VariableValue;
    }
    interface Exception extends TraceApi.ExceptionInfo, _Utils {
        type: \\"exception\\";
    }
    interface ExceptionV2 extends _Utils {
        type: \\"exceptionV2\\";
        value: TraceApi.ExceptionV2;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.ActualResult._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        value: (value: TraceApi.VariableValue) => _Result;
        exception: (value: TraceApi.ExceptionInfo) => _Result;
        exceptionV2: (value: TraceApi.ExceptionV2) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ActualResult: {
    readonly value: (value: TraceApi.VariableValue) => TraceApi.ActualResult.Value;
    readonly exception: (value: TraceApi.ExceptionInfo) => TraceApi.ActualResult.Exception;
    readonly exceptionV2: (value: TraceApi.ExceptionV2) => TraceApi.ActualResult.ExceptionV2;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.ActualResult._Unknown;
    readonly _visit: <_Result>(value: TraceApi.ActualResult, visitor: TraceApi.ActualResult._Visitor<_Result>) => _Result;
};
",
                        "name": "ActualResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ActualResult = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.ActualResult = {
    value: (value) => {
        return {
            value: value,
            type: \\"value\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ActualResult._visit(this, visitor);
            },
        };
    },
    exception: (value) => {
        return {
            ...value,
            type: \\"exception\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ActualResult._visit(this, visitor);
            },
        };
    },
    exceptionV2: (value) => {
        return {
            value: value,
            type: \\"exceptionV2\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ActualResult._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ActualResult._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"value\\":
                return visitor.value(value.value);
            case \\"exception\\":
                return visitor.exception(value);
            case \\"exceptionV2\\":
                return visitor.exceptionV2(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ActualResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface BuildingExecutorResponse {
    submissionId: TraceApi.SubmissionId;
    status: TraceApi.ExecutionSessionStatus;
}
",
                        "name": "BuildingExecutorResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BuildingExecutorResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type CodeExecutionUpdate = 
/**
 * Statuses if an executor for the session isn't ready (Before RunningResponse). */
TraceApi.CodeExecutionUpdate.BuildingExecutor
/**
 * Sent once a test submission is executing. */
 | TraceApi.CodeExecutionUpdate.Running
/**
 * Sent if a submission cannot be run (i.e. Compile Error). */
 | TraceApi.CodeExecutionUpdate.Errored
/**
 * Sent if a submission is stopped. */
 | TraceApi.CodeExecutionUpdate.Stopped
/**
 * Graded testcases without trace information. */
 | TraceApi.CodeExecutionUpdate.Graded
/**
 * Graded submission for v2 problems. */
 | TraceApi.CodeExecutionUpdate.GradedV2
/**
 * Workspace run without trace information. */
 | TraceApi.CodeExecutionUpdate.WorkspaceRan
/**
 * Gives progress about what is being recorded. */
 | TraceApi.CodeExecutionUpdate.Recording
/**
 * Graded testcases with trace information. */
 | TraceApi.CodeExecutionUpdate.Recorded
/**
 * Sent if an invalid request is sent for a submission. */
 | TraceApi.CodeExecutionUpdate.InvalidRequest
/**
 * Sent once a submission is graded and fully recorded. */
 | TraceApi.CodeExecutionUpdate.Finished | TraceApi.CodeExecutionUpdate._Unknown;
export declare namespace CodeExecutionUpdate {
    interface BuildingExecutor extends TraceApi.BuildingExecutorResponse, _Utils {
        type: \\"buildingExecutor\\";
    }
    interface Running extends TraceApi.RunningResponse, _Utils {
        type: \\"running\\";
    }
    interface Errored extends TraceApi.ErroredResponse, _Utils {
        type: \\"errored\\";
    }
    interface Stopped extends TraceApi.StoppedResponse, _Utils {
        type: \\"stopped\\";
    }
    interface Graded extends TraceApi.GradedResponse, _Utils {
        type: \\"graded\\";
    }
    interface GradedV2 extends TraceApi.GradedResponseV2, _Utils {
        type: \\"gradedV2\\";
    }
    interface WorkspaceRan extends TraceApi.WorkspaceRanResponse, _Utils {
        type: \\"workspaceRan\\";
    }
    interface Recording extends TraceApi.RecordingResponseNotification, _Utils {
        type: \\"recording\\";
    }
    interface Recorded extends TraceApi.RecordedResponseNotification, _Utils {
        type: \\"recorded\\";
    }
    interface InvalidRequest extends TraceApi.InvalidRequestResponse, _Utils {
        type: \\"invalidRequest\\";
    }
    interface Finished extends TraceApi.FinishedResponse, _Utils {
        type: \\"finished\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.CodeExecutionUpdate._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        buildingExecutor: (value: TraceApi.BuildingExecutorResponse) => _Result;
        running: (value: TraceApi.RunningResponse) => _Result;
        errored: (value: TraceApi.ErroredResponse) => _Result;
        stopped: (value: TraceApi.StoppedResponse) => _Result;
        graded: (value: TraceApi.GradedResponse) => _Result;
        gradedV2: (value: TraceApi.GradedResponseV2) => _Result;
        workspaceRan: (value: TraceApi.WorkspaceRanResponse) => _Result;
        recording: (value: TraceApi.RecordingResponseNotification) => _Result;
        recorded: (value: TraceApi.RecordedResponseNotification) => _Result;
        invalidRequest: (value: TraceApi.InvalidRequestResponse) => _Result;
        finished: (value: TraceApi.FinishedResponse) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const CodeExecutionUpdate: {
    readonly buildingExecutor: (value: TraceApi.BuildingExecutorResponse) => TraceApi.CodeExecutionUpdate.BuildingExecutor;
    readonly running: (value: TraceApi.RunningResponse) => TraceApi.CodeExecutionUpdate.Running;
    readonly errored: (value: TraceApi.ErroredResponse) => TraceApi.CodeExecutionUpdate.Errored;
    readonly stopped: (value: TraceApi.StoppedResponse) => TraceApi.CodeExecutionUpdate.Stopped;
    readonly graded: (value: TraceApi.GradedResponse) => TraceApi.CodeExecutionUpdate.Graded;
    readonly gradedV2: (value: TraceApi.GradedResponseV2) => TraceApi.CodeExecutionUpdate.GradedV2;
    readonly workspaceRan: (value: TraceApi.WorkspaceRanResponse) => TraceApi.CodeExecutionUpdate.WorkspaceRan;
    readonly recording: (value: TraceApi.RecordingResponseNotification) => TraceApi.CodeExecutionUpdate.Recording;
    readonly recorded: (value: TraceApi.RecordedResponseNotification) => TraceApi.CodeExecutionUpdate.Recorded;
    readonly invalidRequest: (value: TraceApi.InvalidRequestResponse) => TraceApi.CodeExecutionUpdate.InvalidRequest;
    readonly finished: (value: TraceApi.FinishedResponse) => TraceApi.CodeExecutionUpdate.Finished;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.CodeExecutionUpdate._Unknown;
    readonly _visit: <_Result>(value: TraceApi.CodeExecutionUpdate, visitor: TraceApi.CodeExecutionUpdate._Visitor<_Result>) => _Result;
};
",
                        "name": "CodeExecutionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CodeExecutionUpdate = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.CodeExecutionUpdate = {
    buildingExecutor: (value) => {
        return {
            ...value,
            type: \\"buildingExecutor\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    running: (value) => {
        return {
            ...value,
            type: \\"running\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    errored: (value) => {
        return {
            ...value,
            type: \\"errored\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    stopped: (value) => {
        return {
            ...value,
            type: \\"stopped\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    graded: (value) => {
        return {
            ...value,
            type: \\"graded\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    gradedV2: (value) => {
        return {
            ...value,
            type: \\"gradedV2\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    workspaceRan: (value) => {
        return {
            ...value,
            type: \\"workspaceRan\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    recording: (value) => {
        return {
            ...value,
            type: \\"recording\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    recorded: (value) => {
        return {
            ...value,
            type: \\"recorded\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    invalidRequest: (value) => {
        return {
            ...value,
            type: \\"invalidRequest\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    finished: (value) => {
        return {
            ...value,
            type: \\"finished\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.CodeExecutionUpdate._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"buildingExecutor\\":
                return visitor.buildingExecutor(value);
            case \\"running\\":
                return visitor.running(value);
            case \\"errored\\":
                return visitor.errored(value);
            case \\"stopped\\":
                return visitor.stopped(value);
            case \\"graded\\":
                return visitor.graded(value);
            case \\"gradedV2\\":
                return visitor.gradedV2(value);
            case \\"workspaceRan\\":
                return visitor.workspaceRan(value);
            case \\"recording\\":
                return visitor.recording(value);
            case \\"recorded\\":
                return visitor.recorded(value);
            case \\"invalidRequest\\":
                return visitor.invalidRequest(value);
            case \\"finished\\":
                return visitor.finished(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "CodeExecutionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface CompileError {
    message: string;
}
",
                        "name": "CompileError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CompileError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface CustomTestCasesUnsupported {
    problemId: TraceApi.ProblemId;
    submissionId: TraceApi.SubmissionId;
}
",
                        "name": "CustomTestCasesUnsupported.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CustomTestCasesUnsupported.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type ErrorInfo = TraceApi.ErrorInfo.CompileError
/**
 * If the submission cannot be executed and throws a runtime error before getting to any of the testcases.
 *  */
 | TraceApi.ErrorInfo.RuntimeError
/**
 * If the trace backend encounters an unexpected error.
 *  */
 | TraceApi.ErrorInfo.InternalError | TraceApi.ErrorInfo._Unknown;
export declare namespace ErrorInfo {
    interface CompileError extends TraceApi.CompileError, _Utils {
        type: \\"compileError\\";
    }
    interface RuntimeError extends TraceApi.RuntimeError, _Utils {
        type: \\"runtimeError\\";
    }
    interface InternalError extends TraceApi.InternalError, _Utils {
        type: \\"internalError\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.ErrorInfo._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        compileError: (value: TraceApi.CompileError) => _Result;
        runtimeError: (value: TraceApi.RuntimeError) => _Result;
        internalError: (value: TraceApi.InternalError) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ErrorInfo: {
    readonly compileError: (value: TraceApi.CompileError) => TraceApi.ErrorInfo.CompileError;
    readonly runtimeError: (value: TraceApi.RuntimeError) => TraceApi.ErrorInfo.RuntimeError;
    readonly internalError: (value: TraceApi.InternalError) => TraceApi.ErrorInfo.InternalError;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.ErrorInfo._Unknown;
    readonly _visit: <_Result>(value: TraceApi.ErrorInfo, visitor: TraceApi.ErrorInfo._Visitor<_Result>) => _Result;
};
",
                        "name": "ErrorInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorInfo = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.ErrorInfo = {
    compileError: (value) => {
        return {
            ...value,
            type: \\"compileError\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ErrorInfo._visit(this, visitor);
            },
        };
    },
    runtimeError: (value) => {
        return {
            ...value,
            type: \\"runtimeError\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ErrorInfo._visit(this, visitor);
            },
        };
    },
    internalError: (value) => {
        return {
            ...value,
            type: \\"internalError\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ErrorInfo._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ErrorInfo._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"compileError\\":
                return visitor.compileError(value);
            case \\"runtimeError\\":
                return visitor.runtimeError(value);
            case \\"internalError\\":
                return visitor.internalError(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ErrorInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ErroredResponse {
    submissionId: TraceApi.SubmissionId;
    errorInfo: TraceApi.ErrorInfo;
}
",
                        "name": "ErroredResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ErroredResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface ExceptionInfo {
    exceptionType: string;
    exceptionMessage: string;
    exceptionStacktrace: string;
}
",
                        "name": "ExceptionInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExceptionInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type ExceptionV2 = TraceApi.ExceptionV2.Generic | TraceApi.ExceptionV2.Timeout | TraceApi.ExceptionV2._Unknown;
export declare namespace ExceptionV2 {
    interface Generic extends TraceApi.ExceptionInfo, _Utils {
        type: \\"generic\\";
    }
    interface Timeout extends _Utils {
        type: \\"timeout\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.ExceptionV2._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        generic: (value: TraceApi.ExceptionInfo) => _Result;
        timeout: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const ExceptionV2: {
    readonly generic: (value: TraceApi.ExceptionInfo) => TraceApi.ExceptionV2.Generic;
    readonly timeout: () => TraceApi.ExceptionV2.Timeout;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.ExceptionV2._Unknown;
    readonly _visit: <_Result>(value: TraceApi.ExceptionV2, visitor: TraceApi.ExceptionV2._Visitor<_Result>) => _Result;
};
",
                        "name": "ExceptionV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExceptionV2 = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.ExceptionV2 = {
    generic: (value) => {
        return {
            ...value,
            type: \\"generic\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ExceptionV2._visit(this, visitor);
            },
        };
    },
    timeout: () => {
        return {
            type: \\"timeout\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ExceptionV2._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.ExceptionV2._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"generic\\":
                return visitor.generic(value);
            case \\"timeout\\":
                return visitor.timeout();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "ExceptionV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ExecutionSessionResponse {
    sessionId: string;
    executionSessionUrl?: string;
    language: TraceApi.Language;
    status: TraceApi.ExecutionSessionStatus;
}
",
                        "name": "ExecutionSessionResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExecutionSessionResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ExecutionSessionState {
    lastTimeContacted?: string;
    sessionId: string;
    isWarmInstance: boolean;
    awsTaskId?: string;
    language: TraceApi.Language;
    status: TraceApi.ExecutionSessionStatus;
}
",
                        "name": "ExecutionSessionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExecutionSessionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ExecutionSessionStatus = \\"CREATING_CONTAINER\\" | \\"PROVISIONING_CONTAINER\\" | \\"PENDING_CONTAINER\\" | \\"RUNNING_CONTAINER\\" | \\"LIVE_CONTAINER\\" | \\"FAILED_TO_LAUNCH\\";
export declare const ExecutionSessionStatus: {
    readonly CreatingContainer: \\"CREATING_CONTAINER\\";
    readonly ProvisioningContainer: \\"PROVISIONING_CONTAINER\\";
    readonly PendingContainer: \\"PENDING_CONTAINER\\";
    readonly RunningContainer: \\"RUNNING_CONTAINER\\";
    readonly LiveContainer: \\"LIVE_CONTAINER\\";
    readonly FailedToLaunch: \\"FAILED_TO_LAUNCH\\";
};
",
                        "name": "ExecutionSessionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExecutionSessionStatus = void 0;
exports.ExecutionSessionStatus = {
    CreatingContainer: \\"CREATING_CONTAINER\\",
    ProvisioningContainer: \\"PROVISIONING_CONTAINER\\",
    PendingContainer: \\"PENDING_CONTAINER\\",
    RunningContainer: \\"RUNNING_CONTAINER\\",
    LiveContainer: \\"LIVE_CONTAINER\\",
    FailedToLaunch: \\"FAILED_TO_LAUNCH\\",
};
",
                        "name": "ExecutionSessionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface ExistingSubmissionExecuting {
    submissionId: TraceApi.SubmissionId;
}
",
                        "name": "ExistingSubmissionExecuting.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExistingSubmissionExecuting.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface ExpressionLocation {
    start: number;
    offset: number;
}
",
                        "name": "ExpressionLocation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExpressionLocation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface FinishedResponse {
    submissionId: TraceApi.SubmissionId;
}
",
                        "name": "FinishedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FinishedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface GetExecutionSessionStateResponse {
    states: Record<string, TraceApi.ExecutionSessionState | undefined>;
    numWarmingInstances?: number;
    warmingSessionIds: string[];
}
",
                        "name": "GetExecutionSessionStateResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetExecutionSessionStateResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface GetSubmissionStateResponse {
    timeSubmitted?: Date;
    submission: string;
    language: TraceApi.Language;
    submissionTypeState: TraceApi.SubmissionTypeState;
}
",
                        "name": "GetSubmissionStateResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetSubmissionStateResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GetTraceResponsesPageRequest {
    offset?: number;
}
",
                        "name": "GetTraceResponsesPageRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetTraceResponsesPageRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface GradedResponse {
    submissionId: TraceApi.SubmissionId;
    testCases: Record<string, TraceApi.TestCaseResultWithStdout | undefined>;
}
",
                        "name": "GradedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GradedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface GradedResponseV2 {
    submissionId: TraceApi.SubmissionId;
    testCases: Record<TraceApi.v2.TestCaseId, TraceApi.TestCaseGrade | undefined>;
}
",
                        "name": "GradedResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GradedResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface GradedTestCaseUpdate {
    testCaseId: TraceApi.v2.TestCaseId;
    grade: TraceApi.TestCaseGrade;
}
",
                        "name": "GradedTestCaseUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GradedTestCaseUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface InitializeProblemRequest {
    problemId: TraceApi.ProblemId;
    problemVersion?: number;
}
",
                        "name": "InitializeProblemRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InitializeProblemRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface InternalError {
    exceptionInfo: TraceApi.ExceptionInfo;
}
",
                        "name": "InternalError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InternalError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type InvalidRequestCause = 
/**
 * The submission request references a submission id that doesn't exist. */
TraceApi.InvalidRequestCause.SubmissionIdNotFound | TraceApi.InvalidRequestCause.CustomTestCasesUnsupported
/**
 * The submission request was routed to an incorrect language executor. */
 | TraceApi.InvalidRequestCause.UnexpectedLanguage | TraceApi.InvalidRequestCause._Unknown;
export declare namespace InvalidRequestCause {
    interface SubmissionIdNotFound extends TraceApi.SubmissionIdNotFound, _Utils {
        type: \\"submissionIdNotFound\\";
    }
    interface CustomTestCasesUnsupported extends TraceApi.CustomTestCasesUnsupported, _Utils {
        type: \\"customTestCasesUnsupported\\";
    }
    interface UnexpectedLanguage extends TraceApi.UnexpectedLanguageError, _Utils {
        type: \\"unexpectedLanguage\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.InvalidRequestCause._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        submissionIdNotFound: (value: TraceApi.SubmissionIdNotFound) => _Result;
        customTestCasesUnsupported: (value: TraceApi.CustomTestCasesUnsupported) => _Result;
        unexpectedLanguage: (value: TraceApi.UnexpectedLanguageError) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const InvalidRequestCause: {
    readonly submissionIdNotFound: (value: TraceApi.SubmissionIdNotFound) => TraceApi.InvalidRequestCause.SubmissionIdNotFound;
    readonly customTestCasesUnsupported: (value: TraceApi.CustomTestCasesUnsupported) => TraceApi.InvalidRequestCause.CustomTestCasesUnsupported;
    readonly unexpectedLanguage: (value: TraceApi.UnexpectedLanguageError) => TraceApi.InvalidRequestCause.UnexpectedLanguage;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.InvalidRequestCause._Unknown;
    readonly _visit: <_Result>(value: TraceApi.InvalidRequestCause, visitor: TraceApi.InvalidRequestCause._Visitor<_Result>) => _Result;
};
",
                        "name": "InvalidRequestCause.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InvalidRequestCause = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.InvalidRequestCause = {
    submissionIdNotFound: (value) => {
        return {
            ...value,
            type: \\"submissionIdNotFound\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.InvalidRequestCause._visit(this, visitor);
            },
        };
    },
    customTestCasesUnsupported: (value) => {
        return {
            ...value,
            type: \\"customTestCasesUnsupported\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.InvalidRequestCause._visit(this, visitor);
            },
        };
    },
    unexpectedLanguage: (value) => {
        return {
            ...value,
            type: \\"unexpectedLanguage\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.InvalidRequestCause._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.InvalidRequestCause._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"submissionIdNotFound\\":
                return visitor.submissionIdNotFound(value);
            case \\"customTestCasesUnsupported\\":
                return visitor.customTestCasesUnsupported(value);
            case \\"unexpectedLanguage\\":
                return visitor.unexpectedLanguage(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "InvalidRequestCause.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface InvalidRequestResponse {
    request: TraceApi.SubmissionRequest;
    cause: TraceApi.InvalidRequestCause;
}
",
                        "name": "InvalidRequestResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InvalidRequestResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface LightweightStackframeInformation {
    numStackFrames: number;
    topStackFrameMethodName: string;
}
",
                        "name": "LightweightStackframeInformation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "LightweightStackframeInformation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface RecordedResponseNotification {
    submissionId: TraceApi.SubmissionId;
    traceResponsesSize: number;
    testCaseId?: string;
}
",
                        "name": "RecordedResponseNotification.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RecordedResponseNotification.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface RecordedTestCaseUpdate {
    testCaseId: TraceApi.v2.TestCaseId;
    traceResponsesSize: number;
}
",
                        "name": "RecordedTestCaseUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RecordedTestCaseUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface RecordingResponseNotification {
    submissionId: TraceApi.SubmissionId;
    testCaseId?: string;
    lineNumber: number;
    lightweightStackInfo: TraceApi.LightweightStackframeInformation;
    tracedFile?: TraceApi.TracedFile;
}
",
                        "name": "RecordingResponseNotification.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RecordingResponseNotification.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface RunningResponse {
    submissionId: TraceApi.SubmissionId;
    state: TraceApi.RunningSubmissionState;
}
",
                        "name": "RunningResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RunningResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type RunningSubmissionState = \\"QUEUEING_SUBMISSION\\" | \\"KILLING_HISTORICAL_SUBMISSIONS\\" | \\"WRITING_SUBMISSION_TO_FILE\\" | \\"COMPILING_SUBMISSION\\" | \\"RUNNING_SUBMISSION\\";
export declare const RunningSubmissionState: {
    readonly QueueingSubmission: \\"QUEUEING_SUBMISSION\\";
    readonly KillingHistoricalSubmissions: \\"KILLING_HISTORICAL_SUBMISSIONS\\";
    readonly WritingSubmissionToFile: \\"WRITING_SUBMISSION_TO_FILE\\";
    readonly CompilingSubmission: \\"COMPILING_SUBMISSION\\";
    readonly RunningSubmission: \\"RUNNING_SUBMISSION\\";
};
",
                        "name": "RunningSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RunningSubmissionState = void 0;
exports.RunningSubmissionState = {
    QueueingSubmission: \\"QUEUEING_SUBMISSION\\",
    KillingHistoricalSubmissions: \\"KILLING_HISTORICAL_SUBMISSIONS\\",
    WritingSubmissionToFile: \\"WRITING_SUBMISSION_TO_FILE\\",
    CompilingSubmission: \\"COMPILING_SUBMISSION\\",
    RunningSubmission: \\"RUNNING_SUBMISSION\\",
};
",
                        "name": "RunningSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface RuntimeError {
    message: string;
}
",
                        "name": "RuntimeError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RuntimeError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface Scope {
    variables: Record<string, TraceApi.DebugVariableValue | undefined>;
}
",
                        "name": "Scope.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Scope.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type ShareId = string & {
    ShareId: void;
};
export declare function ShareId(value: string): TraceApi.ShareId;
",
                        "name": "ShareId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ShareId = void 0;
function ShareId(value) {
    return value;
}
exports.ShareId = ShareId;
",
                        "name": "ShareId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface StackFrame {
    methodName: string;
    lineNumber: number;
    scopes: TraceApi.Scope[];
}
",
                        "name": "StackFrame.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StackFrame.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface StackInformation {
    numStackFrames: number;
    topStackFrame?: TraceApi.StackFrame;
}
",
                        "name": "StackInformation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StackInformation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface StderrResponse {
    submissionId: TraceApi.SubmissionId;
    stderr: string;
}
",
                        "name": "StderrResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StderrResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface StdoutResponse {
    submissionId: TraceApi.SubmissionId;
    stdout: string;
}
",
                        "name": "StdoutResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StdoutResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface StopRequest {
    submissionId: TraceApi.SubmissionId;
}
",
                        "name": "StopRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StopRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface StoppedResponse {
    submissionId: TraceApi.SubmissionId;
}
",
                        "name": "StoppedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StoppedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface SubmissionFileInfo {
    directory: string;
    filename: string;
    contents: string;
}
",
                        "name": "SubmissionFileInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionFileInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type SubmissionId = string & {
    SubmissionId: void;
};
export declare function SubmissionId(value: string): TraceApi.SubmissionId;
",
                        "name": "SubmissionId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionId = void 0;
function SubmissionId(value) {
    return value;
}
exports.SubmissionId = SubmissionId;
",
                        "name": "SubmissionId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface SubmissionIdNotFound {
    missingSubmissionId: TraceApi.SubmissionId;
}
",
                        "name": "SubmissionIdNotFound.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionIdNotFound.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type SubmissionRequest = TraceApi.SubmissionRequest.InitializeProblemRequest | TraceApi.SubmissionRequest.InitializeWorkspaceRequest | TraceApi.SubmissionRequest.SubmitV2 | TraceApi.SubmissionRequest.WorkspaceSubmit | TraceApi.SubmissionRequest.Stop | TraceApi.SubmissionRequest._Unknown;
export declare namespace SubmissionRequest {
    interface InitializeProblemRequest extends TraceApi.InitializeProblemRequest, _Utils {
        type: \\"initializeProblemRequest\\";
    }
    interface InitializeWorkspaceRequest extends _Utils {
        type: \\"initializeWorkspaceRequest\\";
    }
    interface SubmitV2 extends TraceApi.SubmitRequestV2, _Utils {
        type: \\"submitV2\\";
    }
    interface WorkspaceSubmit extends TraceApi.WorkspaceSubmitRequest, _Utils {
        type: \\"workspaceSubmit\\";
    }
    interface Stop extends TraceApi.StopRequest, _Utils {
        type: \\"stop\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.SubmissionRequest._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        initializeProblemRequest: (value: TraceApi.InitializeProblemRequest) => _Result;
        initializeWorkspaceRequest: () => _Result;
        submitV2: (value: TraceApi.SubmitRequestV2) => _Result;
        workspaceSubmit: (value: TraceApi.WorkspaceSubmitRequest) => _Result;
        stop: (value: TraceApi.StopRequest) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const SubmissionRequest: {
    readonly initializeProblemRequest: (value: TraceApi.InitializeProblemRequest) => TraceApi.SubmissionRequest.InitializeProblemRequest;
    readonly initializeWorkspaceRequest: () => TraceApi.SubmissionRequest.InitializeWorkspaceRequest;
    readonly submitV2: (value: TraceApi.SubmitRequestV2) => TraceApi.SubmissionRequest.SubmitV2;
    readonly workspaceSubmit: (value: TraceApi.WorkspaceSubmitRequest) => TraceApi.SubmissionRequest.WorkspaceSubmit;
    readonly stop: (value: TraceApi.StopRequest) => TraceApi.SubmissionRequest.Stop;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.SubmissionRequest._Unknown;
    readonly _visit: <_Result>(value: TraceApi.SubmissionRequest, visitor: TraceApi.SubmissionRequest._Visitor<_Result>) => _Result;
};
",
                        "name": "SubmissionRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionRequest = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.SubmissionRequest = {
    initializeProblemRequest: (value) => {
        return {
            ...value,
            type: \\"initializeProblemRequest\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionRequest._visit(this, visitor);
            },
        };
    },
    initializeWorkspaceRequest: () => {
        return {
            type: \\"initializeWorkspaceRequest\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionRequest._visit(this, visitor);
            },
        };
    },
    submitV2: (value) => {
        return {
            ...value,
            type: \\"submitV2\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionRequest._visit(this, visitor);
            },
        };
    },
    workspaceSubmit: (value) => {
        return {
            ...value,
            type: \\"workspaceSubmit\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionRequest._visit(this, visitor);
            },
        };
    },
    stop: (value) => {
        return {
            ...value,
            type: \\"stop\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionRequest._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionRequest._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"initializeProblemRequest\\":
                return visitor.initializeProblemRequest(value);
            case \\"initializeWorkspaceRequest\\":
                return visitor.initializeWorkspaceRequest();
            case \\"submitV2\\":
                return visitor.submitV2(value);
            case \\"workspaceSubmit\\":
                return visitor.workspaceSubmit(value);
            case \\"stop\\":
                return visitor.stop(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SubmissionRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type SubmissionResponse = TraceApi.SubmissionResponse.ServerInitialized | TraceApi.SubmissionResponse.ProblemInitialized | TraceApi.SubmissionResponse.WorkspaceInitialized | TraceApi.SubmissionResponse.ServerErrored | TraceApi.SubmissionResponse.CodeExecutionUpdate | TraceApi.SubmissionResponse.Terminated | TraceApi.SubmissionResponse._Unknown;
export declare namespace SubmissionResponse {
    interface ServerInitialized extends _Utils {
        type: \\"serverInitialized\\";
    }
    interface ProblemInitialized extends _Utils {
        type: \\"problemInitialized\\";
        value: TraceApi.ProblemId;
    }
    interface WorkspaceInitialized extends _Utils {
        type: \\"workspaceInitialized\\";
    }
    interface ServerErrored extends TraceApi.ExceptionInfo, _Utils {
        type: \\"serverErrored\\";
    }
    interface CodeExecutionUpdate extends _Utils {
        type: \\"codeExecutionUpdate\\";
        value: TraceApi.CodeExecutionUpdate;
    }
    interface Terminated extends TraceApi.TerminatedResponse, _Utils {
        type: \\"terminated\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.SubmissionResponse._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        serverInitialized: () => _Result;
        problemInitialized: (value: TraceApi.ProblemId) => _Result;
        workspaceInitialized: () => _Result;
        serverErrored: (value: TraceApi.ExceptionInfo) => _Result;
        codeExecutionUpdate: (value: TraceApi.CodeExecutionUpdate) => _Result;
        terminated: (value: TraceApi.TerminatedResponse) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const SubmissionResponse: {
    readonly serverInitialized: () => TraceApi.SubmissionResponse.ServerInitialized;
    readonly problemInitialized: (value: TraceApi.ProblemId) => TraceApi.SubmissionResponse.ProblemInitialized;
    readonly workspaceInitialized: () => TraceApi.SubmissionResponse.WorkspaceInitialized;
    readonly serverErrored: (value: TraceApi.ExceptionInfo) => TraceApi.SubmissionResponse.ServerErrored;
    readonly codeExecutionUpdate: (value: TraceApi.CodeExecutionUpdate) => TraceApi.SubmissionResponse.CodeExecutionUpdate;
    readonly terminated: (value: TraceApi.TerminatedResponse) => TraceApi.SubmissionResponse.Terminated;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.SubmissionResponse._Unknown;
    readonly _visit: <_Result>(value: TraceApi.SubmissionResponse, visitor: TraceApi.SubmissionResponse._Visitor<_Result>) => _Result;
};
",
                        "name": "SubmissionResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionResponse = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.SubmissionResponse = {
    serverInitialized: () => {
        return {
            type: \\"serverInitialized\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    problemInitialized: (value) => {
        return {
            value: value,
            type: \\"problemInitialized\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    workspaceInitialized: () => {
        return {
            type: \\"workspaceInitialized\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    serverErrored: (value) => {
        return {
            ...value,
            type: \\"serverErrored\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    codeExecutionUpdate: (value) => {
        return {
            value: value,
            type: \\"codeExecutionUpdate\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    terminated: (value) => {
        return {
            ...value,
            type: \\"terminated\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionResponse._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"serverInitialized\\":
                return visitor.serverInitialized();
            case \\"problemInitialized\\":
                return visitor.problemInitialized(value.value);
            case \\"workspaceInitialized\\":
                return visitor.workspaceInitialized();
            case \\"serverErrored\\":
                return visitor.serverErrored(value);
            case \\"codeExecutionUpdate\\":
                return visitor.codeExecutionUpdate(value.value);
            case \\"terminated\\":
                return visitor.terminated(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SubmissionResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type SubmissionStatusForTestCase = TraceApi.SubmissionStatusForTestCase.Graded | TraceApi.SubmissionStatusForTestCase.GradedV2 | TraceApi.SubmissionStatusForTestCase.Traced | TraceApi.SubmissionStatusForTestCase._Unknown;
export declare namespace SubmissionStatusForTestCase {
    interface Graded extends TraceApi.TestCaseResultWithStdout, _Utils {
        type: \\"graded\\";
    }
    interface GradedV2 extends _Utils {
        type: \\"gradedV2\\";
        value: TraceApi.TestCaseGrade;
    }
    interface Traced extends TraceApi.TracedTestCase, _Utils {
        type: \\"traced\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.SubmissionStatusForTestCase._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        graded: (value: TraceApi.TestCaseResultWithStdout) => _Result;
        gradedV2: (value: TraceApi.TestCaseGrade) => _Result;
        traced: (value: TraceApi.TracedTestCase) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const SubmissionStatusForTestCase: {
    readonly graded: (value: TraceApi.TestCaseResultWithStdout) => TraceApi.SubmissionStatusForTestCase.Graded;
    readonly gradedV2: (value: TraceApi.TestCaseGrade) => TraceApi.SubmissionStatusForTestCase.GradedV2;
    readonly traced: (value: TraceApi.TracedTestCase) => TraceApi.SubmissionStatusForTestCase.Traced;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.SubmissionStatusForTestCase._Unknown;
    readonly _visit: <_Result>(value: TraceApi.SubmissionStatusForTestCase, visitor: TraceApi.SubmissionStatusForTestCase._Visitor<_Result>) => _Result;
};
",
                        "name": "SubmissionStatusForTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionStatusForTestCase = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.SubmissionStatusForTestCase = {
    graded: (value) => {
        return {
            ...value,
            type: \\"graded\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase._visit(this, visitor);
            },
        };
    },
    gradedV2: (value) => {
        return {
            value: value,
            type: \\"gradedV2\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase._visit(this, visitor);
            },
        };
    },
    traced: (value) => {
        return {
            ...value,
            type: \\"traced\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"graded\\":
                return visitor.graded(value);
            case \\"gradedV2\\":
                return visitor.gradedV2(value.value);
            case \\"traced\\":
                return visitor.traced(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SubmissionStatusForTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type SubmissionStatusV2 = TraceApi.SubmissionStatusV2.Test | TraceApi.SubmissionStatusV2.Workspace | TraceApi.SubmissionStatusV2._Unknown;
export declare namespace SubmissionStatusV2 {
    interface Test extends TraceApi.TestSubmissionStatusV2, _Utils {
        type: \\"test\\";
    }
    interface Workspace extends TraceApi.WorkspaceSubmissionStatusV2, _Utils {
        type: \\"workspace\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.SubmissionStatusV2._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        test: (value: TraceApi.TestSubmissionStatusV2) => _Result;
        workspace: (value: TraceApi.WorkspaceSubmissionStatusV2) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const SubmissionStatusV2: {
    readonly test: (value: TraceApi.TestSubmissionStatusV2) => TraceApi.SubmissionStatusV2.Test;
    readonly workspace: (value: TraceApi.WorkspaceSubmissionStatusV2) => TraceApi.SubmissionStatusV2.Workspace;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.SubmissionStatusV2._Unknown;
    readonly _visit: <_Result>(value: TraceApi.SubmissionStatusV2, visitor: TraceApi.SubmissionStatusV2._Visitor<_Result>) => _Result;
};
",
                        "name": "SubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionStatusV2 = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.SubmissionStatusV2 = {
    test: (value) => {
        return {
            ...value,
            type: \\"test\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusV2._visit(this, visitor);
            },
        };
    },
    workspace: (value) => {
        return {
            ...value,
            type: \\"workspace\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusV2._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionStatusV2._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"test\\":
                return visitor.test(value);
            case \\"workspace\\":
                return visitor.workspace(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * Keep in sync with SubmissionType.
 */
export declare type SubmissionTypeEnum = \\"TEST\\";
export declare const SubmissionTypeEnum: {
    readonly Test: \\"TEST\\";
};
",
                        "name": "SubmissionTypeEnum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionTypeEnum = void 0;
exports.SubmissionTypeEnum = {
    Test: \\"TEST\\",
};
",
                        "name": "SubmissionTypeEnum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type SubmissionTypeState = TraceApi.SubmissionTypeState.Test | TraceApi.SubmissionTypeState.Workspace | TraceApi.SubmissionTypeState._Unknown;
export declare namespace SubmissionTypeState {
    interface Test extends TraceApi.TestSubmissionState, _Utils {
        type: \\"test\\";
    }
    interface Workspace extends TraceApi.WorkspaceSubmissionState, _Utils {
        type: \\"workspace\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.SubmissionTypeState._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        test: (value: TraceApi.TestSubmissionState) => _Result;
        workspace: (value: TraceApi.WorkspaceSubmissionState) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const SubmissionTypeState: {
    readonly test: (value: TraceApi.TestSubmissionState) => TraceApi.SubmissionTypeState.Test;
    readonly workspace: (value: TraceApi.WorkspaceSubmissionState) => TraceApi.SubmissionTypeState.Workspace;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.SubmissionTypeState._Unknown;
    readonly _visit: <_Result>(value: TraceApi.SubmissionTypeState, visitor: TraceApi.SubmissionTypeState._Visitor<_Result>) => _Result;
};
",
                        "name": "SubmissionTypeState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionTypeState = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.SubmissionTypeState = {
    test: (value) => {
        return {
            ...value,
            type: \\"test\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionTypeState._visit(this, visitor);
            },
        };
    },
    workspace: (value) => {
        return {
            ...value,
            type: \\"workspace\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionTypeState._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.SubmissionTypeState._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"test\\":
                return visitor.test(value);
            case \\"workspace\\":
                return visitor.workspace(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "SubmissionTypeState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface SubmitRequestV2 {
    submissionId: TraceApi.SubmissionId;
    language: TraceApi.Language;
    submissionFiles: TraceApi.SubmissionFileInfo[];
    problemId: TraceApi.ProblemId;
    problemVersion?: number;
    userId?: string;
}
",
                        "name": "SubmitRequestV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmitRequestV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TerminatedResponse {
}
",
                        "name": "TerminatedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TerminatedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type TestCaseGrade = TraceApi.TestCaseGrade.Hidden | TraceApi.TestCaseGrade.NonHidden | TraceApi.TestCaseGrade._Unknown;
export declare namespace TestCaseGrade {
    interface Hidden extends TraceApi.TestCaseHiddenGrade, _Utils {
        type: \\"hidden\\";
    }
    interface NonHidden extends TraceApi.TestCaseNonHiddenGrade, _Utils {
        type: \\"nonHidden\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.TestCaseGrade._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        hidden: (value: TraceApi.TestCaseHiddenGrade) => _Result;
        nonHidden: (value: TraceApi.TestCaseNonHiddenGrade) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseGrade: {
    readonly hidden: (value: TraceApi.TestCaseHiddenGrade) => TraceApi.TestCaseGrade.Hidden;
    readonly nonHidden: (value: TraceApi.TestCaseNonHiddenGrade) => TraceApi.TestCaseGrade.NonHidden;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.TestCaseGrade._Unknown;
    readonly _visit: <_Result>(value: TraceApi.TestCaseGrade, visitor: TraceApi.TestCaseGrade._Visitor<_Result>) => _Result;
};
",
                        "name": "TestCaseGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseGrade = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.TestCaseGrade = {
    hidden: (value) => {
        return {
            ...value,
            type: \\"hidden\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestCaseGrade._visit(this, visitor);
            },
        };
    },
    nonHidden: (value) => {
        return {
            ...value,
            type: \\"nonHidden\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestCaseGrade._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestCaseGrade._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"hidden\\":
                return visitor.hidden(value);
            case \\"nonHidden\\":
                return visitor.nonHidden(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "TestCaseGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TestCaseHiddenGrade {
    passed: boolean;
}
",
                        "name": "TestCaseHiddenGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseHiddenGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestCaseNonHiddenGrade {
    passed: boolean;
    actualResult?: TraceApi.VariableValue;
    exception?: TraceApi.ExceptionV2;
    stdout: string;
}
",
                        "name": "TestCaseNonHiddenGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseNonHiddenGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestCaseResult {
    expectedResult: TraceApi.VariableValue;
    actualResult: TraceApi.ActualResult;
    passed: boolean;
}
",
                        "name": "TestCaseResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestCaseResultWithStdout {
    result: TraceApi.TestCaseResult;
    stdout: string;
}
",
                        "name": "TestCaseResultWithStdout.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseResultWithStdout.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestSubmissionState {
    problemId: TraceApi.ProblemId;
    defaultTestCases: TraceApi.TestCase[];
    customTestCases: TraceApi.TestCase[];
    status: TraceApi.TestSubmissionStatus;
}
",
                        "name": "TestSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type TestSubmissionStatus = TraceApi.TestSubmissionStatus.Stopped | TraceApi.TestSubmissionStatus.Errored | TraceApi.TestSubmissionStatus.Running | TraceApi.TestSubmissionStatus.TestCaseIdToState | TraceApi.TestSubmissionStatus._Unknown;
export declare namespace TestSubmissionStatus {
    interface Stopped extends _Utils {
        type: \\"stopped\\";
    }
    interface Errored extends _Utils {
        type: \\"errored\\";
        value: TraceApi.ErrorInfo;
    }
    interface Running extends _Utils {
        type: \\"running\\";
        value: TraceApi.RunningSubmissionState;
    }
    interface TestCaseIdToState extends _Utils {
        type: \\"testCaseIdToState\\";
        value: Record<string, TraceApi.SubmissionStatusForTestCase | undefined>;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.TestSubmissionStatus._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        stopped: () => _Result;
        errored: (value: TraceApi.ErrorInfo) => _Result;
        running: (value: TraceApi.RunningSubmissionState) => _Result;
        testCaseIdToState: (value: Record<string, TraceApi.SubmissionStatusForTestCase | undefined>) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestSubmissionStatus: {
    readonly stopped: () => TraceApi.TestSubmissionStatus.Stopped;
    readonly errored: (value: TraceApi.ErrorInfo) => TraceApi.TestSubmissionStatus.Errored;
    readonly running: (value: TraceApi.RunningSubmissionState) => TraceApi.TestSubmissionStatus.Running;
    readonly testCaseIdToState: (value: Record<string, TraceApi.SubmissionStatusForTestCase | undefined>) => TraceApi.TestSubmissionStatus.TestCaseIdToState;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.TestSubmissionStatus._Unknown;
    readonly _visit: <_Result>(value: TraceApi.TestSubmissionStatus, visitor: TraceApi.TestSubmissionStatus._Visitor<_Result>) => _Result;
};
",
                        "name": "TestSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionStatus = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.TestSubmissionStatus = {
    stopped: () => {
        return {
            type: \\"stopped\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionStatus._visit(this, visitor);
            },
        };
    },
    errored: (value) => {
        return {
            value: value,
            type: \\"errored\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionStatus._visit(this, visitor);
            },
        };
    },
    running: (value) => {
        return {
            value: value,
            type: \\"running\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionStatus._visit(this, visitor);
            },
        };
    },
    testCaseIdToState: (value) => {
        return {
            value: value,
            type: \\"testCaseIdToState\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionStatus._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionStatus._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"stopped\\":
                return visitor.stopped();
            case \\"errored\\":
                return visitor.errored(value.value);
            case \\"running\\":
                return visitor.running(value.value);
            case \\"testCaseIdToState\\":
                return visitor.testCaseIdToState(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "TestSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestSubmissionStatusV2 {
    updates: TraceApi.TestSubmissionUpdate[];
    problemId: TraceApi.ProblemId;
    problemVersion: number;
    problemInfo: TraceApi.v2.ProblemInfoV2;
}
",
                        "name": "TestSubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TestSubmissionUpdate {
    updateTime: Date;
    updateInfo: TraceApi.TestSubmissionUpdateInfo;
}
",
                        "name": "TestSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type TestSubmissionUpdateInfo = TraceApi.TestSubmissionUpdateInfo.Running | TraceApi.TestSubmissionUpdateInfo.Stopped | TraceApi.TestSubmissionUpdateInfo.Errored | TraceApi.TestSubmissionUpdateInfo.GradedTestCase | TraceApi.TestSubmissionUpdateInfo.RecordedTestCase | TraceApi.TestSubmissionUpdateInfo.Finished | TraceApi.TestSubmissionUpdateInfo._Unknown;
export declare namespace TestSubmissionUpdateInfo {
    interface Running extends _Utils {
        type: \\"running\\";
        value: TraceApi.RunningSubmissionState;
    }
    interface Stopped extends _Utils {
        type: \\"stopped\\";
    }
    interface Errored extends _Utils {
        type: \\"errored\\";
        value: TraceApi.ErrorInfo;
    }
    interface GradedTestCase extends TraceApi.GradedTestCaseUpdate, _Utils {
        type: \\"gradedTestCase\\";
    }
    interface RecordedTestCase extends TraceApi.RecordedTestCaseUpdate, _Utils {
        type: \\"recordedTestCase\\";
    }
    interface Finished extends _Utils {
        type: \\"finished\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.TestSubmissionUpdateInfo._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        running: (value: TraceApi.RunningSubmissionState) => _Result;
        stopped: () => _Result;
        errored: (value: TraceApi.ErrorInfo) => _Result;
        gradedTestCase: (value: TraceApi.GradedTestCaseUpdate) => _Result;
        recordedTestCase: (value: TraceApi.RecordedTestCaseUpdate) => _Result;
        finished: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestSubmissionUpdateInfo: {
    readonly running: (value: TraceApi.RunningSubmissionState) => TraceApi.TestSubmissionUpdateInfo.Running;
    readonly stopped: () => TraceApi.TestSubmissionUpdateInfo.Stopped;
    readonly errored: (value: TraceApi.ErrorInfo) => TraceApi.TestSubmissionUpdateInfo.Errored;
    readonly gradedTestCase: (value: TraceApi.GradedTestCaseUpdate) => TraceApi.TestSubmissionUpdateInfo.GradedTestCase;
    readonly recordedTestCase: (value: TraceApi.RecordedTestCaseUpdate) => TraceApi.TestSubmissionUpdateInfo.RecordedTestCase;
    readonly finished: () => TraceApi.TestSubmissionUpdateInfo.Finished;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.TestSubmissionUpdateInfo._Unknown;
    readonly _visit: <_Result>(value: TraceApi.TestSubmissionUpdateInfo, visitor: TraceApi.TestSubmissionUpdateInfo._Visitor<_Result>) => _Result;
};
",
                        "name": "TestSubmissionUpdateInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionUpdateInfo = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.TestSubmissionUpdateInfo = {
    running: (value) => {
        return {
            value: value,
            type: \\"running\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    stopped: () => {
        return {
            type: \\"stopped\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    errored: (value) => {
        return {
            value: value,
            type: \\"errored\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    gradedTestCase: (value) => {
        return {
            ...value,
            type: \\"gradedTestCase\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    recordedTestCase: (value) => {
        return {
            ...value,
            type: \\"recordedTestCase\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    finished: () => {
        return {
            type: \\"finished\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"running\\":
                return visitor.running(value.value);
            case \\"stopped\\":
                return visitor.stopped();
            case \\"errored\\":
                return visitor.errored(value.value);
            case \\"gradedTestCase\\":
                return visitor.gradedTestCase(value);
            case \\"recordedTestCase\\":
                return visitor.recordedTestCase(value);
            case \\"finished\\":
                return visitor.finished();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "TestSubmissionUpdateInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TraceResponse {
    submissionId: TraceApi.SubmissionId;
    lineNumber: number;
    returnValue?: TraceApi.DebugVariableValue;
    expressionLocation?: TraceApi.ExpressionLocation;
    stack: TraceApi.StackInformation;
    stdout?: string;
}
",
                        "name": "TraceResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TraceResponseV2 {
    submissionId: TraceApi.SubmissionId;
    lineNumber: number;
    file: TraceApi.TracedFile;
    returnValue?: TraceApi.DebugVariableValue;
    expressionLocation?: TraceApi.ExpressionLocation;
    stack: TraceApi.StackInformation;
    stdout?: string;
}
",
                        "name": "TraceResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TraceResponsesPage {
    /**
     * If present, use this to load subseqent pages.
     * The offset is the id of the next trace response to load.
     *
     */
    offset?: number;
    traceResponses: TraceApi.TraceResponse[];
}
",
                        "name": "TraceResponsesPage.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponsesPage.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TraceResponsesPageV2 {
    /**
     * If present, use this to load subseqent pages.
     * The offset is the id of the next trace response to load.
     *
     */
    offset?: number;
    traceResponses: TraceApi.TraceResponseV2[];
}
",
                        "name": "TraceResponsesPageV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponsesPageV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TracedFile {
    filename: string;
    directory: string;
}
",
                        "name": "TracedFile.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TracedFile.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface TracedTestCase {
    result: TraceApi.TestCaseResultWithStdout;
    traceResponsesSize: number;
}
",
                        "name": "TracedTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TracedTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface UnexpectedLanguageError {
    expectedLanguage: TraceApi.Language;
    actualLanguage: TraceApi.Language;
}
",
                        "name": "UnexpectedLanguageError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UnexpectedLanguageError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceFiles {
    mainFile: TraceApi.FileInfo;
    readOnlyFiles: TraceApi.FileInfo[];
}
",
                        "name": "WorkspaceFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceRanResponse {
    submissionId: TraceApi.SubmissionId;
    runDetails: TraceApi.WorkspaceRunDetails;
}
",
                        "name": "WorkspaceRanResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceRanResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceRunDetails {
    exceptionV2?: TraceApi.ExceptionV2;
    exception?: TraceApi.ExceptionInfo;
    stdout: string;
}
",
                        "name": "WorkspaceRunDetails.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceRunDetails.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceStarterFilesResponse {
    files: Record<TraceApi.Language, TraceApi.WorkspaceFiles | undefined>;
}
",
                        "name": "WorkspaceStarterFilesResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceStarterFilesResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceStarterFilesResponseV2 {
    filesByLanguage: Record<TraceApi.Language, TraceApi.v2.Files | undefined>;
}
",
                        "name": "WorkspaceStarterFilesResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceStarterFilesResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceSubmissionState {
    status: TraceApi.WorkspaceSubmissionStatus;
}
",
                        "name": "WorkspaceSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type WorkspaceSubmissionStatus = TraceApi.WorkspaceSubmissionStatus.Stopped | TraceApi.WorkspaceSubmissionStatus.Errored | TraceApi.WorkspaceSubmissionStatus.Running | TraceApi.WorkspaceSubmissionStatus.Ran | TraceApi.WorkspaceSubmissionStatus.Traced | TraceApi.WorkspaceSubmissionStatus._Unknown;
export declare namespace WorkspaceSubmissionStatus {
    interface Stopped extends _Utils {
        type: \\"stopped\\";
    }
    interface Errored extends _Utils {
        type: \\"errored\\";
        value: TraceApi.ErrorInfo;
    }
    interface Running extends _Utils {
        type: \\"running\\";
        value: TraceApi.RunningSubmissionState;
    }
    interface Ran extends TraceApi.WorkspaceRunDetails, _Utils {
        type: \\"ran\\";
    }
    interface Traced extends TraceApi.WorkspaceRunDetails, _Utils {
        type: \\"traced\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.WorkspaceSubmissionStatus._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        stopped: () => _Result;
        errored: (value: TraceApi.ErrorInfo) => _Result;
        running: (value: TraceApi.RunningSubmissionState) => _Result;
        ran: (value: TraceApi.WorkspaceRunDetails) => _Result;
        traced: (value: TraceApi.WorkspaceRunDetails) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const WorkspaceSubmissionStatus: {
    readonly stopped: () => TraceApi.WorkspaceSubmissionStatus.Stopped;
    readonly errored: (value: TraceApi.ErrorInfo) => TraceApi.WorkspaceSubmissionStatus.Errored;
    readonly running: (value: TraceApi.RunningSubmissionState) => TraceApi.WorkspaceSubmissionStatus.Running;
    readonly ran: (value: TraceApi.WorkspaceRunDetails) => TraceApi.WorkspaceSubmissionStatus.Ran;
    readonly traced: (value: TraceApi.WorkspaceRunDetails) => TraceApi.WorkspaceSubmissionStatus.Traced;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.WorkspaceSubmissionStatus._Unknown;
    readonly _visit: <_Result>(value: TraceApi.WorkspaceSubmissionStatus, visitor: TraceApi.WorkspaceSubmissionStatus._Visitor<_Result>) => _Result;
};
",
                        "name": "WorkspaceSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionStatus = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.WorkspaceSubmissionStatus = {
    stopped: () => {
        return {
            type: \\"stopped\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._visit(this, visitor);
            },
        };
    },
    errored: (value) => {
        return {
            value: value,
            type: \\"errored\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._visit(this, visitor);
            },
        };
    },
    running: (value) => {
        return {
            value: value,
            type: \\"running\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._visit(this, visitor);
            },
        };
    },
    ran: (value) => {
        return {
            ...value,
            type: \\"ran\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._visit(this, visitor);
            },
        };
    },
    traced: (value) => {
        return {
            ...value,
            type: \\"traced\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"stopped\\":
                return visitor.stopped();
            case \\"errored\\":
                return visitor.errored(value.value);
            case \\"running\\":
                return visitor.running(value.value);
            case \\"ran\\":
                return visitor.ran(value);
            case \\"traced\\":
                return visitor.traced(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "WorkspaceSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceSubmissionStatusV2 {
    updates: TraceApi.WorkspaceSubmissionUpdate[];
}
",
                        "name": "WorkspaceSubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceSubmissionUpdate {
    updateTime: Date;
    updateInfo: TraceApi.WorkspaceSubmissionUpdateInfo;
}
",
                        "name": "WorkspaceSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export declare type WorkspaceSubmissionUpdateInfo = TraceApi.WorkspaceSubmissionUpdateInfo.Running | TraceApi.WorkspaceSubmissionUpdateInfo.Ran | TraceApi.WorkspaceSubmissionUpdateInfo.Stopped | TraceApi.WorkspaceSubmissionUpdateInfo.Traced | TraceApi.WorkspaceSubmissionUpdateInfo.TracedV2 | TraceApi.WorkspaceSubmissionUpdateInfo.Errored | TraceApi.WorkspaceSubmissionUpdateInfo.Finished | TraceApi.WorkspaceSubmissionUpdateInfo._Unknown;
export declare namespace WorkspaceSubmissionUpdateInfo {
    interface Running extends _Utils {
        type: \\"running\\";
        value: TraceApi.RunningSubmissionState;
    }
    interface Ran extends TraceApi.WorkspaceRunDetails, _Utils {
        type: \\"ran\\";
    }
    interface Stopped extends _Utils {
        type: \\"stopped\\";
    }
    interface Traced extends _Utils {
        type: \\"traced\\";
    }
    interface TracedV2 extends TraceApi.WorkspaceTracedUpdate, _Utils {
        type: \\"tracedV2\\";
    }
    interface Errored extends _Utils {
        type: \\"errored\\";
        value: TraceApi.ErrorInfo;
    }
    interface Finished extends _Utils {
        type: \\"finished\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.WorkspaceSubmissionUpdateInfo._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        running: (value: TraceApi.RunningSubmissionState) => _Result;
        ran: (value: TraceApi.WorkspaceRunDetails) => _Result;
        stopped: () => _Result;
        traced: () => _Result;
        tracedV2: (value: TraceApi.WorkspaceTracedUpdate) => _Result;
        errored: (value: TraceApi.ErrorInfo) => _Result;
        finished: () => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const WorkspaceSubmissionUpdateInfo: {
    readonly running: (value: TraceApi.RunningSubmissionState) => TraceApi.WorkspaceSubmissionUpdateInfo.Running;
    readonly ran: (value: TraceApi.WorkspaceRunDetails) => TraceApi.WorkspaceSubmissionUpdateInfo.Ran;
    readonly stopped: () => TraceApi.WorkspaceSubmissionUpdateInfo.Stopped;
    readonly traced: () => TraceApi.WorkspaceSubmissionUpdateInfo.Traced;
    readonly tracedV2: (value: TraceApi.WorkspaceTracedUpdate) => TraceApi.WorkspaceSubmissionUpdateInfo.TracedV2;
    readonly errored: (value: TraceApi.ErrorInfo) => TraceApi.WorkspaceSubmissionUpdateInfo.Errored;
    readonly finished: () => TraceApi.WorkspaceSubmissionUpdateInfo.Finished;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.WorkspaceSubmissionUpdateInfo._Unknown;
    readonly _visit: <_Result>(value: TraceApi.WorkspaceSubmissionUpdateInfo, visitor: TraceApi.WorkspaceSubmissionUpdateInfo._Visitor<_Result>) => _Result;
};
",
                        "name": "WorkspaceSubmissionUpdateInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionUpdateInfo = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.WorkspaceSubmissionUpdateInfo = {
    running: (value) => {
        return {
            value: value,
            type: \\"running\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    ran: (value) => {
        return {
            ...value,
            type: \\"ran\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    stopped: () => {
        return {
            type: \\"stopped\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    traced: () => {
        return {
            type: \\"traced\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    tracedV2: (value) => {
        return {
            ...value,
            type: \\"tracedV2\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    errored: (value) => {
        return {
            value: value,
            type: \\"errored\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    finished: () => {
        return {
            type: \\"finished\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"running\\":
                return visitor.running(value.value);
            case \\"ran\\":
                return visitor.ran(value);
            case \\"stopped\\":
                return visitor.stopped();
            case \\"traced\\":
                return visitor.traced();
            case \\"tracedV2\\":
                return visitor.tracedV2(value);
            case \\"errored\\":
                return visitor.errored(value.value);
            case \\"finished\\":
                return visitor.finished();
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "WorkspaceSubmissionUpdateInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
export interface WorkspaceSubmitRequest {
    submissionId: TraceApi.SubmissionId;
    language: TraceApi.Language;
    submissionFiles: TraceApi.SubmissionFileInfo[];
    userId?: string;
}
",
                        "name": "WorkspaceSubmitRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmitRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface WorkspaceTracedUpdate {
    traceResponsesSize: number;
}
",
                        "name": "WorkspaceTracedUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceTracedUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./SubmissionId\\";
export * from \\"./ShareId\\";
export * from \\"./SubmissionRequest\\";
export * from \\"./InitializeProblemRequest\\";
export * from \\"./SubmitRequestV2\\";
export * from \\"./WorkspaceSubmitRequest\\";
export * from \\"./SubmissionFileInfo\\";
export * from \\"./SubmissionTypeEnum\\";
export * from \\"./StopRequest\\";
export * from \\"./SubmissionResponse\\";
export * from \\"./CodeExecutionUpdate\\";
export * from \\"./BuildingExecutorResponse\\";
export * from \\"./RunningResponse\\";
export * from \\"./RunningSubmissionState\\";
export * from \\"./ErroredResponse\\";
export * from \\"./ErrorInfo\\";
export * from \\"./CompileError\\";
export * from \\"./RuntimeError\\";
export * from \\"./InternalError\\";
export * from \\"./StoppedResponse\\";
export * from \\"./WorkspaceRanResponse\\";
export * from \\"./WorkspaceRunDetails\\";
export * from \\"./GradedResponse\\";
export * from \\"./GradedResponseV2\\";
export * from \\"./TestCaseGrade\\";
export * from \\"./TestCaseHiddenGrade\\";
export * from \\"./TestCaseNonHiddenGrade\\";
export * from \\"./RecordedResponseNotification\\";
export * from \\"./RecordingResponseNotification\\";
export * from \\"./LightweightStackframeInformation\\";
export * from \\"./TestCaseResultWithStdout\\";
export * from \\"./TestCaseResult\\";
export * from \\"./ActualResult\\";
export * from \\"./ExceptionV2\\";
export * from \\"./ExceptionInfo\\";
export * from \\"./InvalidRequestResponse\\";
export * from \\"./InvalidRequestCause\\";
export * from \\"./ExistingSubmissionExecuting\\";
export * from \\"./SubmissionIdNotFound\\";
export * from \\"./CustomTestCasesUnsupported\\";
export * from \\"./UnexpectedLanguageError\\";
export * from \\"./TerminatedResponse\\";
export * from \\"./FinishedResponse\\";
export * from \\"./StdoutResponse\\";
export * from \\"./StderrResponse\\";
export * from \\"./TraceResponse\\";
export * from \\"./TraceResponseV2\\";
export * from \\"./TracedFile\\";
export * from \\"./ExpressionLocation\\";
export * from \\"./StackInformation\\";
export * from \\"./StackFrame\\";
export * from \\"./Scope\\";
export * from \\"./ExecutionSessionResponse\\";
export * from \\"./ExecutionSessionStatus\\";
export * from \\"./SubmissionStatusV2\\";
export * from \\"./TestSubmissionStatusV2\\";
export * from \\"./WorkspaceSubmissionStatusV2\\";
export * from \\"./TestSubmissionUpdate\\";
export * from \\"./TestSubmissionUpdateInfo\\";
export * from \\"./WorkspaceSubmissionUpdate\\";
export * from \\"./WorkspaceSubmissionUpdateInfo\\";
export * from \\"./GradedTestCaseUpdate\\";
export * from \\"./RecordedTestCaseUpdate\\";
export * from \\"./WorkspaceTracedUpdate\\";
export * from \\"./SubmissionTypeState\\";
export * from \\"./WorkspaceSubmissionState\\";
export * from \\"./WorkspaceSubmissionStatus\\";
export * from \\"./TestSubmissionState\\";
export * from \\"./TestSubmissionStatus\\";
export * from \\"./SubmissionStatusForTestCase\\";
export * from \\"./TracedTestCase\\";
export * from \\"./TraceResponsesPage\\";
export * from \\"./TraceResponsesPageV2\\";
export * from \\"./GetTraceResponsesPageRequest\\";
export * from \\"./WorkspaceStarterFilesResponse\\";
export * from \\"./WorkspaceStarterFilesResponseV2\\";
export * from \\"./WorkspaceFiles\\";
export * from \\"./ExecutionSessionState\\";
export * from \\"./GetExecutionSessionStateResponse\\";
export * from \\"./GetSubmissionStateResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./SubmissionId\\"), exports);
__exportStar(require(\\"./ShareId\\"), exports);
__exportStar(require(\\"./SubmissionRequest\\"), exports);
__exportStar(require(\\"./InitializeProblemRequest\\"), exports);
__exportStar(require(\\"./SubmitRequestV2\\"), exports);
__exportStar(require(\\"./WorkspaceSubmitRequest\\"), exports);
__exportStar(require(\\"./SubmissionFileInfo\\"), exports);
__exportStar(require(\\"./SubmissionTypeEnum\\"), exports);
__exportStar(require(\\"./StopRequest\\"), exports);
__exportStar(require(\\"./SubmissionResponse\\"), exports);
__exportStar(require(\\"./CodeExecutionUpdate\\"), exports);
__exportStar(require(\\"./BuildingExecutorResponse\\"), exports);
__exportStar(require(\\"./RunningResponse\\"), exports);
__exportStar(require(\\"./RunningSubmissionState\\"), exports);
__exportStar(require(\\"./ErroredResponse\\"), exports);
__exportStar(require(\\"./ErrorInfo\\"), exports);
__exportStar(require(\\"./CompileError\\"), exports);
__exportStar(require(\\"./RuntimeError\\"), exports);
__exportStar(require(\\"./InternalError\\"), exports);
__exportStar(require(\\"./StoppedResponse\\"), exports);
__exportStar(require(\\"./WorkspaceRanResponse\\"), exports);
__exportStar(require(\\"./WorkspaceRunDetails\\"), exports);
__exportStar(require(\\"./GradedResponse\\"), exports);
__exportStar(require(\\"./GradedResponseV2\\"), exports);
__exportStar(require(\\"./TestCaseGrade\\"), exports);
__exportStar(require(\\"./TestCaseHiddenGrade\\"), exports);
__exportStar(require(\\"./TestCaseNonHiddenGrade\\"), exports);
__exportStar(require(\\"./RecordedResponseNotification\\"), exports);
__exportStar(require(\\"./RecordingResponseNotification\\"), exports);
__exportStar(require(\\"./LightweightStackframeInformation\\"), exports);
__exportStar(require(\\"./TestCaseResultWithStdout\\"), exports);
__exportStar(require(\\"./TestCaseResult\\"), exports);
__exportStar(require(\\"./ActualResult\\"), exports);
__exportStar(require(\\"./ExceptionV2\\"), exports);
__exportStar(require(\\"./ExceptionInfo\\"), exports);
__exportStar(require(\\"./InvalidRequestResponse\\"), exports);
__exportStar(require(\\"./InvalidRequestCause\\"), exports);
__exportStar(require(\\"./ExistingSubmissionExecuting\\"), exports);
__exportStar(require(\\"./SubmissionIdNotFound\\"), exports);
__exportStar(require(\\"./CustomTestCasesUnsupported\\"), exports);
__exportStar(require(\\"./UnexpectedLanguageError\\"), exports);
__exportStar(require(\\"./TerminatedResponse\\"), exports);
__exportStar(require(\\"./FinishedResponse\\"), exports);
__exportStar(require(\\"./StdoutResponse\\"), exports);
__exportStar(require(\\"./StderrResponse\\"), exports);
__exportStar(require(\\"./TraceResponse\\"), exports);
__exportStar(require(\\"./TraceResponseV2\\"), exports);
__exportStar(require(\\"./TracedFile\\"), exports);
__exportStar(require(\\"./ExpressionLocation\\"), exports);
__exportStar(require(\\"./StackInformation\\"), exports);
__exportStar(require(\\"./StackFrame\\"), exports);
__exportStar(require(\\"./Scope\\"), exports);
__exportStar(require(\\"./ExecutionSessionResponse\\"), exports);
__exportStar(require(\\"./ExecutionSessionStatus\\"), exports);
__exportStar(require(\\"./SubmissionStatusV2\\"), exports);
__exportStar(require(\\"./TestSubmissionStatusV2\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionStatusV2\\"), exports);
__exportStar(require(\\"./TestSubmissionUpdate\\"), exports);
__exportStar(require(\\"./TestSubmissionUpdateInfo\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionUpdate\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionUpdateInfo\\"), exports);
__exportStar(require(\\"./GradedTestCaseUpdate\\"), exports);
__exportStar(require(\\"./RecordedTestCaseUpdate\\"), exports);
__exportStar(require(\\"./WorkspaceTracedUpdate\\"), exports);
__exportStar(require(\\"./SubmissionTypeState\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionState\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionStatus\\"), exports);
__exportStar(require(\\"./TestSubmissionState\\"), exports);
__exportStar(require(\\"./TestSubmissionStatus\\"), exports);
__exportStar(require(\\"./SubmissionStatusForTestCase\\"), exports);
__exportStar(require(\\"./TracedTestCase\\"), exports);
__exportStar(require(\\"./TraceResponsesPage\\"), exports);
__exportStar(require(\\"./TraceResponsesPageV2\\"), exports);
__exportStar(require(\\"./GetTraceResponsesPageRequest\\"), exports);
__exportStar(require(\\"./WorkspaceStarterFilesResponse\\"), exports);
__exportStar(require(\\"./WorkspaceStarterFilesResponseV2\\"), exports);
__exportStar(require(\\"./WorkspaceFiles\\"), exports);
__exportStar(require(\\"./ExecutionSessionState\\"), exports);
__exportStar(require(\\"./GetExecutionSessionStateResponse\\"), exports);
__exportStar(require(\\"./GetSubmissionStateResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "submission",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { TraceApi } from \\"../../../..\\";
export declare namespace Sysprop {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Sysprop {
    private readonly options;
    constructor(options: Sysprop.Options);
    setNumWarmInstances(language: TraceApi.Language, numWarmInstances: number): Promise<core.APIResponse<void, TraceApi.sysprop.setNumWarmInstances.Error>>;
    getNumWarmInstances(): Promise<core.APIResponse<Record<TraceApi.Language, number | undefined>, TraceApi.sysprop.getNumWarmInstances.Error>>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Sysprop = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const api_sdk_1 = require(\\"../../../..\\");
const serializers = __importStar(require(\\"../../../../serialization\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
class Sysprop {
    options;
    constructor(options) {
        this.options = options;
    }
    async setNumWarmInstances(language, numWarmInstances) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/sysprop/num-warm-instances/\${await serializers.Language.jsonOrThrow(language)}/\${numWarmInstances}\`),
            method: \\"PUT\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: undefined,
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.sysprop.setNumWarmInstances.Error._unknown(_response.error),
        };
    }
    async getNumWarmInstances() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/sysprop/num-warm-instances\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.sysprop.getNumWarmInstances.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.sysprop.getNumWarmInstances.Error._unknown(_response.error),
        };
    }
}
exports.Sysprop = Sysprop;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.sysprop.getNumWarmInstances.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.sysprop.getNumWarmInstances.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.sysprop.getNumWarmInstances.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.sysprop.getNumWarmInstances.Error, visitor: TraceApi.sysprop.getNumWarmInstances.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "getNumWarmInstances.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.sysprop.getNumWarmInstances.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "getNumWarmInstances.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as setNumWarmInstances from \\"./setNumWarmInstances\\";
export * as getNumWarmInstances from \\"./getNumWarmInstances\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getNumWarmInstances = exports.setNumWarmInstances = void 0;
exports.setNumWarmInstances = __importStar(require(\\"./setNumWarmInstances\\"));
exports.getNumWarmInstances = __importStar(require(\\"./getNumWarmInstances\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare type Error = TraceApi.sysprop.setNumWarmInstances.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.sysprop.setNumWarmInstances.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.sysprop.setNumWarmInstances.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.sysprop.setNumWarmInstances.Error, visitor: TraceApi.sysprop.setNumWarmInstances.Error._Visitor<_Result>) => _Result;
};
",
                        "name": "setNumWarmInstances.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.sysprop.setNumWarmInstances.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                        "name": "setNumWarmInstances.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "sysprop",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { Problem } from \\"../resources/problem/client/Client\\";
import { V3 } from \\"../resources/v3/client/Client\\";
export declare namespace V2 {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class V2 {
    private readonly options;
    constructor(options: V2.Options);
    private _problem;
    get problem(): Problem;
    private _v3;
    get v3(): V3;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.V2 = void 0;
const Client_1 = require(\\"../resources/problem/client/Client\\");
const Client_2 = require(\\"../resources/v3/client/Client\\");
class V2 {
    options;
    constructor(options) {
        this.options = options;
    }
    _problem;
    get problem() {
        return (this._problem ??= new Client_1.Problem(this.options));
    }
    _v3;
    get v3() {
        return (this._v3 ??= new Client_2.V3(this.options));
    }
}
exports.V2 = V2;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as v3 from \\"./v3\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.v3 = exports.problem = void 0;
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
exports.v3 = __importStar(require(\\"./v3\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../../../environments\\";
import * as core from \\"../../../../../../core\\";
import { TraceApi } from \\"../../../../../..\\";
export declare namespace Problem {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Problem {
    private readonly options;
    constructor(options: Problem.Options);
    /**
     * Returns lightweight versions of all problems
     */
    getLightweightProblems(): Promise<core.APIResponse<TraceApi.v2.LightweightProblemInfoV2[], TraceApi.v2.problem.getLightweightProblems.Error>>;
    /**
     * Returns latest versions of all problems
     */
    getProblems(): Promise<core.APIResponse<TraceApi.v2.ProblemInfoV2[], TraceApi.v2.problem.getProblems.Error>>;
    /**
     * Returns latest version of a problem
     */
    getLatestProblem(problemId: TraceApi.ProblemId): Promise<core.APIResponse<TraceApi.v2.ProblemInfoV2, TraceApi.v2.problem.getLatestProblem.Error>>;
    /**
     * Returns requested version of a problem
     */
    getProblemVersion(problemId: TraceApi.ProblemId, problemVersion: number): Promise<core.APIResponse<TraceApi.v2.ProblemInfoV2, TraceApi.v2.problem.getProblemVersion.Error>>;
}
",
                                "name": "Client.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Problem = void 0;
const environments = __importStar(require(\\"../../../../../../environments\\"));
const core = __importStar(require(\\"../../../../../../core\\"));
const api_sdk_1 = require(\\"../../../../../..\\");
const url_join_1 = __importDefault(require(\\"url-join\\"));
const serializers = __importStar(require(\\"../../../../../../serialization\\"));
class Problem {
    options;
    constructor(options) {
        this.options = options;
    }
    /**
     * Returns lightweight versions of all problems
     */
    async getLightweightProblems() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/problems-v2/lightweight-problem-info\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.problem.getLightweightProblems.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.problem.getLightweightProblems.Error._unknown(_response.error),
        };
    }
    /**
     * Returns latest versions of all problems
     */
    async getProblems() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/problems-v2/problem-info\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.problem.getProblems.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.problem.getProblems.Error._unknown(_response.error),
        };
    }
    /**
     * Returns latest version of a problem
     */
    async getLatestProblem(problemId) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/problems-v2/problem-info/\${await serializers.ProblemId.jsonOrThrow(problemId)}\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.ProblemInfoV2.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.problem.getLatestProblem.Error._unknown(_response.error),
        };
    }
    /**
     * Returns requested version of a problem
     */
    async getProblemVersion(problemId, problemVersion) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/problems-v2/problem-info/\${await serializers.ProblemId.jsonOrThrow(problemId)}/version/\${problemVersion}\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.ProblemInfoV2.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.problem.getProblemVersion.Error._unknown(_response.error),
        };
    }
}
exports.Problem = Problem;
",
                                "name": "Client.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare type Error = TraceApi.v2.problem.getLatestProblem.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.problem.getLatestProblem.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.problem.getLatestProblem.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.problem.getLatestProblem.Error, visitor: TraceApi.v2.problem.getLatestProblem.Error._Visitor<_Result>) => _Result;
};
",
                                "name": "getLatestProblem.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.problem.getLatestProblem.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "getLatestProblem.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare type Error = TraceApi.v2.problem.getLightweightProblems.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.problem.getLightweightProblems.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.problem.getLightweightProblems.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.problem.getLightweightProblems.Error, visitor: TraceApi.v2.problem.getLightweightProblems.Error._Visitor<_Result>) => _Result;
};
",
                                "name": "getLightweightProblems.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.problem.getLightweightProblems.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "getLightweightProblems.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare type Error = TraceApi.v2.problem.getProblemVersion.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.problem.getProblemVersion.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.problem.getProblemVersion.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.problem.getProblemVersion.Error, visitor: TraceApi.v2.problem.getProblemVersion.Error._Visitor<_Result>) => _Result;
};
",
                                "name": "getProblemVersion.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.problem.getProblemVersion.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "getProblemVersion.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare type Error = TraceApi.v2.problem.getProblems.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.problem.getProblems.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.problem.getProblems.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.problem.getProblems.Error, visitor: TraceApi.v2.problem.getProblems.Error._Visitor<_Result>) => _Result;
};
",
                                "name": "getProblems.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.problem.getProblems.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "getProblems.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * as getLightweightProblems from \\"./getLightweightProblems\\";
export * as getProblems from \\"./getProblems\\";
export * as getLatestProblem from \\"./getLatestProblem\\";
export * as getProblemVersion from \\"./getProblemVersion\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getProblemVersion = exports.getLatestProblem = exports.getProblems = exports.getLightweightProblems = void 0;
exports.getLightweightProblems = __importStar(require(\\"./getLightweightProblems\\"));
exports.getProblems = __importStar(require(\\"./getProblems\\"));
exports.getLatestProblem = __importStar(require(\\"./getLatestProblem\\"));
exports.getProblemVersion = __importStar(require(\\"./getProblemVersion\\"));
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                            "name": "index.js",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type AssertCorrectnessCheck = TraceApi.v2.AssertCorrectnessCheck.DeepEquality | TraceApi.v2.AssertCorrectnessCheck.Custom | TraceApi.v2.AssertCorrectnessCheck._Unknown;
export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends TraceApi.v2.DeepEqualityCorrectnessCheck, _Utils {
        type: \\"deepEquality\\";
    }
    interface Custom extends TraceApi.v2.VoidFunctionDefinitionThatTakesActualResult, _Utils {
        type: \\"custom\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.AssertCorrectnessCheck._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        deepEquality: (value: TraceApi.v2.DeepEqualityCorrectnessCheck) => _Result;
        custom: (value: TraceApi.v2.VoidFunctionDefinitionThatTakesActualResult) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const AssertCorrectnessCheck: {
    readonly deepEquality: (value: TraceApi.v2.DeepEqualityCorrectnessCheck) => TraceApi.v2.AssertCorrectnessCheck.DeepEquality;
    readonly custom: (value: TraceApi.v2.VoidFunctionDefinitionThatTakesActualResult) => TraceApi.v2.AssertCorrectnessCheck.Custom;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.AssertCorrectnessCheck._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.AssertCorrectnessCheck, visitor: TraceApi.v2.AssertCorrectnessCheck._Visitor<_Result>) => _Result;
};
",
                                "name": "AssertCorrectnessCheck.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AssertCorrectnessCheck = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.AssertCorrectnessCheck = {
    deepEquality: (value) => {
        return {
            ...value,
            type: \\"deepEquality\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },
    custom: (value) => {
        return {
            ...value,
            type: \\"custom\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"deepEquality\\":
                return visitor.deepEquality(value);
            case \\"custom\\":
                return visitor.custom(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "AssertCorrectnessCheck.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface BasicCustomFiles {
    methodName: string;
    signature: TraceApi.v2.NonVoidFunctionSignature;
    additionalFiles: Record<TraceApi.Language, TraceApi.v2.Files | undefined>;
    basicTestCaseTemplate: TraceApi.v2.BasicTestCaseTemplate;
}
",
                                "name": "BasicCustomFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "BasicCustomFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface BasicTestCaseTemplate {
    templateId: TraceApi.v2.TestCaseTemplateId;
    name: string;
    description: TraceApi.v2.TestCaseImplementationDescription;
    expectedValueParameterId: TraceApi.v2.ParameterId;
}
",
                                "name": "BasicTestCaseTemplate.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "BasicTestCaseTemplate.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface CreateProblemRequestV2 {
    problemName: string;
    problemDescription: TraceApi.ProblemDescription;
    customFiles: TraceApi.v2.CustomFiles;
    customTestCaseTemplates: TraceApi.v2.TestCaseTemplate[];
    testcases: TraceApi.v2.TestCaseV2[];
    supportedLanguages: TraceApi.Language[];
    isPublic: boolean;
}
",
                                "name": "CreateProblemRequestV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "CreateProblemRequestV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type CustomFiles = TraceApi.v2.CustomFiles.Basic | TraceApi.v2.CustomFiles.Custom | TraceApi.v2.CustomFiles._Unknown;
export declare namespace CustomFiles {
    interface Basic extends TraceApi.v2.BasicCustomFiles, _Utils {
        type: \\"basic\\";
    }
    interface Custom extends _Utils {
        type: \\"custom\\";
        value: Record<TraceApi.Language, TraceApi.v2.Files | undefined>;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.CustomFiles._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        basic: (value: TraceApi.v2.BasicCustomFiles) => _Result;
        custom: (value: Record<TraceApi.Language, TraceApi.v2.Files | undefined>) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const CustomFiles: {
    readonly basic: (value: TraceApi.v2.BasicCustomFiles) => TraceApi.v2.CustomFiles.Basic;
    readonly custom: (value: Record<TraceApi.Language, TraceApi.v2.Files | undefined>) => TraceApi.v2.CustomFiles.Custom;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.CustomFiles._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.CustomFiles, visitor: TraceApi.v2.CustomFiles._Visitor<_Result>) => _Result;
};
",
                                "name": "CustomFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CustomFiles = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.CustomFiles = {
    basic: (value) => {
        return {
            ...value,
            type: \\"basic\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.CustomFiles._visit(this, visitor);
            },
        };
    },
    custom: (value) => {
        return {
            value: value,
            type: \\"custom\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.CustomFiles._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.CustomFiles._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"basic\\":
                return visitor.basic(value);
            case \\"custom\\":
                return visitor.custom(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "CustomFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface DeepEqualityCorrectnessCheck {
    expectedValueParameterId: TraceApi.v2.ParameterId;
}
",
                                "name": "DeepEqualityCorrectnessCheck.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "DeepEqualityCorrectnessCheck.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface DefaultProvidedFile {
    file: TraceApi.v2.FileInfoV2;
    relatedTypes: TraceApi.VariableType[];
}
",
                                "name": "DefaultProvidedFile.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "DefaultProvidedFile.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FileInfoV2 {
    filename: string;
    directory: string;
    contents: string;
    editable: boolean;
}
",
                                "name": "FileInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FileInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface Files {
    files: TraceApi.v2.FileInfoV2[];
}
",
                                "name": "Files.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "Files.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FunctionImplementation {
    impl: string;
    imports?: string;
}
",
                                "name": "FunctionImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FunctionImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface FunctionImplementationForMultipleLanguages {
    codeByLanguage: Record<TraceApi.Language, TraceApi.v2.FunctionImplementation | undefined>;
}
",
                                "name": "FunctionImplementationForMultipleLanguages.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FunctionImplementationForMultipleLanguages.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type FunctionSignature = TraceApi.v2.FunctionSignature.Void | TraceApi.v2.FunctionSignature.NonVoid
/**
 * Useful when specifying custom grading for a testcase where actualResult is defined. */
 | TraceApi.v2.FunctionSignature.VoidThatTakesActualResult | TraceApi.v2.FunctionSignature._Unknown;
export declare namespace FunctionSignature {
    interface Void extends TraceApi.v2.VoidFunctionSignature, _Utils {
        type: \\"void\\";
    }
    interface NonVoid extends TraceApi.v2.NonVoidFunctionSignature, _Utils {
        type: \\"nonVoid\\";
    }
    interface VoidThatTakesActualResult extends TraceApi.v2.VoidFunctionSignatureThatTakesActualResult, _Utils {
        type: \\"voidThatTakesActualResult\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.FunctionSignature._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        void: (value: TraceApi.v2.VoidFunctionSignature) => _Result;
        nonVoid: (value: TraceApi.v2.NonVoidFunctionSignature) => _Result;
        voidThatTakesActualResult: (value: TraceApi.v2.VoidFunctionSignatureThatTakesActualResult) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const FunctionSignature: {
    readonly void: (value: TraceApi.v2.VoidFunctionSignature) => TraceApi.v2.FunctionSignature.Void;
    readonly nonVoid: (value: TraceApi.v2.NonVoidFunctionSignature) => TraceApi.v2.FunctionSignature.NonVoid;
    readonly voidThatTakesActualResult: (value: TraceApi.v2.VoidFunctionSignatureThatTakesActualResult) => TraceApi.v2.FunctionSignature.VoidThatTakesActualResult;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.FunctionSignature._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.FunctionSignature, visitor: TraceApi.v2.FunctionSignature._Visitor<_Result>) => _Result;
};
",
                                "name": "FunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionSignature = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.FunctionSignature = {
    void: (value) => {
        return {
            ...value,
            type: \\"void\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.FunctionSignature._visit(this, visitor);
            },
        };
    },
    nonVoid: (value) => {
        return {
            ...value,
            type: \\"nonVoid\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.FunctionSignature._visit(this, visitor);
            },
        };
    },
    voidThatTakesActualResult: (value) => {
        return {
            ...value,
            type: \\"voidThatTakesActualResult\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.FunctionSignature._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.FunctionSignature._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"void\\":
                return visitor.void(value);
            case \\"nonVoid\\":
                return visitor.nonVoid(value);
            case \\"voidThatTakesActualResult\\":
                return visitor.voidThatTakesActualResult(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "FunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GeneratedFiles {
    generatedTestCaseFiles: Record<TraceApi.Language, TraceApi.v2.Files | undefined>;
    generatedTemplateFiles: Record<TraceApi.Language, TraceApi.v2.Files | undefined>;
    other: Record<TraceApi.Language, TraceApi.v2.Files | undefined>;
}
",
                                "name": "GeneratedFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GeneratedFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GetBasicSolutionFileRequest {
    methodName: string;
    signature: TraceApi.v2.NonVoidFunctionSignature;
}
",
                                "name": "GetBasicSolutionFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetBasicSolutionFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GetBasicSolutionFileResponse {
    solutionFileByLanguage: Record<TraceApi.Language, TraceApi.v2.FileInfoV2 | undefined>;
}
",
                                "name": "GetBasicSolutionFileResponse.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetBasicSolutionFileResponse.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GetFunctionSignatureRequest {
    functionSignature: TraceApi.v2.FunctionSignature;
}
",
                                "name": "GetFunctionSignatureRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetFunctionSignatureRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GetFunctionSignatureResponse {
    functionByLanguage: Record<TraceApi.Language, string | undefined>;
}
",
                                "name": "GetFunctionSignatureResponse.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetFunctionSignatureResponse.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GetGeneratedTestCaseFileRequest {
    template?: TraceApi.v2.TestCaseTemplate;
    testCase: TraceApi.v2.TestCaseV2;
}
",
                                "name": "GetGeneratedTestCaseFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetGeneratedTestCaseFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface GetGeneratedTestCaseTemplateFileRequest {
    template: TraceApi.v2.TestCaseTemplate;
}
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface LightweightProblemInfoV2 {
    problemId: TraceApi.ProblemId;
    problemName: string;
    problemVersion: number;
    variableTypes: TraceApi.VariableType[];
}
",
                                "name": "LightweightProblemInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "LightweightProblemInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface NonVoidFunctionDefinition {
    signature: TraceApi.v2.NonVoidFunctionSignature;
    code: TraceApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "NonVoidFunctionDefinition.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "NonVoidFunctionDefinition.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface NonVoidFunctionSignature {
    parameters: TraceApi.v2.Parameter[];
    returnType: TraceApi.VariableType;
}
",
                                "name": "NonVoidFunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "NonVoidFunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface Parameter {
    parameterId: TraceApi.v2.ParameterId;
    name: string;
    variableType: TraceApi.VariableType;
}
",
                                "name": "Parameter.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "Parameter.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type ParameterId = string & {
    v2_ParameterId: void;
};
export declare function ParameterId(value: string): TraceApi.v2.ParameterId;
",
                                "name": "ParameterId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParameterId = void 0;
function ParameterId(value) {
    return value;
}
exports.ParameterId = ParameterId;
",
                                "name": "ParameterId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface ProblemInfoV2 {
    problemId: TraceApi.ProblemId;
    problemDescription: TraceApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    supportedLanguages: TraceApi.Language[];
    customFiles: TraceApi.v2.CustomFiles;
    generatedFiles: TraceApi.v2.GeneratedFiles;
    customTestCaseTemplates: TraceApi.v2.TestCaseTemplate[];
    testcases: TraceApi.v2.TestCaseV2[];
    isPublic: boolean;
}
",
                                "name": "ProblemInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "ProblemInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TestCaseExpects {
    expectedStdout?: string;
}
",
                                "name": "TestCaseExpects.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseExpects.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type TestCaseFunction = TraceApi.v2.TestCaseFunction.WithActualResult | TraceApi.v2.TestCaseFunction.Custom | TraceApi.v2.TestCaseFunction._Unknown;
export declare namespace TestCaseFunction {
    interface WithActualResult extends TraceApi.v2.TestCaseWithActualResultImplementation, _Utils {
        type: \\"withActualResult\\";
    }
    interface Custom extends TraceApi.v2.VoidFunctionDefinition, _Utils {
        type: \\"custom\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.TestCaseFunction._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        withActualResult: (value: TraceApi.v2.TestCaseWithActualResultImplementation) => _Result;
        custom: (value: TraceApi.v2.VoidFunctionDefinition) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseFunction: {
    readonly withActualResult: (value: TraceApi.v2.TestCaseWithActualResultImplementation) => TraceApi.v2.TestCaseFunction.WithActualResult;
    readonly custom: (value: TraceApi.v2.VoidFunctionDefinition) => TraceApi.v2.TestCaseFunction.Custom;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.TestCaseFunction._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.TestCaseFunction, visitor: TraceApi.v2.TestCaseFunction._Visitor<_Result>) => _Result;
};
",
                                "name": "TestCaseFunction.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseFunction = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.TestCaseFunction = {
    withActualResult: (value) => {
        return {
            ...value,
            type: \\"withActualResult\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseFunction._visit(this, visitor);
            },
        };
    },
    custom: (value) => {
        return {
            ...value,
            type: \\"custom\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseFunction._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseFunction._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"withActualResult\\":
                return visitor.withActualResult(value);
            case \\"custom\\":
                return visitor.custom(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "TestCaseFunction.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type TestCaseId = string & {
    v2_TestCaseId: void;
};
export declare function TestCaseId(value: string): TraceApi.v2.TestCaseId;
",
                                "name": "TestCaseId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseId = void 0;
function TestCaseId(value) {
    return value;
}
exports.TestCaseId = TestCaseId;
",
                                "name": "TestCaseId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface TestCaseImplementation {
    description: TraceApi.v2.TestCaseImplementationDescription;
    function: TraceApi.v2.TestCaseFunction;
}
",
                                "name": "TestCaseImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface TestCaseImplementationDescription {
    boards: TraceApi.v2.TestCaseImplementationDescriptionBoard[];
}
",
                                "name": "TestCaseImplementationDescription.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseImplementationDescription.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type TestCaseImplementationDescriptionBoard = TraceApi.v2.TestCaseImplementationDescriptionBoard.Html | TraceApi.v2.TestCaseImplementationDescriptionBoard.ParamId | TraceApi.v2.TestCaseImplementationDescriptionBoard._Unknown;
export declare namespace TestCaseImplementationDescriptionBoard {
    interface Html extends _Utils {
        type: \\"html\\";
        value: string;
    }
    interface ParamId extends _Utils {
        type: \\"paramId\\";
        value: TraceApi.v2.ParameterId;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.TestCaseImplementationDescriptionBoard._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        html: (value: string) => _Result;
        paramId: (value: TraceApi.v2.ParameterId) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseImplementationDescriptionBoard: {
    readonly html: (value: string) => TraceApi.v2.TestCaseImplementationDescriptionBoard.Html;
    readonly paramId: (value: TraceApi.v2.ParameterId) => TraceApi.v2.TestCaseImplementationDescriptionBoard.ParamId;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.TestCaseImplementationDescriptionBoard._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.TestCaseImplementationDescriptionBoard, visitor: TraceApi.v2.TestCaseImplementationDescriptionBoard._Visitor<_Result>) => _Result;
};
",
                                "name": "TestCaseImplementationDescriptionBoard.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationDescriptionBoard = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.TestCaseImplementationDescriptionBoard = {
    html: (value) => {
        return {
            value: value,
            type: \\"html\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseImplementationDescriptionBoard._visit(this, visitor);
            },
        };
    },
    paramId: (value) => {
        return {
            value: value,
            type: \\"paramId\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseImplementationDescriptionBoard._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseImplementationDescriptionBoard._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"html\\":
                return visitor.html(value.value);
            case \\"paramId\\":
                return visitor.paramId(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "TestCaseImplementationDescriptionBoard.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type TestCaseImplementationReference = TraceApi.v2.TestCaseImplementationReference.TemplateId | TraceApi.v2.TestCaseImplementationReference.Implementation | TraceApi.v2.TestCaseImplementationReference._Unknown;
export declare namespace TestCaseImplementationReference {
    interface TemplateId extends _Utils {
        type: \\"templateId\\";
        value: TraceApi.v2.TestCaseTemplateId;
    }
    interface Implementation extends TraceApi.v2.TestCaseImplementation, _Utils {
        type: \\"implementation\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.TestCaseImplementationReference._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        templateId: (value: TraceApi.v2.TestCaseTemplateId) => _Result;
        implementation: (value: TraceApi.v2.TestCaseImplementation) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseImplementationReference: {
    readonly templateId: (value: TraceApi.v2.TestCaseTemplateId) => TraceApi.v2.TestCaseImplementationReference.TemplateId;
    readonly implementation: (value: TraceApi.v2.TestCaseImplementation) => TraceApi.v2.TestCaseImplementationReference.Implementation;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.TestCaseImplementationReference._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.TestCaseImplementationReference, visitor: TraceApi.v2.TestCaseImplementationReference._Visitor<_Result>) => _Result;
};
",
                                "name": "TestCaseImplementationReference.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationReference = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
exports.TestCaseImplementationReference = {
    templateId: (value) => {
        return {
            value: value,
            type: \\"templateId\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseImplementationReference._visit(this, visitor);
            },
        };
    },
    implementation: (value) => {
        return {
            ...value,
            type: \\"implementation\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseImplementationReference._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.TestCaseImplementationReference._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"templateId\\":
                return visitor.templateId(value.value);
            case \\"implementation\\":
                return visitor.implementation(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                "name": "TestCaseImplementationReference.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface TestCaseMetadata {
    id: TraceApi.v2.TestCaseId;
    name: string;
    hidden: boolean;
}
",
                                "name": "TestCaseMetadata.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseMetadata.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface TestCaseTemplate {
    templateId: TraceApi.v2.TestCaseTemplateId;
    name: string;
    implementation: TraceApi.v2.TestCaseImplementation;
}
",
                                "name": "TestCaseTemplate.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseTemplate.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export declare type TestCaseTemplateId = string & {
    v2_TestCaseTemplateId: void;
};
export declare function TestCaseTemplateId(value: string): TraceApi.v2.TestCaseTemplateId;
",
                                "name": "TestCaseTemplateId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseTemplateId = void 0;
function TestCaseTemplateId(value) {
    return value;
}
exports.TestCaseTemplateId = TestCaseTemplateId;
",
                                "name": "TestCaseTemplateId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface TestCaseV2 {
    metadata: TraceApi.v2.TestCaseMetadata;
    implementation: TraceApi.v2.TestCaseImplementationReference;
    arguments: Record<TraceApi.v2.ParameterId, TraceApi.VariableValue | undefined>;
    expects?: TraceApi.v2.TestCaseExpects;
}
",
                                "name": "TestCaseV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface TestCaseWithActualResultImplementation {
    getActualResult: TraceApi.v2.NonVoidFunctionDefinition;
    assertCorrectnessCheck: TraceApi.v2.AssertCorrectnessCheck;
}
",
                                "name": "TestCaseWithActualResultImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseWithActualResultImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface VoidFunctionDefinition {
    parameters: TraceApi.v2.Parameter[];
    code: TraceApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "VoidFunctionDefinition.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionDefinition.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
/**
 * The generated signature will include an additional param, actualResult
 */
export interface VoidFunctionDefinitionThatTakesActualResult {
    additionalParameters: TraceApi.v2.Parameter[];
    code: TraceApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface VoidFunctionSignature {
    parameters: TraceApi.v2.Parameter[];
}
",
                                "name": "VoidFunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../..\\";
export interface VoidFunctionSignatureThatTakesActualResult {
    parameters: TraceApi.v2.Parameter[];
    actualResultType: TraceApi.VariableType;
}
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TestCaseTemplateId\\"), exports);
__exportStar(require(\\"./TestCaseId\\"), exports);
__exportStar(require(\\"./ParameterId\\"), exports);
__exportStar(require(\\"./ProblemInfoV2\\"), exports);
__exportStar(require(\\"./LightweightProblemInfoV2\\"), exports);
__exportStar(require(\\"./CreateProblemRequestV2\\"), exports);
__exportStar(require(\\"./TestCaseV2\\"), exports);
__exportStar(require(\\"./TestCaseExpects\\"), exports);
__exportStar(require(\\"./TestCaseImplementationReference\\"), exports);
__exportStar(require(\\"./BasicTestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseImplementation\\"), exports);
__exportStar(require(\\"./TestCaseFunction\\"), exports);
__exportStar(require(\\"./TestCaseWithActualResultImplementation\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./Parameter\\"), exports);
__exportStar(require(\\"./NonVoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./VoidFunctionSignature\\"), exports);
__exportStar(require(\\"./NonVoidFunctionSignature\\"), exports);
__exportStar(require(\\"./VoidFunctionSignatureThatTakesActualResult\\"), exports);
__exportStar(require(\\"./AssertCorrectnessCheck\\"), exports);
__exportStar(require(\\"./DeepEqualityCorrectnessCheck\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinitionThatTakesActualResult\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescription\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescriptionBoard\\"), exports);
__exportStar(require(\\"./TestCaseMetadata\\"), exports);
__exportStar(require(\\"./FunctionImplementationForMultipleLanguages\\"), exports);
__exportStar(require(\\"./FunctionImplementation\\"), exports);
__exportStar(require(\\"./GeneratedFiles\\"), exports);
__exportStar(require(\\"./CustomFiles\\"), exports);
__exportStar(require(\\"./BasicCustomFiles\\"), exports);
__exportStar(require(\\"./Files\\"), exports);
__exportStar(require(\\"./FileInfoV2\\"), exports);
__exportStar(require(\\"./DefaultProvidedFile\\"), exports);
__exportStar(require(\\"./FunctionSignature\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureRequest\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureResponse\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileRequest\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileResponse\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseFileRequest\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseTemplateFileRequest\\"), exports);
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "problem",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../../../environments\\";
import * as core from \\"../../../../../../core\\";
import { Problem } from \\"../resources/problem/client/Client\\";
export declare namespace V3 {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class V3 {
    private readonly options;
    constructor(options: V3.Options);
    private _problem;
    get problem(): Problem;
}
",
                                "name": "Client.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.V3 = void 0;
const Client_1 = require(\\"../resources/problem/client/Client\\");
class V3 {
    options;
    constructor(options) {
        this.options = options;
    }
    _problem;
    get problem() {
        return (this._problem ??= new Client_1.Problem(this.options));
    }
}
exports.V3 = V3;
",
                                "name": "Client.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./resources\\";
export * from \\"./client\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                            "name": "index.js",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.problem = void 0;
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
",
                                "name": "index.js",
                                "type": "file",
                              },
                              Object {
                                "contents": Array [
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../../../../../environments\\";
import * as core from \\"../../../../../../../../core\\";
import { TraceApi } from \\"../../../../../../../..\\";
export declare namespace Problem {
    interface Options {
        environment?: environments.TraceApiEnvironment | string;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
}
export declare class Problem {
    private readonly options;
    constructor(options: Problem.Options);
    /**
     * Returns lightweight versions of all problems
     */
    getLightweightProblems(): Promise<core.APIResponse<TraceApi.v2.v3.LightweightProblemInfoV2[], TraceApi.v2.v3.problem.getLightweightProblems.Error>>;
    /**
     * Returns latest versions of all problems
     */
    getProblems(): Promise<core.APIResponse<TraceApi.v2.v3.ProblemInfoV2[], TraceApi.v2.v3.problem.getProblems.Error>>;
    /**
     * Returns latest version of a problem
     */
    getLatestProblem(problemId: TraceApi.ProblemId): Promise<core.APIResponse<TraceApi.v2.v3.ProblemInfoV2, TraceApi.v2.v3.problem.getLatestProblem.Error>>;
    /**
     * Returns requested version of a problem
     */
    getProblemVersion(problemId: TraceApi.ProblemId, problemVersion: number): Promise<core.APIResponse<TraceApi.v2.v3.ProblemInfoV2, TraceApi.v2.v3.problem.getProblemVersion.Error>>;
}
",
                                        "name": "Client.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Problem = void 0;
const environments = __importStar(require(\\"../../../../../../../../environments\\"));
const core = __importStar(require(\\"../../../../../../../../core\\"));
const api_sdk_1 = require(\\"../../../../../../../..\\");
const url_join_1 = __importDefault(require(\\"url-join\\"));
const serializers = __importStar(require(\\"../../../../../../../../serialization\\"));
class Problem {
    options;
    constructor(options) {
        this.options = options;
    }
    /**
     * Returns lightweight versions of all problems
     */
    async getLightweightProblems() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/problems-v2/lightweight-problem-info\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.v3.problem.getLightweightProblems.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.v3.problem.getLightweightProblems.Error._unknown(_response.error),
        };
    }
    /**
     * Returns latest versions of all problems
     */
    async getProblems() {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \\"/problems-v2/problem-info\\"),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.v3.problem.getProblems.Response.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.v3.problem.getProblems.Error._unknown(_response.error),
        };
    }
    /**
     * Returns latest version of a problem
     */
    async getLatestProblem(problemId) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/problems-v2/problem-info/\${await serializers.ProblemId.jsonOrThrow(problemId)}\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.v3.ProblemInfoV2.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.v3.problem.getLatestProblem.Error._unknown(_response.error),
        };
    }
    /**
     * Returns requested version of a problem
     */
    async getProblemVersion(problemId, problemVersion) {
        const _response = await core.fetcher({
            url: (0, url_join_1.default)(this.options.environment ?? environments.TraceApiEnvironment.Prod, \`/problems-v2/problem-info/\${await serializers.ProblemId.jsonOrThrow(problemId)}/version/\${problemVersion}\`),
            method: \\"GET\\",
            headers: {
                Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
            },
            withCredentials: true,
        });
        if (_response.ok) {
            return {
                ok: true,
                body: await serializers.v2.v3.ProblemInfoV2.parseOrThrow(_response.body, { allowUnknownKeys: true }),
            };
        }
        return {
            ok: false,
            error: api_sdk_1.TraceApi.v2.v3.problem.getProblemVersion.Error._unknown(_response.error),
        };
    }
}
exports.Problem = Problem;
",
                                        "name": "Client.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare type Error = TraceApi.v2.v3.problem.getLatestProblem.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.problem.getLatestProblem.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.v3.problem.getLatestProblem.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.problem.getLatestProblem.Error, visitor: TraceApi.v2.v3.problem.getLatestProblem.Error._Visitor<_Result>) => _Result;
};
",
                                        "name": "getLatestProblem.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.problem.getLatestProblem.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "getLatestProblem.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare type Error = TraceApi.v2.v3.problem.getLightweightProblems.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.problem.getLightweightProblems.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.v3.problem.getLightweightProblems.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.problem.getLightweightProblems.Error, visitor: TraceApi.v2.v3.problem.getLightweightProblems.Error._Visitor<_Result>) => _Result;
};
",
                                        "name": "getLightweightProblems.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.problem.getLightweightProblems.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "getLightweightProblems.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare type Error = TraceApi.v2.v3.problem.getProblemVersion.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.problem.getProblemVersion.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.v3.problem.getProblemVersion.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.problem.getProblemVersion.Error, visitor: TraceApi.v2.v3.problem.getProblemVersion.Error._Visitor<_Result>) => _Result;
};
",
                                        "name": "getProblemVersion.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.problem.getProblemVersion.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "getProblemVersion.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare type Error = TraceApi.v2.v3.problem.getProblems.Error._Unknown;
export declare namespace Error {
    interface _Unknown extends _Utils {
        errorName: void;
        content: core.Fetcher.Error;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.problem.getProblems.Error._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}
export declare const Error: {
    readonly _unknown: (fetcherError: core.Fetcher.Error) => TraceApi.v2.v3.problem.getProblems.Error._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.problem.getProblems.Error, visitor: TraceApi.v2.v3.problem.getProblems.Error._Visitor<_Result>) => _Result;
};
",
                                        "name": "getProblems.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.Error = {
    _unknown: (fetcherError) => {
        return {
            errorName: undefined,
            content: fetcherError,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.problem.getProblems.Error._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.errorName) {
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "getProblems.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export * as getLightweightProblems from \\"./getLightweightProblems\\";
export * as getProblems from \\"./getProblems\\";
export * as getLatestProblem from \\"./getLatestProblem\\";
export * as getProblemVersion from \\"./getProblemVersion\\";
",
                                        "name": "index.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getProblemVersion = exports.getLatestProblem = exports.getProblems = exports.getLightweightProblems = void 0;
exports.getLightweightProblems = __importStar(require(\\"./getLightweightProblems\\"));
exports.getProblems = __importStar(require(\\"./getProblems\\"));
exports.getLatestProblem = __importStar(require(\\"./getLatestProblem\\"));
exports.getProblemVersion = __importStar(require(\\"./getProblemVersion\\"));
",
                                        "name": "index.js",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "client",
                                    "type": "directory",
                                  },
                                  Object {
                                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                                    "name": "index.d.ts",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                                    "name": "index.js",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type AssertCorrectnessCheck = TraceApi.v2.v3.AssertCorrectnessCheck.DeepEquality | TraceApi.v2.v3.AssertCorrectnessCheck.Custom | TraceApi.v2.v3.AssertCorrectnessCheck._Unknown;
export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends TraceApi.v2.v3.DeepEqualityCorrectnessCheck, _Utils {
        type: \\"deepEquality\\";
    }
    interface Custom extends TraceApi.v2.v3.VoidFunctionDefinitionThatTakesActualResult, _Utils {
        type: \\"custom\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.AssertCorrectnessCheck._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        deepEquality: (value: TraceApi.v2.v3.DeepEqualityCorrectnessCheck) => _Result;
        custom: (value: TraceApi.v2.v3.VoidFunctionDefinitionThatTakesActualResult) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const AssertCorrectnessCheck: {
    readonly deepEquality: (value: TraceApi.v2.v3.DeepEqualityCorrectnessCheck) => TraceApi.v2.v3.AssertCorrectnessCheck.DeepEquality;
    readonly custom: (value: TraceApi.v2.v3.VoidFunctionDefinitionThatTakesActualResult) => TraceApi.v2.v3.AssertCorrectnessCheck.Custom;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.v3.AssertCorrectnessCheck._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.AssertCorrectnessCheck, visitor: TraceApi.v2.v3.AssertCorrectnessCheck._Visitor<_Result>) => _Result;
};
",
                                        "name": "AssertCorrectnessCheck.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AssertCorrectnessCheck = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.AssertCorrectnessCheck = {
    deepEquality: (value) => {
        return {
            ...value,
            type: \\"deepEquality\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },
    custom: (value) => {
        return {
            ...value,
            type: \\"custom\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"deepEquality\\":
                return visitor.deepEquality(value);
            case \\"custom\\":
                return visitor.custom(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "AssertCorrectnessCheck.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface BasicCustomFiles {
    methodName: string;
    signature: TraceApi.v2.v3.NonVoidFunctionSignature;
    additionalFiles: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>;
    basicTestCaseTemplate: TraceApi.v2.v3.BasicTestCaseTemplate;
}
",
                                        "name": "BasicCustomFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "BasicCustomFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface BasicTestCaseTemplate {
    templateId: TraceApi.v2.v3.TestCaseTemplateId;
    name: string;
    description: TraceApi.v2.v3.TestCaseImplementationDescription;
    expectedValueParameterId: TraceApi.v2.v3.ParameterId;
}
",
                                        "name": "BasicTestCaseTemplate.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "BasicTestCaseTemplate.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface CreateProblemRequestV2 {
    problemName: string;
    problemDescription: TraceApi.ProblemDescription;
    customFiles: TraceApi.v2.v3.CustomFiles;
    customTestCaseTemplates: TraceApi.v2.v3.TestCaseTemplate[];
    testcases: TraceApi.v2.v3.TestCaseV2[];
    supportedLanguages: TraceApi.Language[];
    isPublic: boolean;
}
",
                                        "name": "CreateProblemRequestV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "CreateProblemRequestV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type CustomFiles = TraceApi.v2.v3.CustomFiles.Basic | TraceApi.v2.v3.CustomFiles.Custom | TraceApi.v2.v3.CustomFiles._Unknown;
export declare namespace CustomFiles {
    interface Basic extends TraceApi.v2.v3.BasicCustomFiles, _Utils {
        type: \\"basic\\";
    }
    interface Custom extends _Utils {
        type: \\"custom\\";
        value: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.CustomFiles._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        basic: (value: TraceApi.v2.v3.BasicCustomFiles) => _Result;
        custom: (value: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const CustomFiles: {
    readonly basic: (value: TraceApi.v2.v3.BasicCustomFiles) => TraceApi.v2.v3.CustomFiles.Basic;
    readonly custom: (value: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>) => TraceApi.v2.v3.CustomFiles.Custom;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.v3.CustomFiles._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.CustomFiles, visitor: TraceApi.v2.v3.CustomFiles._Visitor<_Result>) => _Result;
};
",
                                        "name": "CustomFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CustomFiles = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.CustomFiles = {
    basic: (value) => {
        return {
            ...value,
            type: \\"basic\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.CustomFiles._visit(this, visitor);
            },
        };
    },
    custom: (value) => {
        return {
            value: value,
            type: \\"custom\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.CustomFiles._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.CustomFiles._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"basic\\":
                return visitor.basic(value);
            case \\"custom\\":
                return visitor.custom(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "CustomFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface DeepEqualityCorrectnessCheck {
    expectedValueParameterId: TraceApi.v2.v3.ParameterId;
}
",
                                        "name": "DeepEqualityCorrectnessCheck.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "DeepEqualityCorrectnessCheck.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface DefaultProvidedFile {
    file: TraceApi.v2.v3.FileInfoV2;
    relatedTypes: TraceApi.VariableType[];
}
",
                                        "name": "DefaultProvidedFile.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "DefaultProvidedFile.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FileInfoV2 {
    filename: string;
    directory: string;
    contents: string;
    editable: boolean;
}
",
                                        "name": "FileInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FileInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface Files {
    files: TraceApi.v2.v3.FileInfoV2[];
}
",
                                        "name": "Files.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "Files.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FunctionImplementation {
    impl: string;
    imports?: string;
}
",
                                        "name": "FunctionImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FunctionImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface FunctionImplementationForMultipleLanguages {
    codeByLanguage: Record<TraceApi.Language, TraceApi.v2.v3.FunctionImplementation | undefined>;
}
",
                                        "name": "FunctionImplementationForMultipleLanguages.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FunctionImplementationForMultipleLanguages.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type FunctionSignature = TraceApi.v2.v3.FunctionSignature.Void | TraceApi.v2.v3.FunctionSignature.NonVoid
/**
 * Useful when specifying custom grading for a testcase where actualResult is defined. */
 | TraceApi.v2.v3.FunctionSignature.VoidThatTakesActualResult | TraceApi.v2.v3.FunctionSignature._Unknown;
export declare namespace FunctionSignature {
    interface Void extends TraceApi.v2.v3.VoidFunctionSignature, _Utils {
        type: \\"void\\";
    }
    interface NonVoid extends TraceApi.v2.v3.NonVoidFunctionSignature, _Utils {
        type: \\"nonVoid\\";
    }
    interface VoidThatTakesActualResult extends TraceApi.v2.v3.VoidFunctionSignatureThatTakesActualResult, _Utils {
        type: \\"voidThatTakesActualResult\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.FunctionSignature._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        void: (value: TraceApi.v2.v3.VoidFunctionSignature) => _Result;
        nonVoid: (value: TraceApi.v2.v3.NonVoidFunctionSignature) => _Result;
        voidThatTakesActualResult: (value: TraceApi.v2.v3.VoidFunctionSignatureThatTakesActualResult) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const FunctionSignature: {
    readonly void: (value: TraceApi.v2.v3.VoidFunctionSignature) => TraceApi.v2.v3.FunctionSignature.Void;
    readonly nonVoid: (value: TraceApi.v2.v3.NonVoidFunctionSignature) => TraceApi.v2.v3.FunctionSignature.NonVoid;
    readonly voidThatTakesActualResult: (value: TraceApi.v2.v3.VoidFunctionSignatureThatTakesActualResult) => TraceApi.v2.v3.FunctionSignature.VoidThatTakesActualResult;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.v3.FunctionSignature._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.FunctionSignature, visitor: TraceApi.v2.v3.FunctionSignature._Visitor<_Result>) => _Result;
};
",
                                        "name": "FunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionSignature = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.FunctionSignature = {
    void: (value) => {
        return {
            ...value,
            type: \\"void\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature._visit(this, visitor);
            },
        };
    },
    nonVoid: (value) => {
        return {
            ...value,
            type: \\"nonVoid\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature._visit(this, visitor);
            },
        };
    },
    voidThatTakesActualResult: (value) => {
        return {
            ...value,
            type: \\"voidThatTakesActualResult\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"void\\":
                return visitor.void(value);
            case \\"nonVoid\\":
                return visitor.nonVoid(value);
            case \\"voidThatTakesActualResult\\":
                return visitor.voidThatTakesActualResult(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "FunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GeneratedFiles {
    generatedTestCaseFiles: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>;
    generatedTemplateFiles: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>;
    other: Record<TraceApi.Language, TraceApi.v2.v3.Files | undefined>;
}
",
                                        "name": "GeneratedFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GeneratedFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GetBasicSolutionFileRequest {
    methodName: string;
    signature: TraceApi.v2.v3.NonVoidFunctionSignature;
}
",
                                        "name": "GetBasicSolutionFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetBasicSolutionFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GetBasicSolutionFileResponse {
    solutionFileByLanguage: Record<TraceApi.Language, TraceApi.v2.v3.FileInfoV2 | undefined>;
}
",
                                        "name": "GetBasicSolutionFileResponse.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetBasicSolutionFileResponse.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GetFunctionSignatureRequest {
    functionSignature: TraceApi.v2.v3.FunctionSignature;
}
",
                                        "name": "GetFunctionSignatureRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetFunctionSignatureRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GetFunctionSignatureResponse {
    functionByLanguage: Record<TraceApi.Language, string | undefined>;
}
",
                                        "name": "GetFunctionSignatureResponse.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetFunctionSignatureResponse.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GetGeneratedTestCaseFileRequest {
    template?: TraceApi.v2.v3.TestCaseTemplate;
    testCase: TraceApi.v2.v3.TestCaseV2;
}
",
                                        "name": "GetGeneratedTestCaseFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetGeneratedTestCaseFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface GetGeneratedTestCaseTemplateFileRequest {
    template: TraceApi.v2.v3.TestCaseTemplate;
}
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface LightweightProblemInfoV2 {
    problemId: TraceApi.ProblemId;
    problemName: string;
    problemVersion: number;
    variableTypes: TraceApi.VariableType[];
}
",
                                        "name": "LightweightProblemInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "LightweightProblemInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface NonVoidFunctionDefinition {
    signature: TraceApi.v2.v3.NonVoidFunctionSignature;
    code: TraceApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "NonVoidFunctionDefinition.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "NonVoidFunctionDefinition.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface NonVoidFunctionSignature {
    parameters: TraceApi.v2.v3.Parameter[];
    returnType: TraceApi.VariableType;
}
",
                                        "name": "NonVoidFunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "NonVoidFunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface Parameter {
    parameterId: TraceApi.v2.v3.ParameterId;
    name: string;
    variableType: TraceApi.VariableType;
}
",
                                        "name": "Parameter.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "Parameter.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type ParameterId = string & {
    v2_v3_ParameterId: void;
};
export declare function ParameterId(value: string): TraceApi.v2.v3.ParameterId;
",
                                        "name": "ParameterId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParameterId = void 0;
function ParameterId(value) {
    return value;
}
exports.ParameterId = ParameterId;
",
                                        "name": "ParameterId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface ProblemInfoV2 {
    problemId: TraceApi.ProblemId;
    problemDescription: TraceApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    supportedLanguages: TraceApi.Language[];
    customFiles: TraceApi.v2.v3.CustomFiles;
    generatedFiles: TraceApi.v2.v3.GeneratedFiles;
    customTestCaseTemplates: TraceApi.v2.v3.TestCaseTemplate[];
    testcases: TraceApi.v2.v3.TestCaseV2[];
    isPublic: boolean;
}
",
                                        "name": "ProblemInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "ProblemInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TestCaseExpects {
    expectedStdout?: string;
}
",
                                        "name": "TestCaseExpects.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseExpects.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type TestCaseFunction = TraceApi.v2.v3.TestCaseFunction.WithActualResult | TraceApi.v2.v3.TestCaseFunction.Custom | TraceApi.v2.v3.TestCaseFunction._Unknown;
export declare namespace TestCaseFunction {
    interface WithActualResult extends TraceApi.v2.v3.TestCaseWithActualResultImplementation, _Utils {
        type: \\"withActualResult\\";
    }
    interface Custom extends TraceApi.v2.v3.VoidFunctionDefinition, _Utils {
        type: \\"custom\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.TestCaseFunction._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        withActualResult: (value: TraceApi.v2.v3.TestCaseWithActualResultImplementation) => _Result;
        custom: (value: TraceApi.v2.v3.VoidFunctionDefinition) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseFunction: {
    readonly withActualResult: (value: TraceApi.v2.v3.TestCaseWithActualResultImplementation) => TraceApi.v2.v3.TestCaseFunction.WithActualResult;
    readonly custom: (value: TraceApi.v2.v3.VoidFunctionDefinition) => TraceApi.v2.v3.TestCaseFunction.Custom;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.v3.TestCaseFunction._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.TestCaseFunction, visitor: TraceApi.v2.v3.TestCaseFunction._Visitor<_Result>) => _Result;
};
",
                                        "name": "TestCaseFunction.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseFunction = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.TestCaseFunction = {
    withActualResult: (value) => {
        return {
            ...value,
            type: \\"withActualResult\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseFunction._visit(this, visitor);
            },
        };
    },
    custom: (value) => {
        return {
            ...value,
            type: \\"custom\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseFunction._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseFunction._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"withActualResult\\":
                return visitor.withActualResult(value);
            case \\"custom\\":
                return visitor.custom(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "TestCaseFunction.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type TestCaseId = string & {
    v2_v3_TestCaseId: void;
};
export declare function TestCaseId(value: string): TraceApi.v2.v3.TestCaseId;
",
                                        "name": "TestCaseId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseId = void 0;
function TestCaseId(value) {
    return value;
}
exports.TestCaseId = TestCaseId;
",
                                        "name": "TestCaseId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface TestCaseImplementation {
    description: TraceApi.v2.v3.TestCaseImplementationDescription;
    function: TraceApi.v2.v3.TestCaseFunction;
}
",
                                        "name": "TestCaseImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface TestCaseImplementationDescription {
    boards: TraceApi.v2.v3.TestCaseImplementationDescriptionBoard[];
}
",
                                        "name": "TestCaseImplementationDescription.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseImplementationDescription.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type TestCaseImplementationDescriptionBoard = TraceApi.v2.v3.TestCaseImplementationDescriptionBoard.Html | TraceApi.v2.v3.TestCaseImplementationDescriptionBoard.ParamId | TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._Unknown;
export declare namespace TestCaseImplementationDescriptionBoard {
    interface Html extends _Utils {
        type: \\"html\\";
        value: string;
    }
    interface ParamId extends _Utils {
        type: \\"paramId\\";
        value: TraceApi.v2.v3.ParameterId;
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        html: (value: string) => _Result;
        paramId: (value: TraceApi.v2.v3.ParameterId) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseImplementationDescriptionBoard: {
    readonly html: (value: string) => TraceApi.v2.v3.TestCaseImplementationDescriptionBoard.Html;
    readonly paramId: (value: TraceApi.v2.v3.ParameterId) => TraceApi.v2.v3.TestCaseImplementationDescriptionBoard.ParamId;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.TestCaseImplementationDescriptionBoard, visitor: TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._Visitor<_Result>) => _Result;
};
",
                                        "name": "TestCaseImplementationDescriptionBoard.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationDescriptionBoard = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.TestCaseImplementationDescriptionBoard = {
    html: (value) => {
        return {
            value: value,
            type: \\"html\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._visit(this, visitor);
            },
        };
    },
    paramId: (value) => {
        return {
            value: value,
            type: \\"paramId\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"html\\":
                return visitor.html(value.value);
            case \\"paramId\\":
                return visitor.paramId(value.value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "TestCaseImplementationDescriptionBoard.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type TestCaseImplementationReference = TraceApi.v2.v3.TestCaseImplementationReference.TemplateId | TraceApi.v2.v3.TestCaseImplementationReference.Implementation | TraceApi.v2.v3.TestCaseImplementationReference._Unknown;
export declare namespace TestCaseImplementationReference {
    interface TemplateId extends _Utils {
        type: \\"templateId\\";
        value: TraceApi.v2.v3.TestCaseTemplateId;
    }
    interface Implementation extends TraceApi.v2.v3.TestCaseImplementation, _Utils {
        type: \\"implementation\\";
    }
    interface _Unknown extends _Utils {
        type: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: TraceApi.v2.v3.TestCaseImplementationReference._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        templateId: (value: TraceApi.v2.v3.TestCaseTemplateId) => _Result;
        implementation: (value: TraceApi.v2.v3.TestCaseImplementation) => _Result;
        _other: (value: {
            type: string;
        }) => _Result;
    }
}
export declare const TestCaseImplementationReference: {
    readonly templateId: (value: TraceApi.v2.v3.TestCaseTemplateId) => TraceApi.v2.v3.TestCaseImplementationReference.TemplateId;
    readonly implementation: (value: TraceApi.v2.v3.TestCaseImplementation) => TraceApi.v2.v3.TestCaseImplementationReference.Implementation;
    readonly _unknown: (value: {
        type: string;
    }) => TraceApi.v2.v3.TestCaseImplementationReference._Unknown;
    readonly _visit: <_Result>(value: TraceApi.v2.v3.TestCaseImplementationReference, visitor: TraceApi.v2.v3.TestCaseImplementationReference._Visitor<_Result>) => _Result;
};
",
                                        "name": "TestCaseImplementationReference.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationReference = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
exports.TestCaseImplementationReference = {
    templateId: (value) => {
        return {
            value: value,
            type: \\"templateId\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationReference._visit(this, visitor);
            },
        };
    },
    implementation: (value) => {
        return {
            ...value,
            type: \\"implementation\\",
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationReference._visit(this, visitor);
            },
        };
    },
    _unknown: (value) => {
        return {
            ...value,
            _visit: function (visitor) {
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationReference._visit(this, visitor);
            },
        };
    },
    _visit: (value, visitor) => {
        switch (value.type) {
            case \\"templateId\\":
                return visitor.templateId(value.value);
            case \\"implementation\\":
                return visitor.implementation(value);
            default:
                return visitor._other(value);
        }
    },
};
",
                                        "name": "TestCaseImplementationReference.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface TestCaseMetadata {
    id: TraceApi.v2.v3.TestCaseId;
    name: string;
    hidden: boolean;
}
",
                                        "name": "TestCaseMetadata.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseMetadata.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface TestCaseTemplate {
    templateId: TraceApi.v2.v3.TestCaseTemplateId;
    name: string;
    implementation: TraceApi.v2.v3.TestCaseImplementation;
}
",
                                        "name": "TestCaseTemplate.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseTemplate.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export declare type TestCaseTemplateId = string & {
    v2_v3_TestCaseTemplateId: void;
};
export declare function TestCaseTemplateId(value: string): TraceApi.v2.v3.TestCaseTemplateId;
",
                                        "name": "TestCaseTemplateId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseTemplateId = void 0;
function TestCaseTemplateId(value) {
    return value;
}
exports.TestCaseTemplateId = TestCaseTemplateId;
",
                                        "name": "TestCaseTemplateId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface TestCaseV2 {
    metadata: TraceApi.v2.v3.TestCaseMetadata;
    implementation: TraceApi.v2.v3.TestCaseImplementationReference;
    arguments: Record<TraceApi.v2.v3.ParameterId, TraceApi.VariableValue | undefined>;
    expects?: TraceApi.v2.v3.TestCaseExpects;
}
",
                                        "name": "TestCaseV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface TestCaseWithActualResultImplementation {
    getActualResult: TraceApi.v2.v3.NonVoidFunctionDefinition;
    assertCorrectnessCheck: TraceApi.v2.v3.AssertCorrectnessCheck;
}
",
                                        "name": "TestCaseWithActualResultImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseWithActualResultImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface VoidFunctionDefinition {
    parameters: TraceApi.v2.v3.Parameter[];
    code: TraceApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "VoidFunctionDefinition.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionDefinition.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
/**
 * The generated signature will include an additional param, actualResult
 */
export interface VoidFunctionDefinitionThatTakesActualResult {
    additionalParameters: TraceApi.v2.v3.Parameter[];
    code: TraceApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface VoidFunctionSignature {
    parameters: TraceApi.v2.v3.Parameter[];
}
",
                                        "name": "VoidFunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import { TraceApi } from \\"../../../../../../../..\\";
export interface VoidFunctionSignatureThatTakesActualResult {
    parameters: TraceApi.v2.v3.Parameter[];
    actualResultType: TraceApi.VariableType;
}
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                        "name": "index.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TestCaseTemplateId\\"), exports);
__exportStar(require(\\"./TestCaseId\\"), exports);
__exportStar(require(\\"./ParameterId\\"), exports);
__exportStar(require(\\"./ProblemInfoV2\\"), exports);
__exportStar(require(\\"./LightweightProblemInfoV2\\"), exports);
__exportStar(require(\\"./CreateProblemRequestV2\\"), exports);
__exportStar(require(\\"./TestCaseV2\\"), exports);
__exportStar(require(\\"./TestCaseExpects\\"), exports);
__exportStar(require(\\"./TestCaseImplementationReference\\"), exports);
__exportStar(require(\\"./BasicTestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseImplementation\\"), exports);
__exportStar(require(\\"./TestCaseFunction\\"), exports);
__exportStar(require(\\"./TestCaseWithActualResultImplementation\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./Parameter\\"), exports);
__exportStar(require(\\"./NonVoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./VoidFunctionSignature\\"), exports);
__exportStar(require(\\"./NonVoidFunctionSignature\\"), exports);
__exportStar(require(\\"./VoidFunctionSignatureThatTakesActualResult\\"), exports);
__exportStar(require(\\"./AssertCorrectnessCheck\\"), exports);
__exportStar(require(\\"./DeepEqualityCorrectnessCheck\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinitionThatTakesActualResult\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescription\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescriptionBoard\\"), exports);
__exportStar(require(\\"./TestCaseMetadata\\"), exports);
__exportStar(require(\\"./FunctionImplementationForMultipleLanguages\\"), exports);
__exportStar(require(\\"./FunctionImplementation\\"), exports);
__exportStar(require(\\"./GeneratedFiles\\"), exports);
__exportStar(require(\\"./CustomFiles\\"), exports);
__exportStar(require(\\"./BasicCustomFiles\\"), exports);
__exportStar(require(\\"./Files\\"), exports);
__exportStar(require(\\"./FileInfoV2\\"), exports);
__exportStar(require(\\"./DefaultProvidedFile\\"), exports);
__exportStar(require(\\"./FunctionSignature\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureRequest\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureResponse\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileRequest\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileResponse\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseFileRequest\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseTemplateFileRequest\\"), exports);
",
                                        "name": "index.js",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "types",
                                    "type": "directory",
                                  },
                                ],
                                "name": "problem",
                                "type": "directory",
                              },
                            ],
                            "name": "resources",
                            "type": "directory",
                          },
                        ],
                        "name": "v3",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                ],
                "name": "v2",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "export interface BasicAuth {
    username: string;
    password: string;
}
export declare const BasicAuth: {
    toAuthorizationHeader: (basicAuth: BasicAuth | undefined) => string | undefined;
    fromAuthorizationHeader: (header: string) => BasicAuth;
};
",
                "name": "BasicAuth.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicAuth = void 0;
const basic_auth_1 = require(\\"basic-auth\\");
const js_base64_1 = require(\\"js-base64\\");
exports.BasicAuth = {
    toAuthorizationHeader: (basicAuth) => {
        if (basicAuth == null) {
            return undefined;
        }
        const token = js_base64_1.Base64.encode(\`\${basicAuth.username}:\${basicAuth.password}\`);
        return \`Basic \${token}\`;
    },
    fromAuthorizationHeader: (header) => {
        const parsed = (0, basic_auth_1.parse)(header);
        if (parsed == null) {
            throw new Error(\\"Invalid basic auth\\");
        }
        return {
            username: parsed.name,
            password: parsed.pass,
        };
    },
};
",
                "name": "BasicAuth.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type BearerToken = string;
export declare const BearerToken: {
    toAuthorizationHeader: (token: BearerToken | undefined) => string | undefined;
    fromAuthorizationHeader: (header: string) => BearerToken;
};
",
                "name": "BearerToken.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BearerToken = void 0;
const BEARER_AUTH_HEADER_PREFIX = /^Bearer /i;
exports.BearerToken = {
    toAuthorizationHeader: (token) => {
        if (token == null) {
            return undefined;
        }
        return \`Bearer \${token}\`;
    },
    fromAuthorizationHeader: (header) => {
        return header.replace(BEARER_AUTH_HEADER_PREFIX, \\"\\").trim();
    },
};
",
                "name": "BearerToken.js",
                "type": "file",
              },
              Object {
                "contents": "export { BasicAuth } from \\"./BasicAuth\\";
export { BearerToken } from \\"./BearerToken\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BearerToken = exports.BasicAuth = void 0;
var BasicAuth_1 = require(\\"./BasicAuth\\");
Object.defineProperty(exports, \\"BasicAuth\\", { enumerable: true, get: function () { return BasicAuth_1.BasicAuth; } });
var BearerToken_1 = require(\\"./BearerToken\\");
Object.defineProperty(exports, \\"BearerToken\\", { enumerable: true, get: function () { return BearerToken_1.BearerToken; } });
",
                "name": "index.js",
                "type": "file",
              },
            ],
            "name": "auth",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export declare type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;
export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}
export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                "name": "APIResponse.js",
                "type": "file",
              },
              Object {
                "contents": "import { APIResponse } from \\"./APIResponse\\";
export interface Fetcher {
    fetch: FetchFunction;
}
export declare type FetchFunction = (args: Fetcher.Args) => Promise<APIResponse<unknown, Fetcher.Error>>;
export declare namespace Fetcher {
    interface Args {
        url: string;
        method: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
    }
    type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;
    interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }
    interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }
    interface TimeoutError {
        reason: \\"timeout\\";
    }
    interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}
export declare const fetcher: FetchFunction;
",
                "name": "Fetcher.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.fetcher = void 0;
const axios_1 = __importDefault(require(\\"axios\\"));
const fetcher = async (args) => {
    const headers = {
        \\"Content-Type\\": \\"application/json\\",
    };
    if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
            if (value != null) {
                headers[key] = value;
            }
        }
    }
    try {
        const response = await (0, axios_1.default)({
            url: args.url,
            params: args.queryParameters,
            method: args.method,
            headers,
            data: args.body,
            validateStatus: () => true,
            transformResponse: (response) => response,
            timeout: args.timeoutMs ?? 60_000,
            transitional: {
                clarifyTimeoutError: true,
            },
            withCredentials: args.withCredentials,
        });
        let body;
        if (response.data != null && response.data.length > 0) {
            try {
                body = JSON.parse(response.data) ?? undefined;
            }
            catch {
                return {
                    ok: false,
                    error: {
                        reason: \\"non-json\\",
                        statusCode: response.status,
                        rawBody: response.data,
                    },
                };
            }
        }
        if (response.status >= 200 && response.status < 300) {
            return {
                ok: true,
                body,
            };
        }
        else {
            return {
                ok: false,
                error: {
                    reason: \\"status-code\\",
                    statusCode: response.status,
                    body,
                },
            };
        }
    }
    catch (error) {
        if (error.code === \\"ETIMEDOUT\\") {
            return {
                ok: false,
                error: {
                    reason: \\"timeout\\",
                },
            };
        }
        return {
            ok: false,
            error: {
                reason: \\"unknown\\",
                errorMessage: error.message,
            },
        };
    }
};
exports.fetcher = fetcher;
",
                "name": "Fetcher.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);
export declare const Supplier: {
    get: <T>(supplier: Supplier<T>) => Promise<T>;
};
",
                "name": "Supplier.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Supplier = void 0;
exports.Supplier = {
    get: async (supplier) => {
        if (typeof supplier === \\"function\\") {
            return supplier();
        }
        else {
            return supplier;
        }
    },
};
",
                "name": "Supplier.js",
                "type": "file",
              },
              Object {
                "contents": "export { type APIResponse } from \\"./APIResponse\\";
export { fetcher, type Fetcher, type FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Supplier = exports.fetcher = void 0;
var Fetcher_1 = require(\\"./Fetcher\\");
Object.defineProperty(exports, \\"fetcher\\", { enumerable: true, get: function () { return Fetcher_1.fetcher; } });
var Supplier_1 = require(\\"./Supplier\\");
Object.defineProperty(exports, \\"Supplier\\", { enumerable: true, get: function () { return Supplier_1.Supplier; } });
",
                "name": "index.js",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * as serialization from \\"./schemas\\";
export * from \\"./auth\\";
export * from \\"./fetcher\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.serialization = void 0;
exports.serialization = __importStar(require(\\"./schemas\\"));
__exportStar(require(\\"./auth\\"), exports);
__exportStar(require(\\"./fetcher\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "import { SchemaUtils } from \\"./builders\\";
import { MaybePromise } from \\"./utils/MaybePromise\\";
export declare type Schema<Raw = unknown, Parsed = unknown> = BaseSchema<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export declare type inferRaw<S extends Schema> = S extends Schema<infer Raw, any> ? Raw : never;
export declare type inferParsed<S extends Schema> = S extends Schema<any, infer Parsed> ? Parsed : never;
export interface BaseSchema<Raw, Parsed> {
    parse: (raw: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Parsed>>;
    json: (parsed: unknown, opts?: SchemaOptions) => MaybePromise<MaybeValid<Raw>>;
    getType: () => SchemaType | Promise<SchemaType>;
}
export declare const SchemaType: {
    readonly DATE: \\"date\\";
    readonly ENUM: \\"enum\\";
    readonly LIST: \\"list\\";
    readonly STRING_LITERAL: \\"stringLiteral\\";
    readonly OBJECT: \\"object\\";
    readonly ANY: \\"any\\";
    readonly BOOLEAN: \\"boolean\\";
    readonly NUMBER: \\"number\\";
    readonly STRING: \\"string\\";
    readonly UNKNOWN: \\"unknown\\";
    readonly RECORD: \\"record\\";
    readonly SET: \\"set\\";
    readonly UNION: \\"union\\";
    readonly OPTIONAL: \\"optional\\";
};
export declare type SchemaType = typeof SchemaType[keyof typeof SchemaType];
export declare type MaybeValid<T> = Valid<T> | Invalid;
export interface Valid<T> {
    ok: true;
    value: T;
}
export interface Invalid {
    ok: false;
    errors: ValidationError[];
}
export interface ValidationError {
    path: string[];
    message: string;
}
export interface SchemaOptions {
    /**
     * @default false
     */
    allowUnknownKeys?: boolean;
}
",
                "name": "Schema.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SchemaType = void 0;
exports.SchemaType = {
    DATE: \\"date\\",
    ENUM: \\"enum\\",
    LIST: \\"list\\",
    STRING_LITERAL: \\"stringLiteral\\",
    OBJECT: \\"object\\",
    ANY: \\"any\\",
    BOOLEAN: \\"boolean\\",
    NUMBER: \\"number\\",
    STRING: \\"string\\",
    UNKNOWN: \\"unknown\\",
    RECORD: \\"record\\",
    SET: \\"set\\",
    UNION: \\"union\\",
    OPTIONAL: \\"optional\\",
};
",
                "name": "Schema.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function date(): Schema<string, Date>;
",
                        "name": "date.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.date = void 0;
const Schema_1 = require(\\"../../Schema\\");
const schema_utils_1 = require(\\"../schema-utils\\");
// https://stackoverflow.com/questions/12756159/regex-and-iso8601-formatted-datetime
const ISO_8601_REGEX = /^([+-]?\\\\d{4}(?!\\\\d{2}\\\\b))((-?)((0[1-9]|1[0-2])(\\\\3([12]\\\\d|0[1-9]|3[01]))?|W([0-4]\\\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\\\d|[12]\\\\d{2}|3([0-5]\\\\d|6[1-6])))([T\\\\s]((([01]\\\\d|2[0-3])((:?)[0-5]\\\\d)?|24:?00)([.,]\\\\d+(?!:))?)?(\\\\17[0-5]\\\\d([.,]\\\\d+)?)?([zZ]|([+-])([01]\\\\d|2[0-3]):?([0-5]\\\\d)?)?)?)?$/;
function date() {
    const baseSchema = {
        parse: (raw) => {
            if (typeof raw === \\"string\\" && ISO_8601_REGEX.test(raw)) {
                return {
                    ok: true,
                    value: new Date(raw),
                };
            }
            else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not an ISO 8601 date string\\",
                        },
                    ],
                };
            }
        },
        json: (date) => {
            if (date instanceof Date) {
                return {
                    ok: true,
                    value: date.toISOString(),
                };
            }
            else {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Date object\\",
                        },
                    ],
                };
            }
        },
        getType: () => Schema_1.SchemaType.DATE,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.date = date;
",
                        "name": "date.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { date } from \\"./date\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.date = void 0;
var date_1 = require(\\"./date\\");
Object.defineProperty(exports, \\"date\\", { enumerable: true, get: function () { return date_1.date; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "date",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]>;
",
                        "name": "enum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.enum_ = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
function enum_(values) {
    const validValues = new Set(values);
    const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ENUM, (value, { allowUnknownKeys = false } = {}) => {
        if (typeof value === \\"string\\" && (validValues.has(value) || allowUnknownKeys)) {
            return {
                ok: true,
                value: value,
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \\"Not one of the allowed values\\",
                    },
                ],
            };
        }
    });
    return schemaCreator();
}
exports.enum_ = enum_;
",
                        "name": "enum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { enum_ } from \\"./enum\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.enum_ = void 0;
var enum_1 = require(\\"./enum\\");
Object.defineProperty(exports, \\"enum_\\", { enumerable: true, get: function () { return enum_1.enum_; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "enum",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./date\\";
export * from \\"./enum\\";
export * from \\"./lazy\\";
export * from \\"./list\\";
export * from \\"./literals\\";
export * from \\"./object\\";
export * from \\"./object-like\\";
export * from \\"./primitives\\";
export * from \\"./record\\";
export * from \\"./schema-utils\\";
export * from \\"./set\\";
export * from \\"./union\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./date\\"), exports);
__exportStar(require(\\"./enum\\"), exports);
__exportStar(require(\\"./lazy\\"), exports);
__exportStar(require(\\"./list\\"), exports);
__exportStar(require(\\"./literals\\"), exports);
__exportStar(require(\\"./object\\"), exports);
__exportStar(require(\\"./object-like\\"), exports);
__exportStar(require(\\"./primitives\\"), exports);
__exportStar(require(\\"./record\\"), exports);
__exportStar(require(\\"./schema-utils\\"), exports);
__exportStar(require(\\"./set\\"), exports);
__exportStar(require(\\"./union\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { lazy, type SchemaGetter } from \\"./lazy\\";
export { lazyObject } from \\"./lazyObject\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.lazyObject = exports.lazy = void 0;
var lazy_1 = require(\\"./lazy\\");
Object.defineProperty(exports, \\"lazy\\", { enumerable: true, get: function () { return lazy_1.lazy; } });
var lazyObject_1 = require(\\"./lazyObject\\");
Object.defineProperty(exports, \\"lazyObject\\", { enumerable: true, get: function () { return lazyObject_1.lazyObject; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type SchemaGetter<SchemaType extends Schema<any, any>> = () => SchemaType | Promise<SchemaType>;
export declare function lazy<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): Schema<Raw, Parsed>;
export declare function constructLazyBaseSchema<Raw, Parsed>(getter: SchemaGetter<Schema<Raw, Parsed>>): BaseSchema<Raw, Parsed>;
export declare function getMemoizedSchema<SchemaType extends Schema<any, any>>(getter: SchemaGetter<SchemaType>): Promise<SchemaType>;
",
                        "name": "lazy.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getMemoizedSchema = exports.constructLazyBaseSchema = exports.lazy = void 0;
const schema_utils_1 = require(\\"../schema-utils\\");
function lazy(getter) {
    const baseSchema = constructLazyBaseSchema(getter);
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.lazy = lazy;
function constructLazyBaseSchema(getter) {
    return {
        parse: async (raw, opts) => (await getMemoizedSchema(getter)).parse(raw, opts),
        json: async (parsed, opts) => (await getMemoizedSchema(getter)).json(parsed, opts),
        getType: async () => (await getMemoizedSchema(getter)).getType(),
    };
}
exports.constructLazyBaseSchema = constructLazyBaseSchema;
async function getMemoizedSchema(getter) {
    const castedGetter = getter;
    if (castedGetter.__zurg_memoized == null) {
        castedGetter.__zurg_memoized = await getter();
    }
    return castedGetter.__zurg_memoized;
}
exports.getMemoizedSchema = getMemoizedSchema;
",
                        "name": "lazy.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ObjectSchema } from \\"../object/types\\";
import { SchemaGetter } from \\"./lazy\\";
export declare function lazyObject<Raw, Parsed>(getter: SchemaGetter<ObjectSchema<Raw, Parsed>>): ObjectSchema<Raw, Parsed>;
",
                        "name": "lazyObject.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.lazyObject = void 0;
const object_1 = require(\\"../object\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
const lazy_1 = require(\\"./lazy\\");
function lazyObject(getter) {
    const baseSchema = {
        ...(0, lazy_1.constructLazyBaseSchema)(getter),
        _getRawProperties: async () => (await (0, lazy_1.getMemoizedSchema)(getter))._getRawProperties(),
        _getParsedProperties: async () => (await (0, lazy_1.getMemoizedSchema)(getter))._getParsedProperties(),
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
        ...(0, object_1.getObjectUtils)(baseSchema),
    };
}
exports.lazyObject = lazyObject;
",
                        "name": "lazyObject.js",
                        "type": "file",
                      },
                    ],
                    "name": "lazy",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { list } from \\"./list\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.list = void 0;
var list_1 = require(\\"./list\\");
Object.defineProperty(exports, \\"list\\", { enumerable: true, get: function () { return list_1.list; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function list<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Parsed[]>;
",
                        "name": "list.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.list = void 0;
const Schema_1 = require(\\"../../Schema\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function list(schema) {
    const baseSchema = {
        parse: async (raw, opts) => validateAndTransformArray(raw, (item) => schema.parse(item, opts)),
        json: (parsed, opts) => validateAndTransformArray(parsed, (item) => schema.json(item, opts)),
        getType: () => Schema_1.SchemaType.LIST,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.list = list;
async function validateAndTransformArray(value, transformItem) {
    if (!Array.isArray(value)) {
        return {
            ok: false,
            errors: [
                {
                    message: \\"Not a list\\",
                    path: [],
                },
            ],
        };
    }
    const maybeValidItems = await Promise.all(value.map((item) => transformItem(item)));
    return maybeValidItems.reduce((acc, item, index) => {
        if (acc.ok && item.ok) {
            return {
                ok: true,
                value: [...acc.value, item.value],
            };
        }
        const errors = [];
        if (!acc.ok) {
            errors.push(...acc.errors);
        }
        if (!item.ok) {
            errors.push(...item.errors.map((error) => ({
                path: [\`[\${index}]\`, ...error.path],
                message: error.message,
            })));
        }
        return {
            ok: false,
            errors,
        };
    }, { ok: true, value: [] });
}
",
                        "name": "list.js",
                        "type": "file",
                      },
                    ],
                    "name": "list",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { stringLiteral } from \\"./stringLiteral\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringLiteral = void 0;
var stringLiteral_1 = require(\\"./stringLiteral\\");
Object.defineProperty(exports, \\"stringLiteral\\", { enumerable: true, get: function () { return stringLiteral_1.stringLiteral; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function stringLiteral<V extends string>(literal: V): Schema<V, V>;
",
                        "name": "stringLiteral.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringLiteral = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
function stringLiteral(literal) {
    const schemaCreator = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING_LITERAL, (value) => {
        if (value === literal) {
            return {
                ok: true,
                value: literal,
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: [],
                        message: \`Not equal to \\"\${literal}\\"\`,
                    },
                ],
            };
        }
    });
    return schemaCreator();
}
exports.stringLiteral = stringLiteral;
",
                        "name": "stringLiteral.js",
                        "type": "file",
                      },
                    ],
                    "name": "literals",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { getObjectUtils, object } from \\"./object\\";
export { isProperty, property, type Property } from \\"./property\\";
export { type BaseObjectSchema, type inferObjectSchemaFromPropertySchemas, type inferParsedObject, type inferParsedObjectFromPropertySchemas, type inferParsedPropertySchema, type inferRawKey, type inferRawObject, type inferRawObjectFromPropertySchemas, type inferRawPropertySchema, type ObjectSchema, type ObjectUtils, type PropertySchemas, } from \\"./types\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.property = exports.isProperty = exports.object = exports.getObjectUtils = void 0;
var object_1 = require(\\"./object\\");
Object.defineProperty(exports, \\"getObjectUtils\\", { enumerable: true, get: function () { return object_1.getObjectUtils; } });
Object.defineProperty(exports, \\"object\\", { enumerable: true, get: function () { return object_1.object; } });
var property_1 = require(\\"./property\\");
Object.defineProperty(exports, \\"isProperty\\", { enumerable: true, get: function () { return property_1.isProperty; } });
Object.defineProperty(exports, \\"property\\", { enumerable: true, get: function () { return property_1.property; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseObjectSchema, inferObjectSchemaFromPropertySchemas, ObjectUtils, PropertySchemas } from \\"./types\\";
export declare function object<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(schemas: T): inferObjectSchemaFromPropertySchemas<T>;
export declare function getObjectUtils<Raw, Parsed>(schema: BaseObjectSchema<Raw, Parsed>): ObjectUtils<Raw, Parsed>;
",
                        "name": "object.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getObjectUtils = exports.object = void 0;
const Schema_1 = require(\\"../../Schema\\");
const entries_1 = require(\\"../../utils/entries\\");
const filterObject_1 = require(\\"../../utils/filterObject\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const keys_1 = require(\\"../../utils/keys\\");
const partition_1 = require(\\"../../utils/partition\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
const property_1 = require(\\"./property\\");
function object(schemas) {
    const baseSchema = {
        _getRawProperties: () => Promise.resolve(Object.entries(schemas).map(([parsedKey, propertySchema]) => (0, property_1.isProperty)(propertySchema) ? propertySchema.rawKey : parsedKey)),
        _getParsedProperties: () => Promise.resolve((0, keys_1.keys)(schemas)),
        parse: async (raw, opts) => {
            const rawKeyToProperty = {};
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
                const rawKey = (0, property_1.isProperty)(schemaOrObjectProperty) ? schemaOrObjectProperty.rawKey : parsedKey;
                const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;
                const property = {
                    rawKey,
                    parsedKey: parsedKey,
                    valueSchema,
                };
                rawKeyToProperty[rawKey] = property;
                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(rawKey);
                }
            }
            return validateAndTransformObject({
                value: raw,
                requiredKeys,
                getProperty: (rawKey) => {
                    const property = rawKeyToProperty[rawKey];
                    if (property == null) {
                        return undefined;
                    }
                    return {
                        transformedKey: property.parsedKey,
                        transform: (propertyValue) => property.valueSchema.parse(propertyValue, opts),
                    };
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },
        json: async (parsed, opts) => {
            const requiredKeys = [];
            for (const [parsedKey, schemaOrObjectProperty] of (0, entries_1.entries)(schemas)) {
                const valueSchema = (0, property_1.isProperty)(schemaOrObjectProperty)
                    ? schemaOrObjectProperty.valueSchema
                    : schemaOrObjectProperty;
                if (await isSchemaRequired(valueSchema)) {
                    requiredKeys.push(parsedKey);
                }
            }
            return validateAndTransformObject({
                value: parsed,
                requiredKeys,
                getProperty: (parsedKey) => {
                    const property = schemas[parsedKey];
                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
                    if (property == null) {
                        return undefined;
                    }
                    if ((0, property_1.isProperty)(property)) {
                        return {
                            transformedKey: property.rawKey,
                            transform: (propertyValue) => property.valueSchema.json(propertyValue, opts),
                        };
                    }
                    else {
                        return {
                            transformedKey: parsedKey,
                            transform: (propertyValue) => property.json(propertyValue, opts),
                        };
                    }
                },
                allowUnknownKeys: opts?.allowUnknownKeys ?? false,
            });
        },
        getType: () => Schema_1.SchemaType.OBJECT,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
        ...getObjectUtils(baseSchema),
    };
}
exports.object = object;
async function validateAndTransformObject({ value, requiredKeys, getProperty, allowUnknownKeys, }) {
    if (!(0, isPlainObject_1.isPlainObject)(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }
    const missingRequiredKeys = new Set(requiredKeys);
    const errors = [];
    const transformed = {};
    for (const [preTransformedKey, preTransformedItemValue] of Object.entries(value)) {
        const property = getProperty(preTransformedKey);
        if (property != null) {
            missingRequiredKeys.delete(preTransformedKey);
            const value = await property.transform(preTransformedItemValue);
            if (value.ok) {
                transformed[property.transformedKey] = value.value;
            }
            else {
                errors.push(...value.errors.map((error) => ({
                    path: [preTransformedKey, ...error.path],
                    message: error.message,
                })));
            }
        }
        else if (allowUnknownKeys) {
            transformed[preTransformedKey] = preTransformedItemValue;
        }
        else {
            errors.push({
                path: [preTransformedKey],
                message: \`Unrecognized key \\"\${preTransformedKey}\\"\`,
            });
        }
    }
    errors.push(...requiredKeys
        .filter((key) => missingRequiredKeys.has(key))
        .map((key) => ({
        path: [],
        message: \`Missing required key \\"\${key}\\"\`,
    })));
    if (errors.length === 0) {
        return {
            ok: true,
            value: transformed,
        };
    }
    else {
        return {
            ok: false,
            errors,
        };
    }
}
function getObjectUtils(schema) {
    return {
        extend: (extension) => {
            const baseSchema = {
                _getParsedProperties: async () => [
                    ...(await schema._getParsedProperties()),
                    ...(await extension._getParsedProperties()),
                ],
                _getRawProperties: async () => [
                    ...(await schema._getRawProperties()),
                    ...(await extension._getRawProperties()),
                ],
                parse: async (raw, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getRawProperties(),
                        value: raw,
                        transformBase: (rawBase) => schema.parse(rawBase, opts),
                        transformExtension: (rawExtension) => extension.parse(rawExtension, opts),
                    });
                },
                json: async (parsed, opts) => {
                    return validateAndTransformExtendedObject({
                        extensionKeys: await extension._getParsedProperties(),
                        value: parsed,
                        transformBase: (parsedBase) => schema.json(parsedBase, opts),
                        transformExtension: (parsedExtension) => extension.json(parsedExtension, opts),
                    });
                },
                getType: () => Schema_1.SchemaType.OBJECT,
            };
            return {
                ...baseSchema,
                ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
                ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
                ...getObjectUtils(baseSchema),
            };
        },
    };
}
exports.getObjectUtils = getObjectUtils;
async function validateAndTransformExtendedObject({ extensionKeys, value, transformBase, transformExtension, }) {
    const extensionPropertiesSet = new Set(extensionKeys);
    const [extensionProperties, baseProperties] = (0, partition_1.partition)((0, keys_1.keys)(value), (key) => extensionPropertiesSet.has(key));
    const transformedBase = await transformBase((0, filterObject_1.filterObject)(value, baseProperties));
    const transformedExtension = await transformExtension((0, filterObject_1.filterObject)(value, extensionProperties));
    if (transformedBase.ok && transformedExtension.ok) {
        return {
            ok: true,
            value: {
                ...transformedBase.value,
                ...transformedExtension.value,
            },
        };
    }
    else {
        return {
            ok: false,
            errors: [
                ...(transformedBase.ok ? [] : transformedBase.errors),
                ...(transformedExtension.ok ? [] : transformedExtension.errors),
            ],
        };
    }
}
async function isSchemaRequired(schema) {
    return !(await isSchemaOptional(schema));
}
async function isSchemaOptional(schema) {
    switch (await schema.getType()) {
        case Schema_1.SchemaType.ANY:
        case Schema_1.SchemaType.UNKNOWN:
        case Schema_1.SchemaType.OPTIONAL:
            return true;
        default:
            return false;
    }
}
",
                        "name": "object.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function property<RawKey extends string, RawValue, ParsedValue>(rawKey: RawKey, valueSchema: Schema<RawValue, ParsedValue>): Property<RawKey, RawValue, ParsedValue>;
export interface Property<RawKey extends string, RawValue, ParsedValue> {
    rawKey: RawKey;
    valueSchema: Schema<RawValue, ParsedValue>;
    isProperty: true;
}
export declare function isProperty<O extends Property<any, any, any>>(maybeProperty: unknown): maybeProperty is O;
",
                        "name": "property.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.isProperty = exports.property = void 0;
function property(rawKey, valueSchema) {
    return {
        rawKey,
        valueSchema,
        isProperty: true,
    };
}
exports.property = property;
function isProperty(maybeProperty) {
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    return maybeProperty.isProperty;
}
exports.isProperty = isProperty;
",
                        "name": "property.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, inferParsed, inferRaw, Schema } from \\"../../Schema\\";
import { addQuestionMarksToNullableProperties } from \\"../../utils/addQuestionMarksToNullableProperties\\";
import { ObjectLikeUtils } from \\"../object-like\\";
import { SchemaUtils } from \\"../schema-utils\\";
import { Property } from \\"./property\\";
export declare type ObjectSchema<Raw, Parsed> = BaseObjectSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed> & ObjectUtils<Raw, Parsed> & SchemaUtils<Raw, Parsed>;
export interface BaseObjectSchema<Raw, Parsed> extends BaseSchema<Raw, Parsed> {
    _getRawProperties: () => Promise<(keyof Raw)[]>;
    _getParsedProperties: () => Promise<(keyof Parsed)[]>;
}
export interface ObjectUtils<Raw, Parsed> {
    extend: <RawExtension, ParsedExtension>(schemas: ObjectSchema<RawExtension, ParsedExtension>) => ObjectSchema<Raw & RawExtension, Parsed & ParsedExtension>;
}
export declare type inferRawObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<infer Raw, any> ? Raw : never;
export declare type inferParsedObject<O extends ObjectSchema<any, any>> = O extends ObjectSchema<any, infer Parsed> ? Parsed : never;
export declare type inferObjectSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> = ObjectSchema<inferRawObjectFromPropertySchemas<T>, inferParsedObjectFromPropertySchemas<T>>;
export declare type inferRawObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [ParsedKey in keyof T as inferRawKey<ParsedKey, T[ParsedKey]>]: inferRawPropertySchema<T[ParsedKey]>;
}>;
export declare type inferParsedObjectFromPropertySchemas<T extends PropertySchemas<keyof T>> = addQuestionMarksToNullableProperties<{
    [K in keyof T]: inferParsedPropertySchema<T[K]>;
}>;
export declare type PropertySchemas<ParsedKeys extends string | number | symbol> = Record<ParsedKeys, Property<any, any, any> | Schema<any, any>>;
export declare type inferRawPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, infer Raw, any> ? Raw : P extends Schema<any, any> ? inferRaw<P> : never;
export declare type inferParsedPropertySchema<P extends Property<any, any, any> | Schema<any, any>> = P extends Property<any, any, infer Parsed> ? Parsed : P extends Schema<any, any> ? inferParsed<P> : never;
export declare type inferRawKey<ParsedKey extends string | number | symbol, P extends Property<any, any, any> | Schema<any, any>> = P extends Property<infer Raw, any, any> ? Raw : ParsedKey;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                    ],
                    "name": "object",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { ObjectLikeSchema, ObjectLikeUtils } from \\"./types\\";
export declare function getObjectLikeUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): ObjectLikeUtils<Raw, Parsed>;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
export declare function withParsedProperties<RawObjectShape, ParsedObjectShape, Properties>(objectLike: BaseSchema<RawObjectShape, ParsedObjectShape>, properties: {
    [K in keyof Properties]: Properties[K] | ((parsed: ParsedObjectShape) => Properties[K]);
}): ObjectLikeSchema<RawObjectShape, ParsedObjectShape & Properties>;
",
                        "name": "getObjectLikeUtils.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
const filterObject_1 = require(\\"../../utils/filterObject\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function getObjectLikeUtils(schema) {
    return {
        withParsedProperties: (properties) => withParsedProperties(schema, properties),
    };
}
exports.getObjectLikeUtils = getObjectLikeUtils;
/**
 * object-like utils are defined in one file to resolve issues with circular imports
 */
function withParsedProperties(objectLike, properties) {
    const objectSchema = {
        parse: async (raw, opts) => {
            const parsedObject = await objectLike.parse(raw, opts);
            if (!parsedObject.ok) {
                return parsedObject;
            }
            const additionalProperties = Object.entries(properties).reduce((processed, [key, value]) => {
                return {
                    ...processed,
                    [key]: typeof value === \\"function\\" ? value(parsedObject.value) : value,
                };
            }, {});
            return {
                ok: true,
                value: {
                    ...parsedObject.value,
                    ...additionalProperties,
                },
            };
        },
        json: (parsed, opts) => {
            if (!(0, isPlainObject_1.isPlainObject)(parsed)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                        },
                    ],
                };
            }
            // strip out added properties
            const addedPropertyKeys = new Set(Object.keys(properties));
            const parsedWithoutAddedProperties = (0, filterObject_1.filterObject)(parsed, Object.keys(parsed).filter((key) => !addedPropertyKeys.has(key)));
            return objectLike.json(parsedWithoutAddedProperties, opts);
        },
        getType: () => objectLike.getType(),
    };
    return {
        ...objectSchema,
        ...(0, schema_utils_1.getSchemaUtils)(objectSchema),
        ...getObjectLikeUtils(objectSchema),
    };
}
exports.withParsedProperties = withParsedProperties;
",
                        "name": "getObjectLikeUtils.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getObjectLikeUtils, withParsedProperties } from \\"./getObjectLikeUtils\\";
export { type ObjectLikeSchema, type ObjectLikeUtils } from \\"./types\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.withParsedProperties = exports.getObjectLikeUtils = void 0;
var getObjectLikeUtils_1 = require(\\"./getObjectLikeUtils\\");
Object.defineProperty(exports, \\"getObjectLikeUtils\\", { enumerable: true, get: function () { return getObjectLikeUtils_1.getObjectLikeUtils; } });
Object.defineProperty(exports, \\"withParsedProperties\\", { enumerable: true, get: function () { return getObjectLikeUtils_1.withParsedProperties; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema } from \\"../../Schema\\";
export declare type ObjectLikeSchema<Raw, Parsed> = Schema<Raw, Parsed> & BaseSchema<Raw, Parsed> & ObjectLikeUtils<Raw, Parsed>;
export interface ObjectLikeUtils<Raw, Parsed> {
    withParsedProperties: <T extends Record<string, any>>(properties: {
        [K in keyof T]: T[K] | ((parsed: Parsed) => T[K]);
    }) => ObjectLikeSchema<Raw, Parsed & T>;
}
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                    ],
                    "name": "object-like",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export declare const any: () => import(\\"../../Schema\\").Schema<any, any>;
",
                        "name": "any.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.any = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.any = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.ANY, (value) => ({ ok: true, value }));
",
                        "name": "any.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const boolean: () => import(\\"../../Schema\\").Schema<boolean, boolean>;
",
                        "name": "boolean.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.boolean = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.boolean = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.BOOLEAN, (value) => {
    if (typeof value === \\"boolean\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a boolean\\",
                },
            ],
        };
    }
});
",
                        "name": "boolean.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { any } from \\"./any\\";
export { boolean } from \\"./boolean\\";
export { number } from \\"./number\\";
export { string } from \\"./string\\";
export { unknown } from \\"./unknown\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.unknown = exports.string = exports.number = exports.boolean = exports.any = void 0;
var any_1 = require(\\"./any\\");
Object.defineProperty(exports, \\"any\\", { enumerable: true, get: function () { return any_1.any; } });
var boolean_1 = require(\\"./boolean\\");
Object.defineProperty(exports, \\"boolean\\", { enumerable: true, get: function () { return boolean_1.boolean; } });
var number_1 = require(\\"./number\\");
Object.defineProperty(exports, \\"number\\", { enumerable: true, get: function () { return number_1.number; } });
var string_1 = require(\\"./string\\");
Object.defineProperty(exports, \\"string\\", { enumerable: true, get: function () { return string_1.string; } });
var unknown_1 = require(\\"./unknown\\");
Object.defineProperty(exports, \\"unknown\\", { enumerable: true, get: function () { return unknown_1.unknown; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const number: () => import(\\"../../Schema\\").Schema<number, number>;
",
                        "name": "number.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.number = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.number = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.NUMBER, (value) => {
    if (typeof value === \\"number\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a number\\",
                },
            ],
        };
    }
});
",
                        "name": "number.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const string: () => import(\\"../../Schema\\").Schema<string, string>;
",
                        "name": "string.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.string = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.string = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.STRING, (value) => {
    if (typeof value === \\"string\\") {
        return {
            ok: true,
            value,
        };
    }
    else {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \\"Not a string\\",
                },
            ],
        };
    }
});
",
                        "name": "string.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export declare const unknown: () => import(\\"../../Schema\\").Schema<unknown, unknown>;
",
                        "name": "unknown.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.unknown = void 0;
const Schema_1 = require(\\"../../Schema\\");
const createIdentitySchemaCreator_1 = require(\\"../../utils/createIdentitySchemaCreator\\");
exports.unknown = (0, createIdentitySchemaCreator_1.createIdentitySchemaCreator)(Schema_1.SchemaType.UNKNOWN, (value) => ({ ok: true, value }));
",
                        "name": "unknown.js",
                        "type": "file",
                      },
                    ],
                    "name": "primitives",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { record } from \\"./record\\";
export { type BaseRecordSchema, type RecordSchema } from \\"./types\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.record = void 0;
var record_1 = require(\\"./record\\");
Object.defineProperty(exports, \\"record\\", { enumerable: true, get: function () { return record_1.record; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
import { RecordSchema } from \\"./types\\";
export declare function record<RawKey extends string | number, RawValue, ParsedValue, ParsedKey extends string | number>(keySchema: Schema<RawKey, ParsedKey>, valueSchema: Schema<RawValue, ParsedValue>): RecordSchema<RawKey, RawValue, ParsedKey, ParsedValue>;
",
                        "name": "record.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.record = void 0;
const Schema_1 = require(\\"../../Schema\\");
const entries_1 = require(\\"../../utils/entries\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function record(keySchema, valueSchema) {
    const baseSchema = {
        parse: async (raw, opts) => {
            return validateAndTransformRecord({
                value: raw,
                isKeyNumeric: (await keySchema.getType()) === Schema_1.SchemaType.NUMBER,
                transformKey: (key) => keySchema.parse(key, opts),
                transformValue: (value) => valueSchema.parse(value, opts),
            });
        },
        json: async (parsed, opts) => {
            return validateAndTransformRecord({
                value: parsed,
                isKeyNumeric: (await keySchema.getType()) === Schema_1.SchemaType.NUMBER,
                transformKey: (key) => keySchema.json(key, opts),
                transformValue: (value) => valueSchema.json(value, opts),
            });
        },
        getType: () => Schema_1.SchemaType.RECORD,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.record = record;
async function validateAndTransformRecord({ value, isKeyNumeric, transformKey, transformValue, }) {
    if (!(0, isPlainObject_1.isPlainObject)(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }
    return (0, entries_1.entries)(value).reduce(async (accPromise, [stringKey, value]) => {
        // skip nullish keys
        if (value == null) {
            return accPromise;
        }
        const acc = await accPromise;
        let key = stringKey;
        if (isKeyNumeric) {
            const numberKey = stringKey.length > 0 ? Number(stringKey) : NaN;
            if (!isNaN(numberKey)) {
                key = numberKey;
            }
        }
        const transformedKey = await transformKey(key);
        const transformedValue = await transformValue(value);
        if (acc.ok && transformedKey.ok && transformedValue.ok) {
            return {
                ok: true,
                value: {
                    ...acc.value,
                    [transformedKey.value]: transformedValue.value,
                },
            };
        }
        const errors = [];
        if (!acc.ok) {
            errors.push(...acc.errors);
        }
        if (!transformedKey.ok) {
            errors.push(...transformedKey.errors.map((error) => ({
                path: [\`\${key} (key)\`, ...error.path],
                message: error.message,
            })));
        }
        if (!transformedValue.ok) {
            errors.push(...transformedValue.errors.map((error) => ({
                path: [stringKey, ...error.path],
                message: error.message,
            })));
        }
        return {
            ok: false,
            errors,
        };
    }, Promise.resolve({ ok: true, value: {} }));
}
",
                        "name": "record.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema } from \\"../../Schema\\";
import { OptionalRecord } from \\"../../utils/OptionalRecord\\";
import { SchemaUtils } from \\"../schema-utils\\";
export declare type RecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseRecordSchema<RawKey, RawValue, ParsedKey, ParsedValue> & SchemaUtils<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
export declare type BaseRecordSchema<RawKey extends string | number, RawValue, ParsedKey extends string | number, ParsedValue> = BaseSchema<OptionalRecord<RawKey, RawValue>, OptionalRecord<ParsedKey, ParsedValue>>;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                    ],
                    "name": "record",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class JsonError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                        "name": "JsonError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.JsonError = void 0;
const stringifyValidationErrors_1 = require(\\"./stringifyValidationErrors\\");
class JsonError extends Error {
    errors;
    constructor(errors) {
        super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, JsonError.prototype);
    }
}
exports.JsonError = JsonError;
",
                        "name": "JsonError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
export declare class ParseError extends Error {
    readonly errors: ValidationError[];
    constructor(errors: ValidationError[]);
}
",
                        "name": "ParseError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParseError = void 0;
const stringifyValidationErrors_1 = require(\\"./stringifyValidationErrors\\");
class ParseError extends Error {
    errors;
    constructor(errors) {
        super(errors.map(stringifyValidationErrors_1.stringifyValidationError).join(\\"; \\"));
        this.errors = errors;
        Object.setPrototypeOf(this, ParseError.prototype);
    }
}
exports.ParseError = ParseError;
",
                        "name": "ParseError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { BaseSchema, Schema, SchemaOptions } from \\"../../Schema\\";
export interface SchemaUtils<Raw, Parsed> {
    optional: () => Schema<Raw | null | undefined, Parsed | undefined>;
    transform: <Transformed>(transformer: SchemaTransformer<Parsed, Transformed>) => Schema<Raw, Transformed>;
    parseOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Parsed>;
    jsonOrThrow: (raw: unknown, opts?: SchemaOptions) => Promise<Raw>;
}
export interface SchemaTransformer<Parsed, Transformed> {
    transform: (parsed: Parsed) => Transformed;
    untransform: (transformed: any) => Parsed;
}
export declare function getSchemaUtils<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): SchemaUtils<Raw, Parsed>;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
export declare function optional<Raw, Parsed>(schema: BaseSchema<Raw, Parsed>): Schema<Raw | null | undefined, Parsed | undefined>;
export declare function transform<Raw, Parsed, Transformed>(schema: BaseSchema<Raw, Parsed>, transformer: SchemaTransformer<Parsed, Transformed>): Schema<Raw, Transformed>;
",
                        "name": "getSchemaUtils.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.transform = exports.optional = exports.getSchemaUtils = void 0;
const Schema_1 = require(\\"../../Schema\\");
const JsonError_1 = require(\\"./JsonError\\");
const ParseError_1 = require(\\"./ParseError\\");
function getSchemaUtils(schema) {
    return {
        optional: () => optional(schema),
        transform: (transformer) => transform(schema, transformer),
        parseOrThrow: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (parsed.ok) {
                return parsed.value;
            }
            throw new ParseError_1.ParseError(parsed.errors);
        },
        jsonOrThrow: async (parsed, opts) => {
            const raw = await schema.json(parsed, opts);
            if (raw.ok) {
                return raw.value;
            }
            throw new JsonError_1.JsonError(raw.errors);
        },
    };
}
exports.getSchemaUtils = getSchemaUtils;
/**
 * schema utils are defined in one file to resolve issues with circular imports
 */
function optional(schema) {
    const baseSchema = {
        parse: (raw, opts) => {
            if (raw == null) {
                return {
                    ok: true,
                    value: undefined,
                };
            }
            return schema.parse(raw, opts);
        },
        json: (parsed, opts) => {
            if (parsed == null) {
                return {
                    ok: true,
                    value: null,
                };
            }
            return schema.json(parsed, opts);
        },
        getType: () => Schema_1.SchemaType.OPTIONAL,
    };
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
exports.optional = optional;
function transform(schema, transformer) {
    const baseSchema = {
        parse: async (raw, opts) => {
            const parsed = await schema.parse(raw, opts);
            if (!parsed.ok) {
                return parsed;
            }
            return {
                ok: true,
                value: transformer.transform(parsed.value),
            };
        },
        json: async (transformed, opts) => {
            const parsed = await transformer.untransform(transformed);
            return schema.json(parsed, opts);
        },
        getType: () => schema.getType(),
    };
    return {
        ...baseSchema,
        ...getSchemaUtils(baseSchema),
    };
}
exports.transform = transform;
",
                        "name": "getSchemaUtils.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { getSchemaUtils, optional, transform, type SchemaUtils } from \\"./getSchemaUtils\\";
export { JsonError } from \\"./JsonError\\";
export { ParseError } from \\"./ParseError\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParseError = exports.JsonError = exports.transform = exports.optional = exports.getSchemaUtils = void 0;
var getSchemaUtils_1 = require(\\"./getSchemaUtils\\");
Object.defineProperty(exports, \\"getSchemaUtils\\", { enumerable: true, get: function () { return getSchemaUtils_1.getSchemaUtils; } });
Object.defineProperty(exports, \\"optional\\", { enumerable: true, get: function () { return getSchemaUtils_1.optional; } });
Object.defineProperty(exports, \\"transform\\", { enumerable: true, get: function () { return getSchemaUtils_1.transform; } });
var JsonError_1 = require(\\"./JsonError\\");
Object.defineProperty(exports, \\"JsonError\\", { enumerable: true, get: function () { return JsonError_1.JsonError; } });
var ParseError_1 = require(\\"./ParseError\\");
Object.defineProperty(exports, \\"ParseError\\", { enumerable: true, get: function () { return ParseError_1.ParseError; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ValidationError } from \\"../../Schema\\";
export declare function stringifyValidationError(error: ValidationError): string;
",
                        "name": "stringifyValidationErrors.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.stringifyValidationError = void 0;
function stringifyValidationError(error) {
    if (error.path.length === 0) {
        return error.message;
    }
    return \`\${error.path.join(\\" -> \\")}: \${error.message}\`;
}
exports.stringifyValidationError = stringifyValidationError;
",
                        "name": "stringifyValidationErrors.js",
                        "type": "file",
                      },
                    ],
                    "name": "schema-utils",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export { set } from \\"./set\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.set = void 0;
var set_1 = require(\\"./set\\");
Object.defineProperty(exports, \\"set\\", { enumerable: true, get: function () { return set_1.set; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { Schema } from \\"../../Schema\\";
export declare function set<Raw, Parsed>(schema: Schema<Raw, Parsed>): Schema<Raw[], Set<Parsed>>;
",
                        "name": "set.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.set = void 0;
const Schema_1 = require(\\"../../Schema\\");
const list_1 = require(\\"../list\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function set(schema) {
    const listSchema = (0, list_1.list)(schema);
    const baseSchema = {
        parse: async (raw, opts) => {
            const parsedList = await listSchema.parse(raw, opts);
            if (parsedList.ok) {
                return {
                    ok: true,
                    value: new Set(parsedList.value),
                };
            }
            else {
                return parsedList;
            }
        },
        json: async (parsed, opts) => {
            if (!(parsed instanceof Set)) {
                return {
                    ok: false,
                    errors: [
                        {
                            path: [],
                            message: \\"Not a Set\\",
                        },
                    ],
                };
            }
            const jsonList = await listSchema.json([...parsed], opts);
            return jsonList;
        },
        getType: () => Schema_1.SchemaType.SET,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
    };
}
exports.set = set;
",
                        "name": "set.js",
                        "type": "file",
                      },
                    ],
                    "name": "set",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export declare function discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string>(parsedDiscriminant: ParsedDiscriminant, rawDiscriminant: RawDiscriminant): Discriminant<RawDiscriminant, ParsedDiscriminant>;
export interface Discriminant<RawDiscriminant extends string, ParsedDiscriminant extends string> {
    parsedDiscriminant: ParsedDiscriminant;
    rawDiscriminant: RawDiscriminant;
}
",
                        "name": "discriminant.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.discriminant = void 0;
function discriminant(parsedDiscriminant, rawDiscriminant) {
    return {
        parsedDiscriminant,
        rawDiscriminant,
    };
}
exports.discriminant = discriminant;
",
                        "name": "discriminant.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export { discriminant, type Discriminant } from \\"./discriminant\\";
export { type inferParsedDiscriminant, type inferParsedUnion, type inferRawDiscriminant, type inferRawUnion, type UnionSubtypes, } from \\"./types\\";
export { union } from \\"./union\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.union = exports.discriminant = void 0;
var discriminant_1 = require(\\"./discriminant\\");
Object.defineProperty(exports, \\"discriminant\\", { enumerable: true, get: function () { return discriminant_1.discriminant; } });
var union_1 = require(\\"./union\\");
Object.defineProperty(exports, \\"union\\", { enumerable: true, get: function () { return union_1.union; } });
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { inferParsedObject, inferRawObject, ObjectSchema } from \\"../object\\";
import { Discriminant } from \\"./discriminant\\";
export declare type UnionSubtypes<DiscriminantValues extends string | number | symbol> = {
    [K in DiscriminantValues]: ObjectSchema<any, any>;
};
export declare type inferRawUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferRawDiscriminant<D>, K> & inferRawObject<U[K]>;
}[keyof U];
export declare type inferParsedUnion<D extends string | Discriminant<any, any>, U extends UnionSubtypes<keyof U>> = {
    [K in keyof U]: Record<inferParsedDiscriminant<D>, K> & inferParsedObject<U[K]>;
}[keyof U];
export declare type inferRawDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<infer Raw, any> ? Raw : never;
export declare type inferParsedDiscriminant<D extends string | Discriminant<any, any>> = D extends string ? D : D extends Discriminant<any, infer Parsed> ? Parsed : never;
",
                        "name": "types.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "types.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "import { ObjectLikeSchema } from \\"../object-like\\";
import { Discriminant } from \\"./discriminant\\";
import { inferParsedUnion, inferRawUnion, UnionSubtypes } from \\"./types\\";
export declare function union<D extends string | Discriminant<any, any>, U extends UnionSubtypes<any>>(discriminant: D, union: U): ObjectLikeSchema<inferRawUnion<D, U>, inferParsedUnion<D, U>>;
",
                        "name": "union.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.union = void 0;
const Schema_1 = require(\\"../../Schema\\");
const isPlainObject_1 = require(\\"../../utils/isPlainObject\\");
const keys_1 = require(\\"../../utils/keys\\");
const enum_1 = require(\\"../enum\\");
const object_like_1 = require(\\"../object-like\\");
const schema_utils_1 = require(\\"../schema-utils\\");
function union(discriminant, union) {
    const rawDiscriminant = typeof discriminant === \\"string\\" ? discriminant : discriminant.rawDiscriminant;
    const parsedDiscriminant = typeof discriminant === \\"string\\"
        ? discriminant
        : discriminant.parsedDiscriminant;
    const discriminantValueSchema = (0, enum_1.enum_)((0, keys_1.keys)(union));
    const baseSchema = {
        parse: async (raw, opts) => {
            return transformAndValidateUnion(raw, rawDiscriminant, parsedDiscriminant, (discriminantValue) => discriminantValueSchema.parse(discriminantValue, opts), (discriminantValue) => union[discriminantValue], opts?.allowUnknownKeys ?? false, (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.parse(additionalProperties, opts));
        },
        json: async (parsed, opts) => {
            return transformAndValidateUnion(parsed, parsedDiscriminant, rawDiscriminant, (discriminantValue) => discriminantValueSchema.json(discriminantValue, opts), (discriminantValue) => union[discriminantValue], opts?.allowUnknownKeys ?? false, (additionalProperties, additionalPropertiesSchema) => additionalPropertiesSchema.json(additionalProperties, opts));
        },
        getType: () => Schema_1.SchemaType.UNION,
    };
    return {
        ...baseSchema,
        ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        ...(0, object_like_1.getObjectLikeUtils)(baseSchema),
    };
}
exports.union = union;
async function transformAndValidateUnion(value, discriminant, transformedDiscriminant, transformDiscriminantValue, getAdditionalPropertiesSchema, allowUnknownKeys, transformAdditionalProperties) {
    if (!(0, isPlainObject_1.isPlainObject)(value)) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: isPlainObject_1.NOT_AN_OBJECT_ERROR_MESSAGE,
                },
            ],
        };
    }
    const { [discriminant]: discriminantValue, ...additionalProperties } = value;
    if (discriminantValue == null) {
        return {
            ok: false,
            errors: [
                {
                    path: [],
                    message: \`Missing discriminant (\\"\${discriminant}\\")\`,
                },
            ],
        };
    }
    const transformedDiscriminantValue = await transformDiscriminantValue(discriminantValue);
    if (!transformedDiscriminantValue.ok) {
        return {
            ok: false,
            errors: transformedDiscriminantValue.errors.map((error) => ({
                path: [discriminant, ...error.path],
                message: error.message,
            })),
        };
    }
    const additionalPropertiesSchema = getAdditionalPropertiesSchema(transformedDiscriminantValue.value);
    if (additionalPropertiesSchema == null) {
        if (allowUnknownKeys) {
            return {
                ok: true,
                value: {
                    [transformedDiscriminant]: transformedDiscriminantValue.value,
                    ...additionalProperties,
                },
            };
        }
        else {
            return {
                ok: false,
                errors: [
                    {
                        path: [discriminant],
                        message: \\"Unrecognized discriminant value\\",
                    },
                ],
            };
        }
    }
    const transformedAdditionalProperties = await transformAdditionalProperties(additionalProperties, additionalPropertiesSchema);
    if (!transformedAdditionalProperties.ok) {
        return transformedAdditionalProperties;
    }
    return {
        ok: true,
        value: {
            [transformedDiscriminant]: discriminantValue,
            ...transformedAdditionalProperties.value,
        },
    };
}
",
                        "name": "union.js",
                        "type": "file",
                      },
                    ],
                    "name": "union",
                    "type": "directory",
                  },
                ],
                "name": "builders",
                "type": "directory",
              },
              Object {
                "contents": "export * from \\"./builders\\";
export { type inferParsed, type inferRaw, type Schema, type SchemaOptions } from \\"./Schema\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./builders\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export declare type MaybePromise<T> = T | Promise<T>;
",
                    "name": "MaybePromise.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "MaybePromise.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare type OptionalRecord<K extends string | number, V> = Record<K, V | undefined>;
",
                    "name": "OptionalRecord.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "OptionalRecord.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare type addQuestionMarksToNullableProperties<T> = {
    [K in OptionalKeys<T>]?: T[K];
} & Pick<T, RequiredKeys<T>>;
export declare type OptionalKeys<T> = {
    [K in keyof T]-?: undefined extends T[K] ? K : null extends T[K] ? K : 1 extends (any extends T[K] ? 0 : 1) ? never : K;
}[keyof T];
export declare type RequiredKeys<T> = Exclude<keyof T, OptionalKeys<T>>;
",
                    "name": "addQuestionMarksToNullableProperties.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                    "name": "addQuestionMarksToNullableProperties.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "import { MaybeValid, Schema, SchemaOptions, SchemaType } from \\"../Schema\\";
export declare function createIdentitySchemaCreator<T>(schemaType: SchemaType, validate: (value: unknown, opts?: SchemaOptions) => MaybeValid<T>): () => Schema<T, T>;
",
                    "name": "createIdentitySchemaCreator.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.createIdentitySchemaCreator = void 0;
const schema_utils_1 = require(\\"../builders/schema-utils\\");
function createIdentitySchemaCreator(schemaType, validate) {
    return () => {
        const baseSchema = {
            parse: validate,
            json: validate,
            getType: () => schemaType,
        };
        return {
            ...baseSchema,
            ...(0, schema_utils_1.getSchemaUtils)(baseSchema),
        };
    };
}
exports.createIdentitySchemaCreator = createIdentitySchemaCreator;
",
                    "name": "createIdentitySchemaCreator.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function entries<T>(object: T): [keyof T, T[keyof T]][];
",
                    "name": "entries.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.entries = void 0;
function entries(object) {
    return Object.entries(object);
}
exports.entries = entries;
",
                    "name": "entries.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K>;
",
                    "name": "filterObject.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.filterObject = void 0;
function filterObject(obj, keysToInclude) {
    const keysToIncludeSet = new Set(keysToInclude);
    return Object.entries(obj).reduce((acc, [key, value]) => {
        if (keysToIncludeSet.has(key)) {
            acc[key] = value;
        }
        return acc;
        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
    }, {});
}
exports.filterObject = filterObject;
",
                    "name": "filterObject.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare const NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
export declare function isPlainObject(value: unknown): value is Record<string, unknown>;
",
                    "name": "isPlainObject.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.isPlainObject = exports.NOT_AN_OBJECT_ERROR_MESSAGE = void 0;
exports.NOT_AN_OBJECT_ERROR_MESSAGE = \\"Not an object\\";
// borrowed from https://github.com/lodash/lodash/blob/master/isPlainObject.js
function isPlainObject(value) {
    if (typeof value !== \\"object\\" || value === null) {
        return false;
    }
    if (Object.getPrototypeOf(value) === null) {
        return true;
    }
    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
}
exports.isPlainObject = isPlainObject;
",
                    "name": "isPlainObject.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function keys<T>(object: T): (keyof T)[];
",
                    "name": "keys.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.keys = void 0;
function keys(object) {
    return Object.keys(object);
}
exports.keys = keys;
",
                    "name": "keys.js",
                    "type": "file",
                  },
                  Object {
                    "contents": "export declare function partition<T>(items: readonly T[], predicate: (item: T) => boolean): [T[], T[]];
",
                    "name": "partition.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.partition = void 0;
function partition(items, predicate) {
    const trueItems = [], falseItems = [];
    for (const item of items) {
        if (predicate(item)) {
            trueItems.push(item);
        }
        else {
            falseItems.push(item);
        }
    }
    return [trueItems, falseItems];
}
exports.partition = partition;
",
                    "name": "partition.js",
                    "type": "file",
                  },
                ],
                "name": "utils",
                "type": "directory",
              },
            ],
            "name": "schemas",
            "type": "directory",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare const TraceApiEnvironment: {
    readonly Prod: \\"prod.trace.com\\";
    /**
     * i'm staging
     */
    readonly Staging: \\"staging.trace.com\\";
};
export declare type TraceApiEnvironment = typeof TraceApiEnvironment.Prod | typeof TraceApiEnvironment.Staging;
",
        "name": "environments.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceApiEnvironment = void 0;
exports.TraceApiEnvironment = {
    Prod: \\"prod.trace.com\\",
    /**
     * i'm staging
     */
    Staging: \\"staging.trace.com\\",
};
",
        "name": "environments.js",
        "type": "file",
      },
      Object {
        "contents": "export * as TraceApi from \\"./api\\";
export { TraceApiClient } from \\"./Client\\";
export { TraceApiEnvironment } from \\"./environments\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceApiEnvironment = exports.TraceApiClient = exports.TraceApi = void 0;
exports.TraceApi = __importStar(require(\\"./api\\"));
var Client_1 = require(\\"./Client\\");
Object.defineProperty(exports, \\"TraceApiClient\\", { enumerable: true, get: function () { return Client_1.TraceApiClient; } });
var environments_1 = require(\\"./environments\\");
Object.defineProperty(exports, \\"TraceApiEnvironment\\", { enumerable: true, get: function () { return environments_1.TraceApiEnvironment; } });
",
        "name": "index.js",
        "type": "file",
      },
      Object {
        "contents": "{
    \\"name\\": \\"@fern-trace/api-sdk\\",
    \\"version\\": \\"0.0.0\\",
    \\"files\\": [
        \\"Client.d.ts\\",
        \\"Client.js\\",
        \\"environments.d.ts\\",
        \\"environments.js\\",
        \\"index.d.ts\\",
        \\"index.js\\",
        \\"api\\",
        \\"core\\",
        \\"serialization\\"
    ],
    \\"main\\": \\"./index.js\\",
    \\"types\\": \\"./index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"build\\": \\"tsc && tsc-alias\\",
        \\"prepack\\": \\"cp -rv dist/. .\\"
    },
    \\"dependencies\\": {
        \\"@types/basic-auth\\": \\"^1.1.3\\",
        \\"@types/url-join\\": \\"4.0.1\\",
        \\"axios\\": \\"^0.27.2\\",
        \\"basic-auth\\": \\"^2.0.1\\",
        \\"buffer\\": \\"^6.0.3\\",
        \\"js-base64\\": \\"^3.7.2\\",
        \\"url-join\\": \\"4.0.1\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"tsc-alias\\": \\"1.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
        "name": "package.json",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as storeTracedTestCaseV2 from \\"./storeTracedTestCaseV2\\";
export * as storeTracedWorkspaceV2 from \\"./storeTracedWorkspaceV2\\";
export * from \\"./requests\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.storeTracedWorkspaceV2 = exports.storeTracedTestCaseV2 = void 0;
exports.storeTracedTestCaseV2 = __importStar(require(\\"./storeTracedTestCaseV2\\"));
exports.storeTracedWorkspaceV2 = __importStar(require(\\"./storeTracedWorkspaceV2\\"));
__exportStar(require(\\"./requests\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../..\\";
import { TraceApi } from \\"../../../../..\\";
import * as core from \\"../../../../../core\\";
export declare const StoreTracedTestCaseRequest: core.serialization.Schema<serializers.StoreTracedTestCaseRequest.Raw, Omit<TraceApi.StoreTracedTestCaseRequest, \\"someQueryParam\\" | \\"referenceToOptionalString\\">>;
export declare namespace StoreTracedTestCaseRequest {
    interface Raw {
        result: serializers.TestCaseResultWithStdout.Raw;
        traceResponses: serializers.TraceResponse.Raw[];
    }
}
",
                            "name": "StoreTracedTestCaseRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StoreTracedTestCaseRequest = void 0;
const core = __importStar(require(\\"../../../../../core\\"));
exports.StoreTracedTestCaseRequest = core.serialization.object({
    result: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../..\\")))).TestCaseResultWithStdout),
    traceResponses: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../..\\")))).TraceResponse)),
});
",
                            "name": "StoreTracedTestCaseRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../..\\";
import { TraceApi } from \\"../../../../..\\";
import * as core from \\"../../../../../core\\";
export declare const StoreTracedWorkspaceRequest: core.serialization.Schema<serializers.StoreTracedWorkspaceRequest.Raw, TraceApi.StoreTracedWorkspaceRequest>;
export declare namespace StoreTracedWorkspaceRequest {
    interface Raw {
        workspaceRunDetails: serializers.WorkspaceRunDetails.Raw;
        traceResponses: serializers.TraceResponse.Raw[];
    }
}
",
                            "name": "StoreTracedWorkspaceRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StoreTracedWorkspaceRequest = void 0;
const core = __importStar(require(\\"../../../../../core\\"));
exports.StoreTracedWorkspaceRequest = core.serialization.object({
    workspaceRunDetails: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../..\\")))).WorkspaceRunDetails),
    traceResponses: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../..\\")))).TraceResponse)),
});
",
                            "name": "StoreTracedWorkspaceRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { StoreTracedTestCaseRequest } from \\"./StoreTracedTestCaseRequest\\";
export { StoreTracedWorkspaceRequest } from \\"./StoreTracedWorkspaceRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StoreTracedWorkspaceRequest = exports.StoreTracedTestCaseRequest = void 0;
var StoreTracedTestCaseRequest_1 = require(\\"./StoreTracedTestCaseRequest\\");
Object.defineProperty(exports, \\"StoreTracedTestCaseRequest\\", { enumerable: true, get: function () { return StoreTracedTestCaseRequest_1.StoreTracedTestCaseRequest; } });
var StoreTracedWorkspaceRequest_1 = require(\\"./StoreTracedWorkspaceRequest\\");
Object.defineProperty(exports, \\"StoreTracedWorkspaceRequest\\", { enumerable: true, get: function () { return StoreTracedWorkspaceRequest_1.StoreTracedWorkspaceRequest; } });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Request: core.serialization.Schema<serializers.admin.storeTracedTestCaseV2.Request.Raw, TraceApi.TraceResponseV2[]>;
export declare namespace Request {
    type Raw = serializers.TraceResponseV2.Raw[];
}
",
                        "name": "storeTracedTestCaseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Request = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Request = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TraceResponseV2));
",
                        "name": "storeTracedTestCaseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Request: core.serialization.Schema<serializers.admin.storeTracedWorkspaceV2.Request.Raw, TraceApi.TraceResponseV2[]>;
export declare namespace Request {
    type Raw = serializers.TraceResponseV2.Raw[];
}
",
                        "name": "storeTracedWorkspaceV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Request = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Request = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TraceResponseV2));
",
                        "name": "storeTracedWorkspaceV2.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const OptionalString: core.serialization.Schema<serializers.OptionalString.Raw, TraceApi.OptionalString>;
export declare namespace OptionalString {
    type Raw = string | null | undefined;
}
",
                        "name": "OptionalString.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.OptionalString = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.OptionalString = core.serialization.string().optional();
",
                        "name": "OptionalString.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OptionalString\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./OptionalString\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "admin",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const BinaryTreeNodeAndTreeValue: core.serialization.ObjectSchema<serializers.BinaryTreeNodeAndTreeValue.Raw, TraceApi.BinaryTreeNodeAndTreeValue>;
export declare namespace BinaryTreeNodeAndTreeValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        fullTree: serializers.BinaryTreeValue.Raw;
    }
}
",
                        "name": "BinaryTreeNodeAndTreeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BinaryTreeNodeAndTreeValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.BinaryTreeNodeAndTreeValue = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId),
    fullTree: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BinaryTreeValue),
});
",
                        "name": "BinaryTreeNodeAndTreeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const BinaryTreeNodeValue: core.serialization.ObjectSchema<serializers.BinaryTreeNodeValue.Raw, TraceApi.BinaryTreeNodeValue>;
export declare namespace BinaryTreeNodeValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        val: number;
        right?: serializers.NodeId.Raw | null;
        left?: serializers.NodeId.Raw | null;
    }
}
",
                        "name": "BinaryTreeNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BinaryTreeNodeValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.BinaryTreeNodeValue = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId),
    val: core.serialization.number(),
    right: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
    left: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
});
",
                        "name": "BinaryTreeNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const BinaryTreeValue: core.serialization.ObjectSchema<serializers.BinaryTreeValue.Raw, TraceApi.BinaryTreeValue>;
export declare namespace BinaryTreeValue {
    interface Raw {
        root?: serializers.NodeId.Raw | null;
        nodes: Record<serializers.NodeId.Raw, serializers.BinaryTreeNodeValue.Raw | null | undefined>;
    }
}
",
                        "name": "BinaryTreeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BinaryTreeValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.BinaryTreeValue = core.serialization.object({
    root: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
    nodes: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BinaryTreeNodeValue).optional()),
});
",
                        "name": "BinaryTreeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Date: core.serialization.Schema<serializers.Date.Raw, TraceApi.Date>;
export declare namespace Date {
    type Raw = string;
}
",
                        "name": "Date.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Date = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.Date = core.serialization
    .string()
    .transform({
    transform: api_sdk_1.TraceApi.Date,
    untransform: (value) => value,
});
",
                        "name": "Date.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DebugKeyValuePairs: core.serialization.ObjectSchema<serializers.DebugKeyValuePairs.Raw, TraceApi.DebugKeyValuePairs>;
export declare namespace DebugKeyValuePairs {
    interface Raw {
        key: serializers.DebugVariableValue.Raw;
        value: serializers.DebugVariableValue.Raw;
    }
}
",
                        "name": "DebugKeyValuePairs.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DebugKeyValuePairs = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DebugKeyValuePairs = core.serialization.object({
    key: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugVariableValue),
    value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugVariableValue),
});
",
                        "name": "DebugKeyValuePairs.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DebugMapValue: core.serialization.ObjectSchema<serializers.DebugMapValue.Raw, TraceApi.DebugMapValue>;
export declare namespace DebugMapValue {
    interface Raw {
        keyValuePairs: serializers.DebugKeyValuePairs.Raw[];
    }
}
",
                        "name": "DebugMapValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DebugMapValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DebugMapValue = core.serialization.object({
    keyValuePairs: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugKeyValuePairs)),
});
",
                        "name": "DebugMapValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DebugVariableValue: core.serialization.Schema<serializers.DebugVariableValue.Raw, TraceApi.DebugVariableValue>;
export declare namespace DebugVariableValue {
    type Raw = DebugVariableValue.IntegerValue | DebugVariableValue.BooleanValue | DebugVariableValue.DoubleValue | DebugVariableValue.StringValue | DebugVariableValue.CharValue | DebugVariableValue.MapValue | DebugVariableValue.ListValue | DebugVariableValue.BinaryTreeNodeValue | DebugVariableValue.SinglyLinkedListNodeValue | DebugVariableValue.DoublyLinkedListNodeValue | DebugVariableValue.UndefinedValue | DebugVariableValue.NullValue | DebugVariableValue.GenericValue;
    interface IntegerValue {
        type: \\"integerValue\\";
        value: number;
    }
    interface BooleanValue {
        type: \\"booleanValue\\";
        value: boolean;
    }
    interface DoubleValue {
        type: \\"doubleValue\\";
        value: number;
    }
    interface StringValue {
        type: \\"stringValue\\";
        value: string;
    }
    interface CharValue {
        type: \\"charValue\\";
        value: string;
    }
    interface MapValue extends serializers.DebugMapValue.Raw {
        type: \\"mapValue\\";
    }
    interface ListValue {
        type: \\"listValue\\";
        value: serializers.DebugVariableValue.Raw[];
    }
    interface BinaryTreeNodeValue extends serializers.BinaryTreeNodeAndTreeValue.Raw {
        type: \\"binaryTreeNodeValue\\";
    }
    interface SinglyLinkedListNodeValue extends serializers.SinglyLinkedListNodeAndListValue.Raw {
        type: \\"singlyLinkedListNodeValue\\";
    }
    interface DoublyLinkedListNodeValue extends serializers.DoublyLinkedListNodeAndListValue.Raw {
        type: \\"doublyLinkedListNodeValue\\";
    }
    interface UndefinedValue {
        type: \\"undefinedValue\\";
    }
    interface NullValue {
        type: \\"nullValue\\";
    }
    interface GenericValue extends serializers.GenericValue.Raw {
        type: \\"genericValue\\";
    }
}
",
                        "name": "DebugVariableValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DebugVariableValue = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.DebugVariableValue = core.serialization
    .union(\\"type\\", {
    integerValue: core.serialization.object({
        value: core.serialization.number(),
    }),
    booleanValue: core.serialization.object({
        value: core.serialization.boolean(),
    }),
    doubleValue: core.serialization.object({
        value: core.serialization.number(),
    }),
    stringValue: core.serialization.object({
        value: core.serialization.string(),
    }),
    charValue: core.serialization.object({
        value: core.serialization.string(),
    }),
    mapValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugMapValue),
    listValue: core.serialization.object({
        value: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugVariableValue)),
    }),
    binaryTreeNodeValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BinaryTreeNodeAndTreeValue),
    singlyLinkedListNodeValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SinglyLinkedListNodeAndListValue),
    doublyLinkedListNodeValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DoublyLinkedListNodeAndListValue),
    undefinedValue: core.serialization.object({}),
    nullValue: core.serialization.object({}),
    genericValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).GenericValue),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"integerValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.integerValue(value.value);
            case \\"booleanValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.booleanValue(value.value);
            case \\"doubleValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.doubleValue(value.value);
            case \\"stringValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.stringValue(value.value);
            case \\"charValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.charValue(value.value);
            case \\"mapValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.mapValue(value);
            case \\"listValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.listValue(value.value);
            case \\"binaryTreeNodeValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.binaryTreeNodeValue(value);
            case \\"singlyLinkedListNodeValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.singlyLinkedListNodeValue(value);
            case \\"doublyLinkedListNodeValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.doublyLinkedListNodeValue(value);
            case \\"undefinedValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.undefinedValue();
            case \\"nullValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.nullValue();
            case \\"genericValue\\":
                return api_sdk_1.TraceApi.DebugVariableValue.genericValue(value);
            default:
                return api_sdk_1.TraceApi.DebugVariableValue._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "DebugVariableValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DoublyLinkedListNodeAndListValue: core.serialization.ObjectSchema<serializers.DoublyLinkedListNodeAndListValue.Raw, TraceApi.DoublyLinkedListNodeAndListValue>;
export declare namespace DoublyLinkedListNodeAndListValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        fullList: serializers.DoublyLinkedListValue.Raw;
    }
}
",
                        "name": "DoublyLinkedListNodeAndListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DoublyLinkedListNodeAndListValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DoublyLinkedListNodeAndListValue = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId),
    fullList: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DoublyLinkedListValue),
});
",
                        "name": "DoublyLinkedListNodeAndListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DoublyLinkedListNodeValue: core.serialization.ObjectSchema<serializers.DoublyLinkedListNodeValue.Raw, TraceApi.DoublyLinkedListNodeValue>;
export declare namespace DoublyLinkedListNodeValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        val: number;
        next?: serializers.NodeId.Raw | null;
        prev?: serializers.NodeId.Raw | null;
    }
}
",
                        "name": "DoublyLinkedListNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DoublyLinkedListNodeValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DoublyLinkedListNodeValue = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId),
    val: core.serialization.number(),
    next: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
    prev: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
});
",
                        "name": "DoublyLinkedListNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DoublyLinkedListValue: core.serialization.ObjectSchema<serializers.DoublyLinkedListValue.Raw, TraceApi.DoublyLinkedListValue>;
export declare namespace DoublyLinkedListValue {
    interface Raw {
        head?: serializers.NodeId.Raw | null;
        nodes: Record<serializers.NodeId.Raw, serializers.DoublyLinkedListNodeValue.Raw | null | undefined>;
    }
}
",
                        "name": "DoublyLinkedListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DoublyLinkedListValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.DoublyLinkedListValue = core.serialization.object({
    head: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
    nodes: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DoublyLinkedListNodeValue).optional()),
});
",
                        "name": "DoublyLinkedListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const FileInfo: core.serialization.ObjectSchema<serializers.FileInfo.Raw, TraceApi.FileInfo>;
export declare namespace FileInfo {
    interface Raw {
        filename: string;
        contents: string;
    }
}
",
                        "name": "FileInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileInfo = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.FileInfo = core.serialization.object({
    filename: core.serialization.string(),
    contents: core.serialization.string(),
});
",
                        "name": "FileInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GenericValue: core.serialization.ObjectSchema<serializers.GenericValue.Raw, TraceApi.GenericValue>;
export declare namespace GenericValue {
    interface Raw {
        stringifiedType?: string | null;
        stringifiedValue: string;
    }
}
",
                        "name": "GenericValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GenericValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GenericValue = core.serialization.object({
    stringifiedType: core.serialization.string().optional(),
    stringifiedValue: core.serialization.string(),
});
",
                        "name": "GenericValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const KeyValuePair: core.serialization.ObjectSchema<serializers.KeyValuePair.Raw, TraceApi.KeyValuePair>;
export declare namespace KeyValuePair {
    interface Raw {
        key: serializers.VariableValue.Raw;
        value: serializers.VariableValue.Raw;
    }
}
",
                        "name": "KeyValuePair.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.KeyValuePair = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.KeyValuePair = core.serialization.object({
    key: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue),
    value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue),
});
",
                        "name": "KeyValuePair.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Language: core.serialization.Schema<serializers.Language.Raw, TraceApi.Language>;
export declare namespace Language {
    type Raw = \\"JAVA\\" | \\"JAVASCRIPT\\" | \\"PYTHON\\";
}
",
                        "name": "Language.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Language = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Language = core.serialization.enum_([\\"JAVA\\", \\"JAVASCRIPT\\", \\"PYTHON\\"]);
",
                        "name": "Language.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ListType: core.serialization.ObjectSchema<serializers.ListType.Raw, TraceApi.ListType>;
export declare namespace ListType {
    interface Raw {
        valueType: serializers.VariableType.Raw;
        isFixedLength?: boolean | null;
    }
}
",
                        "name": "ListType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ListType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ListType = core.serialization.object({
    valueType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableType),
    isFixedLength: core.serialization.boolean().optional(),
});
",
                        "name": "ListType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MapType: core.serialization.ObjectSchema<serializers.MapType.Raw, TraceApi.MapType>;
export declare namespace MapType {
    interface Raw {
        keyType: serializers.VariableType.Raw;
        valueType: serializers.VariableType.Raw;
    }
}
",
                        "name": "MapType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MapType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MapType = core.serialization.object({
    keyType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableType),
    valueType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableType),
});
",
                        "name": "MapType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MapValue: core.serialization.ObjectSchema<serializers.MapValue.Raw, TraceApi.MapValue>;
export declare namespace MapValue {
    interface Raw {
        keyValuePairs: serializers.KeyValuePair.Raw[];
    }
}
",
                        "name": "MapValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MapValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MapValue = core.serialization.object({
    keyValuePairs: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).KeyValuePair)),
});
",
                        "name": "MapValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const NodeId: core.serialization.Schema<serializers.NodeId.Raw, TraceApi.NodeId>;
export declare namespace NodeId {
    type Raw = string;
}
",
                        "name": "NodeId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NodeId = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.NodeId = core.serialization
    .string()
    .transform({
    transform: api_sdk_1.TraceApi.NodeId,
    untransform: (value) => value,
});
",
                        "name": "NodeId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ProblemId: core.serialization.Schema<serializers.ProblemId.Raw, TraceApi.ProblemId>;
export declare namespace ProblemId {
    type Raw = string;
}
",
                        "name": "ProblemId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemId = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.ProblemId = core.serialization
    .string()
    .transform({
    transform: api_sdk_1.TraceApi.ProblemId,
    untransform: (value) => value,
});
",
                        "name": "ProblemId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RandomUnknownType: core.serialization.Schema<serializers.RandomUnknownType.Raw, TraceApi.RandomUnknownType>;
export declare namespace RandomUnknownType {
    type Raw = unknown;
}
",
                        "name": "RandomUnknownType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RandomUnknownType = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RandomUnknownType = core.serialization.unknown();
",
                        "name": "RandomUnknownType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SinglyLinkedListNodeAndListValue: core.serialization.ObjectSchema<serializers.SinglyLinkedListNodeAndListValue.Raw, TraceApi.SinglyLinkedListNodeAndListValue>;
export declare namespace SinglyLinkedListNodeAndListValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        fullList: serializers.SinglyLinkedListValue.Raw;
    }
}
",
                        "name": "SinglyLinkedListNodeAndListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SinglyLinkedListNodeAndListValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SinglyLinkedListNodeAndListValue = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId),
    fullList: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SinglyLinkedListValue),
});
",
                        "name": "SinglyLinkedListNodeAndListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SinglyLinkedListNodeValue: core.serialization.ObjectSchema<serializers.SinglyLinkedListNodeValue.Raw, TraceApi.SinglyLinkedListNodeValue>;
export declare namespace SinglyLinkedListNodeValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        val: number;
        next?: serializers.NodeId.Raw | null;
    }
}
",
                        "name": "SinglyLinkedListNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SinglyLinkedListNodeValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SinglyLinkedListNodeValue = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId),
    val: core.serialization.number(),
    next: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
});
",
                        "name": "SinglyLinkedListNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SinglyLinkedListValue: core.serialization.ObjectSchema<serializers.SinglyLinkedListValue.Raw, TraceApi.SinglyLinkedListValue>;
export declare namespace SinglyLinkedListValue {
    interface Raw {
        head?: serializers.NodeId.Raw | null;
        nodes: Record<serializers.NodeId.Raw, serializers.SinglyLinkedListNodeValue.Raw | null | undefined>;
    }
}
",
                        "name": "SinglyLinkedListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SinglyLinkedListValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SinglyLinkedListValue = core.serialization.object({
    head: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId).optional(),
    nodes: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).NodeId), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SinglyLinkedListNodeValue).optional()),
});
",
                        "name": "SinglyLinkedListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCase: core.serialization.ObjectSchema<serializers.TestCase.Raw, TraceApi.TestCase>;
export declare namespace TestCase {
    interface Raw {
        id: string;
        params: serializers.VariableValue.Raw[];
    }
}
",
                        "name": "TestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCase = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCase = core.serialization.object({
    id: core.serialization.string(),
    params: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue)),
});
",
                        "name": "TestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCaseWithExpectedResult: core.serialization.ObjectSchema<serializers.TestCaseWithExpectedResult.Raw, TraceApi.TestCaseWithExpectedResult>;
export declare namespace TestCaseWithExpectedResult {
    interface Raw {
        testCase: serializers.TestCase.Raw;
        expectedResult: serializers.VariableValue.Raw;
    }
}
",
                        "name": "TestCaseWithExpectedResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseWithExpectedResult = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCaseWithExpectedResult = core.serialization.object({
    testCase: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCase),
    expectedResult: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue),
});
",
                        "name": "TestCaseWithExpectedResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const UserId: core.serialization.Schema<serializers.UserId.Raw, TraceApi.UserId>;
export declare namespace UserId {
    type Raw = string;
}
",
                        "name": "UserId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UserId = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.UserId = core.serialization
    .string()
    .transform({
    transform: api_sdk_1.TraceApi.UserId,
    untransform: (value) => value,
});
",
                        "name": "UserId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const VariableType: core.serialization.Schema<serializers.VariableType.Raw, TraceApi.VariableType>;
export declare namespace VariableType {
    type Raw = VariableType.MemberWithColon | VariableType.IntegerType | VariableType.DoubleType | VariableType.BooleanType | VariableType.StringType | VariableType.CharType | VariableType.ListType | VariableType.MapType | VariableType.BinaryTreeType | VariableType.SinglyLinkedListType | VariableType.DoublyLinkedListType;
    interface MemberWithColon {
        type: \\"member:with:colon\\";
    }
    interface IntegerType {
        type: \\"integerType\\";
    }
    interface DoubleType {
        type: \\"doubleType\\";
    }
    interface BooleanType {
        type: \\"booleanType\\";
    }
    interface StringType {
        type: \\"stringType\\";
    }
    interface CharType {
        type: \\"charType\\";
    }
    interface ListType extends serializers.ListType.Raw {
        type: \\"listType\\";
    }
    interface MapType extends serializers.MapType.Raw {
        type: \\"mapType\\";
    }
    interface BinaryTreeType {
        type: \\"binaryTreeType\\";
    }
    interface SinglyLinkedListType {
        type: \\"singlyLinkedListType\\";
    }
    interface DoublyLinkedListType {
        type: \\"doublyLinkedListType\\";
    }
}
",
                        "name": "VariableType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableType = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.VariableType = core.serialization
    .union(\\"type\\", {
    \\"member:with:colon\\": core.serialization.object({}),
    integerType: core.serialization.object({}),
    doubleType: core.serialization.object({}),
    booleanType: core.serialization.object({}),
    stringType: core.serialization.object({}),
    charType: core.serialization.object({}),
    listType: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ListType),
    mapType: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).MapType),
    binaryTreeType: core.serialization.object({}),
    singlyLinkedListType: core.serialization.object({}),
    doublyLinkedListType: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"member:with:colon\\":
                return api_sdk_1.TraceApi.VariableType.memberWithColon();
            case \\"integerType\\":
                return api_sdk_1.TraceApi.VariableType.integerType();
            case \\"doubleType\\":
                return api_sdk_1.TraceApi.VariableType.doubleType();
            case \\"booleanType\\":
                return api_sdk_1.TraceApi.VariableType.booleanType();
            case \\"stringType\\":
                return api_sdk_1.TraceApi.VariableType.stringType();
            case \\"charType\\":
                return api_sdk_1.TraceApi.VariableType.charType();
            case \\"listType\\":
                return api_sdk_1.TraceApi.VariableType.listType(value);
            case \\"mapType\\":
                return api_sdk_1.TraceApi.VariableType.mapType(value);
            case \\"binaryTreeType\\":
                return api_sdk_1.TraceApi.VariableType.binaryTreeType();
            case \\"singlyLinkedListType\\":
                return api_sdk_1.TraceApi.VariableType.singlyLinkedListType();
            case \\"doublyLinkedListType\\":
                return api_sdk_1.TraceApi.VariableType.doublyLinkedListType();
            default:
                return api_sdk_1.TraceApi.VariableType._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "VariableType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const VariableValue: core.serialization.Schema<serializers.VariableValue.Raw, TraceApi.VariableValue>;
export declare namespace VariableValue {
    type Raw = VariableValue.IntegerValue | VariableValue.BooleanValue | VariableValue.DoubleValue | VariableValue.StringValue | VariableValue.CharValue | VariableValue.MapValue | VariableValue.ListValue | VariableValue.BinaryTreeValue | VariableValue.SinglyLinkedListValue | VariableValue.DoublyLinkedListValue | VariableValue.NullValue;
    interface IntegerValue {
        type: \\"integerValue\\";
        value: number;
    }
    interface BooleanValue {
        type: \\"booleanValue\\";
        value: boolean;
    }
    interface DoubleValue {
        type: \\"doubleValue\\";
        value: number;
    }
    interface StringValue {
        type: \\"stringValue\\";
        value: string;
    }
    interface CharValue {
        type: \\"charValue\\";
        value: string;
    }
    interface MapValue extends serializers.MapValue.Raw {
        type: \\"mapValue\\";
    }
    interface ListValue {
        type: \\"listValue\\";
        value: serializers.VariableValue.Raw[];
    }
    interface BinaryTreeValue extends serializers.BinaryTreeValue.Raw {
        type: \\"binaryTreeValue\\";
    }
    interface SinglyLinkedListValue extends serializers.SinglyLinkedListValue.Raw {
        type: \\"singlyLinkedListValue\\";
    }
    interface DoublyLinkedListValue extends serializers.DoublyLinkedListValue.Raw {
        type: \\"doublyLinkedListValue\\";
    }
    interface NullValue {
        type: \\"nullValue\\";
    }
}
",
                        "name": "VariableValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableValue = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.VariableValue = core.serialization
    .union(\\"type\\", {
    integerValue: core.serialization.object({
        value: core.serialization.number(),
    }),
    booleanValue: core.serialization.object({
        value: core.serialization.boolean(),
    }),
    doubleValue: core.serialization.object({
        value: core.serialization.number(),
    }),
    stringValue: core.serialization.object({
        value: core.serialization.string(),
    }),
    charValue: core.serialization.object({
        value: core.serialization.string(),
    }),
    mapValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).MapValue),
    listValue: core.serialization.object({
        value: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue)),
    }),
    binaryTreeValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BinaryTreeValue),
    singlyLinkedListValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SinglyLinkedListValue),
    doublyLinkedListValue: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DoublyLinkedListValue),
    nullValue: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"integerValue\\":
                return api_sdk_1.TraceApi.VariableValue.integerValue(value.value);
            case \\"booleanValue\\":
                return api_sdk_1.TraceApi.VariableValue.booleanValue(value.value);
            case \\"doubleValue\\":
                return api_sdk_1.TraceApi.VariableValue.doubleValue(value.value);
            case \\"stringValue\\":
                return api_sdk_1.TraceApi.VariableValue.stringValue(value.value);
            case \\"charValue\\":
                return api_sdk_1.TraceApi.VariableValue.charValue(value.value);
            case \\"mapValue\\":
                return api_sdk_1.TraceApi.VariableValue.mapValue(value);
            case \\"listValue\\":
                return api_sdk_1.TraceApi.VariableValue.listValue(value.value);
            case \\"binaryTreeValue\\":
                return api_sdk_1.TraceApi.VariableValue.binaryTreeValue(value);
            case \\"singlyLinkedListValue\\":
                return api_sdk_1.TraceApi.VariableValue.singlyLinkedListValue(value);
            case \\"doublyLinkedListValue\\":
                return api_sdk_1.TraceApi.VariableValue.doublyLinkedListValue(value);
            case \\"nullValue\\":
                return api_sdk_1.TraceApi.VariableValue.nullValue();
            default:
                return api_sdk_1.TraceApi.VariableValue._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "VariableValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./UserId\\";
export * from \\"./ProblemId\\";
export * from \\"./NodeId\\";
export * from \\"./VariableType\\";
export * from \\"./ListType\\";
export * from \\"./MapType\\";
export * from \\"./VariableValue\\";
export * from \\"./DebugVariableValue\\";
export * from \\"./GenericValue\\";
export * from \\"./MapValue\\";
export * from \\"./KeyValuePair\\";
export * from \\"./BinaryTreeValue\\";
export * from \\"./BinaryTreeNodeValue\\";
export * from \\"./BinaryTreeNodeAndTreeValue\\";
export * from \\"./SinglyLinkedListValue\\";
export * from \\"./SinglyLinkedListNodeValue\\";
export * from \\"./SinglyLinkedListNodeAndListValue\\";
export * from \\"./DoublyLinkedListValue\\";
export * from \\"./DoublyLinkedListNodeValue\\";
export * from \\"./DoublyLinkedListNodeAndListValue\\";
export * from \\"./DebugMapValue\\";
export * from \\"./DebugKeyValuePairs\\";
export * from \\"./TestCase\\";
export * from \\"./TestCaseWithExpectedResult\\";
export * from \\"./FileInfo\\";
export * from \\"./Language\\";
export * from \\"./RandomUnknownType\\";
export * from \\"./Date\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./UserId\\"), exports);
__exportStar(require(\\"./ProblemId\\"), exports);
__exportStar(require(\\"./NodeId\\"), exports);
__exportStar(require(\\"./VariableType\\"), exports);
__exportStar(require(\\"./ListType\\"), exports);
__exportStar(require(\\"./MapType\\"), exports);
__exportStar(require(\\"./VariableValue\\"), exports);
__exportStar(require(\\"./DebugVariableValue\\"), exports);
__exportStar(require(\\"./GenericValue\\"), exports);
__exportStar(require(\\"./MapValue\\"), exports);
__exportStar(require(\\"./KeyValuePair\\"), exports);
__exportStar(require(\\"./BinaryTreeValue\\"), exports);
__exportStar(require(\\"./BinaryTreeNodeValue\\"), exports);
__exportStar(require(\\"./BinaryTreeNodeAndTreeValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListNodeValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListNodeAndListValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListNodeValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListNodeAndListValue\\"), exports);
__exportStar(require(\\"./DebugMapValue\\"), exports);
__exportStar(require(\\"./DebugKeyValuePairs\\"), exports);
__exportStar(require(\\"./TestCase\\"), exports);
__exportStar(require(\\"./TestCaseWithExpectedResult\\"), exports);
__exportStar(require(\\"./FileInfo\\"), exports);
__exportStar(require(\\"./Language\\"), exports);
__exportStar(require(\\"./RandomUnknownType\\"), exports);
__exportStar(require(\\"./Date\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.homepage.getHomepageProblems.Response.Raw, TraceApi.ProblemId[]>;
export declare namespace Response {
    type Raw = serializers.ProblemId.Raw[];
}
",
                        "name": "getHomepageProblems.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId));
",
                        "name": "getHomepageProblems.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getHomepageProblems from \\"./getHomepageProblems\\";
export * as setHomepageProblems from \\"./setHomepageProblems\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.setHomepageProblems = exports.getHomepageProblems = void 0;
exports.getHomepageProblems = __importStar(require(\\"./getHomepageProblems\\"));
exports.setHomepageProblems = __importStar(require(\\"./setHomepageProblems\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Request: core.serialization.Schema<serializers.homepage.setHomepageProblems.Request.Raw, TraceApi.ProblemId[]>;
export declare namespace Request {
    type Raw = serializers.ProblemId.Raw[];
}
",
                        "name": "setHomepageProblems.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Request = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Request = core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId));
",
                        "name": "setHomepageProblems.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "homepage",
                "type": "directory",
              },
              Object {
                "contents": "export * as admin from \\"./admin\\";
export * from \\"./admin/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as langServer from \\"./langServer\\";
export * from \\"./langServer/types\\";
export * as migration from \\"./migration\\";
export * from \\"./migration/types\\";
export * as playlist from \\"./playlist\\";
export * from \\"./playlist/types\\";
export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as submission from \\"./submission\\";
export * from \\"./submission/types\\";
export * as v2 from \\"./v2\\";
export * as homepage from \\"./homepage\\";
export * as sysprop from \\"./sysprop\\";
export * from \\"./admin/client/requests\\";
export * from \\"./problem/client/requests\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.sysprop = exports.homepage = exports.v2 = exports.submission = exports.problem = exports.playlist = exports.migration = exports.langServer = exports.commons = exports.admin = void 0;
exports.admin = __importStar(require(\\"./admin\\"));
__exportStar(require(\\"./admin/types\\"), exports);
exports.commons = __importStar(require(\\"./commons\\"));
__exportStar(require(\\"./commons/types\\"), exports);
exports.langServer = __importStar(require(\\"./langServer\\"));
__exportStar(require(\\"./langServer/types\\"), exports);
exports.migration = __importStar(require(\\"./migration\\"));
__exportStar(require(\\"./migration/types\\"), exports);
exports.playlist = __importStar(require(\\"./playlist\\"));
__exportStar(require(\\"./playlist/types\\"), exports);
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
exports.submission = __importStar(require(\\"./submission\\"));
__exportStar(require(\\"./submission/types\\"), exports);
exports.v2 = __importStar(require(\\"./v2\\"));
exports.homepage = __importStar(require(\\"./homepage\\"));
exports.sysprop = __importStar(require(\\"./sysprop\\"));
__exportStar(require(\\"./admin/client/requests\\"), exports);
__exportStar(require(\\"./problem/client/requests\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const LangServerRequest: core.serialization.ObjectSchema<serializers.LangServerRequest.Raw, TraceApi.LangServerRequest>;
export declare namespace LangServerRequest {
    interface Raw {
        request?: unknown;
    }
}
",
                        "name": "LangServerRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.LangServerRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.LangServerRequest = core.serialization.object({
    request: core.serialization.unknown(),
});
",
                        "name": "LangServerRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const LangServerResponse: core.serialization.ObjectSchema<serializers.LangServerResponse.Raw, TraceApi.LangServerResponse>;
export declare namespace LangServerResponse {
    interface Raw {
        response?: unknown;
    }
}
",
                        "name": "LangServerResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.LangServerResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.LangServerResponse = core.serialization.object({
    response: core.serialization.unknown(),
});
",
                        "name": "LangServerResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./LangServerRequest\\";
export * from \\"./LangServerResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./LangServerRequest\\"), exports);
__exportStar(require(\\"./LangServerResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "langServer",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.migration.getAttemptedMigrations.Response.Raw, TraceApi.Migration[]>;
export declare namespace Response {
    type Raw = serializers.Migration.Raw[];
}
",
                        "name": "getAttemptedMigrations.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Migration));
",
                        "name": "getAttemptedMigrations.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getAttemptedMigrations from \\"./getAttemptedMigrations\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getAttemptedMigrations = void 0;
exports.getAttemptedMigrations = __importStar(require(\\"./getAttemptedMigrations\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Migration: core.serialization.ObjectSchema<serializers.Migration.Raw, TraceApi.Migration>;
export declare namespace Migration {
    interface Raw {
        name: string;
        status: serializers.MigrationStatus.Raw;
    }
}
",
                        "name": "Migration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Migration = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Migration = core.serialization.object({
    name: core.serialization.string(),
    status: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).MigrationStatus),
});
",
                        "name": "Migration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MigrationStatus: core.serialization.Schema<serializers.MigrationStatus.Raw, TraceApi.MigrationStatus>;
export declare namespace MigrationStatus {
    type Raw = \\"RUNNING\\" | \\"FAILED\\" | \\"FINISHED\\";
}
",
                        "name": "MigrationStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MigrationStatus = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MigrationStatus = core.serialization.enum_([\\"RUNNING\\", \\"FAILED\\", \\"FINISHED\\"]);
",
                        "name": "MigrationStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./MigrationStatus\\";
export * from \\"./Migration\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./MigrationStatus\\"), exports);
__exportStar(require(\\"./Migration\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "migration",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Error: core.serialization.Schema<serializers.playlist.getPlaylist.Error.Raw, TraceApi.playlist.getPlaylist.Error>;
export declare namespace Error {
    type Raw = Error.PlaylistIdNotFoundError | Error.UnauthorizedError;
    interface PlaylistIdNotFoundError {
        errorName: \\"PlaylistIdNotFoundError\\";
        content: serializers.PlaylistIdNotFoundErrorBody.Raw;
    }
    interface UnauthorizedError {
        errorName: \\"UnauthorizedError\\";
    }
}
",
                        "name": "getPlaylist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.Error = core.serialization
    .union(\\"errorName\\", {
    PlaylistIdNotFoundError: core.serialization.object({
        content: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PlaylistIdNotFoundErrorBody),
    }),
    UnauthorizedError: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.errorName) {
            case \\"PlaylistIdNotFoundError\\":
                return api_sdk_1.TraceApi.playlist.getPlaylist.Error.playlistIdNotFoundError(value.content);
            case \\"UnauthorizedError\\":
                return api_sdk_1.TraceApi.playlist.getPlaylist.Error.unauthorizedError();
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "getPlaylist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.playlist.getPlaylists.Response.Raw, TraceApi.Playlist[]>;
export declare namespace Response {
    type Raw = serializers.Playlist.Raw[];
}
",
                        "name": "getPlaylists.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Playlist));
",
                        "name": "getPlaylists.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getPlaylists from \\"./getPlaylists\\";
export * as getPlaylist from \\"./getPlaylist\\";
export * as updatePlaylist from \\"./updatePlaylist\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.updatePlaylist = exports.getPlaylist = exports.getPlaylists = void 0;
exports.getPlaylists = __importStar(require(\\"./getPlaylists\\"));
exports.getPlaylist = __importStar(require(\\"./getPlaylist\\"));
exports.updatePlaylist = __importStar(require(\\"./updatePlaylist\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Request: core.serialization.Schema<serializers.playlist.updatePlaylist.Request.Raw, TraceApi.UpdatePlaylistRequest | undefined>;
export declare namespace Request {
    type Raw = serializers.UpdatePlaylistRequest.Raw | null | undefined;
}
export declare const Response: core.serialization.Schema<serializers.playlist.updatePlaylist.Response.Raw, TraceApi.Playlist | undefined>;
export declare namespace Response {
    type Raw = serializers.Playlist.Raw | null | undefined;
}
export declare const Error: core.serialization.Schema<serializers.playlist.updatePlaylist.Error.Raw, TraceApi.playlist.updatePlaylist.Error>;
export declare namespace Error {
    type Raw = Error.PlaylistIdNotFoundError;
    interface PlaylistIdNotFoundError {
        errorName: \\"PlaylistIdNotFoundError\\";
        content: serializers.PlaylistIdNotFoundErrorBody.Raw;
    }
}
",
                        "name": "updatePlaylist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Error = exports.Response = exports.Request = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.Request = core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).UpdatePlaylistRequest).optional();
exports.Response = core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Playlist).optional();
exports.Error = core.serialization
    .union(\\"errorName\\", {
    PlaylistIdNotFoundError: core.serialization.object({
        content: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PlaylistIdNotFoundErrorBody),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.errorName) {
            case \\"PlaylistIdNotFoundError\\":
                return api_sdk_1.TraceApi.playlist.updatePlaylist.Error.playlistIdNotFoundError(value.content);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "updatePlaylist.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Color: core.serialization.Schema<serializers.Color.Raw, TraceApi.Color>;
export declare namespace Color {
    type Raw = \\"RED\\" | \\"BLUE\\";
}
",
                        "name": "Color.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Color = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Color = core.serialization.enum_([
    \\"RED\\",
    \\"BLUE\\",
]);
",
                        "name": "Color.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const DateUnion: core.serialization.Schema<serializers.DateUnion.Raw, TraceApi.DateUnion>;
export declare namespace DateUnion {
    type Raw = DateUnion.Date | DateUnion.Datetime;
    interface Date {
        type: \\"date\\";
        value: serializers.Date.Raw;
    }
    interface Datetime {
        type: \\"datetime\\";
        value: string;
    }
}
",
                        "name": "DateUnion.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DateUnion = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.DateUnion = core.serialization
    .union(\\"type\\", {
    date: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Date),
    }),
    datetime: core.serialization.object({
        value: core.serialization.date(),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"date\\":
                return api_sdk_1.TraceApi.DateUnion.date(value.value);
            case \\"datetime\\":
                return api_sdk_1.TraceApi.DateUnion.datetime(value.value);
            default:
                return api_sdk_1.TraceApi.DateUnion._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "DateUnion.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MapWithEnumKey: core.serialization.Schema<serializers.MapWithEnumKey.Raw, TraceApi.MapWithEnumKey>;
export declare namespace MapWithEnumKey {
    type Raw = Record<serializers.Color.Raw, boolean | null | undefined>;
}
",
                        "name": "MapWithEnumKey.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MapWithEnumKey = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MapWithEnumKey = core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Color), core.serialization.boolean().optional());
",
                        "name": "MapWithEnumKey.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const MapWithEnumKeyAndOptionalValue: core.serialization.Schema<serializers.MapWithEnumKeyAndOptionalValue.Raw, TraceApi.MapWithEnumKeyAndOptionalValue>;
export declare namespace MapWithEnumKeyAndOptionalValue {
    type Raw = Record<serializers.Color.Raw, boolean | null | undefined>;
}
",
                        "name": "MapWithEnumKeyAndOptionalValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MapWithEnumKeyAndOptionalValue = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.MapWithEnumKeyAndOptionalValue = core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Color), core.serialization.boolean().optional());
",
                        "name": "MapWithEnumKeyAndOptionalValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Playlist: core.serialization.ObjectSchema<serializers.Playlist.Raw, TraceApi.Playlist>;
export declare namespace Playlist {
    interface Raw extends serializers.PlaylistCreateRequest.Raw {
        playlist_id: serializers.PlaylistId.Raw;
        \\"owner-id\\": serializers.UserId.Raw;
    }
}
",
                        "name": "Playlist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Playlist = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Playlist = core.serialization
    .object({
    playlistId: core.serialization.property(\\"playlist_id\\", core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PlaylistId)),
    ownerId: core.serialization.property(\\"owner-id\\", core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).UserId)),
})
    .extend(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PlaylistCreateRequest));
",
                        "name": "Playlist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PlaylistCreateRequest: core.serialization.ObjectSchema<serializers.PlaylistCreateRequest.Raw, TraceApi.PlaylistCreateRequest>;
export declare namespace PlaylistCreateRequest {
    interface Raw {
        name: string;
        problems: serializers.ProblemId.Raw[];
    }
}
",
                        "name": "PlaylistCreateRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PlaylistCreateRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PlaylistCreateRequest = core.serialization.object({
    name: core.serialization.string(),
    problems: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId)),
});
",
                        "name": "PlaylistCreateRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PlaylistId: core.serialization.Schema<serializers.PlaylistId.Raw, TraceApi.PlaylistId>;
export declare namespace PlaylistId {
    type Raw = number;
}
",
                        "name": "PlaylistId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PlaylistId = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.PlaylistId = core.serialization.number();
",
                        "name": "PlaylistId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const PlaylistIdNotFoundErrorBody: core.serialization.Schema<serializers.PlaylistIdNotFoundErrorBody.Raw, TraceApi.PlaylistIdNotFoundErrorBody>;
export declare namespace PlaylistIdNotFoundErrorBody {
    type Raw = PlaylistIdNotFoundErrorBody.PlaylistId;
    interface PlaylistId {
        type: \\"playlistId\\";
        value: serializers.PlaylistId.Raw;
    }
}
",
                        "name": "PlaylistIdNotFoundErrorBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PlaylistIdNotFoundErrorBody = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.PlaylistIdNotFoundErrorBody = core.serialization
    .union(\\"type\\", {
    playlistId: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).PlaylistId),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"playlistId\\":
                return api_sdk_1.TraceApi.PlaylistIdNotFoundErrorBody.playlistId(value.value);
            default:
                return api_sdk_1.TraceApi.PlaylistIdNotFoundErrorBody._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "PlaylistIdNotFoundErrorBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ReservedKeywordEnum: core.serialization.Schema<serializers.ReservedKeywordEnum.Raw, TraceApi.ReservedKeywordEnum>;
export declare namespace ReservedKeywordEnum {
    type Raw = \\"is\\" | \\"as\\" | \\"date\\";
}
",
                        "name": "ReservedKeywordEnum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ReservedKeywordEnum = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ReservedKeywordEnum = core.serialization.enum_([\\"is\\", \\"as\\", \\"date\\"]);
",
                        "name": "ReservedKeywordEnum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const UpdatePlaylistRequest: core.serialization.ObjectSchema<serializers.UpdatePlaylistRequest.Raw, TraceApi.UpdatePlaylistRequest>;
export declare namespace UpdatePlaylistRequest {
    interface Raw {
        name: string;
        problems: serializers.ProblemId.Raw[];
    }
}
",
                        "name": "UpdatePlaylistRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UpdatePlaylistRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.UpdatePlaylistRequest = core.serialization.object({
    name: core.serialization.string(),
    problems: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId)),
});
",
                        "name": "UpdatePlaylistRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PlaylistId\\";
export * from \\"./Playlist\\";
export * from \\"./PlaylistCreateRequest\\";
export * from \\"./UpdatePlaylistRequest\\";
export * from \\"./PlaylistIdNotFoundErrorBody\\";
export * from \\"./DateUnion\\";
export * from \\"./ReservedKeywordEnum\\";
export * from \\"./MapWithEnumKey\\";
export * from \\"./MapWithEnumKeyAndOptionalValue\\";
export * from \\"./Color\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./PlaylistId\\"), exports);
__exportStar(require(\\"./Playlist\\"), exports);
__exportStar(require(\\"./PlaylistCreateRequest\\"), exports);
__exportStar(require(\\"./UpdatePlaylistRequest\\"), exports);
__exportStar(require(\\"./PlaylistIdNotFoundErrorBody\\"), exports);
__exportStar(require(\\"./DateUnion\\"), exports);
__exportStar(require(\\"./ReservedKeywordEnum\\"), exports);
__exportStar(require(\\"./MapWithEnumKey\\"), exports);
__exportStar(require(\\"./MapWithEnumKeyAndOptionalValue\\"), exports);
__exportStar(require(\\"./Color\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "playlist",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./requests\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../..\\";
import { TraceApi } from \\"../../../../..\\";
import * as core from \\"../../../../../core\\";
export declare const GetDefaultStarterFilesRequest: core.serialization.Schema<serializers.GetDefaultStarterFilesRequest.Raw, TraceApi.GetDefaultStarterFilesRequest>;
export declare namespace GetDefaultStarterFilesRequest {
    interface Raw {
        inputParams: serializers.VariableTypeAndName.Raw[];
        outputType: serializers.VariableType.Raw;
        methodName: string;
    }
}
",
                            "name": "GetDefaultStarterFilesRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetDefaultStarterFilesRequest = void 0;
const core = __importStar(require(\\"../../../../../core\\"));
exports.GetDefaultStarterFilesRequest = core.serialization.object({
    inputParams: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../..\\")))).VariableTypeAndName)),
    outputType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../..\\")))).VariableType),
    methodName: core.serialization.string(),
});
",
                            "name": "GetDefaultStarterFilesRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { GetDefaultStarterFilesRequest } from \\"./GetDefaultStarterFilesRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetDefaultStarterFilesRequest = void 0;
var GetDefaultStarterFilesRequest_1 = require(\\"./GetDefaultStarterFilesRequest\\");
Object.defineProperty(exports, \\"GetDefaultStarterFilesRequest\\", { enumerable: true, get: function () { return GetDefaultStarterFilesRequest_1.GetDefaultStarterFilesRequest; } });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CreateProblemError: core.serialization.Schema<serializers.CreateProblemError.Raw, TraceApi.CreateProblemError>;
export declare namespace CreateProblemError {
    type Raw = CreateProblemError.Generic;
    interface Generic extends serializers.GenericCreateProblemError.Raw {
        _type: \\"generic\\";
    }
}
",
                        "name": "CreateProblemError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemError = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.CreateProblemError = core.serialization
    .union(core.serialization.discriminant(\\"errorType\\", \\"_type\\"), {
    generic: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).GenericCreateProblemError),
})
    .transform({
    transform: (value) => {
        switch (value.errorType) {
            case \\"generic\\":
                return api_sdk_1.TraceApi.CreateProblemError.generic(value);
            default:
                return api_sdk_1.TraceApi.CreateProblemError._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "CreateProblemError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CreateProblemRequest: core.serialization.ObjectSchema<serializers.CreateProblemRequest.Raw, TraceApi.CreateProblemRequest>;
export declare namespace CreateProblemRequest {
    interface Raw {
        problemName: string;
        problemDescription: serializers.ProblemDescription.Raw;
        files: Record<serializers.Language.Raw, serializers.ProblemFiles.Raw | null | undefined>;
        inputParams: serializers.VariableTypeAndName.Raw[];
        outputType: serializers.VariableType.Raw;
        testcases: serializers.TestCaseWithExpectedResult.Raw[];
        methodName: string;
    }
}
",
                        "name": "CreateProblemRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.CreateProblemRequest = core.serialization.object({
    problemName: core.serialization.string(),
    problemDescription: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemDescription),
    files: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemFiles).optional()),
    inputParams: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableTypeAndName)),
    outputType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableType),
    testcases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseWithExpectedResult)),
    methodName: core.serialization.string(),
});
",
                        "name": "CreateProblemRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CreateProblemResponse: core.serialization.Schema<serializers.CreateProblemResponse.Raw, TraceApi.CreateProblemResponse>;
export declare namespace CreateProblemResponse {
    type Raw = CreateProblemResponse.Success | CreateProblemResponse.Error;
    interface Success {
        type: \\"success\\";
        value: serializers.ProblemId.Raw;
    }
    interface Error {
        type: \\"error\\";
        value: serializers.CreateProblemError.Raw;
    }
}
",
                        "name": "CreateProblemResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemResponse = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.CreateProblemResponse = core.serialization
    .union(\\"type\\", {
    success: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    }),
    error: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).CreateProblemError),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"success\\":
                return api_sdk_1.TraceApi.CreateProblemResponse.success(value.value);
            case \\"error\\":
                return api_sdk_1.TraceApi.CreateProblemResponse.error(value.value);
            default:
                return api_sdk_1.TraceApi.CreateProblemResponse._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "CreateProblemResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GenericCreateProblemError: core.serialization.ObjectSchema<serializers.GenericCreateProblemError.Raw, TraceApi.GenericCreateProblemError>;
export declare namespace GenericCreateProblemError {
    interface Raw {
        message: string;
        type: string;
        stacktrace: string;
    }
}
",
                        "name": "GenericCreateProblemError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GenericCreateProblemError = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GenericCreateProblemError = core.serialization.object({
    message: core.serialization.string(),
    type: core.serialization.string(),
    stacktrace: core.serialization.string(),
});
",
                        "name": "GenericCreateProblemError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GetDefaultStarterFilesResponse: core.serialization.ObjectSchema<serializers.GetDefaultStarterFilesResponse.Raw, TraceApi.GetDefaultStarterFilesResponse>;
export declare namespace GetDefaultStarterFilesResponse {
    interface Raw {
        files: Record<serializers.Language.Raw, serializers.ProblemFiles.Raw | null | undefined>;
    }
}
",
                        "name": "GetDefaultStarterFilesResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetDefaultStarterFilesResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GetDefaultStarterFilesResponse = core.serialization.object({
    files: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemFiles).optional()),
});
",
                        "name": "GetDefaultStarterFilesResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ProblemDescription: core.serialization.ObjectSchema<serializers.ProblemDescription.Raw, TraceApi.ProblemDescription>;
export declare namespace ProblemDescription {
    interface Raw {
        boards: serializers.ProblemDescriptionBoard.Raw[];
    }
}
",
                        "name": "ProblemDescription.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemDescription = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ProblemDescription = core.serialization.object({
    boards: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemDescriptionBoard)),
});
",
                        "name": "ProblemDescription.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ProblemDescriptionBoard: core.serialization.Schema<serializers.ProblemDescriptionBoard.Raw, TraceApi.ProblemDescriptionBoard>;
export declare namespace ProblemDescriptionBoard {
    type Raw = ProblemDescriptionBoard.Html | ProblemDescriptionBoard.Variable | ProblemDescriptionBoard.TestCaseId;
    interface Html {
        type: \\"html\\";
        value: string;
    }
    interface Variable {
        type: \\"variable\\";
        value: serializers.VariableValue.Raw;
    }
    interface TestCaseId {
        type: \\"testCaseId\\";
        value: string;
    }
}
",
                        "name": "ProblemDescriptionBoard.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemDescriptionBoard = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.ProblemDescriptionBoard = core.serialization
    .union(\\"type\\", {
    html: core.serialization.object({
        value: core.serialization.string(),
    }),
    variable: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue),
    }),
    testCaseId: core.serialization.object({
        value: core.serialization.string(),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"html\\":
                return api_sdk_1.TraceApi.ProblemDescriptionBoard.html(value.value);
            case \\"variable\\":
                return api_sdk_1.TraceApi.ProblemDescriptionBoard.variable(value.value);
            case \\"testCaseId\\":
                return api_sdk_1.TraceApi.ProblemDescriptionBoard.testCaseId(value.value);
            default:
                return api_sdk_1.TraceApi.ProblemDescriptionBoard._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "ProblemDescriptionBoard.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ProblemFiles: core.serialization.ObjectSchema<serializers.ProblemFiles.Raw, TraceApi.ProblemFiles>;
export declare namespace ProblemFiles {
    interface Raw {
        solutionFile: serializers.FileInfo.Raw;
        readOnlyFiles: serializers.FileInfo.Raw[];
    }
}
",
                        "name": "ProblemFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemFiles = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ProblemFiles = core.serialization.object({
    solutionFile: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileInfo),
    readOnlyFiles: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileInfo)),
});
",
                        "name": "ProblemFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ProblemInfo: core.serialization.ObjectSchema<serializers.ProblemInfo.Raw, TraceApi.ProblemInfo>;
export declare namespace ProblemInfo {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        problemDescription: serializers.ProblemDescription.Raw;
        problemName: string;
        problemVersion: number;
        files: Record<serializers.Language.Raw, serializers.ProblemFiles.Raw | null | undefined>;
        inputParams: serializers.VariableTypeAndName.Raw[];
        outputType: serializers.VariableType.Raw;
        testcases: serializers.TestCaseWithExpectedResult.Raw[];
        methodName: string;
        supportsCustomTestCases: boolean;
    }
}
",
                        "name": "ProblemInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemInfo = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ProblemInfo = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    problemDescription: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemDescription),
    problemName: core.serialization.string(),
    problemVersion: core.serialization.number(),
    files: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemFiles).optional()),
    inputParams: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableTypeAndName)),
    outputType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableType),
    testcases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseWithExpectedResult)),
    methodName: core.serialization.string(),
    supportsCustomTestCases: core.serialization.boolean(),
});
",
                        "name": "ProblemInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ProblemsMap: core.serialization.ObjectSchema<serializers.ProblemsMap.Raw, TraceApi.ProblemsMap>;
export declare namespace ProblemsMap {
    interface Raw {
        problemsById: Record<serializers.ProblemId.Raw, serializers.ProblemInfo.Raw | null | undefined>;
    }
}
",
                        "name": "ProblemsMap.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemsMap = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ProblemsMap = core.serialization.object({
    problemsById: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemInfo).optional()),
});
",
                        "name": "ProblemsMap.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const UpdateProblemResponse: core.serialization.ObjectSchema<serializers.UpdateProblemResponse.Raw, TraceApi.UpdateProblemResponse>;
export declare namespace UpdateProblemResponse {
    interface Raw {
        problemVersion: number;
    }
}
",
                        "name": "UpdateProblemResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UpdateProblemResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.UpdateProblemResponse = core.serialization.object({
    problemVersion: core.serialization.number(),
});
",
                        "name": "UpdateProblemResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const VariableTypeAndName: core.serialization.ObjectSchema<serializers.VariableTypeAndName.Raw, TraceApi.VariableTypeAndName>;
export declare namespace VariableTypeAndName {
    interface Raw {
        variableType: serializers.VariableType.Raw;
        name: string;
    }
}
",
                        "name": "VariableTypeAndName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VariableTypeAndName = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.VariableTypeAndName = core.serialization.object({
    variableType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableType),
    name: core.serialization.string(),
});
",
                        "name": "VariableTypeAndName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ProblemInfo\\";
export * from \\"./ProblemsMap\\";
export * from \\"./ProblemDescription\\";
export * from \\"./ProblemDescriptionBoard\\";
export * from \\"./ProblemFiles\\";
export * from \\"./VariableTypeAndName\\";
export * from \\"./CreateProblemRequest\\";
export * from \\"./CreateProblemResponse\\";
export * from \\"./UpdateProblemResponse\\";
export * from \\"./CreateProblemError\\";
export * from \\"./GenericCreateProblemError\\";
export * from \\"./GetDefaultStarterFilesResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ProblemInfo\\"), exports);
__exportStar(require(\\"./ProblemsMap\\"), exports);
__exportStar(require(\\"./ProblemDescription\\"), exports);
__exportStar(require(\\"./ProblemDescriptionBoard\\"), exports);
__exportStar(require(\\"./ProblemFiles\\"), exports);
__exportStar(require(\\"./VariableTypeAndName\\"), exports);
__exportStar(require(\\"./CreateProblemRequest\\"), exports);
__exportStar(require(\\"./CreateProblemResponse\\"), exports);
__exportStar(require(\\"./UpdateProblemResponse\\"), exports);
__exportStar(require(\\"./CreateProblemError\\"), exports);
__exportStar(require(\\"./GenericCreateProblemError\\"), exports);
__exportStar(require(\\"./GetDefaultStarterFilesResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "problem",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.submission.getExecutionSession.Response.Raw, TraceApi.ExecutionSessionResponse | undefined>;
export declare namespace Response {
    type Raw = serializers.ExecutionSessionResponse.Raw | null | undefined;
}
",
                        "name": "getExecutionSession.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Response = core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExecutionSessionResponse).optional();
",
                        "name": "getExecutionSession.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getExecutionSession from \\"./getExecutionSession\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getExecutionSession = void 0;
exports.getExecutionSession = __importStar(require(\\"./getExecutionSession\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ActualResult: core.serialization.Schema<serializers.ActualResult.Raw, TraceApi.ActualResult>;
export declare namespace ActualResult {
    type Raw = ActualResult.Value | ActualResult.Exception | ActualResult.ExceptionV2;
    interface Value {
        type: \\"value\\";
        value: serializers.VariableValue.Raw;
    }
    interface Exception extends serializers.ExceptionInfo.Raw {
        type: \\"exception\\";
    }
    interface ExceptionV2 {
        type: \\"exceptionV2\\";
        value: serializers.ExceptionV2.Raw;
    }
}
",
                        "name": "ActualResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ActualResult = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.ActualResult = core.serialization
    .union(\\"type\\", {
    value: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue),
    }),
    exception: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionInfo),
    exceptionV2: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionV2),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"value\\":
                return api_sdk_1.TraceApi.ActualResult.value(value.value);
            case \\"exception\\":
                return api_sdk_1.TraceApi.ActualResult.exception(value);
            case \\"exceptionV2\\":
                return api_sdk_1.TraceApi.ActualResult.exceptionV2(value.value);
            default:
                return api_sdk_1.TraceApi.ActualResult._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "ActualResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const BuildingExecutorResponse: core.serialization.ObjectSchema<serializers.BuildingExecutorResponse.Raw, TraceApi.BuildingExecutorResponse>;
export declare namespace BuildingExecutorResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        status: serializers.ExecutionSessionStatus.Raw;
    }
}
",
                        "name": "BuildingExecutorResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BuildingExecutorResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.BuildingExecutorResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    status: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExecutionSessionStatus),
});
",
                        "name": "BuildingExecutorResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CodeExecutionUpdate: core.serialization.Schema<serializers.CodeExecutionUpdate.Raw, TraceApi.CodeExecutionUpdate>;
export declare namespace CodeExecutionUpdate {
    type Raw = CodeExecutionUpdate.BuildingExecutor | CodeExecutionUpdate.Running | CodeExecutionUpdate.Errored | CodeExecutionUpdate.Stopped | CodeExecutionUpdate.Graded | CodeExecutionUpdate.GradedV2 | CodeExecutionUpdate.WorkspaceRan | CodeExecutionUpdate.Recording | CodeExecutionUpdate.Recorded | CodeExecutionUpdate.InvalidRequest | CodeExecutionUpdate.Finished;
    interface BuildingExecutor extends serializers.BuildingExecutorResponse.Raw {
        type: \\"buildingExecutor\\";
    }
    interface Running extends serializers.RunningResponse.Raw {
        type: \\"running\\";
    }
    interface Errored extends serializers.ErroredResponse.Raw {
        type: \\"errored\\";
    }
    interface Stopped extends serializers.StoppedResponse.Raw {
        type: \\"stopped\\";
    }
    interface Graded extends serializers.GradedResponse.Raw {
        type: \\"graded\\";
    }
    interface GradedV2 extends serializers.GradedResponseV2.Raw {
        type: \\"gradedV2\\";
    }
    interface WorkspaceRan extends serializers.WorkspaceRanResponse.Raw {
        type: \\"workspaceRan\\";
    }
    interface Recording extends serializers.RecordingResponseNotification.Raw {
        type: \\"recording\\";
    }
    interface Recorded extends serializers.RecordedResponseNotification.Raw {
        type: \\"recorded\\";
    }
    interface InvalidRequest extends serializers.InvalidRequestResponse.Raw {
        type: \\"invalidRequest\\";
    }
    interface Finished extends serializers.FinishedResponse.Raw {
        type: \\"finished\\";
    }
}
",
                        "name": "CodeExecutionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CodeExecutionUpdate = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.CodeExecutionUpdate = core.serialization
    .union(\\"type\\", {
    buildingExecutor: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).BuildingExecutorResponse),
    running: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RunningResponse),
    errored: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErroredResponse),
    stopped: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StoppedResponse),
    graded: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).GradedResponse),
    gradedV2: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).GradedResponseV2),
    workspaceRan: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceRanResponse),
    recording: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RecordingResponseNotification),
    recorded: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RecordedResponseNotification),
    invalidRequest: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InvalidRequestResponse),
    finished: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FinishedResponse),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"buildingExecutor\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.buildingExecutor(value);
            case \\"running\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.running(value);
            case \\"errored\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.errored(value);
            case \\"stopped\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.stopped(value);
            case \\"graded\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.graded(value);
            case \\"gradedV2\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.gradedV2(value);
            case \\"workspaceRan\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.workspaceRan(value);
            case \\"recording\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.recording(value);
            case \\"recorded\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.recorded(value);
            case \\"invalidRequest\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.invalidRequest(value);
            case \\"finished\\":
                return api_sdk_1.TraceApi.CodeExecutionUpdate.finished(value);
            default:
                return api_sdk_1.TraceApi.CodeExecutionUpdate._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "CodeExecutionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CompileError: core.serialization.ObjectSchema<serializers.CompileError.Raw, TraceApi.CompileError>;
export declare namespace CompileError {
    interface Raw {
        message: string;
    }
}
",
                        "name": "CompileError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CompileError = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.CompileError = core.serialization.object({
    message: core.serialization.string(),
});
",
                        "name": "CompileError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const CustomTestCasesUnsupported: core.serialization.ObjectSchema<serializers.CustomTestCasesUnsupported.Raw, TraceApi.CustomTestCasesUnsupported>;
export declare namespace CustomTestCasesUnsupported {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        submissionId: serializers.SubmissionId.Raw;
    }
}
",
                        "name": "CustomTestCasesUnsupported.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CustomTestCasesUnsupported = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.CustomTestCasesUnsupported = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
});
",
                        "name": "CustomTestCasesUnsupported.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ErrorInfo: core.serialization.Schema<serializers.ErrorInfo.Raw, TraceApi.ErrorInfo>;
export declare namespace ErrorInfo {
    type Raw = ErrorInfo.CompileError | ErrorInfo.RuntimeError | ErrorInfo.InternalError;
    interface CompileError extends serializers.CompileError.Raw {
        type: \\"compileError\\";
    }
    interface RuntimeError extends serializers.RuntimeError.Raw {
        type: \\"runtimeError\\";
    }
    interface InternalError extends serializers.InternalError.Raw {
        type: \\"internalError\\";
    }
}
",
                        "name": "ErrorInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErrorInfo = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.ErrorInfo = core.serialization
    .union(\\"type\\", {
    compileError: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).CompileError),
    runtimeError: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RuntimeError),
    internalError: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InternalError),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"compileError\\":
                return api_sdk_1.TraceApi.ErrorInfo.compileError(value);
            case \\"runtimeError\\":
                return api_sdk_1.TraceApi.ErrorInfo.runtimeError(value);
            case \\"internalError\\":
                return api_sdk_1.TraceApi.ErrorInfo.internalError(value);
            default:
                return api_sdk_1.TraceApi.ErrorInfo._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "ErrorInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ErroredResponse: core.serialization.ObjectSchema<serializers.ErroredResponse.Raw, TraceApi.ErroredResponse>;
export declare namespace ErroredResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        errorInfo: serializers.ErrorInfo.Raw;
    }
}
",
                        "name": "ErroredResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ErroredResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ErroredResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    errorInfo: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorInfo),
});
",
                        "name": "ErroredResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExceptionInfo: core.serialization.ObjectSchema<serializers.ExceptionInfo.Raw, TraceApi.ExceptionInfo>;
export declare namespace ExceptionInfo {
    interface Raw {
        exceptionType: string;
        exceptionMessage: string;
        exceptionStacktrace: string;
    }
}
",
                        "name": "ExceptionInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExceptionInfo = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExceptionInfo = core.serialization.object({
    exceptionType: core.serialization.string(),
    exceptionMessage: core.serialization.string(),
    exceptionStacktrace: core.serialization.string(),
});
",
                        "name": "ExceptionInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExceptionV2: core.serialization.Schema<serializers.ExceptionV2.Raw, TraceApi.ExceptionV2>;
export declare namespace ExceptionV2 {
    type Raw = ExceptionV2.Generic | ExceptionV2.Timeout;
    interface Generic extends serializers.ExceptionInfo.Raw {
        type: \\"generic\\";
    }
    interface Timeout {
        type: \\"timeout\\";
    }
}
",
                        "name": "ExceptionV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExceptionV2 = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.ExceptionV2 = core.serialization
    .union(\\"type\\", {
    generic: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionInfo),
    timeout: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"generic\\":
                return api_sdk_1.TraceApi.ExceptionV2.generic(value);
            case \\"timeout\\":
                return api_sdk_1.TraceApi.ExceptionV2.timeout();
            default:
                return api_sdk_1.TraceApi.ExceptionV2._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "ExceptionV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExecutionSessionResponse: core.serialization.ObjectSchema<serializers.ExecutionSessionResponse.Raw, TraceApi.ExecutionSessionResponse>;
export declare namespace ExecutionSessionResponse {
    interface Raw {
        sessionId: string;
        executionSessionUrl?: string | null;
        language: serializers.Language.Raw;
        status: serializers.ExecutionSessionStatus.Raw;
    }
}
",
                        "name": "ExecutionSessionResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExecutionSessionResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExecutionSessionResponse = core.serialization.object({
    sessionId: core.serialization.string(),
    executionSessionUrl: core.serialization.string().optional(),
    language: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
    status: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExecutionSessionStatus),
});
",
                        "name": "ExecutionSessionResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExecutionSessionState: core.serialization.ObjectSchema<serializers.ExecutionSessionState.Raw, TraceApi.ExecutionSessionState>;
export declare namespace ExecutionSessionState {
    interface Raw {
        lastTimeContacted?: string | null;
        sessionId: string;
        isWarmInstance: boolean;
        awsTaskId?: string | null;
        language: serializers.Language.Raw;
        status: serializers.ExecutionSessionStatus.Raw;
    }
}
",
                        "name": "ExecutionSessionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExecutionSessionState = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExecutionSessionState = core.serialization.object({
    lastTimeContacted: core.serialization.string().optional(),
    sessionId: core.serialization.string(),
    isWarmInstance: core.serialization.boolean(),
    awsTaskId: core.serialization.string().optional(),
    language: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
    status: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExecutionSessionStatus),
});
",
                        "name": "ExecutionSessionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExecutionSessionStatus: core.serialization.Schema<serializers.ExecutionSessionStatus.Raw, TraceApi.ExecutionSessionStatus>;
export declare namespace ExecutionSessionStatus {
    type Raw = \\"CREATING_CONTAINER\\" | \\"PROVISIONING_CONTAINER\\" | \\"PENDING_CONTAINER\\" | \\"RUNNING_CONTAINER\\" | \\"LIVE_CONTAINER\\" | \\"FAILED_TO_LAUNCH\\";
}
",
                        "name": "ExecutionSessionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExecutionSessionStatus = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExecutionSessionStatus = core.serialization.enum_([
    \\"CREATING_CONTAINER\\",
    \\"PROVISIONING_CONTAINER\\",
    \\"PENDING_CONTAINER\\",
    \\"RUNNING_CONTAINER\\",
    \\"LIVE_CONTAINER\\",
    \\"FAILED_TO_LAUNCH\\",
]);
",
                        "name": "ExecutionSessionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExistingSubmissionExecuting: core.serialization.ObjectSchema<serializers.ExistingSubmissionExecuting.Raw, TraceApi.ExistingSubmissionExecuting>;
export declare namespace ExistingSubmissionExecuting {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
    }
}
",
                        "name": "ExistingSubmissionExecuting.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExistingSubmissionExecuting = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExistingSubmissionExecuting = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
});
",
                        "name": "ExistingSubmissionExecuting.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ExpressionLocation: core.serialization.ObjectSchema<serializers.ExpressionLocation.Raw, TraceApi.ExpressionLocation>;
export declare namespace ExpressionLocation {
    interface Raw {
        start: number;
        offset: number;
    }
}
",
                        "name": "ExpressionLocation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExpressionLocation = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.ExpressionLocation = core.serialization.object({
    start: core.serialization.number(),
    offset: core.serialization.number(),
});
",
                        "name": "ExpressionLocation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const FinishedResponse: core.serialization.ObjectSchema<serializers.FinishedResponse.Raw, TraceApi.FinishedResponse>;
export declare namespace FinishedResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
    }
}
",
                        "name": "FinishedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FinishedResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.FinishedResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
});
",
                        "name": "FinishedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GetExecutionSessionStateResponse: core.serialization.ObjectSchema<serializers.GetExecutionSessionStateResponse.Raw, TraceApi.GetExecutionSessionStateResponse>;
export declare namespace GetExecutionSessionStateResponse {
    interface Raw {
        states: Record<string, serializers.ExecutionSessionState.Raw | null | undefined>;
        numWarmingInstances?: number | null;
        warmingSessionIds: string[];
    }
}
",
                        "name": "GetExecutionSessionStateResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetExecutionSessionStateResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GetExecutionSessionStateResponse = core.serialization.object({
    states: core.serialization.record(core.serialization.string(), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExecutionSessionState).optional()),
    numWarmingInstances: core.serialization.number().optional(),
    warmingSessionIds: core.serialization.list(core.serialization.string()),
});
",
                        "name": "GetExecutionSessionStateResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GetSubmissionStateResponse: core.serialization.ObjectSchema<serializers.GetSubmissionStateResponse.Raw, TraceApi.GetSubmissionStateResponse>;
export declare namespace GetSubmissionStateResponse {
    interface Raw {
        timeSubmitted?: string | null;
        submission: string;
        language: serializers.Language.Raw;
        submissionTypeState: serializers.SubmissionTypeState.Raw;
    }
}
",
                        "name": "GetSubmissionStateResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetSubmissionStateResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GetSubmissionStateResponse = core.serialization.object({
    timeSubmitted: core.serialization.date().optional(),
    submission: core.serialization.string(),
    language: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
    submissionTypeState: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionTypeState),
});
",
                        "name": "GetSubmissionStateResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GetTraceResponsesPageRequest: core.serialization.ObjectSchema<serializers.GetTraceResponsesPageRequest.Raw, TraceApi.GetTraceResponsesPageRequest>;
export declare namespace GetTraceResponsesPageRequest {
    interface Raw {
        offset?: number | null;
    }
}
",
                        "name": "GetTraceResponsesPageRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetTraceResponsesPageRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GetTraceResponsesPageRequest = core.serialization.object({
    offset: core.serialization.number().optional(),
});
",
                        "name": "GetTraceResponsesPageRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GradedResponse: core.serialization.ObjectSchema<serializers.GradedResponse.Raw, TraceApi.GradedResponse>;
export declare namespace GradedResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        testCases: Record<string, serializers.TestCaseResultWithStdout.Raw | null | undefined>;
    }
}
",
                        "name": "GradedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GradedResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GradedResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    testCases: core.serialization.record(core.serialization.string(), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseResultWithStdout).optional()),
});
",
                        "name": "GradedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GradedResponseV2: core.serialization.ObjectSchema<serializers.GradedResponseV2.Raw, TraceApi.GradedResponseV2>;
export declare namespace GradedResponseV2 {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        testCases: Record<serializers.v2.TestCaseId.Raw, serializers.TestCaseGrade.Raw | null | undefined>;
    }
}
",
                        "name": "GradedResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GradedResponseV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GradedResponseV2 = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    testCases: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).v2.TestCaseId), core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseGrade).optional()),
});
",
                        "name": "GradedResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const GradedTestCaseUpdate: core.serialization.ObjectSchema<serializers.GradedTestCaseUpdate.Raw, TraceApi.GradedTestCaseUpdate>;
export declare namespace GradedTestCaseUpdate {
    interface Raw {
        testCaseId: serializers.v2.TestCaseId.Raw;
        grade: serializers.TestCaseGrade.Raw;
    }
}
",
                        "name": "GradedTestCaseUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GradedTestCaseUpdate = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.GradedTestCaseUpdate = core.serialization.object({
    testCaseId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).v2.TestCaseId),
    grade: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseGrade),
});
",
                        "name": "GradedTestCaseUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const InitializeProblemRequest: core.serialization.ObjectSchema<serializers.InitializeProblemRequest.Raw, TraceApi.InitializeProblemRequest>;
export declare namespace InitializeProblemRequest {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        problemVersion?: number | null;
    }
}
",
                        "name": "InitializeProblemRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InitializeProblemRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.InitializeProblemRequest = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    problemVersion: core.serialization.number().optional(),
});
",
                        "name": "InitializeProblemRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const InternalError: core.serialization.ObjectSchema<serializers.InternalError.Raw, TraceApi.InternalError>;
export declare namespace InternalError {
    interface Raw {
        exceptionInfo: serializers.ExceptionInfo.Raw;
    }
}
",
                        "name": "InternalError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InternalError = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.InternalError = core.serialization.object({
    exceptionInfo: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionInfo),
});
",
                        "name": "InternalError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const InvalidRequestCause: core.serialization.Schema<serializers.InvalidRequestCause.Raw, TraceApi.InvalidRequestCause>;
export declare namespace InvalidRequestCause {
    type Raw = InvalidRequestCause.SubmissionIdNotFound | InvalidRequestCause.CustomTestCasesUnsupported | InvalidRequestCause.UnexpectedLanguage;
    interface SubmissionIdNotFound extends serializers.SubmissionIdNotFound.Raw {
        type: \\"submissionIdNotFound\\";
    }
    interface CustomTestCasesUnsupported extends serializers.CustomTestCasesUnsupported.Raw {
        type: \\"customTestCasesUnsupported\\";
    }
    interface UnexpectedLanguage extends serializers.UnexpectedLanguageError.Raw {
        type: \\"unexpectedLanguage\\";
    }
}
",
                        "name": "InvalidRequestCause.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InvalidRequestCause = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.InvalidRequestCause = core.serialization
    .union(\\"type\\", {
    submissionIdNotFound: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionIdNotFound),
    customTestCasesUnsupported: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).CustomTestCasesUnsupported),
    unexpectedLanguage: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).UnexpectedLanguageError),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"submissionIdNotFound\\":
                return api_sdk_1.TraceApi.InvalidRequestCause.submissionIdNotFound(value);
            case \\"customTestCasesUnsupported\\":
                return api_sdk_1.TraceApi.InvalidRequestCause.customTestCasesUnsupported(value);
            case \\"unexpectedLanguage\\":
                return api_sdk_1.TraceApi.InvalidRequestCause.unexpectedLanguage(value);
            default:
                return api_sdk_1.TraceApi.InvalidRequestCause._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "InvalidRequestCause.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const InvalidRequestResponse: core.serialization.ObjectSchema<serializers.InvalidRequestResponse.Raw, TraceApi.InvalidRequestResponse>;
export declare namespace InvalidRequestResponse {
    interface Raw {
        request: serializers.SubmissionRequest.Raw;
        cause: serializers.InvalidRequestCause.Raw;
    }
}
",
                        "name": "InvalidRequestResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.InvalidRequestResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.InvalidRequestResponse = core.serialization.object({
    request: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionRequest),
    cause: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InvalidRequestCause),
});
",
                        "name": "InvalidRequestResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const LightweightStackframeInformation: core.serialization.ObjectSchema<serializers.LightweightStackframeInformation.Raw, TraceApi.LightweightStackframeInformation>;
export declare namespace LightweightStackframeInformation {
    interface Raw {
        numStackFrames: number;
        topStackFrameMethodName: string;
    }
}
",
                        "name": "LightweightStackframeInformation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.LightweightStackframeInformation = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.LightweightStackframeInformation = core.serialization.object({
    numStackFrames: core.serialization.number(),
    topStackFrameMethodName: core.serialization.string(),
});
",
                        "name": "LightweightStackframeInformation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RecordedResponseNotification: core.serialization.ObjectSchema<serializers.RecordedResponseNotification.Raw, TraceApi.RecordedResponseNotification>;
export declare namespace RecordedResponseNotification {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        traceResponsesSize: number;
        testCaseId?: string | null;
    }
}
",
                        "name": "RecordedResponseNotification.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RecordedResponseNotification = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RecordedResponseNotification = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    traceResponsesSize: core.serialization.number(),
    testCaseId: core.serialization.string().optional(),
});
",
                        "name": "RecordedResponseNotification.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RecordedTestCaseUpdate: core.serialization.ObjectSchema<serializers.RecordedTestCaseUpdate.Raw, TraceApi.RecordedTestCaseUpdate>;
export declare namespace RecordedTestCaseUpdate {
    interface Raw {
        testCaseId: serializers.v2.TestCaseId.Raw;
        traceResponsesSize: number;
    }
}
",
                        "name": "RecordedTestCaseUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RecordedTestCaseUpdate = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RecordedTestCaseUpdate = core.serialization.object({
    testCaseId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).v2.TestCaseId),
    traceResponsesSize: core.serialization.number(),
});
",
                        "name": "RecordedTestCaseUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RecordingResponseNotification: core.serialization.ObjectSchema<serializers.RecordingResponseNotification.Raw, TraceApi.RecordingResponseNotification>;
export declare namespace RecordingResponseNotification {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        testCaseId?: string | null;
        lineNumber: number;
        lightweightStackInfo: serializers.LightweightStackframeInformation.Raw;
        tracedFile?: serializers.TracedFile.Raw | null;
    }
}
",
                        "name": "RecordingResponseNotification.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RecordingResponseNotification = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RecordingResponseNotification = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    testCaseId: core.serialization.string().optional(),
    lineNumber: core.serialization.number(),
    lightweightStackInfo: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).LightweightStackframeInformation),
    tracedFile: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TracedFile).optional(),
});
",
                        "name": "RecordingResponseNotification.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RunningResponse: core.serialization.ObjectSchema<serializers.RunningResponse.Raw, TraceApi.RunningResponse>;
export declare namespace RunningResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        state: serializers.RunningSubmissionState.Raw;
    }
}
",
                        "name": "RunningResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RunningResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RunningResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    state: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RunningSubmissionState),
});
",
                        "name": "RunningResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RunningSubmissionState: core.serialization.Schema<serializers.RunningSubmissionState.Raw, TraceApi.RunningSubmissionState>;
export declare namespace RunningSubmissionState {
    type Raw = \\"QUEUEING_SUBMISSION\\" | \\"KILLING_HISTORICAL_SUBMISSIONS\\" | \\"WRITING_SUBMISSION_TO_FILE\\" | \\"COMPILING_SUBMISSION\\" | \\"RUNNING_SUBMISSION\\";
}
",
                        "name": "RunningSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RunningSubmissionState = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RunningSubmissionState = core.serialization.enum_([
    \\"QUEUEING_SUBMISSION\\",
    \\"KILLING_HISTORICAL_SUBMISSIONS\\",
    \\"WRITING_SUBMISSION_TO_FILE\\",
    \\"COMPILING_SUBMISSION\\",
    \\"RUNNING_SUBMISSION\\",
]);
",
                        "name": "RunningSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const RuntimeError: core.serialization.ObjectSchema<serializers.RuntimeError.Raw, TraceApi.RuntimeError>;
export declare namespace RuntimeError {
    interface Raw {
        message: string;
    }
}
",
                        "name": "RuntimeError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RuntimeError = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.RuntimeError = core.serialization.object({
    message: core.serialization.string(),
});
",
                        "name": "RuntimeError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Scope: core.serialization.ObjectSchema<serializers.Scope.Raw, TraceApi.Scope>;
export declare namespace Scope {
    interface Raw {
        variables: Record<string, serializers.DebugVariableValue.Raw | null | undefined>;
    }
}
",
                        "name": "Scope.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Scope = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Scope = core.serialization.object({
    variables: core.serialization.record(core.serialization.string(), core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugVariableValue).optional()),
});
",
                        "name": "Scope.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const ShareId: core.serialization.Schema<serializers.ShareId.Raw, TraceApi.ShareId>;
export declare namespace ShareId {
    type Raw = string;
}
",
                        "name": "ShareId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ShareId = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.ShareId = core.serialization
    .string()
    .transform({
    transform: api_sdk_1.TraceApi.ShareId,
    untransform: (value) => value,
});
",
                        "name": "ShareId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const StackFrame: core.serialization.ObjectSchema<serializers.StackFrame.Raw, TraceApi.StackFrame>;
export declare namespace StackFrame {
    interface Raw {
        methodName: string;
        lineNumber: number;
        scopes: serializers.Scope.Raw[];
    }
}
",
                        "name": "StackFrame.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StackFrame = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StackFrame = core.serialization.object({
    methodName: core.serialization.string(),
    lineNumber: core.serialization.number(),
    scopes: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Scope)),
});
",
                        "name": "StackFrame.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const StackInformation: core.serialization.ObjectSchema<serializers.StackInformation.Raw, TraceApi.StackInformation>;
export declare namespace StackInformation {
    interface Raw {
        numStackFrames: number;
        topStackFrame?: serializers.StackFrame.Raw | null;
    }
}
",
                        "name": "StackInformation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StackInformation = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StackInformation = core.serialization.object({
    numStackFrames: core.serialization.number(),
    topStackFrame: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StackFrame).optional(),
});
",
                        "name": "StackInformation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const StderrResponse: core.serialization.ObjectSchema<serializers.StderrResponse.Raw, TraceApi.StderrResponse>;
export declare namespace StderrResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        stderr: string;
    }
}
",
                        "name": "StderrResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StderrResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StderrResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    stderr: core.serialization.string(),
});
",
                        "name": "StderrResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const StdoutResponse: core.serialization.ObjectSchema<serializers.StdoutResponse.Raw, TraceApi.StdoutResponse>;
export declare namespace StdoutResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        stdout: string;
    }
}
",
                        "name": "StdoutResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StdoutResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StdoutResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    stdout: core.serialization.string(),
});
",
                        "name": "StdoutResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const StopRequest: core.serialization.ObjectSchema<serializers.StopRequest.Raw, TraceApi.StopRequest>;
export declare namespace StopRequest {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
    }
}
",
                        "name": "StopRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StopRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StopRequest = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
});
",
                        "name": "StopRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const StoppedResponse: core.serialization.ObjectSchema<serializers.StoppedResponse.Raw, TraceApi.StoppedResponse>;
export declare namespace StoppedResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
    }
}
",
                        "name": "StoppedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StoppedResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.StoppedResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
});
",
                        "name": "StoppedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionFileInfo: core.serialization.ObjectSchema<serializers.SubmissionFileInfo.Raw, TraceApi.SubmissionFileInfo>;
export declare namespace SubmissionFileInfo {
    interface Raw {
        directory: string;
        filename: string;
        contents: string;
    }
}
",
                        "name": "SubmissionFileInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionFileInfo = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionFileInfo = core.serialization.object({
    directory: core.serialization.string(),
    filename: core.serialization.string(),
    contents: core.serialization.string(),
});
",
                        "name": "SubmissionFileInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionId: core.serialization.Schema<serializers.SubmissionId.Raw, TraceApi.SubmissionId>;
export declare namespace SubmissionId {
    type Raw = string;
}
",
                        "name": "SubmissionId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionId = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.SubmissionId,
    untransform: (value) => value,
});
",
                        "name": "SubmissionId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionIdNotFound: core.serialization.ObjectSchema<serializers.SubmissionIdNotFound.Raw, TraceApi.SubmissionIdNotFound>;
export declare namespace SubmissionIdNotFound {
    interface Raw {
        missingSubmissionId: serializers.SubmissionId.Raw;
    }
}
",
                        "name": "SubmissionIdNotFound.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionIdNotFound = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionIdNotFound = core.serialization.object({
    missingSubmissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
});
",
                        "name": "SubmissionIdNotFound.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionRequest: core.serialization.Schema<serializers.SubmissionRequest.Raw, TraceApi.SubmissionRequest>;
export declare namespace SubmissionRequest {
    type Raw = SubmissionRequest.InitializeProblemRequest | SubmissionRequest.InitializeWorkspaceRequest | SubmissionRequest.SubmitV2 | SubmissionRequest.WorkspaceSubmit | SubmissionRequest.Stop;
    interface InitializeProblemRequest extends serializers.InitializeProblemRequest.Raw {
        type: \\"initializeProblemRequest\\";
    }
    interface InitializeWorkspaceRequest {
        type: \\"initializeWorkspaceRequest\\";
    }
    interface SubmitV2 extends serializers.SubmitRequestV2.Raw {
        type: \\"submitV2\\";
    }
    interface WorkspaceSubmit extends serializers.WorkspaceSubmitRequest.Raw {
        type: \\"workspaceSubmit\\";
    }
    interface Stop extends serializers.StopRequest.Raw {
        type: \\"stop\\";
    }
}
",
                        "name": "SubmissionRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionRequest = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionRequest = core.serialization
    .union(\\"type\\", {
    initializeProblemRequest: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).InitializeProblemRequest),
    initializeWorkspaceRequest: core.serialization.object({}),
    submitV2: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmitRequestV2),
    workspaceSubmit: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceSubmitRequest),
    stop: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StopRequest),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"initializeProblemRequest\\":
                return api_sdk_1.TraceApi.SubmissionRequest.initializeProblemRequest(value);
            case \\"initializeWorkspaceRequest\\":
                return api_sdk_1.TraceApi.SubmissionRequest.initializeWorkspaceRequest();
            case \\"submitV2\\":
                return api_sdk_1.TraceApi.SubmissionRequest.submitV2(value);
            case \\"workspaceSubmit\\":
                return api_sdk_1.TraceApi.SubmissionRequest.workspaceSubmit(value);
            case \\"stop\\":
                return api_sdk_1.TraceApi.SubmissionRequest.stop(value);
            default:
                return api_sdk_1.TraceApi.SubmissionRequest._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "SubmissionRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionResponse: core.serialization.Schema<serializers.SubmissionResponse.Raw, TraceApi.SubmissionResponse>;
export declare namespace SubmissionResponse {
    type Raw = SubmissionResponse.ServerInitialized | SubmissionResponse.ProblemInitialized | SubmissionResponse.WorkspaceInitialized | SubmissionResponse.ServerErrored | SubmissionResponse.CodeExecutionUpdate | SubmissionResponse.Terminated;
    interface ServerInitialized {
        type: \\"serverInitialized\\";
    }
    interface ProblemInitialized {
        type: \\"problemInitialized\\";
        value: serializers.ProblemId.Raw;
    }
    interface WorkspaceInitialized {
        type: \\"workspaceInitialized\\";
    }
    interface ServerErrored extends serializers.ExceptionInfo.Raw {
        type: \\"serverErrored\\";
    }
    interface CodeExecutionUpdate {
        type: \\"codeExecutionUpdate\\";
        value: serializers.CodeExecutionUpdate.Raw;
    }
    interface Terminated extends serializers.TerminatedResponse.Raw {
        type: \\"terminated\\";
    }
}
",
                        "name": "SubmissionResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionResponse = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionResponse = core.serialization
    .union(\\"type\\", {
    serverInitialized: core.serialization.object({}),
    problemInitialized: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    }),
    workspaceInitialized: core.serialization.object({}),
    serverErrored: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionInfo),
    codeExecutionUpdate: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).CodeExecutionUpdate),
    }),
    terminated: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TerminatedResponse),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"serverInitialized\\":
                return api_sdk_1.TraceApi.SubmissionResponse.serverInitialized();
            case \\"problemInitialized\\":
                return api_sdk_1.TraceApi.SubmissionResponse.problemInitialized(value.value);
            case \\"workspaceInitialized\\":
                return api_sdk_1.TraceApi.SubmissionResponse.workspaceInitialized();
            case \\"serverErrored\\":
                return api_sdk_1.TraceApi.SubmissionResponse.serverErrored(value);
            case \\"codeExecutionUpdate\\":
                return api_sdk_1.TraceApi.SubmissionResponse.codeExecutionUpdate(value.value);
            case \\"terminated\\":
                return api_sdk_1.TraceApi.SubmissionResponse.terminated(value);
            default:
                return api_sdk_1.TraceApi.SubmissionResponse._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "SubmissionResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionStatusForTestCase: core.serialization.Schema<serializers.SubmissionStatusForTestCase.Raw, TraceApi.SubmissionStatusForTestCase>;
export declare namespace SubmissionStatusForTestCase {
    type Raw = SubmissionStatusForTestCase.Graded | SubmissionStatusForTestCase.GradedV2 | SubmissionStatusForTestCase.Traced;
    interface Graded extends serializers.TestCaseResultWithStdout.Raw {
        type: \\"graded\\";
    }
    interface GradedV2 {
        type: \\"gradedV2\\";
        value: serializers.TestCaseGrade.Raw;
    }
    interface Traced extends serializers.TracedTestCase.Raw {
        type: \\"traced\\";
    }
}
",
                        "name": "SubmissionStatusForTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionStatusForTestCase = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionStatusForTestCase = core.serialization
    .union(\\"type\\", {
    graded: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseResultWithStdout),
    gradedV2: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseGrade),
    }),
    traced: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TracedTestCase),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"graded\\":
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase.graded(value);
            case \\"gradedV2\\":
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase.gradedV2(value.value);
            case \\"traced\\":
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase.traced(value);
            default:
                return api_sdk_1.TraceApi.SubmissionStatusForTestCase._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "SubmissionStatusForTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionStatusV2: core.serialization.Schema<serializers.SubmissionStatusV2.Raw, TraceApi.SubmissionStatusV2>;
export declare namespace SubmissionStatusV2 {
    type Raw = SubmissionStatusV2.Test | SubmissionStatusV2.Workspace;
    interface Test extends serializers.TestSubmissionStatusV2.Raw {
        type: \\"test\\";
    }
    interface Workspace extends serializers.WorkspaceSubmissionStatusV2.Raw {
        type: \\"workspace\\";
    }
}
",
                        "name": "SubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionStatusV2 = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionStatusV2 = core.serialization
    .union(\\"type\\", {
    test: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestSubmissionStatusV2),
    workspace: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceSubmissionStatusV2),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"test\\":
                return api_sdk_1.TraceApi.SubmissionStatusV2.test(value);
            case \\"workspace\\":
                return api_sdk_1.TraceApi.SubmissionStatusV2.workspace(value);
            default:
                return api_sdk_1.TraceApi.SubmissionStatusV2._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "SubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionTypeEnum: core.serialization.Schema<serializers.SubmissionTypeEnum.Raw, TraceApi.SubmissionTypeEnum>;
export declare namespace SubmissionTypeEnum {
    type Raw = \\"TEST\\";
}
",
                        "name": "SubmissionTypeEnum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionTypeEnum = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionTypeEnum = core.serialization.enum_([\\"TEST\\"]);
",
                        "name": "SubmissionTypeEnum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmissionTypeState: core.serialization.Schema<serializers.SubmissionTypeState.Raw, TraceApi.SubmissionTypeState>;
export declare namespace SubmissionTypeState {
    type Raw = SubmissionTypeState.Test | SubmissionTypeState.Workspace;
    interface Test extends serializers.TestSubmissionState.Raw {
        type: \\"test\\";
    }
    interface Workspace extends serializers.WorkspaceSubmissionState.Raw {
        type: \\"workspace\\";
    }
}
",
                        "name": "SubmissionTypeState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionTypeState = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmissionTypeState = core.serialization
    .union(\\"type\\", {
    test: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestSubmissionState),
    workspace: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceSubmissionState),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"test\\":
                return api_sdk_1.TraceApi.SubmissionTypeState.test(value);
            case \\"workspace\\":
                return api_sdk_1.TraceApi.SubmissionTypeState.workspace(value);
            default:
                return api_sdk_1.TraceApi.SubmissionTypeState._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "SubmissionTypeState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const SubmitRequestV2: core.serialization.ObjectSchema<serializers.SubmitRequestV2.Raw, TraceApi.SubmitRequestV2>;
export declare namespace SubmitRequestV2 {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        language: serializers.Language.Raw;
        submissionFiles: serializers.SubmissionFileInfo.Raw[];
        problemId: serializers.ProblemId.Raw;
        problemVersion?: number | null;
        userId?: string | null;
    }
}
",
                        "name": "SubmitRequestV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmitRequestV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.SubmitRequestV2 = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    language: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
    submissionFiles: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionFileInfo)),
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    problemVersion: core.serialization.number().optional(),
    userId: core.serialization.string().optional(),
});
",
                        "name": "SubmitRequestV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TerminatedResponse: core.serialization.ObjectSchema<serializers.TerminatedResponse.Raw, TraceApi.TerminatedResponse>;
export declare namespace TerminatedResponse {
    interface Raw {
    }
}
",
                        "name": "TerminatedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TerminatedResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TerminatedResponse = core.serialization.object({});
",
                        "name": "TerminatedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCaseGrade: core.serialization.Schema<serializers.TestCaseGrade.Raw, TraceApi.TestCaseGrade>;
export declare namespace TestCaseGrade {
    type Raw = TestCaseGrade.Hidden | TestCaseGrade.NonHidden;
    interface Hidden extends serializers.TestCaseHiddenGrade.Raw {
        type: \\"hidden\\";
    }
    interface NonHidden extends serializers.TestCaseNonHiddenGrade.Raw {
        type: \\"nonHidden\\";
    }
}
",
                        "name": "TestCaseGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseGrade = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCaseGrade = core.serialization
    .union(\\"type\\", {
    hidden: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseHiddenGrade),
    nonHidden: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseNonHiddenGrade),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"hidden\\":
                return api_sdk_1.TraceApi.TestCaseGrade.hidden(value);
            case \\"nonHidden\\":
                return api_sdk_1.TraceApi.TestCaseGrade.nonHidden(value);
            default:
                return api_sdk_1.TraceApi.TestCaseGrade._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "TestCaseGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCaseHiddenGrade: core.serialization.ObjectSchema<serializers.TestCaseHiddenGrade.Raw, TraceApi.TestCaseHiddenGrade>;
export declare namespace TestCaseHiddenGrade {
    interface Raw {
        passed: boolean;
    }
}
",
                        "name": "TestCaseHiddenGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseHiddenGrade = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCaseHiddenGrade = core.serialization.object({
    passed: core.serialization.boolean(),
});
",
                        "name": "TestCaseHiddenGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCaseNonHiddenGrade: core.serialization.ObjectSchema<serializers.TestCaseNonHiddenGrade.Raw, TraceApi.TestCaseNonHiddenGrade>;
export declare namespace TestCaseNonHiddenGrade {
    interface Raw {
        passed: boolean;
        actualResult?: serializers.VariableValue.Raw | null;
        exception?: serializers.ExceptionV2.Raw | null;
        stdout: string;
    }
}
",
                        "name": "TestCaseNonHiddenGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseNonHiddenGrade = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCaseNonHiddenGrade = core.serialization.object({
    passed: core.serialization.boolean(),
    actualResult: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue).optional(),
    exception: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionV2).optional(),
    stdout: core.serialization.string(),
});
",
                        "name": "TestCaseNonHiddenGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCaseResult: core.serialization.ObjectSchema<serializers.TestCaseResult.Raw, TraceApi.TestCaseResult>;
export declare namespace TestCaseResult {
    interface Raw {
        expectedResult: serializers.VariableValue.Raw;
        actualResult: serializers.ActualResult.Raw;
        passed: boolean;
    }
}
",
                        "name": "TestCaseResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseResult = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCaseResult = core.serialization.object({
    expectedResult: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).VariableValue),
    actualResult: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ActualResult),
    passed: core.serialization.boolean(),
});
",
                        "name": "TestCaseResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestCaseResultWithStdout: core.serialization.ObjectSchema<serializers.TestCaseResultWithStdout.Raw, TraceApi.TestCaseResultWithStdout>;
export declare namespace TestCaseResultWithStdout {
    interface Raw {
        result: serializers.TestCaseResult.Raw;
        stdout: string;
    }
}
",
                        "name": "TestCaseResultWithStdout.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseResultWithStdout = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestCaseResultWithStdout = core.serialization.object({
    result: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseResult),
    stdout: core.serialization.string(),
});
",
                        "name": "TestCaseResultWithStdout.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestSubmissionState: core.serialization.ObjectSchema<serializers.TestSubmissionState.Raw, TraceApi.TestSubmissionState>;
export declare namespace TestSubmissionState {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        defaultTestCases: serializers.TestCase.Raw[];
        customTestCases: serializers.TestCase.Raw[];
        status: serializers.TestSubmissionStatus.Raw;
    }
}
",
                        "name": "TestSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionState = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestSubmissionState = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    defaultTestCases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCase)),
    customTestCases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCase)),
    status: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestSubmissionStatus),
});
",
                        "name": "TestSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestSubmissionStatus: core.serialization.Schema<serializers.TestSubmissionStatus.Raw, TraceApi.TestSubmissionStatus>;
export declare namespace TestSubmissionStatus {
    type Raw = TestSubmissionStatus.Stopped | TestSubmissionStatus.Errored | TestSubmissionStatus.Running | TestSubmissionStatus.TestCaseIdToState;
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: serializers.ErrorInfo.Raw;
    }
    interface Running {
        type: \\"running\\";
        value: serializers.RunningSubmissionState.Raw;
    }
    interface TestCaseIdToState {
        type: \\"testCaseIdToState\\";
        value: Record<string, serializers.SubmissionStatusForTestCase.Raw | null | undefined>;
    }
}
",
                        "name": "TestSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionStatus = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.TestSubmissionStatus = core.serialization
    .union(\\"type\\", {
    stopped: core.serialization.object({}),
    errored: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorInfo),
    }),
    running: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RunningSubmissionState),
    }),
    testCaseIdToState: core.serialization.object({
        value: core.serialization.record(core.serialization.string(), core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionStatusForTestCase).optional()),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"stopped\\":
                return api_sdk_1.TraceApi.TestSubmissionStatus.stopped();
            case \\"errored\\":
                return api_sdk_1.TraceApi.TestSubmissionStatus.errored(value.value);
            case \\"running\\":
                return api_sdk_1.TraceApi.TestSubmissionStatus.running(value.value);
            case \\"testCaseIdToState\\":
                return api_sdk_1.TraceApi.TestSubmissionStatus.testCaseIdToState(value.value);
            default:
                return api_sdk_1.TraceApi.TestSubmissionStatus._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "TestSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestSubmissionStatusV2: core.serialization.ObjectSchema<serializers.TestSubmissionStatusV2.Raw, TraceApi.TestSubmissionStatusV2>;
export declare namespace TestSubmissionStatusV2 {
    interface Raw {
        updates: serializers.TestSubmissionUpdate.Raw[];
        problemId: serializers.ProblemId.Raw;
        problemVersion: number;
        problemInfo: serializers.v2.ProblemInfoV2.Raw;
    }
}
",
                        "name": "TestSubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionStatusV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestSubmissionStatusV2 = core.serialization.object({
    updates: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestSubmissionUpdate)),
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ProblemId),
    problemVersion: core.serialization.number(),
    problemInfo: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).v2.ProblemInfoV2),
});
",
                        "name": "TestSubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestSubmissionUpdate: core.serialization.ObjectSchema<serializers.TestSubmissionUpdate.Raw, TraceApi.TestSubmissionUpdate>;
export declare namespace TestSubmissionUpdate {
    interface Raw {
        updateTime: string;
        updateInfo: serializers.TestSubmissionUpdateInfo.Raw;
    }
}
",
                        "name": "TestSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionUpdate = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TestSubmissionUpdate = core.serialization.object({
    updateTime: core.serialization.date(),
    updateInfo: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestSubmissionUpdateInfo),
});
",
                        "name": "TestSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TestSubmissionUpdateInfo: core.serialization.Schema<serializers.TestSubmissionUpdateInfo.Raw, TraceApi.TestSubmissionUpdateInfo>;
export declare namespace TestSubmissionUpdateInfo {
    type Raw = TestSubmissionUpdateInfo.Running | TestSubmissionUpdateInfo.Stopped | TestSubmissionUpdateInfo.Errored | TestSubmissionUpdateInfo.GradedTestCase | TestSubmissionUpdateInfo.RecordedTestCase | TestSubmissionUpdateInfo.Finished;
    interface Running {
        type: \\"running\\";
        value: serializers.RunningSubmissionState.Raw;
    }
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: serializers.ErrorInfo.Raw;
    }
    interface GradedTestCase extends serializers.GradedTestCaseUpdate.Raw {
        type: \\"gradedTestCase\\";
    }
    interface RecordedTestCase extends serializers.RecordedTestCaseUpdate.Raw {
        type: \\"recordedTestCase\\";
    }
    interface Finished {
        type: \\"finished\\";
    }
}
",
                        "name": "TestSubmissionUpdateInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestSubmissionUpdateInfo = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.TestSubmissionUpdateInfo = core.serialization
    .union(\\"type\\", {
    running: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RunningSubmissionState),
    }),
    stopped: core.serialization.object({}),
    errored: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorInfo),
    }),
    gradedTestCase: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).GradedTestCaseUpdate),
    recordedTestCase: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RecordedTestCaseUpdate),
    finished: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"running\\":
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo.running(value.value);
            case \\"stopped\\":
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo.stopped();
            case \\"errored\\":
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo.errored(value.value);
            case \\"gradedTestCase\\":
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo.gradedTestCase(value);
            case \\"recordedTestCase\\":
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo.recordedTestCase(value);
            case \\"finished\\":
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo.finished();
            default:
                return api_sdk_1.TraceApi.TestSubmissionUpdateInfo._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "TestSubmissionUpdateInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TraceResponse: core.serialization.ObjectSchema<serializers.TraceResponse.Raw, TraceApi.TraceResponse>;
export declare namespace TraceResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        lineNumber: number;
        returnValue?: serializers.DebugVariableValue.Raw | null;
        expressionLocation?: serializers.ExpressionLocation.Raw | null;
        stack: serializers.StackInformation.Raw;
        stdout?: string | null;
    }
}
",
                        "name": "TraceResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TraceResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    lineNumber: core.serialization.number(),
    returnValue: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugVariableValue).optional(),
    expressionLocation: core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExpressionLocation)
        .optional(),
    stack: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StackInformation),
    stdout: core.serialization.string().optional(),
});
",
                        "name": "TraceResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TraceResponseV2: core.serialization.ObjectSchema<serializers.TraceResponseV2.Raw, TraceApi.TraceResponseV2>;
export declare namespace TraceResponseV2 {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        lineNumber: number;
        file: serializers.TracedFile.Raw;
        returnValue?: serializers.DebugVariableValue.Raw | null;
        expressionLocation?: serializers.ExpressionLocation.Raw | null;
        stack: serializers.StackInformation.Raw;
        stdout?: string | null;
    }
}
",
                        "name": "TraceResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceResponseV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TraceResponseV2 = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    lineNumber: core.serialization.number(),
    file: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TracedFile),
    returnValue: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).DebugVariableValue).optional(),
    expressionLocation: core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExpressionLocation)
        .optional(),
    stack: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).StackInformation),
    stdout: core.serialization.string().optional(),
});
",
                        "name": "TraceResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TraceResponsesPage: core.serialization.ObjectSchema<serializers.TraceResponsesPage.Raw, TraceApi.TraceResponsesPage>;
export declare namespace TraceResponsesPage {
    interface Raw {
        offset?: number | null;
        traceResponses: serializers.TraceResponse.Raw[];
    }
}
",
                        "name": "TraceResponsesPage.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceResponsesPage = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TraceResponsesPage = core.serialization.object({
    offset: core.serialization.number().optional(),
    traceResponses: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TraceResponse)),
});
",
                        "name": "TraceResponsesPage.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TraceResponsesPageV2: core.serialization.ObjectSchema<serializers.TraceResponsesPageV2.Raw, TraceApi.TraceResponsesPageV2>;
export declare namespace TraceResponsesPageV2 {
    interface Raw {
        offset?: number | null;
        traceResponses: serializers.TraceResponseV2.Raw[];
    }
}
",
                        "name": "TraceResponsesPageV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TraceResponsesPageV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TraceResponsesPageV2 = core.serialization.object({
    offset: core.serialization.number().optional(),
    traceResponses: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TraceResponseV2)),
});
",
                        "name": "TraceResponsesPageV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TracedFile: core.serialization.ObjectSchema<serializers.TracedFile.Raw, TraceApi.TracedFile>;
export declare namespace TracedFile {
    interface Raw {
        filename: string;
        directory: string;
    }
}
",
                        "name": "TracedFile.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TracedFile = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TracedFile = core.serialization.object({
    filename: core.serialization.string(),
    directory: core.serialization.string(),
});
",
                        "name": "TracedFile.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const TracedTestCase: core.serialization.ObjectSchema<serializers.TracedTestCase.Raw, TraceApi.TracedTestCase>;
export declare namespace TracedTestCase {
    interface Raw {
        result: serializers.TestCaseResultWithStdout.Raw;
        traceResponsesSize: number;
    }
}
",
                        "name": "TracedTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TracedTestCase = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.TracedTestCase = core.serialization.object({
    result: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).TestCaseResultWithStdout),
    traceResponsesSize: core.serialization.number(),
});
",
                        "name": "TracedTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const UnexpectedLanguageError: core.serialization.ObjectSchema<serializers.UnexpectedLanguageError.Raw, TraceApi.UnexpectedLanguageError>;
export declare namespace UnexpectedLanguageError {
    interface Raw {
        expectedLanguage: serializers.Language.Raw;
        actualLanguage: serializers.Language.Raw;
    }
}
",
                        "name": "UnexpectedLanguageError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UnexpectedLanguageError = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.UnexpectedLanguageError = core.serialization.object({
    expectedLanguage: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
    actualLanguage: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
});
",
                        "name": "UnexpectedLanguageError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceFiles: core.serialization.ObjectSchema<serializers.WorkspaceFiles.Raw, TraceApi.WorkspaceFiles>;
export declare namespace WorkspaceFiles {
    interface Raw {
        mainFile: serializers.FileInfo.Raw;
        readOnlyFiles: serializers.FileInfo.Raw[];
    }
}
",
                        "name": "WorkspaceFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceFiles = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceFiles = core.serialization.object({
    mainFile: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileInfo),
    readOnlyFiles: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).FileInfo)),
});
",
                        "name": "WorkspaceFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceRanResponse: core.serialization.ObjectSchema<serializers.WorkspaceRanResponse.Raw, TraceApi.WorkspaceRanResponse>;
export declare namespace WorkspaceRanResponse {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        runDetails: serializers.WorkspaceRunDetails.Raw;
    }
}
",
                        "name": "WorkspaceRanResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceRanResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceRanResponse = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    runDetails: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceRunDetails),
});
",
                        "name": "WorkspaceRanResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceRunDetails: core.serialization.ObjectSchema<serializers.WorkspaceRunDetails.Raw, TraceApi.WorkspaceRunDetails>;
export declare namespace WorkspaceRunDetails {
    interface Raw {
        exceptionV2?: serializers.ExceptionV2.Raw | null;
        exception?: serializers.ExceptionInfo.Raw | null;
        stdout: string;
    }
}
",
                        "name": "WorkspaceRunDetails.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceRunDetails = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceRunDetails = core.serialization.object({
    exceptionV2: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionV2).optional(),
    exception: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ExceptionInfo).optional(),
    stdout: core.serialization.string(),
});
",
                        "name": "WorkspaceRunDetails.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceStarterFilesResponse: core.serialization.ObjectSchema<serializers.WorkspaceStarterFilesResponse.Raw, TraceApi.WorkspaceStarterFilesResponse>;
export declare namespace WorkspaceStarterFilesResponse {
    interface Raw {
        files: Record<serializers.Language.Raw, serializers.WorkspaceFiles.Raw | null | undefined>;
    }
}
",
                        "name": "WorkspaceStarterFilesResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceStarterFilesResponse = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceStarterFilesResponse = core.serialization.object({
    files: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceFiles).optional()),
});
",
                        "name": "WorkspaceStarterFilesResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceStarterFilesResponseV2: core.serialization.ObjectSchema<serializers.WorkspaceStarterFilesResponseV2.Raw, TraceApi.WorkspaceStarterFilesResponseV2>;
export declare namespace WorkspaceStarterFilesResponseV2 {
    interface Raw {
        filesByLanguage: Record<serializers.Language.Raw, serializers.v2.Files.Raw | null | undefined>;
    }
}
",
                        "name": "WorkspaceStarterFilesResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceStarterFilesResponseV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceStarterFilesResponseV2 = core.serialization.object({
    filesByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).v2.Files).optional()),
});
",
                        "name": "WorkspaceStarterFilesResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceSubmissionState: core.serialization.ObjectSchema<serializers.WorkspaceSubmissionState.Raw, TraceApi.WorkspaceSubmissionState>;
export declare namespace WorkspaceSubmissionState {
    interface Raw {
        status: serializers.WorkspaceSubmissionStatus.Raw;
    }
}
",
                        "name": "WorkspaceSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionState = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceSubmissionState = core.serialization.object({
    status: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceSubmissionStatus),
});
",
                        "name": "WorkspaceSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceSubmissionStatus: core.serialization.Schema<serializers.WorkspaceSubmissionStatus.Raw, TraceApi.WorkspaceSubmissionStatus>;
export declare namespace WorkspaceSubmissionStatus {
    type Raw = WorkspaceSubmissionStatus.Stopped | WorkspaceSubmissionStatus.Errored | WorkspaceSubmissionStatus.Running | WorkspaceSubmissionStatus.Ran | WorkspaceSubmissionStatus.Traced;
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: serializers.ErrorInfo.Raw;
    }
    interface Running {
        type: \\"running\\";
        value: serializers.RunningSubmissionState.Raw;
    }
    interface Ran extends serializers.WorkspaceRunDetails.Raw {
        type: \\"ran\\";
    }
    interface Traced extends serializers.WorkspaceRunDetails.Raw {
        type: \\"traced\\";
    }
}
",
                        "name": "WorkspaceSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionStatus = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceSubmissionStatus = core.serialization
    .union(\\"type\\", {
    stopped: core.serialization.object({}),
    errored: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorInfo),
    }),
    running: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RunningSubmissionState),
    }),
    ran: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceRunDetails),
    traced: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceRunDetails),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"stopped\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus.stopped();
            case \\"errored\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus.errored(value.value);
            case \\"running\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus.running(value.value);
            case \\"ran\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus.ran(value);
            case \\"traced\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus.traced(value);
            default:
                return api_sdk_1.TraceApi.WorkspaceSubmissionStatus._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "WorkspaceSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceSubmissionStatusV2: core.serialization.ObjectSchema<serializers.WorkspaceSubmissionStatusV2.Raw, TraceApi.WorkspaceSubmissionStatusV2>;
export declare namespace WorkspaceSubmissionStatusV2 {
    interface Raw {
        updates: serializers.WorkspaceSubmissionUpdate.Raw[];
    }
}
",
                        "name": "WorkspaceSubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionStatusV2 = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceSubmissionStatusV2 = core.serialization.object({
    updates: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceSubmissionUpdate)),
});
",
                        "name": "WorkspaceSubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceSubmissionUpdate: core.serialization.ObjectSchema<serializers.WorkspaceSubmissionUpdate.Raw, TraceApi.WorkspaceSubmissionUpdate>;
export declare namespace WorkspaceSubmissionUpdate {
    interface Raw {
        updateTime: string;
        updateInfo: serializers.WorkspaceSubmissionUpdateInfo.Raw;
    }
}
",
                        "name": "WorkspaceSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionUpdate = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceSubmissionUpdate = core.serialization.object({
    updateTime: core.serialization.date(),
    updateInfo: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceSubmissionUpdateInfo),
});
",
                        "name": "WorkspaceSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceSubmissionUpdateInfo: core.serialization.Schema<serializers.WorkspaceSubmissionUpdateInfo.Raw, TraceApi.WorkspaceSubmissionUpdateInfo>;
export declare namespace WorkspaceSubmissionUpdateInfo {
    type Raw = WorkspaceSubmissionUpdateInfo.Running | WorkspaceSubmissionUpdateInfo.Ran | WorkspaceSubmissionUpdateInfo.Stopped | WorkspaceSubmissionUpdateInfo.Traced | WorkspaceSubmissionUpdateInfo.TracedV2 | WorkspaceSubmissionUpdateInfo.Errored | WorkspaceSubmissionUpdateInfo.Finished;
    interface Running {
        type: \\"running\\";
        value: serializers.RunningSubmissionState.Raw;
    }
    interface Ran extends serializers.WorkspaceRunDetails.Raw {
        type: \\"ran\\";
    }
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Traced {
        type: \\"traced\\";
    }
    interface TracedV2 extends serializers.WorkspaceTracedUpdate.Raw {
        type: \\"tracedV2\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: serializers.ErrorInfo.Raw;
    }
    interface Finished {
        type: \\"finished\\";
    }
}
",
                        "name": "WorkspaceSubmissionUpdateInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmissionUpdateInfo = void 0;
const api_sdk_1 = require(\\"../../../..\\");
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceSubmissionUpdateInfo = core.serialization
    .union(\\"type\\", {
    running: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).RunningSubmissionState),
    }),
    ran: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceRunDetails),
    stopped: core.serialization.object({}),
    traced: core.serialization.object({}),
    tracedV2: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).WorkspaceTracedUpdate),
    errored: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).ErrorInfo),
    }),
    finished: core.serialization.object({}),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"running\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.running(value.value);
            case \\"ran\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.ran(value);
            case \\"stopped\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.stopped();
            case \\"traced\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.traced();
            case \\"tracedV2\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.tracedV2(value);
            case \\"errored\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.errored(value.value);
            case \\"finished\\":
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo.finished();
            default:
                return api_sdk_1.TraceApi.WorkspaceSubmissionUpdateInfo._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                        "name": "WorkspaceSubmissionUpdateInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceSubmitRequest: core.serialization.ObjectSchema<serializers.WorkspaceSubmitRequest.Raw, TraceApi.WorkspaceSubmitRequest>;
export declare namespace WorkspaceSubmitRequest {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        language: serializers.Language.Raw;
        submissionFiles: serializers.SubmissionFileInfo.Raw[];
        userId?: string | null;
    }
}
",
                        "name": "WorkspaceSubmitRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceSubmitRequest = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceSubmitRequest = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionId),
    language: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language),
    submissionFiles: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).SubmissionFileInfo)),
    userId: core.serialization.string().optional(),
});
",
                        "name": "WorkspaceSubmitRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const WorkspaceTracedUpdate: core.serialization.ObjectSchema<serializers.WorkspaceTracedUpdate.Raw, TraceApi.WorkspaceTracedUpdate>;
export declare namespace WorkspaceTracedUpdate {
    interface Raw {
        traceResponsesSize: number;
    }
}
",
                        "name": "WorkspaceTracedUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.WorkspaceTracedUpdate = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.WorkspaceTracedUpdate = core.serialization.object({
    traceResponsesSize: core.serialization.number(),
});
",
                        "name": "WorkspaceTracedUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./SubmissionId\\";
export * from \\"./ShareId\\";
export * from \\"./SubmissionRequest\\";
export * from \\"./InitializeProblemRequest\\";
export * from \\"./SubmitRequestV2\\";
export * from \\"./WorkspaceSubmitRequest\\";
export * from \\"./SubmissionFileInfo\\";
export * from \\"./SubmissionTypeEnum\\";
export * from \\"./StopRequest\\";
export * from \\"./SubmissionResponse\\";
export * from \\"./CodeExecutionUpdate\\";
export * from \\"./BuildingExecutorResponse\\";
export * from \\"./RunningResponse\\";
export * from \\"./RunningSubmissionState\\";
export * from \\"./ErroredResponse\\";
export * from \\"./ErrorInfo\\";
export * from \\"./CompileError\\";
export * from \\"./RuntimeError\\";
export * from \\"./InternalError\\";
export * from \\"./StoppedResponse\\";
export * from \\"./WorkspaceRanResponse\\";
export * from \\"./WorkspaceRunDetails\\";
export * from \\"./GradedResponse\\";
export * from \\"./GradedResponseV2\\";
export * from \\"./TestCaseGrade\\";
export * from \\"./TestCaseHiddenGrade\\";
export * from \\"./TestCaseNonHiddenGrade\\";
export * from \\"./RecordedResponseNotification\\";
export * from \\"./RecordingResponseNotification\\";
export * from \\"./LightweightStackframeInformation\\";
export * from \\"./TestCaseResultWithStdout\\";
export * from \\"./TestCaseResult\\";
export * from \\"./ActualResult\\";
export * from \\"./ExceptionV2\\";
export * from \\"./ExceptionInfo\\";
export * from \\"./InvalidRequestResponse\\";
export * from \\"./InvalidRequestCause\\";
export * from \\"./ExistingSubmissionExecuting\\";
export * from \\"./SubmissionIdNotFound\\";
export * from \\"./CustomTestCasesUnsupported\\";
export * from \\"./UnexpectedLanguageError\\";
export * from \\"./TerminatedResponse\\";
export * from \\"./FinishedResponse\\";
export * from \\"./StdoutResponse\\";
export * from \\"./StderrResponse\\";
export * from \\"./TraceResponse\\";
export * from \\"./TraceResponseV2\\";
export * from \\"./TracedFile\\";
export * from \\"./ExpressionLocation\\";
export * from \\"./StackInformation\\";
export * from \\"./StackFrame\\";
export * from \\"./Scope\\";
export * from \\"./ExecutionSessionResponse\\";
export * from \\"./ExecutionSessionStatus\\";
export * from \\"./SubmissionStatusV2\\";
export * from \\"./TestSubmissionStatusV2\\";
export * from \\"./WorkspaceSubmissionStatusV2\\";
export * from \\"./TestSubmissionUpdate\\";
export * from \\"./TestSubmissionUpdateInfo\\";
export * from \\"./WorkspaceSubmissionUpdate\\";
export * from \\"./WorkspaceSubmissionUpdateInfo\\";
export * from \\"./GradedTestCaseUpdate\\";
export * from \\"./RecordedTestCaseUpdate\\";
export * from \\"./WorkspaceTracedUpdate\\";
export * from \\"./SubmissionTypeState\\";
export * from \\"./WorkspaceSubmissionState\\";
export * from \\"./WorkspaceSubmissionStatus\\";
export * from \\"./TestSubmissionState\\";
export * from \\"./TestSubmissionStatus\\";
export * from \\"./SubmissionStatusForTestCase\\";
export * from \\"./TracedTestCase\\";
export * from \\"./TraceResponsesPage\\";
export * from \\"./TraceResponsesPageV2\\";
export * from \\"./GetTraceResponsesPageRequest\\";
export * from \\"./WorkspaceStarterFilesResponse\\";
export * from \\"./WorkspaceStarterFilesResponseV2\\";
export * from \\"./WorkspaceFiles\\";
export * from \\"./ExecutionSessionState\\";
export * from \\"./GetExecutionSessionStateResponse\\";
export * from \\"./GetSubmissionStateResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./SubmissionId\\"), exports);
__exportStar(require(\\"./ShareId\\"), exports);
__exportStar(require(\\"./SubmissionRequest\\"), exports);
__exportStar(require(\\"./InitializeProblemRequest\\"), exports);
__exportStar(require(\\"./SubmitRequestV2\\"), exports);
__exportStar(require(\\"./WorkspaceSubmitRequest\\"), exports);
__exportStar(require(\\"./SubmissionFileInfo\\"), exports);
__exportStar(require(\\"./SubmissionTypeEnum\\"), exports);
__exportStar(require(\\"./StopRequest\\"), exports);
__exportStar(require(\\"./SubmissionResponse\\"), exports);
__exportStar(require(\\"./CodeExecutionUpdate\\"), exports);
__exportStar(require(\\"./BuildingExecutorResponse\\"), exports);
__exportStar(require(\\"./RunningResponse\\"), exports);
__exportStar(require(\\"./RunningSubmissionState\\"), exports);
__exportStar(require(\\"./ErroredResponse\\"), exports);
__exportStar(require(\\"./ErrorInfo\\"), exports);
__exportStar(require(\\"./CompileError\\"), exports);
__exportStar(require(\\"./RuntimeError\\"), exports);
__exportStar(require(\\"./InternalError\\"), exports);
__exportStar(require(\\"./StoppedResponse\\"), exports);
__exportStar(require(\\"./WorkspaceRanResponse\\"), exports);
__exportStar(require(\\"./WorkspaceRunDetails\\"), exports);
__exportStar(require(\\"./GradedResponse\\"), exports);
__exportStar(require(\\"./GradedResponseV2\\"), exports);
__exportStar(require(\\"./TestCaseGrade\\"), exports);
__exportStar(require(\\"./TestCaseHiddenGrade\\"), exports);
__exportStar(require(\\"./TestCaseNonHiddenGrade\\"), exports);
__exportStar(require(\\"./RecordedResponseNotification\\"), exports);
__exportStar(require(\\"./RecordingResponseNotification\\"), exports);
__exportStar(require(\\"./LightweightStackframeInformation\\"), exports);
__exportStar(require(\\"./TestCaseResultWithStdout\\"), exports);
__exportStar(require(\\"./TestCaseResult\\"), exports);
__exportStar(require(\\"./ActualResult\\"), exports);
__exportStar(require(\\"./ExceptionV2\\"), exports);
__exportStar(require(\\"./ExceptionInfo\\"), exports);
__exportStar(require(\\"./InvalidRequestResponse\\"), exports);
__exportStar(require(\\"./InvalidRequestCause\\"), exports);
__exportStar(require(\\"./ExistingSubmissionExecuting\\"), exports);
__exportStar(require(\\"./SubmissionIdNotFound\\"), exports);
__exportStar(require(\\"./CustomTestCasesUnsupported\\"), exports);
__exportStar(require(\\"./UnexpectedLanguageError\\"), exports);
__exportStar(require(\\"./TerminatedResponse\\"), exports);
__exportStar(require(\\"./FinishedResponse\\"), exports);
__exportStar(require(\\"./StdoutResponse\\"), exports);
__exportStar(require(\\"./StderrResponse\\"), exports);
__exportStar(require(\\"./TraceResponse\\"), exports);
__exportStar(require(\\"./TraceResponseV2\\"), exports);
__exportStar(require(\\"./TracedFile\\"), exports);
__exportStar(require(\\"./ExpressionLocation\\"), exports);
__exportStar(require(\\"./StackInformation\\"), exports);
__exportStar(require(\\"./StackFrame\\"), exports);
__exportStar(require(\\"./Scope\\"), exports);
__exportStar(require(\\"./ExecutionSessionResponse\\"), exports);
__exportStar(require(\\"./ExecutionSessionStatus\\"), exports);
__exportStar(require(\\"./SubmissionStatusV2\\"), exports);
__exportStar(require(\\"./TestSubmissionStatusV2\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionStatusV2\\"), exports);
__exportStar(require(\\"./TestSubmissionUpdate\\"), exports);
__exportStar(require(\\"./TestSubmissionUpdateInfo\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionUpdate\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionUpdateInfo\\"), exports);
__exportStar(require(\\"./GradedTestCaseUpdate\\"), exports);
__exportStar(require(\\"./RecordedTestCaseUpdate\\"), exports);
__exportStar(require(\\"./WorkspaceTracedUpdate\\"), exports);
__exportStar(require(\\"./SubmissionTypeState\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionState\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionStatus\\"), exports);
__exportStar(require(\\"./TestSubmissionState\\"), exports);
__exportStar(require(\\"./TestSubmissionStatus\\"), exports);
__exportStar(require(\\"./SubmissionStatusForTestCase\\"), exports);
__exportStar(require(\\"./TracedTestCase\\"), exports);
__exportStar(require(\\"./TraceResponsesPage\\"), exports);
__exportStar(require(\\"./TraceResponsesPageV2\\"), exports);
__exportStar(require(\\"./GetTraceResponsesPageRequest\\"), exports);
__exportStar(require(\\"./WorkspaceStarterFilesResponse\\"), exports);
__exportStar(require(\\"./WorkspaceStarterFilesResponseV2\\"), exports);
__exportStar(require(\\"./WorkspaceFiles\\"), exports);
__exportStar(require(\\"./ExecutionSessionState\\"), exports);
__exportStar(require(\\"./GetExecutionSessionStateResponse\\"), exports);
__exportStar(require(\\"./GetSubmissionStateResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "submission",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../..\\";
import { TraceApi } from \\"../../../..\\";
import * as core from \\"../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.sysprop.getNumWarmInstances.Response.Raw, Record<TraceApi.Language, number | undefined>>;
export declare namespace Response {
    type Raw = Record<serializers.Language.Raw, number | null | undefined>;
}
",
                        "name": "getNumWarmInstances.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../core\\"));
exports.Response = core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../..\\")))).Language), core.serialization.number().optional());
",
                        "name": "getNumWarmInstances.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * as getNumWarmInstances from \\"./getNumWarmInstances\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getNumWarmInstances = void 0;
exports.getNumWarmInstances = __importStar(require(\\"./getNumWarmInstances\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "sysprop",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./resources\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as v3 from \\"./v3\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.v3 = exports.problem = void 0;
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
exports.v3 = __importStar(require(\\"./v3\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.v2.problem.getLightweightProblems.Response.Raw, TraceApi.v2.LightweightProblemInfoV2[]>;
export declare namespace Response {
    type Raw = serializers.v2.LightweightProblemInfoV2.Raw[];
}
",
                                "name": "getLightweightProblems.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.LightweightProblemInfoV2));
",
                                "name": "getLightweightProblems.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.v2.problem.getProblems.Response.Raw, TraceApi.v2.ProblemInfoV2[]>;
export declare namespace Response {
    type Raw = serializers.v2.ProblemInfoV2.Raw[];
}
",
                                "name": "getProblems.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.ProblemInfoV2));
",
                                "name": "getProblems.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * as getLightweightProblems from \\"./getLightweightProblems\\";
export * as getProblems from \\"./getProblems\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getProblems = exports.getLightweightProblems = void 0;
exports.getLightweightProblems = __importStar(require(\\"./getLightweightProblems\\"));
exports.getProblems = __importStar(require(\\"./getProblems\\"));
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                            "name": "index.js",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const AssertCorrectnessCheck: core.serialization.Schema<serializers.v2.AssertCorrectnessCheck.Raw, TraceApi.v2.AssertCorrectnessCheck>;
export declare namespace AssertCorrectnessCheck {
    type Raw = AssertCorrectnessCheck.DeepEquality | AssertCorrectnessCheck.Custom;
    interface DeepEquality extends serializers.v2.DeepEqualityCorrectnessCheck.Raw {
        type: \\"deepEquality\\";
    }
    interface Custom extends serializers.v2.VoidFunctionDefinitionThatTakesActualResult.Raw {
        type: \\"custom\\";
    }
}
",
                                "name": "AssertCorrectnessCheck.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AssertCorrectnessCheck = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.AssertCorrectnessCheck = core.serialization
    .union(\\"type\\", {
    deepEquality: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.DeepEqualityCorrectnessCheck),
    custom: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.VoidFunctionDefinitionThatTakesActualResult),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"deepEquality\\":
                return api_sdk_1.TraceApi.v2.AssertCorrectnessCheck.deepEquality(value);
            case \\"custom\\":
                return api_sdk_1.TraceApi.v2.AssertCorrectnessCheck.custom(value);
            default:
                return api_sdk_1.TraceApi.v2.AssertCorrectnessCheck._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                "name": "AssertCorrectnessCheck.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const BasicCustomFiles: core.serialization.ObjectSchema<serializers.v2.BasicCustomFiles.Raw, TraceApi.v2.BasicCustomFiles>;
export declare namespace BasicCustomFiles {
    interface Raw {
        methodName: string;
        signature: serializers.v2.NonVoidFunctionSignature.Raw;
        additionalFiles: Record<serializers.Language.Raw, serializers.v2.Files.Raw | null | undefined>;
        basicTestCaseTemplate: serializers.v2.BasicTestCaseTemplate.Raw;
    }
}
",
                                "name": "BasicCustomFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicCustomFiles = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.BasicCustomFiles = core.serialization.object({
    methodName: core.serialization.string(),
    signature: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.NonVoidFunctionSignature),
    additionalFiles: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Files).optional()),
    basicTestCaseTemplate: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.BasicTestCaseTemplate),
});
",
                                "name": "BasicCustomFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const BasicTestCaseTemplate: core.serialization.ObjectSchema<serializers.v2.BasicTestCaseTemplate.Raw, TraceApi.v2.BasicTestCaseTemplate>;
export declare namespace BasicTestCaseTemplate {
    interface Raw {
        templateId: serializers.v2.TestCaseTemplateId.Raw;
        name: string;
        description: serializers.v2.TestCaseImplementationDescription.Raw;
        expectedValueParameterId: serializers.v2.ParameterId.Raw;
    }
}
",
                                "name": "BasicTestCaseTemplate.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicTestCaseTemplate = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.BasicTestCaseTemplate = core.serialization.object({
    templateId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplateId),
    name: core.serialization.string(),
    description: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseImplementationDescription),
    expectedValueParameterId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.ParameterId),
});
",
                                "name": "BasicTestCaseTemplate.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const CreateProblemRequestV2: core.serialization.ObjectSchema<serializers.v2.CreateProblemRequestV2.Raw, TraceApi.v2.CreateProblemRequestV2>;
export declare namespace CreateProblemRequestV2 {
    interface Raw {
        problemName: string;
        problemDescription: serializers.ProblemDescription.Raw;
        customFiles: serializers.v2.CustomFiles.Raw;
        customTestCaseTemplates: serializers.v2.TestCaseTemplate.Raw[];
        testcases: serializers.v2.TestCaseV2.Raw[];
        supportedLanguages: serializers.Language.Raw[];
        isPublic: boolean;
    }
}
",
                                "name": "CreateProblemRequestV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemRequestV2 = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.CreateProblemRequestV2 = core.serialization.object({
    problemName: core.serialization.string(),
    problemDescription: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).ProblemDescription),
    customFiles: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.CustomFiles),
    customTestCaseTemplates: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplate)),
    testcases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseV2)),
    supportedLanguages: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language)),
    isPublic: core.serialization.boolean(),
});
",
                                "name": "CreateProblemRequestV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const CustomFiles: core.serialization.Schema<serializers.v2.CustomFiles.Raw, TraceApi.v2.CustomFiles>;
export declare namespace CustomFiles {
    type Raw = CustomFiles.Basic | CustomFiles.Custom;
    interface Basic extends serializers.v2.BasicCustomFiles.Raw {
        type: \\"basic\\";
    }
    interface Custom {
        type: \\"custom\\";
        value: Record<serializers.Language.Raw, serializers.v2.Files.Raw | null | undefined>;
    }
}
",
                                "name": "CustomFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CustomFiles = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.CustomFiles = core.serialization
    .union(\\"type\\", {
    basic: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.BasicCustomFiles),
    custom: core.serialization.object({
        value: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Files).optional()),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"basic\\":
                return api_sdk_1.TraceApi.v2.CustomFiles.basic(value);
            case \\"custom\\":
                return api_sdk_1.TraceApi.v2.CustomFiles.custom(value.value);
            default:
                return api_sdk_1.TraceApi.v2.CustomFiles._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                "name": "CustomFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const DeepEqualityCorrectnessCheck: core.serialization.ObjectSchema<serializers.v2.DeepEqualityCorrectnessCheck.Raw, TraceApi.v2.DeepEqualityCorrectnessCheck>;
export declare namespace DeepEqualityCorrectnessCheck {
    interface Raw {
        expectedValueParameterId: serializers.v2.ParameterId.Raw;
    }
}
",
                                "name": "DeepEqualityCorrectnessCheck.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DeepEqualityCorrectnessCheck = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.DeepEqualityCorrectnessCheck = core.serialization.object({
    expectedValueParameterId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.ParameterId),
});
",
                                "name": "DeepEqualityCorrectnessCheck.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const DefaultProvidedFile: core.serialization.ObjectSchema<serializers.v2.DefaultProvidedFile.Raw, TraceApi.v2.DefaultProvidedFile>;
export declare namespace DefaultProvidedFile {
    interface Raw {
        file: serializers.v2.FileInfoV2.Raw;
        relatedTypes: serializers.VariableType.Raw[];
    }
}
",
                                "name": "DefaultProvidedFile.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DefaultProvidedFile = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.DefaultProvidedFile = core.serialization.object({
    file: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FileInfoV2),
    relatedTypes: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).VariableType)),
});
",
                                "name": "DefaultProvidedFile.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const FileInfoV2: core.serialization.ObjectSchema<serializers.v2.FileInfoV2.Raw, TraceApi.v2.FileInfoV2>;
export declare namespace FileInfoV2 {
    interface Raw {
        filename: string;
        directory: string;
        contents: string;
        editable: boolean;
    }
}
",
                                "name": "FileInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileInfoV2 = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.FileInfoV2 = core.serialization.object({
    filename: core.serialization.string(),
    directory: core.serialization.string(),
    contents: core.serialization.string(),
    editable: core.serialization.boolean(),
});
",
                                "name": "FileInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const Files: core.serialization.ObjectSchema<serializers.v2.Files.Raw, TraceApi.v2.Files>;
export declare namespace Files {
    interface Raw {
        files: serializers.v2.FileInfoV2.Raw[];
    }
}
",
                                "name": "Files.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Files = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.Files = core.serialization.object({
    files: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FileInfoV2)),
});
",
                                "name": "Files.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const FunctionImplementation: core.serialization.ObjectSchema<serializers.v2.FunctionImplementation.Raw, TraceApi.v2.FunctionImplementation>;
export declare namespace FunctionImplementation {
    interface Raw {
        impl: string;
        imports?: string | null;
    }
}
",
                                "name": "FunctionImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionImplementation = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.FunctionImplementation = core.serialization.object({
    impl: core.serialization.string(),
    imports: core.serialization.string().optional(),
});
",
                                "name": "FunctionImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const FunctionImplementationForMultipleLanguages: core.serialization.ObjectSchema<serializers.v2.FunctionImplementationForMultipleLanguages.Raw, TraceApi.v2.FunctionImplementationForMultipleLanguages>;
export declare namespace FunctionImplementationForMultipleLanguages {
    interface Raw {
        codeByLanguage: Record<serializers.Language.Raw, serializers.v2.FunctionImplementation.Raw | null | undefined>;
    }
}
",
                                "name": "FunctionImplementationForMultipleLanguages.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionImplementationForMultipleLanguages = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.FunctionImplementationForMultipleLanguages = core.serialization.object({
    codeByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FunctionImplementation).optional()),
});
",
                                "name": "FunctionImplementationForMultipleLanguages.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const FunctionSignature: core.serialization.Schema<serializers.v2.FunctionSignature.Raw, TraceApi.v2.FunctionSignature>;
export declare namespace FunctionSignature {
    type Raw = FunctionSignature.Void | FunctionSignature.NonVoid | FunctionSignature.VoidThatTakesActualResult;
    interface Void extends serializers.v2.VoidFunctionSignature.Raw {
        type: \\"void\\";
    }
    interface NonVoid extends serializers.v2.NonVoidFunctionSignature.Raw {
        type: \\"nonVoid\\";
    }
    interface VoidThatTakesActualResult extends serializers.v2.VoidFunctionSignatureThatTakesActualResult.Raw {
        type: \\"voidThatTakesActualResult\\";
    }
}
",
                                "name": "FunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionSignature = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.FunctionSignature = core.serialization
    .union(\\"type\\", {
    void: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.VoidFunctionSignature),
    nonVoid: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.NonVoidFunctionSignature),
    voidThatTakesActualResult: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.VoidFunctionSignatureThatTakesActualResult),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"void\\":
                return api_sdk_1.TraceApi.v2.FunctionSignature.void(value);
            case \\"nonVoid\\":
                return api_sdk_1.TraceApi.v2.FunctionSignature.nonVoid(value);
            case \\"voidThatTakesActualResult\\":
                return api_sdk_1.TraceApi.v2.FunctionSignature.voidThatTakesActualResult(value);
            default:
                return api_sdk_1.TraceApi.v2.FunctionSignature._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                "name": "FunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GeneratedFiles: core.serialization.ObjectSchema<serializers.v2.GeneratedFiles.Raw, TraceApi.v2.GeneratedFiles>;
export declare namespace GeneratedFiles {
    interface Raw {
        generatedTestCaseFiles: Record<serializers.Language.Raw, serializers.v2.Files.Raw | null | undefined>;
        generatedTemplateFiles: Record<serializers.Language.Raw, serializers.v2.Files.Raw | null | undefined>;
        other: Record<serializers.Language.Raw, serializers.v2.Files.Raw | null | undefined>;
    }
}
",
                                "name": "GeneratedFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GeneratedFiles = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GeneratedFiles = core.serialization.object({
    generatedTestCaseFiles: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Files).optional()),
    generatedTemplateFiles: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Files).optional()),
    other: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Files).optional()),
});
",
                                "name": "GeneratedFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GetBasicSolutionFileRequest: core.serialization.ObjectSchema<serializers.v2.GetBasicSolutionFileRequest.Raw, TraceApi.v2.GetBasicSolutionFileRequest>;
export declare namespace GetBasicSolutionFileRequest {
    interface Raw {
        methodName: string;
        signature: serializers.v2.NonVoidFunctionSignature.Raw;
    }
}
",
                                "name": "GetBasicSolutionFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetBasicSolutionFileRequest = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GetBasicSolutionFileRequest = core.serialization.object({
    methodName: core.serialization.string(),
    signature: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.NonVoidFunctionSignature),
});
",
                                "name": "GetBasicSolutionFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GetBasicSolutionFileResponse: core.serialization.ObjectSchema<serializers.v2.GetBasicSolutionFileResponse.Raw, TraceApi.v2.GetBasicSolutionFileResponse>;
export declare namespace GetBasicSolutionFileResponse {
    interface Raw {
        solutionFileByLanguage: Record<serializers.Language.Raw, serializers.v2.FileInfoV2.Raw | null | undefined>;
    }
}
",
                                "name": "GetBasicSolutionFileResponse.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetBasicSolutionFileResponse = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GetBasicSolutionFileResponse = core.serialization.object({
    solutionFileByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FileInfoV2).optional()),
});
",
                                "name": "GetBasicSolutionFileResponse.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GetFunctionSignatureRequest: core.serialization.ObjectSchema<serializers.v2.GetFunctionSignatureRequest.Raw, TraceApi.v2.GetFunctionSignatureRequest>;
export declare namespace GetFunctionSignatureRequest {
    interface Raw {
        functionSignature: serializers.v2.FunctionSignature.Raw;
    }
}
",
                                "name": "GetFunctionSignatureRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetFunctionSignatureRequest = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GetFunctionSignatureRequest = core.serialization.object({
    functionSignature: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FunctionSignature),
});
",
                                "name": "GetFunctionSignatureRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GetFunctionSignatureResponse: core.serialization.ObjectSchema<serializers.v2.GetFunctionSignatureResponse.Raw, TraceApi.v2.GetFunctionSignatureResponse>;
export declare namespace GetFunctionSignatureResponse {
    interface Raw {
        functionByLanguage: Record<serializers.Language.Raw, string | null | undefined>;
    }
}
",
                                "name": "GetFunctionSignatureResponse.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetFunctionSignatureResponse = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GetFunctionSignatureResponse = core.serialization.object({
    functionByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language), core.serialization.string().optional()),
});
",
                                "name": "GetFunctionSignatureResponse.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GetGeneratedTestCaseFileRequest: core.serialization.ObjectSchema<serializers.v2.GetGeneratedTestCaseFileRequest.Raw, TraceApi.v2.GetGeneratedTestCaseFileRequest>;
export declare namespace GetGeneratedTestCaseFileRequest {
    interface Raw {
        template?: serializers.v2.TestCaseTemplate.Raw | null;
        testCase: serializers.v2.TestCaseV2.Raw;
    }
}
",
                                "name": "GetGeneratedTestCaseFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetGeneratedTestCaseFileRequest = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GetGeneratedTestCaseFileRequest = core.serialization.object({
    template: core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplate)
        .optional(),
    testCase: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseV2),
});
",
                                "name": "GetGeneratedTestCaseFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const GetGeneratedTestCaseTemplateFileRequest: core.serialization.ObjectSchema<serializers.v2.GetGeneratedTestCaseTemplateFileRequest.Raw, TraceApi.v2.GetGeneratedTestCaseTemplateFileRequest>;
export declare namespace GetGeneratedTestCaseTemplateFileRequest {
    interface Raw {
        template: serializers.v2.TestCaseTemplate.Raw;
    }
}
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetGeneratedTestCaseTemplateFileRequest = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.GetGeneratedTestCaseTemplateFileRequest = core.serialization.object({
    template: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplate),
});
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const LightweightProblemInfoV2: core.serialization.ObjectSchema<serializers.v2.LightweightProblemInfoV2.Raw, TraceApi.v2.LightweightProblemInfoV2>;
export declare namespace LightweightProblemInfoV2 {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        problemName: string;
        problemVersion: number;
        variableTypes: serializers.VariableType.Raw[];
    }
}
",
                                "name": "LightweightProblemInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.LightweightProblemInfoV2 = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.LightweightProblemInfoV2 = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).ProblemId),
    problemName: core.serialization.string(),
    problemVersion: core.serialization.number(),
    variableTypes: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).VariableType)),
});
",
                                "name": "LightweightProblemInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const NonVoidFunctionDefinition: core.serialization.ObjectSchema<serializers.v2.NonVoidFunctionDefinition.Raw, TraceApi.v2.NonVoidFunctionDefinition>;
export declare namespace NonVoidFunctionDefinition {
    interface Raw {
        signature: serializers.v2.NonVoidFunctionSignature.Raw;
        code: serializers.v2.FunctionImplementationForMultipleLanguages.Raw;
    }
}
",
                                "name": "NonVoidFunctionDefinition.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NonVoidFunctionDefinition = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.NonVoidFunctionDefinition = core.serialization.object({
    signature: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.NonVoidFunctionSignature),
    code: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FunctionImplementationForMultipleLanguages),
});
",
                                "name": "NonVoidFunctionDefinition.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const NonVoidFunctionSignature: core.serialization.ObjectSchema<serializers.v2.NonVoidFunctionSignature.Raw, TraceApi.v2.NonVoidFunctionSignature>;
export declare namespace NonVoidFunctionSignature {
    interface Raw {
        parameters: serializers.v2.Parameter.Raw[];
        returnType: serializers.VariableType.Raw;
    }
}
",
                                "name": "NonVoidFunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NonVoidFunctionSignature = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.NonVoidFunctionSignature = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Parameter)),
    returnType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).VariableType),
});
",
                                "name": "NonVoidFunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const Parameter: core.serialization.ObjectSchema<serializers.v2.Parameter.Raw, TraceApi.v2.Parameter>;
export declare namespace Parameter {
    interface Raw {
        parameterId: serializers.v2.ParameterId.Raw;
        name: string;
        variableType: serializers.VariableType.Raw;
    }
}
",
                                "name": "Parameter.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Parameter = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.Parameter = core.serialization.object({
    parameterId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.ParameterId),
    name: core.serialization.string(),
    variableType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).VariableType),
});
",
                                "name": "Parameter.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const ParameterId: core.serialization.Schema<serializers.v2.ParameterId.Raw, TraceApi.v2.ParameterId>;
export declare namespace ParameterId {
    type Raw = string;
}
",
                                "name": "ParameterId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParameterId = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.ParameterId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.v2.ParameterId,
    untransform: (value) => value,
});
",
                                "name": "ParameterId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const ProblemInfoV2: core.serialization.ObjectSchema<serializers.v2.ProblemInfoV2.Raw, TraceApi.v2.ProblemInfoV2>;
export declare namespace ProblemInfoV2 {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        problemDescription: serializers.ProblemDescription.Raw;
        problemName: string;
        problemVersion: number;
        supportedLanguages: serializers.Language.Raw[];
        customFiles: serializers.v2.CustomFiles.Raw;
        generatedFiles: serializers.v2.GeneratedFiles.Raw;
        customTestCaseTemplates: serializers.v2.TestCaseTemplate.Raw[];
        testcases: serializers.v2.TestCaseV2.Raw[];
        isPublic: boolean;
    }
}
",
                                "name": "ProblemInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemInfoV2 = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.ProblemInfoV2 = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).ProblemId),
    problemDescription: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).ProblemDescription),
    problemName: core.serialization.string(),
    problemVersion: core.serialization.number(),
    supportedLanguages: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).Language)),
    customFiles: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.CustomFiles),
    generatedFiles: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.GeneratedFiles),
    customTestCaseTemplates: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplate)),
    testcases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseV2)),
    isPublic: core.serialization.boolean(),
});
",
                                "name": "ProblemInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseExpects: core.serialization.ObjectSchema<serializers.v2.TestCaseExpects.Raw, TraceApi.v2.TestCaseExpects>;
export declare namespace TestCaseExpects {
    interface Raw {
        expectedStdout?: string | null;
    }
}
",
                                "name": "TestCaseExpects.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseExpects = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseExpects = core.serialization.object({
    expectedStdout: core.serialization.string().optional(),
});
",
                                "name": "TestCaseExpects.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseFunction: core.serialization.Schema<serializers.v2.TestCaseFunction.Raw, TraceApi.v2.TestCaseFunction>;
export declare namespace TestCaseFunction {
    type Raw = TestCaseFunction.WithActualResult | TestCaseFunction.Custom;
    interface WithActualResult extends serializers.v2.TestCaseWithActualResultImplementation.Raw {
        type: \\"withActualResult\\";
    }
    interface Custom extends serializers.v2.VoidFunctionDefinition.Raw {
        type: \\"custom\\";
    }
}
",
                                "name": "TestCaseFunction.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseFunction = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseFunction = core.serialization
    .union(\\"type\\", {
    withActualResult: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseWithActualResultImplementation),
    custom: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.VoidFunctionDefinition),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"withActualResult\\":
                return api_sdk_1.TraceApi.v2.TestCaseFunction.withActualResult(value);
            case \\"custom\\":
                return api_sdk_1.TraceApi.v2.TestCaseFunction.custom(value);
            default:
                return api_sdk_1.TraceApi.v2.TestCaseFunction._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                "name": "TestCaseFunction.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseId: core.serialization.Schema<serializers.v2.TestCaseId.Raw, TraceApi.v2.TestCaseId>;
export declare namespace TestCaseId {
    type Raw = string;
}
",
                                "name": "TestCaseId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseId = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.v2.TestCaseId,
    untransform: (value) => value,
});
",
                                "name": "TestCaseId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseImplementation: core.serialization.ObjectSchema<serializers.v2.TestCaseImplementation.Raw, TraceApi.v2.TestCaseImplementation>;
export declare namespace TestCaseImplementation {
    interface Raw {
        description: serializers.v2.TestCaseImplementationDescription.Raw;
        function: serializers.v2.TestCaseFunction.Raw;
    }
}
",
                                "name": "TestCaseImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementation = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseImplementation = core.serialization.object({
    description: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseImplementationDescription),
    function: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseFunction),
});
",
                                "name": "TestCaseImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseImplementationDescription: core.serialization.ObjectSchema<serializers.v2.TestCaseImplementationDescription.Raw, TraceApi.v2.TestCaseImplementationDescription>;
export declare namespace TestCaseImplementationDescription {
    interface Raw {
        boards: serializers.v2.TestCaseImplementationDescriptionBoard.Raw[];
    }
}
",
                                "name": "TestCaseImplementationDescription.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationDescription = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseImplementationDescription = core.serialization.object({
    boards: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseImplementationDescriptionBoard)),
});
",
                                "name": "TestCaseImplementationDescription.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseImplementationDescriptionBoard: core.serialization.Schema<serializers.v2.TestCaseImplementationDescriptionBoard.Raw, TraceApi.v2.TestCaseImplementationDescriptionBoard>;
export declare namespace TestCaseImplementationDescriptionBoard {
    type Raw = TestCaseImplementationDescriptionBoard.Html | TestCaseImplementationDescriptionBoard.ParamId;
    interface Html {
        type: \\"html\\";
        value: string;
    }
    interface ParamId {
        type: \\"paramId\\";
        value: serializers.v2.ParameterId.Raw;
    }
}
",
                                "name": "TestCaseImplementationDescriptionBoard.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationDescriptionBoard = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseImplementationDescriptionBoard = core.serialization
    .union(\\"type\\", {
    html: core.serialization.object({
        value: core.serialization.string(),
    }),
    paramId: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.ParameterId),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"html\\":
                return api_sdk_1.TraceApi.v2.TestCaseImplementationDescriptionBoard.html(value.value);
            case \\"paramId\\":
                return api_sdk_1.TraceApi.v2.TestCaseImplementationDescriptionBoard.paramId(value.value);
            default:
                return api_sdk_1.TraceApi.v2.TestCaseImplementationDescriptionBoard._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                "name": "TestCaseImplementationDescriptionBoard.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseImplementationReference: core.serialization.Schema<serializers.v2.TestCaseImplementationReference.Raw, TraceApi.v2.TestCaseImplementationReference>;
export declare namespace TestCaseImplementationReference {
    type Raw = TestCaseImplementationReference.TemplateId | TestCaseImplementationReference.Implementation;
    interface TemplateId {
        type: \\"templateId\\";
        value: serializers.v2.TestCaseTemplateId.Raw;
    }
    interface Implementation extends serializers.v2.TestCaseImplementation.Raw {
        type: \\"implementation\\";
    }
}
",
                                "name": "TestCaseImplementationReference.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationReference = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseImplementationReference = core.serialization
    .union(\\"type\\", {
    templateId: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplateId),
    }),
    implementation: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseImplementation),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"templateId\\":
                return api_sdk_1.TraceApi.v2.TestCaseImplementationReference.templateId(value.value);
            case \\"implementation\\":
                return api_sdk_1.TraceApi.v2.TestCaseImplementationReference.implementation(value);
            default:
                return api_sdk_1.TraceApi.v2.TestCaseImplementationReference._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                "name": "TestCaseImplementationReference.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseMetadata: core.serialization.ObjectSchema<serializers.v2.TestCaseMetadata.Raw, TraceApi.v2.TestCaseMetadata>;
export declare namespace TestCaseMetadata {
    interface Raw {
        id: serializers.v2.TestCaseId.Raw;
        name: string;
        hidden: boolean;
    }
}
",
                                "name": "TestCaseMetadata.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseMetadata = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseMetadata = core.serialization.object({
    id: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseId),
    name: core.serialization.string(),
    hidden: core.serialization.boolean(),
});
",
                                "name": "TestCaseMetadata.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseTemplate: core.serialization.ObjectSchema<serializers.v2.TestCaseTemplate.Raw, TraceApi.v2.TestCaseTemplate>;
export declare namespace TestCaseTemplate {
    interface Raw {
        templateId: serializers.v2.TestCaseTemplateId.Raw;
        name: string;
        implementation: serializers.v2.TestCaseImplementation.Raw;
    }
}
",
                                "name": "TestCaseTemplate.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseTemplate = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseTemplate = core.serialization.object({
    templateId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseTemplateId),
    name: core.serialization.string(),
    implementation: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseImplementation),
});
",
                                "name": "TestCaseTemplate.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseTemplateId: core.serialization.Schema<serializers.v2.TestCaseTemplateId.Raw, TraceApi.v2.TestCaseTemplateId>;
export declare namespace TestCaseTemplateId {
    type Raw = string;
}
",
                                "name": "TestCaseTemplateId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseTemplateId = void 0;
const api_sdk_1 = require(\\"../../../../../..\\");
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseTemplateId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.v2.TestCaseTemplateId,
    untransform: (value) => value,
});
",
                                "name": "TestCaseTemplateId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseV2: core.serialization.ObjectSchema<serializers.v2.TestCaseV2.Raw, TraceApi.v2.TestCaseV2>;
export declare namespace TestCaseV2 {
    interface Raw {
        metadata: serializers.v2.TestCaseMetadata.Raw;
        implementation: serializers.v2.TestCaseImplementationReference.Raw;
        arguments: Record<serializers.v2.ParameterId.Raw, serializers.VariableValue.Raw | null | undefined>;
        expects?: serializers.v2.TestCaseExpects.Raw | null;
    }
}
",
                                "name": "TestCaseV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseV2 = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseV2 = core.serialization.object({
    metadata: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseMetadata),
    implementation: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseImplementationReference),
    arguments: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.ParameterId), core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).VariableValue).optional()),
    expects: core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.TestCaseExpects)
        .optional(),
});
",
                                "name": "TestCaseV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const TestCaseWithActualResultImplementation: core.serialization.ObjectSchema<serializers.v2.TestCaseWithActualResultImplementation.Raw, TraceApi.v2.TestCaseWithActualResultImplementation>;
export declare namespace TestCaseWithActualResultImplementation {
    interface Raw {
        getActualResult: serializers.v2.NonVoidFunctionDefinition.Raw;
        assertCorrectnessCheck: serializers.v2.AssertCorrectnessCheck.Raw;
    }
}
",
                                "name": "TestCaseWithActualResultImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseWithActualResultImplementation = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.TestCaseWithActualResultImplementation = core.serialization.object({
    getActualResult: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.NonVoidFunctionDefinition),
    assertCorrectnessCheck: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.AssertCorrectnessCheck),
});
",
                                "name": "TestCaseWithActualResultImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const VoidFunctionDefinition: core.serialization.ObjectSchema<serializers.v2.VoidFunctionDefinition.Raw, TraceApi.v2.VoidFunctionDefinition>;
export declare namespace VoidFunctionDefinition {
    interface Raw {
        parameters: serializers.v2.Parameter.Raw[];
        code: serializers.v2.FunctionImplementationForMultipleLanguages.Raw;
    }
}
",
                                "name": "VoidFunctionDefinition.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionDefinition = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.VoidFunctionDefinition = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Parameter)),
    code: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FunctionImplementationForMultipleLanguages),
});
",
                                "name": "VoidFunctionDefinition.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const VoidFunctionDefinitionThatTakesActualResult: core.serialization.ObjectSchema<serializers.v2.VoidFunctionDefinitionThatTakesActualResult.Raw, TraceApi.v2.VoidFunctionDefinitionThatTakesActualResult>;
export declare namespace VoidFunctionDefinitionThatTakesActualResult {
    interface Raw {
        additionalParameters: serializers.v2.Parameter.Raw[];
        code: serializers.v2.FunctionImplementationForMultipleLanguages.Raw;
    }
}
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionDefinitionThatTakesActualResult = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.VoidFunctionDefinitionThatTakesActualResult = core.serialization.object({
    additionalParameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Parameter)),
    code: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.FunctionImplementationForMultipleLanguages),
});
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const VoidFunctionSignature: core.serialization.ObjectSchema<serializers.v2.VoidFunctionSignature.Raw, TraceApi.v2.VoidFunctionSignature>;
export declare namespace VoidFunctionSignature {
    interface Raw {
        parameters: serializers.v2.Parameter.Raw[];
    }
}
",
                                "name": "VoidFunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionSignature = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.VoidFunctionSignature = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Parameter)),
});
",
                                "name": "VoidFunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../..\\";
import { TraceApi } from \\"../../../../../..\\";
import * as core from \\"../../../../../../core\\";
export declare const VoidFunctionSignatureThatTakesActualResult: core.serialization.ObjectSchema<serializers.v2.VoidFunctionSignatureThatTakesActualResult.Raw, TraceApi.v2.VoidFunctionSignatureThatTakesActualResult>;
export declare namespace VoidFunctionSignatureThatTakesActualResult {
    interface Raw {
        parameters: serializers.v2.Parameter.Raw[];
        actualResultType: serializers.VariableType.Raw;
    }
}
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionSignatureThatTakesActualResult = void 0;
const core = __importStar(require(\\"../../../../../../core\\"));
exports.VoidFunctionSignatureThatTakesActualResult = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).v2.Parameter)),
    actualResultType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../..\\")))).VariableType),
});
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TestCaseTemplateId\\"), exports);
__exportStar(require(\\"./TestCaseId\\"), exports);
__exportStar(require(\\"./ParameterId\\"), exports);
__exportStar(require(\\"./ProblemInfoV2\\"), exports);
__exportStar(require(\\"./LightweightProblemInfoV2\\"), exports);
__exportStar(require(\\"./CreateProblemRequestV2\\"), exports);
__exportStar(require(\\"./TestCaseV2\\"), exports);
__exportStar(require(\\"./TestCaseExpects\\"), exports);
__exportStar(require(\\"./TestCaseImplementationReference\\"), exports);
__exportStar(require(\\"./BasicTestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseImplementation\\"), exports);
__exportStar(require(\\"./TestCaseFunction\\"), exports);
__exportStar(require(\\"./TestCaseWithActualResultImplementation\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./Parameter\\"), exports);
__exportStar(require(\\"./NonVoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./VoidFunctionSignature\\"), exports);
__exportStar(require(\\"./NonVoidFunctionSignature\\"), exports);
__exportStar(require(\\"./VoidFunctionSignatureThatTakesActualResult\\"), exports);
__exportStar(require(\\"./AssertCorrectnessCheck\\"), exports);
__exportStar(require(\\"./DeepEqualityCorrectnessCheck\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinitionThatTakesActualResult\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescription\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescriptionBoard\\"), exports);
__exportStar(require(\\"./TestCaseMetadata\\"), exports);
__exportStar(require(\\"./FunctionImplementationForMultipleLanguages\\"), exports);
__exportStar(require(\\"./FunctionImplementation\\"), exports);
__exportStar(require(\\"./GeneratedFiles\\"), exports);
__exportStar(require(\\"./CustomFiles\\"), exports);
__exportStar(require(\\"./BasicCustomFiles\\"), exports);
__exportStar(require(\\"./Files\\"), exports);
__exportStar(require(\\"./FileInfoV2\\"), exports);
__exportStar(require(\\"./DefaultProvidedFile\\"), exports);
__exportStar(require(\\"./FunctionSignature\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureRequest\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureResponse\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileRequest\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileResponse\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseFileRequest\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseTemplateFileRequest\\"), exports);
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "problem",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "export * from \\"./resources\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
                            "name": "index.js",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.problem = void 0;
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
",
                                "name": "index.js",
                                "type": "file",
                              },
                              Object {
                                "contents": Array [
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.v2.v3.problem.getLightweightProblems.Response.Raw, TraceApi.v2.v3.LightweightProblemInfoV2[]>;
export declare namespace Response {
    type Raw = serializers.v2.v3.LightweightProblemInfoV2.Raw[];
}
",
                                        "name": "getLightweightProblems.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.LightweightProblemInfoV2));
",
                                        "name": "getLightweightProblems.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const Response: core.serialization.Schema<serializers.v2.v3.problem.getProblems.Response.Raw, TraceApi.v2.v3.ProblemInfoV2[]>;
export declare namespace Response {
    type Raw = serializers.v2.v3.ProblemInfoV2.Raw[];
}
",
                                        "name": "getProblems.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Response = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.Response = core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.ProblemInfoV2));
",
                                        "name": "getProblems.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export * as getLightweightProblems from \\"./getLightweightProblems\\";
export * as getProblems from \\"./getProblems\\";
",
                                        "name": "index.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.getProblems = exports.getLightweightProblems = void 0;
exports.getLightweightProblems = __importStar(require(\\"./getLightweightProblems\\"));
exports.getProblems = __importStar(require(\\"./getProblems\\"));
",
                                        "name": "index.js",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "client",
                                    "type": "directory",
                                  },
                                  Object {
                                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                                    "name": "index.d.ts",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                                    "name": "index.js",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const AssertCorrectnessCheck: core.serialization.Schema<serializers.v2.v3.AssertCorrectnessCheck.Raw, TraceApi.v2.v3.AssertCorrectnessCheck>;
export declare namespace AssertCorrectnessCheck {
    type Raw = AssertCorrectnessCheck.DeepEquality | AssertCorrectnessCheck.Custom;
    interface DeepEquality extends serializers.v2.v3.DeepEqualityCorrectnessCheck.Raw {
        type: \\"deepEquality\\";
    }
    interface Custom extends serializers.v2.v3.VoidFunctionDefinitionThatTakesActualResult.Raw {
        type: \\"custom\\";
    }
}
",
                                        "name": "AssertCorrectnessCheck.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.AssertCorrectnessCheck = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.AssertCorrectnessCheck = core.serialization
    .union(\\"type\\", {
    deepEquality: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.DeepEqualityCorrectnessCheck),
    custom: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.VoidFunctionDefinitionThatTakesActualResult),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"deepEquality\\":
                return api_sdk_1.TraceApi.v2.v3.AssertCorrectnessCheck.deepEquality(value);
            case \\"custom\\":
                return api_sdk_1.TraceApi.v2.v3.AssertCorrectnessCheck.custom(value);
            default:
                return api_sdk_1.TraceApi.v2.v3.AssertCorrectnessCheck._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                        "name": "AssertCorrectnessCheck.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const BasicCustomFiles: core.serialization.ObjectSchema<serializers.v2.v3.BasicCustomFiles.Raw, TraceApi.v2.v3.BasicCustomFiles>;
export declare namespace BasicCustomFiles {
    interface Raw {
        methodName: string;
        signature: serializers.v2.v3.NonVoidFunctionSignature.Raw;
        additionalFiles: Record<serializers.Language.Raw, serializers.v2.v3.Files.Raw | null | undefined>;
        basicTestCaseTemplate: serializers.v2.v3.BasicTestCaseTemplate.Raw;
    }
}
",
                                        "name": "BasicCustomFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicCustomFiles = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.BasicCustomFiles = core.serialization.object({
    methodName: core.serialization.string(),
    signature: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.NonVoidFunctionSignature),
    additionalFiles: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Files).optional()),
    basicTestCaseTemplate: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.BasicTestCaseTemplate),
});
",
                                        "name": "BasicCustomFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const BasicTestCaseTemplate: core.serialization.ObjectSchema<serializers.v2.v3.BasicTestCaseTemplate.Raw, TraceApi.v2.v3.BasicTestCaseTemplate>;
export declare namespace BasicTestCaseTemplate {
    interface Raw {
        templateId: serializers.v2.v3.TestCaseTemplateId.Raw;
        name: string;
        description: serializers.v2.v3.TestCaseImplementationDescription.Raw;
        expectedValueParameterId: serializers.v2.v3.ParameterId.Raw;
    }
}
",
                                        "name": "BasicTestCaseTemplate.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicTestCaseTemplate = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.BasicTestCaseTemplate = core.serialization.object({
    templateId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplateId),
    name: core.serialization.string(),
    description: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseImplementationDescription),
    expectedValueParameterId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.ParameterId),
});
",
                                        "name": "BasicTestCaseTemplate.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const CreateProblemRequestV2: core.serialization.ObjectSchema<serializers.v2.v3.CreateProblemRequestV2.Raw, TraceApi.v2.v3.CreateProblemRequestV2>;
export declare namespace CreateProblemRequestV2 {
    interface Raw {
        problemName: string;
        problemDescription: serializers.ProblemDescription.Raw;
        customFiles: serializers.v2.v3.CustomFiles.Raw;
        customTestCaseTemplates: serializers.v2.v3.TestCaseTemplate.Raw[];
        testcases: serializers.v2.v3.TestCaseV2.Raw[];
        supportedLanguages: serializers.Language.Raw[];
        isPublic: boolean;
    }
}
",
                                        "name": "CreateProblemRequestV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CreateProblemRequestV2 = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.CreateProblemRequestV2 = core.serialization.object({
    problemName: core.serialization.string(),
    problemDescription: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).ProblemDescription),
    customFiles: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.CustomFiles),
    customTestCaseTemplates: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplate)),
    testcases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseV2)),
    supportedLanguages: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language)),
    isPublic: core.serialization.boolean(),
});
",
                                        "name": "CreateProblemRequestV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const CustomFiles: core.serialization.Schema<serializers.v2.v3.CustomFiles.Raw, TraceApi.v2.v3.CustomFiles>;
export declare namespace CustomFiles {
    type Raw = CustomFiles.Basic | CustomFiles.Custom;
    interface Basic extends serializers.v2.v3.BasicCustomFiles.Raw {
        type: \\"basic\\";
    }
    interface Custom {
        type: \\"custom\\";
        value: Record<serializers.Language.Raw, serializers.v2.v3.Files.Raw | null | undefined>;
    }
}
",
                                        "name": "CustomFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.CustomFiles = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.CustomFiles = core.serialization
    .union(\\"type\\", {
    basic: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.BasicCustomFiles),
    custom: core.serialization.object({
        value: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization
            .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Files)
            .optional()),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"basic\\":
                return api_sdk_1.TraceApi.v2.v3.CustomFiles.basic(value);
            case \\"custom\\":
                return api_sdk_1.TraceApi.v2.v3.CustomFiles.custom(value.value);
            default:
                return api_sdk_1.TraceApi.v2.v3.CustomFiles._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                        "name": "CustomFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const DeepEqualityCorrectnessCheck: core.serialization.ObjectSchema<serializers.v2.v3.DeepEqualityCorrectnessCheck.Raw, TraceApi.v2.v3.DeepEqualityCorrectnessCheck>;
export declare namespace DeepEqualityCorrectnessCheck {
    interface Raw {
        expectedValueParameterId: serializers.v2.v3.ParameterId.Raw;
    }
}
",
                                        "name": "DeepEqualityCorrectnessCheck.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DeepEqualityCorrectnessCheck = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.DeepEqualityCorrectnessCheck = core.serialization.object({
    expectedValueParameterId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.ParameterId),
});
",
                                        "name": "DeepEqualityCorrectnessCheck.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const DefaultProvidedFile: core.serialization.ObjectSchema<serializers.v2.v3.DefaultProvidedFile.Raw, TraceApi.v2.v3.DefaultProvidedFile>;
export declare namespace DefaultProvidedFile {
    interface Raw {
        file: serializers.v2.v3.FileInfoV2.Raw;
        relatedTypes: serializers.VariableType.Raw[];
    }
}
",
                                        "name": "DefaultProvidedFile.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.DefaultProvidedFile = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.DefaultProvidedFile = core.serialization.object({
    file: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FileInfoV2),
    relatedTypes: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).VariableType)),
});
",
                                        "name": "DefaultProvidedFile.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const FileInfoV2: core.serialization.ObjectSchema<serializers.v2.v3.FileInfoV2.Raw, TraceApi.v2.v3.FileInfoV2>;
export declare namespace FileInfoV2 {
    interface Raw {
        filename: string;
        directory: string;
        contents: string;
        editable: boolean;
    }
}
",
                                        "name": "FileInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FileInfoV2 = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.FileInfoV2 = core.serialization.object({
    filename: core.serialization.string(),
    directory: core.serialization.string(),
    contents: core.serialization.string(),
    editable: core.serialization.boolean(),
});
",
                                        "name": "FileInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const Files: core.serialization.ObjectSchema<serializers.v2.v3.Files.Raw, TraceApi.v2.v3.Files>;
export declare namespace Files {
    interface Raw {
        files: serializers.v2.v3.FileInfoV2.Raw[];
    }
}
",
                                        "name": "Files.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Files = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.Files = core.serialization.object({
    files: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FileInfoV2)),
});
",
                                        "name": "Files.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const FunctionImplementation: core.serialization.ObjectSchema<serializers.v2.v3.FunctionImplementation.Raw, TraceApi.v2.v3.FunctionImplementation>;
export declare namespace FunctionImplementation {
    interface Raw {
        impl: string;
        imports?: string | null;
    }
}
",
                                        "name": "FunctionImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionImplementation = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.FunctionImplementation = core.serialization.object({
    impl: core.serialization.string(),
    imports: core.serialization.string().optional(),
});
",
                                        "name": "FunctionImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const FunctionImplementationForMultipleLanguages: core.serialization.ObjectSchema<serializers.v2.v3.FunctionImplementationForMultipleLanguages.Raw, TraceApi.v2.v3.FunctionImplementationForMultipleLanguages>;
export declare namespace FunctionImplementationForMultipleLanguages {
    interface Raw {
        codeByLanguage: Record<serializers.Language.Raw, serializers.v2.v3.FunctionImplementation.Raw | null | undefined>;
    }
}
",
                                        "name": "FunctionImplementationForMultipleLanguages.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionImplementationForMultipleLanguages = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.FunctionImplementationForMultipleLanguages = core.serialization.object({
    codeByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FunctionImplementation)
        .optional()),
});
",
                                        "name": "FunctionImplementationForMultipleLanguages.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const FunctionSignature: core.serialization.Schema<serializers.v2.v3.FunctionSignature.Raw, TraceApi.v2.v3.FunctionSignature>;
export declare namespace FunctionSignature {
    type Raw = FunctionSignature.Void | FunctionSignature.NonVoid | FunctionSignature.VoidThatTakesActualResult;
    interface Void extends serializers.v2.v3.VoidFunctionSignature.Raw {
        type: \\"void\\";
    }
    interface NonVoid extends serializers.v2.v3.NonVoidFunctionSignature.Raw {
        type: \\"nonVoid\\";
    }
    interface VoidThatTakesActualResult extends serializers.v2.v3.VoidFunctionSignatureThatTakesActualResult.Raw {
        type: \\"voidThatTakesActualResult\\";
    }
}
",
                                        "name": "FunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FunctionSignature = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.FunctionSignature = core.serialization
    .union(\\"type\\", {
    void: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.VoidFunctionSignature),
    nonVoid: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.NonVoidFunctionSignature),
    voidThatTakesActualResult: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.VoidFunctionSignatureThatTakesActualResult),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"void\\":
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature.void(value);
            case \\"nonVoid\\":
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature.nonVoid(value);
            case \\"voidThatTakesActualResult\\":
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature.voidThatTakesActualResult(value);
            default:
                return api_sdk_1.TraceApi.v2.v3.FunctionSignature._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                        "name": "FunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GeneratedFiles: core.serialization.ObjectSchema<serializers.v2.v3.GeneratedFiles.Raw, TraceApi.v2.v3.GeneratedFiles>;
export declare namespace GeneratedFiles {
    interface Raw {
        generatedTestCaseFiles: Record<serializers.Language.Raw, serializers.v2.v3.Files.Raw | null | undefined>;
        generatedTemplateFiles: Record<serializers.Language.Raw, serializers.v2.v3.Files.Raw | null | undefined>;
        other: Record<serializers.Language.Raw, serializers.v2.v3.Files.Raw | null | undefined>;
    }
}
",
                                        "name": "GeneratedFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GeneratedFiles = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GeneratedFiles = core.serialization.object({
    generatedTestCaseFiles: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Files).optional()),
    generatedTemplateFiles: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Files).optional()),
    other: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Files).optional()),
});
",
                                        "name": "GeneratedFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GetBasicSolutionFileRequest: core.serialization.ObjectSchema<serializers.v2.v3.GetBasicSolutionFileRequest.Raw, TraceApi.v2.v3.GetBasicSolutionFileRequest>;
export declare namespace GetBasicSolutionFileRequest {
    interface Raw {
        methodName: string;
        signature: serializers.v2.v3.NonVoidFunctionSignature.Raw;
    }
}
",
                                        "name": "GetBasicSolutionFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetBasicSolutionFileRequest = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GetBasicSolutionFileRequest = core.serialization.object({
    methodName: core.serialization.string(),
    signature: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.NonVoidFunctionSignature),
});
",
                                        "name": "GetBasicSolutionFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GetBasicSolutionFileResponse: core.serialization.ObjectSchema<serializers.v2.v3.GetBasicSolutionFileResponse.Raw, TraceApi.v2.v3.GetBasicSolutionFileResponse>;
export declare namespace GetBasicSolutionFileResponse {
    interface Raw {
        solutionFileByLanguage: Record<serializers.Language.Raw, serializers.v2.v3.FileInfoV2.Raw | null | undefined>;
    }
}
",
                                        "name": "GetBasicSolutionFileResponse.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetBasicSolutionFileResponse = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GetBasicSolutionFileResponse = core.serialization.object({
    solutionFileByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FileInfoV2).optional()),
});
",
                                        "name": "GetBasicSolutionFileResponse.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GetFunctionSignatureRequest: core.serialization.ObjectSchema<serializers.v2.v3.GetFunctionSignatureRequest.Raw, TraceApi.v2.v3.GetFunctionSignatureRequest>;
export declare namespace GetFunctionSignatureRequest {
    interface Raw {
        functionSignature: serializers.v2.v3.FunctionSignature.Raw;
    }
}
",
                                        "name": "GetFunctionSignatureRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetFunctionSignatureRequest = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GetFunctionSignatureRequest = core.serialization.object({
    functionSignature: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FunctionSignature),
});
",
                                        "name": "GetFunctionSignatureRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GetFunctionSignatureResponse: core.serialization.ObjectSchema<serializers.v2.v3.GetFunctionSignatureResponse.Raw, TraceApi.v2.v3.GetFunctionSignatureResponse>;
export declare namespace GetFunctionSignatureResponse {
    interface Raw {
        functionByLanguage: Record<serializers.Language.Raw, string | null | undefined>;
    }
}
",
                                        "name": "GetFunctionSignatureResponse.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetFunctionSignatureResponse = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GetFunctionSignatureResponse = core.serialization.object({
    functionByLanguage: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language), core.serialization.string().optional()),
});
",
                                        "name": "GetFunctionSignatureResponse.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GetGeneratedTestCaseFileRequest: core.serialization.ObjectSchema<serializers.v2.v3.GetGeneratedTestCaseFileRequest.Raw, TraceApi.v2.v3.GetGeneratedTestCaseFileRequest>;
export declare namespace GetGeneratedTestCaseFileRequest {
    interface Raw {
        template?: serializers.v2.v3.TestCaseTemplate.Raw | null;
        testCase: serializers.v2.v3.TestCaseV2.Raw;
    }
}
",
                                        "name": "GetGeneratedTestCaseFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetGeneratedTestCaseFileRequest = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GetGeneratedTestCaseFileRequest = core.serialization.object({
    template: core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplate)
        .optional(),
    testCase: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseV2),
});
",
                                        "name": "GetGeneratedTestCaseFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const GetGeneratedTestCaseTemplateFileRequest: core.serialization.ObjectSchema<serializers.v2.v3.GetGeneratedTestCaseTemplateFileRequest.Raw, TraceApi.v2.v3.GetGeneratedTestCaseTemplateFileRequest>;
export declare namespace GetGeneratedTestCaseTemplateFileRequest {
    interface Raw {
        template: serializers.v2.v3.TestCaseTemplate.Raw;
    }
}
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.GetGeneratedTestCaseTemplateFileRequest = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.GetGeneratedTestCaseTemplateFileRequest = core.serialization.object({
    template: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplate),
});
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const LightweightProblemInfoV2: core.serialization.ObjectSchema<serializers.v2.v3.LightweightProblemInfoV2.Raw, TraceApi.v2.v3.LightweightProblemInfoV2>;
export declare namespace LightweightProblemInfoV2 {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        problemName: string;
        problemVersion: number;
        variableTypes: serializers.VariableType.Raw[];
    }
}
",
                                        "name": "LightweightProblemInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.LightweightProblemInfoV2 = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.LightweightProblemInfoV2 = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).ProblemId),
    problemName: core.serialization.string(),
    problemVersion: core.serialization.number(),
    variableTypes: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).VariableType)),
});
",
                                        "name": "LightweightProblemInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const NonVoidFunctionDefinition: core.serialization.ObjectSchema<serializers.v2.v3.NonVoidFunctionDefinition.Raw, TraceApi.v2.v3.NonVoidFunctionDefinition>;
export declare namespace NonVoidFunctionDefinition {
    interface Raw {
        signature: serializers.v2.v3.NonVoidFunctionSignature.Raw;
        code: serializers.v2.v3.FunctionImplementationForMultipleLanguages.Raw;
    }
}
",
                                        "name": "NonVoidFunctionDefinition.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NonVoidFunctionDefinition = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.NonVoidFunctionDefinition = core.serialization.object({
    signature: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.NonVoidFunctionSignature),
    code: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FunctionImplementationForMultipleLanguages),
});
",
                                        "name": "NonVoidFunctionDefinition.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const NonVoidFunctionSignature: core.serialization.ObjectSchema<serializers.v2.v3.NonVoidFunctionSignature.Raw, TraceApi.v2.v3.NonVoidFunctionSignature>;
export declare namespace NonVoidFunctionSignature {
    interface Raw {
        parameters: serializers.v2.v3.Parameter.Raw[];
        returnType: serializers.VariableType.Raw;
    }
}
",
                                        "name": "NonVoidFunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.NonVoidFunctionSignature = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.NonVoidFunctionSignature = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Parameter)),
    returnType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).VariableType),
});
",
                                        "name": "NonVoidFunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const Parameter: core.serialization.ObjectSchema<serializers.v2.v3.Parameter.Raw, TraceApi.v2.v3.Parameter>;
export declare namespace Parameter {
    interface Raw {
        parameterId: serializers.v2.v3.ParameterId.Raw;
        name: string;
        variableType: serializers.VariableType.Raw;
    }
}
",
                                        "name": "Parameter.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Parameter = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.Parameter = core.serialization.object({
    parameterId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.ParameterId),
    name: core.serialization.string(),
    variableType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).VariableType),
});
",
                                        "name": "Parameter.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const ParameterId: core.serialization.Schema<serializers.v2.v3.ParameterId.Raw, TraceApi.v2.v3.ParameterId>;
export declare namespace ParameterId {
    type Raw = string;
}
",
                                        "name": "ParameterId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ParameterId = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.ParameterId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.v2.v3.ParameterId,
    untransform: (value) => value,
});
",
                                        "name": "ParameterId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const ProblemInfoV2: core.serialization.ObjectSchema<serializers.v2.v3.ProblemInfoV2.Raw, TraceApi.v2.v3.ProblemInfoV2>;
export declare namespace ProblemInfoV2 {
    interface Raw {
        problemId: serializers.ProblemId.Raw;
        problemDescription: serializers.ProblemDescription.Raw;
        problemName: string;
        problemVersion: number;
        supportedLanguages: serializers.Language.Raw[];
        customFiles: serializers.v2.v3.CustomFiles.Raw;
        generatedFiles: serializers.v2.v3.GeneratedFiles.Raw;
        customTestCaseTemplates: serializers.v2.v3.TestCaseTemplate.Raw[];
        testcases: serializers.v2.v3.TestCaseV2.Raw[];
        isPublic: boolean;
    }
}
",
                                        "name": "ProblemInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ProblemInfoV2 = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.ProblemInfoV2 = core.serialization.object({
    problemId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).ProblemId),
    problemDescription: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).ProblemDescription),
    problemName: core.serialization.string(),
    problemVersion: core.serialization.number(),
    supportedLanguages: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).Language)),
    customFiles: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.CustomFiles),
    generatedFiles: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.GeneratedFiles),
    customTestCaseTemplates: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplate)),
    testcases: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseV2)),
    isPublic: core.serialization.boolean(),
});
",
                                        "name": "ProblemInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseExpects: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseExpects.Raw, TraceApi.v2.v3.TestCaseExpects>;
export declare namespace TestCaseExpects {
    interface Raw {
        expectedStdout?: string | null;
    }
}
",
                                        "name": "TestCaseExpects.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseExpects = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseExpects = core.serialization.object({
    expectedStdout: core.serialization.string().optional(),
});
",
                                        "name": "TestCaseExpects.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseFunction: core.serialization.Schema<serializers.v2.v3.TestCaseFunction.Raw, TraceApi.v2.v3.TestCaseFunction>;
export declare namespace TestCaseFunction {
    type Raw = TestCaseFunction.WithActualResult | TestCaseFunction.Custom;
    interface WithActualResult extends serializers.v2.v3.TestCaseWithActualResultImplementation.Raw {
        type: \\"withActualResult\\";
    }
    interface Custom extends serializers.v2.v3.VoidFunctionDefinition.Raw {
        type: \\"custom\\";
    }
}
",
                                        "name": "TestCaseFunction.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseFunction = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseFunction = core.serialization
    .union(\\"type\\", {
    withActualResult: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseWithActualResultImplementation),
    custom: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.VoidFunctionDefinition),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"withActualResult\\":
                return api_sdk_1.TraceApi.v2.v3.TestCaseFunction.withActualResult(value);
            case \\"custom\\":
                return api_sdk_1.TraceApi.v2.v3.TestCaseFunction.custom(value);
            default:
                return api_sdk_1.TraceApi.v2.v3.TestCaseFunction._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                        "name": "TestCaseFunction.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseId: core.serialization.Schema<serializers.v2.v3.TestCaseId.Raw, TraceApi.v2.v3.TestCaseId>;
export declare namespace TestCaseId {
    type Raw = string;
}
",
                                        "name": "TestCaseId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseId = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.v2.v3.TestCaseId,
    untransform: (value) => value,
});
",
                                        "name": "TestCaseId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseImplementation: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseImplementation.Raw, TraceApi.v2.v3.TestCaseImplementation>;
export declare namespace TestCaseImplementation {
    interface Raw {
        description: serializers.v2.v3.TestCaseImplementationDescription.Raw;
        function: serializers.v2.v3.TestCaseFunction.Raw;
    }
}
",
                                        "name": "TestCaseImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementation = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseImplementation = core.serialization.object({
    description: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseImplementationDescription),
    function: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseFunction),
});
",
                                        "name": "TestCaseImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseImplementationDescription: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseImplementationDescription.Raw, TraceApi.v2.v3.TestCaseImplementationDescription>;
export declare namespace TestCaseImplementationDescription {
    interface Raw {
        boards: serializers.v2.v3.TestCaseImplementationDescriptionBoard.Raw[];
    }
}
",
                                        "name": "TestCaseImplementationDescription.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationDescription = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseImplementationDescription = core.serialization.object({
    boards: core.serialization.list(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseImplementationDescriptionBoard)),
});
",
                                        "name": "TestCaseImplementationDescription.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseImplementationDescriptionBoard: core.serialization.Schema<serializers.v2.v3.TestCaseImplementationDescriptionBoard.Raw, TraceApi.v2.v3.TestCaseImplementationDescriptionBoard>;
export declare namespace TestCaseImplementationDescriptionBoard {
    type Raw = TestCaseImplementationDescriptionBoard.Html | TestCaseImplementationDescriptionBoard.ParamId;
    interface Html {
        type: \\"html\\";
        value: string;
    }
    interface ParamId {
        type: \\"paramId\\";
        value: serializers.v2.v3.ParameterId.Raw;
    }
}
",
                                        "name": "TestCaseImplementationDescriptionBoard.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationDescriptionBoard = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseImplementationDescriptionBoard = core.serialization
    .union(\\"type\\", {
    html: core.serialization.object({
        value: core.serialization.string(),
    }),
    paramId: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.ParameterId),
    }),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"html\\":
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationDescriptionBoard.html(value.value);
            case \\"paramId\\":
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationDescriptionBoard.paramId(value.value);
            default:
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationDescriptionBoard._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                        "name": "TestCaseImplementationDescriptionBoard.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseImplementationReference: core.serialization.Schema<serializers.v2.v3.TestCaseImplementationReference.Raw, TraceApi.v2.v3.TestCaseImplementationReference>;
export declare namespace TestCaseImplementationReference {
    type Raw = TestCaseImplementationReference.TemplateId | TestCaseImplementationReference.Implementation;
    interface TemplateId {
        type: \\"templateId\\";
        value: serializers.v2.v3.TestCaseTemplateId.Raw;
    }
    interface Implementation extends serializers.v2.v3.TestCaseImplementation.Raw {
        type: \\"implementation\\";
    }
}
",
                                        "name": "TestCaseImplementationReference.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseImplementationReference = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseImplementationReference = core.serialization
    .union(\\"type\\", {
    templateId: core.serialization.object({
        value: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplateId),
    }),
    implementation: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseImplementation),
})
    .transform({
    transform: (value) => {
        switch (value.type) {
            case \\"templateId\\":
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationReference.templateId(value.value);
            case \\"implementation\\":
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationReference.implementation(value);
            default:
                return api_sdk_1.TraceApi.v2.v3.TestCaseImplementationReference._unknown(value);
        }
    },
    untransform: ({ _visit, ...value }) => value,
});
",
                                        "name": "TestCaseImplementationReference.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseMetadata: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseMetadata.Raw, TraceApi.v2.v3.TestCaseMetadata>;
export declare namespace TestCaseMetadata {
    interface Raw {
        id: serializers.v2.v3.TestCaseId.Raw;
        name: string;
        hidden: boolean;
    }
}
",
                                        "name": "TestCaseMetadata.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseMetadata = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseMetadata = core.serialization.object({
    id: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseId),
    name: core.serialization.string(),
    hidden: core.serialization.boolean(),
});
",
                                        "name": "TestCaseMetadata.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseTemplate: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseTemplate.Raw, TraceApi.v2.v3.TestCaseTemplate>;
export declare namespace TestCaseTemplate {
    interface Raw {
        templateId: serializers.v2.v3.TestCaseTemplateId.Raw;
        name: string;
        implementation: serializers.v2.v3.TestCaseImplementation.Raw;
    }
}
",
                                        "name": "TestCaseTemplate.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseTemplate = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseTemplate = core.serialization.object({
    templateId: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseTemplateId),
    name: core.serialization.string(),
    implementation: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseImplementation),
});
",
                                        "name": "TestCaseTemplate.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseTemplateId: core.serialization.Schema<serializers.v2.v3.TestCaseTemplateId.Raw, TraceApi.v2.v3.TestCaseTemplateId>;
export declare namespace TestCaseTemplateId {
    type Raw = string;
}
",
                                        "name": "TestCaseTemplateId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseTemplateId = void 0;
const api_sdk_1 = require(\\"../../../../../../../..\\");
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseTemplateId = core.serialization.string().transform({
    transform: api_sdk_1.TraceApi.v2.v3.TestCaseTemplateId,
    untransform: (value) => value,
});
",
                                        "name": "TestCaseTemplateId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseV2: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseV2.Raw, TraceApi.v2.v3.TestCaseV2>;
export declare namespace TestCaseV2 {
    interface Raw {
        metadata: serializers.v2.v3.TestCaseMetadata.Raw;
        implementation: serializers.v2.v3.TestCaseImplementationReference.Raw;
        arguments: Record<serializers.v2.v3.ParameterId.Raw, serializers.VariableValue.Raw | null | undefined>;
        expects?: serializers.v2.v3.TestCaseExpects.Raw | null;
    }
}
",
                                        "name": "TestCaseV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseV2 = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseV2 = core.serialization.object({
    metadata: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseMetadata),
    implementation: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseImplementationReference),
    arguments: core.serialization.record(core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.ParameterId), core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).VariableValue).optional()),
    expects: core.serialization
        .lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.TestCaseExpects)
        .optional(),
});
",
                                        "name": "TestCaseV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const TestCaseWithActualResultImplementation: core.serialization.ObjectSchema<serializers.v2.v3.TestCaseWithActualResultImplementation.Raw, TraceApi.v2.v3.TestCaseWithActualResultImplementation>;
export declare namespace TestCaseWithActualResultImplementation {
    interface Raw {
        getActualResult: serializers.v2.v3.NonVoidFunctionDefinition.Raw;
        assertCorrectnessCheck: serializers.v2.v3.AssertCorrectnessCheck.Raw;
    }
}
",
                                        "name": "TestCaseWithActualResultImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.TestCaseWithActualResultImplementation = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.TestCaseWithActualResultImplementation = core.serialization.object({
    getActualResult: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.NonVoidFunctionDefinition),
    assertCorrectnessCheck: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.AssertCorrectnessCheck),
});
",
                                        "name": "TestCaseWithActualResultImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const VoidFunctionDefinition: core.serialization.ObjectSchema<serializers.v2.v3.VoidFunctionDefinition.Raw, TraceApi.v2.v3.VoidFunctionDefinition>;
export declare namespace VoidFunctionDefinition {
    interface Raw {
        parameters: serializers.v2.v3.Parameter.Raw[];
        code: serializers.v2.v3.FunctionImplementationForMultipleLanguages.Raw;
    }
}
",
                                        "name": "VoidFunctionDefinition.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionDefinition = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.VoidFunctionDefinition = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Parameter)),
    code: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FunctionImplementationForMultipleLanguages),
});
",
                                        "name": "VoidFunctionDefinition.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const VoidFunctionDefinitionThatTakesActualResult: core.serialization.ObjectSchema<serializers.v2.v3.VoidFunctionDefinitionThatTakesActualResult.Raw, TraceApi.v2.v3.VoidFunctionDefinitionThatTakesActualResult>;
export declare namespace VoidFunctionDefinitionThatTakesActualResult {
    interface Raw {
        additionalParameters: serializers.v2.v3.Parameter.Raw[];
        code: serializers.v2.v3.FunctionImplementationForMultipleLanguages.Raw;
    }
}
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionDefinitionThatTakesActualResult = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.VoidFunctionDefinitionThatTakesActualResult = core.serialization.object({
    additionalParameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Parameter)),
    code: core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.FunctionImplementationForMultipleLanguages),
});
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const VoidFunctionSignature: core.serialization.ObjectSchema<serializers.v2.v3.VoidFunctionSignature.Raw, TraceApi.v2.v3.VoidFunctionSignature>;
export declare namespace VoidFunctionSignature {
    interface Raw {
        parameters: serializers.v2.v3.Parameter.Raw[];
    }
}
",
                                        "name": "VoidFunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionSignature = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.VoidFunctionSignature = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Parameter)),
});
",
                                        "name": "VoidFunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from \\"../../../../../../..\\";
import { TraceApi } from \\"../../../../../../../..\\";
import * as core from \\"../../../../../../../../core\\";
export declare const VoidFunctionSignatureThatTakesActualResult: core.serialization.ObjectSchema<serializers.v2.v3.VoidFunctionSignatureThatTakesActualResult.Raw, TraceApi.v2.v3.VoidFunctionSignatureThatTakesActualResult>;
export declare namespace VoidFunctionSignatureThatTakesActualResult {
    interface Raw {
        parameters: serializers.v2.v3.Parameter.Raw[];
        actualResultType: serializers.VariableType.Raw;
    }
}
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.VoidFunctionSignatureThatTakesActualResult = void 0;
const core = __importStar(require(\\"../../../../../../../../core\\"));
exports.VoidFunctionSignatureThatTakesActualResult = core.serialization.object({
    parameters: core.serialization.list(core.serialization.lazyObject(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).v2.v3.Parameter)),
    actualResultType: core.serialization.lazy(async () => (await Promise.resolve().then(() => __importStar(require(\\"../../../../../../..\\")))).VariableType),
});
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                        "name": "index.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TestCaseTemplateId\\"), exports);
__exportStar(require(\\"./TestCaseId\\"), exports);
__exportStar(require(\\"./ParameterId\\"), exports);
__exportStar(require(\\"./ProblemInfoV2\\"), exports);
__exportStar(require(\\"./LightweightProblemInfoV2\\"), exports);
__exportStar(require(\\"./CreateProblemRequestV2\\"), exports);
__exportStar(require(\\"./TestCaseV2\\"), exports);
__exportStar(require(\\"./TestCaseExpects\\"), exports);
__exportStar(require(\\"./TestCaseImplementationReference\\"), exports);
__exportStar(require(\\"./BasicTestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseImplementation\\"), exports);
__exportStar(require(\\"./TestCaseFunction\\"), exports);
__exportStar(require(\\"./TestCaseWithActualResultImplementation\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./Parameter\\"), exports);
__exportStar(require(\\"./NonVoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./VoidFunctionSignature\\"), exports);
__exportStar(require(\\"./NonVoidFunctionSignature\\"), exports);
__exportStar(require(\\"./VoidFunctionSignatureThatTakesActualResult\\"), exports);
__exportStar(require(\\"./AssertCorrectnessCheck\\"), exports);
__exportStar(require(\\"./DeepEqualityCorrectnessCheck\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinitionThatTakesActualResult\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescription\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescriptionBoard\\"), exports);
__exportStar(require(\\"./TestCaseMetadata\\"), exports);
__exportStar(require(\\"./FunctionImplementationForMultipleLanguages\\"), exports);
__exportStar(require(\\"./FunctionImplementation\\"), exports);
__exportStar(require(\\"./GeneratedFiles\\"), exports);
__exportStar(require(\\"./CustomFiles\\"), exports);
__exportStar(require(\\"./BasicCustomFiles\\"), exports);
__exportStar(require(\\"./Files\\"), exports);
__exportStar(require(\\"./FileInfoV2\\"), exports);
__exportStar(require(\\"./DefaultProvidedFile\\"), exports);
__exportStar(require(\\"./FunctionSignature\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureRequest\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureResponse\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileRequest\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileResponse\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseFileRequest\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseTemplateFileRequest\\"), exports);
",
                                        "name": "index.js",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "types",
                                    "type": "directory",
                                  },
                                ],
                                "name": "problem",
                                "type": "directory",
                              },
                            ],
                            "name": "resources",
                            "type": "directory",
                          },
                        ],
                        "name": "v3",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                ],
                "name": "v2",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "serialization",
        "type": "directory",
      },
    ],
    "name": "package",
    "type": "directory",
  },
]
`;
