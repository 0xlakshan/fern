name: publish

on:
  release:
    types: [released]
  push:
    branches:
      - main

jobs:
  check:
    uses: ./.github/workflows/check.yml
  publish-fastapi-docker:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install
        run: poetry install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: fernapi
          password: ${{ secrets.FERN_API_DOCKERHUB_PASSWORD }}

      - name: Print Version
        run: |
          ./scripts/git-version.sh
          projectVersion=$(./scripts/git-version.sh)
          echo "VERSION=$projectVersion" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/fastapi/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: fernapi/fern-fastapi-server:${{env.VERSION}}

  publish-sdk-docker:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install
        run: poetry install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: fernapi
          password: ${{ secrets.FERN_API_DOCKERHUB_PASSWORD }}

      - name: Print Version
        run: |
          ./scripts/git-version.sh
          projectVersion=$(./scripts/git-version.sh)
          echo "VERSION=$projectVersion" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/fastapi/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: fernapi/fern-python-sdk:${{env.VERSION}}

  publish-pydantic-docker:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install
        run: poetry install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: fernapi
          password: ${{ secrets.FERN_API_DOCKERHUB_PASSWORD }}

      - name: Print Version
        run: |
          ./scripts/git-version.sh
          projectVersion=$(./scripts/git-version.sh)
          echo "VERSION=$projectVersion" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/fastapi/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: fernapi/fern-pydantic-model:${{env.VERSION}}
