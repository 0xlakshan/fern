// Generated by Fern. Do not edit.

package notification

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/core"
	strings "strings"
)

type Client interface {
	GetUserNotification(ctx context.Context, userId string, notificationId string) (*Notification, error)
	Notification() NotificationClient
}

func NewClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) Client {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	baseURL = strings.TrimRight(baseURL, "/")
	return &client{
		getUserNotificationEndpoint: newGetUserNotificationEndpoint(baseURL+"/"+"users/%v/notifications/%v", httpClient, options),
		notificationClient:          NewNotificationClient(baseURL, httpClient, opts...),
	}
}

type client struct {
	getUserNotificationEndpoint *getUserNotificationEndpoint
	notificationClient          NotificationClient
}

func (c *client) GetUserNotification(ctx context.Context, userId string, notificationId string) (*Notification, error) {
	return c.getUserNotificationEndpoint.Call(ctx, userId, notificationId)
}

func (c *client) Notification() NotificationClient {
	return c.notificationClient
}
