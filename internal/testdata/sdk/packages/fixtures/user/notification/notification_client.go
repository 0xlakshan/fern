// Generated by Fern. Do not edit.

package notification

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/core"
	strings "strings"
)

type NotificationClient interface {
	List(ctx context.Context, userId string) ([]*Notification, error)
}

func NewNotificationClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) NotificationClient {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	baseURL = strings.TrimRight(baseURL, "/")
	return &notificationClient{
		listEndpoint: newListEndpoint(baseURL+"/"+"users/%v/notifications", httpClient, options),
	}
}

type notificationClient struct {
	listEndpoint *listEndpoint
}

func (n *notificationClient) List(ctx context.Context, userId string) ([]*Notification, error) {
	return n.listEndpoint.Call(ctx, userId)
}
