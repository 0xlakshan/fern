// This file was auto-generated by Fern from our API Definition.

package client

import (
	context "context"
	fmt "fmt"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/core"
	organization "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/organization"
	metrics "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/organization/metrics"
	tag "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/organization/metrics/tag"
	http "net/http"
)

type Client struct {
	baseURL    string
	httpClient core.HTTPClient
	header     http.Header

	Tag *tag.Client
}

func NewClient(opts ...core.ClientOption) *Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &Client{
		baseURL:    options.BaseURL,
		httpClient: options.HTTPClient,
		header:     options.ToHeader(),
		Tag:        tag.NewClient(opts...),
	}
}

func (c *Client) CreateMetricsTag(ctx context.Context, request *organization.CreateMetricsTagRequest) (*metrics.Tag, error) {
	baseURL := "https://api.foo.io/v1"
	if c.baseURL != "" {
		baseURL = c.baseURL
	}
	endpointURL := baseURL + "/" + "metrics"

	var response *metrics.Tag
	if err := core.DoRequest(
		ctx,
		c.httpClient,
		endpointURL,
		http.MethodPost,
		request,
		&response,
		false,
		c.header,
		nil,
	); err != nil {
		return nil, err
	}
	return response, nil
}

func (c *Client) GetMetricsTag(ctx context.Context, id string) (*metrics.Tag, error) {
	baseURL := "https://api.foo.io/v1"
	if c.baseURL != "" {
		baseURL = c.baseURL
	}
	endpointURL := fmt.Sprintf(baseURL+"/"+"metrics/%v", id)

	var response *metrics.Tag
	if err := core.DoRequest(
		ctx,
		c.httpClient,
		endpointURL,
		http.MethodGet,
		nil,
		&response,
		false,
		c.header,
		nil,
	); err != nil {
		return nil, err
	}
	return response, nil
}
