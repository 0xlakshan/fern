// Generated by Fern. Do not edit.

package api

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/error/fixtures/core"
)

type Service interface {
	Get(ctx context.Context, id string) (string, error)
	Update(ctx context.Context, id string, request string) (string, error)
}

func NewClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) (Service, error) {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	return &client{
		get:    newGetEndpoint(baseURL, httpClient, options).Call,
		update: newUpdateEndpoint(baseURL, httpClient, options).Call,
	}, nil
}

type client struct {
	get    func(ctx context.Context, id string) (string, error)
	update func(ctx context.Context, id string, request string) (string, error)
}

func (g *client) Get(ctx context.Context, id string) (string, error) {
	return g.get(ctx, id)
}

func (u *client) Update(ctx context.Context, id string, request string) (string, error) {
	return u.update(ctx, id, request)
}
