// This file was auto-generated by Fern from our API Definition.

package client

import (
	core "github.com/fern-api/fern-go/internal/testdata/sdk/headers/fixtures/core"
	uuid "github.com/gofrs/uuid/v5"
	http "net/http"
	time "time"
)

// ClientWithBaseURL sets the client's base URL, overriding the
// default environment, if any.
func ClientWithBaseURL(baseURL string) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.BaseURL = baseURL
	}
}

// ClientWithHTTPClient uses the given HTTPClient to issue all HTTP requests.
func ClientWithHTTPClient(httpClient core.HTTPClient) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.HTTPClient = httpClient
	}
}

// ClientWithHTTPHeader adds the given http.Header to all requests
// issued by the client. The given headers are added to the final set
// after the standard headers (e.g. Content-Type), but before the
// endpoint-specific headers.
func ClientWithHTTPHeader(httpHeader http.Header) core.ClientOption {
	return func(opts *core.ClientOptions) {
		// Clone the headers so they can't be modified after the option call.
		opts.HTTPHeader = httpHeader.Clone()
	}
}

// ClientWithAuthCustom sets the custom auth header on every request.
func ClientWithAuthCustom(custom *[]byte) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.Custom = custom
	}
}

// ClientWithHeaderXApiName sets the xApiName header on every request.
func ClientWithHeaderXApiName(xApiName string) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiName = xApiName
	}
}

// ClientWithHeaderXApiId sets the xApiId header on every request.
func ClientWithHeaderXApiId(xApiId uuid.UUID) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiId = xApiId
	}
}

// ClientWithHeaderXApiDatetime sets the xApiDatetime header on every request.
func ClientWithHeaderXApiDatetime(xApiDatetime time.Time) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiDatetime = xApiDatetime
	}
}

// ClientWithHeaderXApiDate sets the xApiDate header on every request.
func ClientWithHeaderXApiDate(xApiDate time.Time) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiDate = xApiDate
	}
}

// ClientWithHeaderXApiBytes sets the xApiBytes header on every request.
func ClientWithHeaderXApiBytes(xApiBytes []byte) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiBytes = xApiBytes
	}
}

// ClientWithHeaderXApiOptionalName sets the xApiOptionalName header on every request.
func ClientWithHeaderXApiOptionalName(xApiOptionalName *string) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiOptionalName = xApiOptionalName
	}
}

// ClientWithHeaderXApiOptionalId sets the xApiOptionalId header on every request.
func ClientWithHeaderXApiOptionalId(xApiOptionalId *uuid.UUID) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiOptionalId = xApiOptionalId
	}
}

// ClientWithHeaderXApiOptionalDatetime sets the xApiOptionalDatetime header on every request.
func ClientWithHeaderXApiOptionalDatetime(xApiOptionalDatetime *time.Time) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiOptionalDatetime = xApiOptionalDatetime
	}
}

// ClientWithHeaderXApiOptionalDate sets the xApiOptionalDate header on every request.
func ClientWithHeaderXApiOptionalDate(xApiOptionalDate *time.Time) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiOptionalDate = xApiOptionalDate
	}
}

// ClientWithHeaderXApiOptionalBytes sets the xApiOptionalBytes header on every request.
func ClientWithHeaderXApiOptionalBytes(xApiOptionalBytes *[]byte) core.ClientOption {
	return func(opts *core.ClientOptions) {
		opts.XApiOptionalBytes = xApiOptionalBytes
	}
}
