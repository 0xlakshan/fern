// This file was auto-generated by Fern from our API Definition.

package userclient

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/client-cycle/fixtures/core"
	user "github.com/fern-api/fern-go/internal/testdata/sdk/client-cycle/fixtures/user"
	http "net/http"
)

type UserClient interface {
	List(ctx context.Context) ([]*user.User, error)
}

func NewUserClient(opts ...core.ClientOption) UserClient {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &userClient{
		baseURL:    options.BaseURL,
		httpClient: options.HTTPClient,
		header:     options.ToHeader(),
	}
}

type userClient struct {
	baseURL    string
	httpClient core.HTTPClient
	header     http.Header
}

func (u *userClient) List(ctx context.Context) ([]*user.User, error) {
	baseURL := "https://api.foo.io/v1"
	if u.baseURL != "" {
		baseURL = u.baseURL
	}
	endpointURL := baseURL + "/" + "users"

	var response []*user.User
	if err := core.DoRequest(
		ctx,
		u.httpClient,
		endpointURL,
		http.MethodGet,
		nil,
		&response,
		u.header,
		nil,
	); err != nil {
		return response, err
	}
	return response, nil
}
