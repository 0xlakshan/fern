// Generated by Fern. Do not edit.

package api

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/path-and-query-params/fixtures/core"
	strings "strings"
)

type Service interface {
	GetUser(ctx context.Context, userId string, request *GetUserRequest) (string, error)
}

func NewClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) (Service, error) {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	baseURL = strings.TrimRight(baseURL, "/")
	return &client{
		getUserEndpoint: newGetUserEndpoint(baseURL+"/"+"users/%v", httpClient, options),
	}, nil
}

type client struct {
	getUserEndpoint *getUserEndpoint
}

func (g *client) GetUser(ctx context.Context, userId string, request *GetUserRequest) (string, error) {
	return g.getUserEndpoint.Call(ctx, userId, request)
}
