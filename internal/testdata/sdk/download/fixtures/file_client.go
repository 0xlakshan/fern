// This file was auto-generated by Fern from our API Definition.

package api

import (
	bytes "bytes"
	context "context"
	fmt "fmt"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/download/fixtures/core"
	io "io"
	http "net/http"
)

type FileClient interface {
	Download(ctx context.Context, filename string) (io.Writer, error)
}

func NewFileClient(opts ...core.ClientOption) FileClient {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &fileClient{
		baseURL:    options.BaseURL,
		httpClient: options.HTTPClient,
		header:     options.ToHeader(),
	}
}

type fileClient struct {
	baseURL    string
	httpClient core.HTTPClient
	header     http.Header
}

func (f *fileClient) Download(ctx context.Context, filename string) (io.Writer, error) {
	baseURL := ""
	if f.baseURL != "" {
		baseURL = f.baseURL
	}
	endpointURL := fmt.Sprintf(baseURL+"/"+"/file/%v/download", filename)

	response := bytes.NewBuffer(nil)
	if err := core.DoRequest(
		ctx,
		f.httpClient,
		endpointURL,
		http.MethodGet,
		nil,
		response,
		f.header,
		nil,
	); err != nil {
		return nil, err
	}
	return response, nil
}
