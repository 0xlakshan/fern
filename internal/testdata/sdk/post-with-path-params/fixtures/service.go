// Generated by Fern. Do not edit.

package api

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/post-with-path-params/fixtures/core"
	url "net/url"
)

type Service interface {
	SetName(ctx context.Context, userId string, request string) (string, error)
	SetNameV2(ctx context.Context, userId string, request *SetNameRequest) (string, error)
	SetNameV3(ctx context.Context, userId string, request *SetNameRequestV3) (*SetNameRequestV3Body, error)
	SetNameV4(ctx context.Context, userId string, request *SetNameRequestV4) (string, error)
	SetNameV5(ctx context.Context, userId string, request *SetNameRequestV5) (string, error)
}

func NewClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) (Service, error) {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	setNameURL, err := url.JoinPath(baseURL, "/users/%v/set-name")
	if err != nil {
		return nil, err
	}
	setNameV2URL, err := url.JoinPath(baseURL, "/users/%v/set-name-v2")
	if err != nil {
		return nil, err
	}
	setNameV3URL, err := url.JoinPath(baseURL, "/users/%v/set-name-v3")
	if err != nil {
		return nil, err
	}
	setNameV4URL, err := url.JoinPath(baseURL, "/users/%v/set-name-v4")
	if err != nil {
		return nil, err
	}
	setNameV5URL, err := url.JoinPath(baseURL, "/users/%v/set-name-v5")
	if err != nil {
		return nil, err
	}
	return &client{
		setNameEndpoint:   newSetNameEndpoint(setNameURL, httpClient, options),
		setNameV2Endpoint: newSetNameV2Endpoint(setNameV2URL, httpClient, options),
		setNameV3Endpoint: newSetNameV3Endpoint(setNameV3URL, httpClient, options),
		setNameV4Endpoint: newSetNameV4Endpoint(setNameV4URL, httpClient, options),
		setNameV5Endpoint: newSetNameV5Endpoint(setNameV5URL, httpClient, options),
	}, nil
}

type client struct {
	setNameEndpoint   *setNameEndpoint
	setNameV2Endpoint *setNameV2Endpoint
	setNameV3Endpoint *setNameV3Endpoint
	setNameV4Endpoint *setNameV4Endpoint
	setNameV5Endpoint *setNameV5Endpoint
}

func (s *client) SetName(ctx context.Context, userId string, request string) (string, error) {
	return s.setNameEndpoint.Call(ctx, userId, request)
}

func (s *client) SetNameV2(ctx context.Context, userId string, request *SetNameRequest) (string, error) {
	return s.setNameV2Endpoint.Call(ctx, userId, request)
}

func (s *client) SetNameV3(ctx context.Context, userId string, request *SetNameRequestV3) (*SetNameRequestV3Body, error) {
	return s.setNameV3Endpoint.Call(ctx, userId, request)
}

func (s *client) SetNameV4(ctx context.Context, userId string, request *SetNameRequestV4) (string, error) {
	return s.setNameV4Endpoint.Call(ctx, userId, request)
}

func (s *client) SetNameV5(ctx context.Context, userId string, request *SetNameRequestV5) (string, error) {
	return s.setNameV5Endpoint.Call(ctx, userId, request)
}
