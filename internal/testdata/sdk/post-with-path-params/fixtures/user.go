// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

type SetNameRequest struct {
	UserName string `json:"userName"`
}

type SetNameRequestV3 struct {
	XEndpointHeader string                `json:"-"`
	Body            *SetNameRequestV3Body `json:"-"`
}

func (s *SetNameRequestV3) UnmarshalJSON(data []byte) error {
	body := new(SetNameRequestV3Body)
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	s.Body = body
	return nil
}

func (s *SetNameRequestV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(s.Body)
}

type SetNameRequestV3Optional struct {
	XEndpointHeader string                `json:"-"`
	Body            *SetNameRequestV3Body `json:"-"`
}

func (s *SetNameRequestV3Optional) UnmarshalJSON(data []byte) error {
	body := new(SetNameRequestV3Body)
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	s.Body = body
	return nil
}

func (s *SetNameRequestV3Optional) MarshalJSON() ([]byte, error) {
	return json.Marshal(s.Body)
}

type SetNameRequestV4 struct {
	XEndpointHeader string   `json:"-"`
	Body            []string `json:"-"`
}

func (s *SetNameRequestV4) UnmarshalJSON(data []byte) error {
	var body []string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	s.Body = body
	return nil
}

func (s *SetNameRequestV4) MarshalJSON() ([]byte, error) {
	return json.Marshal(s.Body)
}

type SetNameRequestV5 struct {
	XEndpointHeader string `json:"-"`
	Body            string `json:"-"`
}

func (s *SetNameRequestV5) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	if body != "fern" {
		return fmt.Errorf("expected literal %q, but found %q", "fern", body)
	}
	s.Body = body
	return nil
}

func (s *SetNameRequestV5) MarshalJSON() ([]byte, error) {
	return json.Marshal("fern")
}

type SetNameRequestV3Body struct {
	UserName string `json:"userName"`
}
