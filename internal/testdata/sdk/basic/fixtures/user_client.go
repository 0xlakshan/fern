// Generated by Fern. Do not edit.

package api

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/basic/fixtures/core"
	strings "strings"
)

type UserClient interface {
	Get(ctx context.Context) (string, error)
}

func NewUserClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) UserClient {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	baseURL = strings.TrimRight(baseURL, "/")
	return &userClient{
		getEndpoint: newGetEndpoint(baseURL, httpClient, options),
	}
}

type userClient struct {
	getEndpoint *getEndpoint
}

func (u *userClient) Get(ctx context.Context) (string, error) {
	return u.getEndpoint.Call(ctx)
}
