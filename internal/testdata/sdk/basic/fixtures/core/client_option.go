// This file was auto-generated by Fern from our API Definition.

package core

import (
	base64 "encoding/base64"
	http "net/http"
)

type ClientOption func(*ClientOptions)

type ClientOptions struct {
	BaseURL    string
	HTTPClient HTTPClient
	Username   string
	Password   string
}

func NewClientOptions() *ClientOptions {
	return &ClientOptions{
		HTTPClient: http.DefaultClient,
	}
}

func ClientWithBaseURL(baseURL string) ClientOption {
	return func(opts *ClientOptions) {
		opts.BaseURL = baseURL
	}
}

func ClientWithHTTPClient(httpClient HTTPClient) ClientOption {
	return func(opts *ClientOptions) {
		opts.HTTPClient = httpClient
	}
}

func ClientWithAuthBasic(username, password string) ClientOption {
	return func(opts *ClientOptions) {
		opts.Username = username
		opts.Password = password
	}
}

func (c *ClientOptions) ToHeader() http.Header {
	header := make(http.Header)
	if c.Username != "" && c.Password != "" {
		header.Set("Authorization", "Basic "+base64.StdEncoding.EncodeToString([]byte(c.Username+": "+c.Password)))
	}
	return header
}
