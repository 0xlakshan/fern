// Generated by Fern. Do not edit.

package api

import (
	context "context"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/root/fixtures/core"
)

type Service interface {
	GetFoo(ctx context.Context) ([]*Foo, error)
	PostFoo(ctx context.Context, request *Bar) (*Foo, error)
	GetFooFooId(ctx context.Context, fooId Id) (*Foo, error)
	PatchFooFooId(ctx context.Context, fooId Id, request *Foo) (*Foo, error)
	DeleteFooFooId(ctx context.Context, fooId Id) error
	PostFooFooIdRun(ctx context.Context, fooId Id) (*Foo, error)
	PostFooBatchCreate(ctx context.Context, request []*Bar) ([]*Foo, error)
	PostFooBatchDelete(ctx context.Context, request []Id) error
}

func NewClient(baseURL string, httpClient core.HTTPClient, opts ...core.ClientOption) (Service, error) {
	options := new(core.ClientOptions)
	for _, opt := range opts {
		opt(options)
	}
	return &client{
		getFoo:             newGetFooEndpoint(baseURL, httpClient, options).Call,
		postFoo:            newPostFooEndpoint(baseURL, httpClient, options).Call,
		getFooFooId:        newGetFooFooIdEndpoint(baseURL, httpClient, options).Call,
		patchFooFooId:      newPatchFooFooIdEndpoint(baseURL, httpClient, options).Call,
		deleteFooFooId:     newDeleteFooFooIdEndpoint(baseURL, httpClient, options).Call,
		postFooFooIdRun:    newPostFooFooIdRunEndpoint(baseURL, httpClient, options).Call,
		postFooBatchCreate: newPostFooBatchCreateEndpoint(baseURL, httpClient, options).Call,
		postFooBatchDelete: newPostFooBatchDeleteEndpoint(baseURL, httpClient, options).Call,
	}, nil
}

type client struct {
	getFoo             func(ctx context.Context) ([]*Foo, error)
	postFoo            func(ctx context.Context, request *Bar) (*Foo, error)
	getFooFooId        func(ctx context.Context, fooId Id) (*Foo, error)
	patchFooFooId      func(ctx context.Context, fooId Id, request *Foo) (*Foo, error)
	deleteFooFooId     func(ctx context.Context, fooId Id) error
	postFooFooIdRun    func(ctx context.Context, fooId Id) (*Foo, error)
	postFooBatchCreate func(ctx context.Context, request []*Bar) ([]*Foo, error)
	postFooBatchDelete func(ctx context.Context, request []Id) error
}

func (g *client) GetFoo(ctx context.Context) ([]*Foo, error) {
	return g.getFoo(ctx)
}

func (p *client) PostFoo(ctx context.Context, request *Bar) (*Foo, error) {
	return p.postFoo(ctx, request)
}

func (g *client) GetFooFooId(ctx context.Context, fooId Id) (*Foo, error) {
	return g.getFooFooId(ctx, fooId)
}

func (p *client) PatchFooFooId(ctx context.Context, fooId Id, request *Foo) (*Foo, error) {
	return p.patchFooFooId(ctx, fooId, request)
}

func (d *client) DeleteFooFooId(ctx context.Context, fooId Id) error {
	return d.deleteFooFooId(ctx, fooId)
}

func (p *client) PostFooFooIdRun(ctx context.Context, fooId Id) (*Foo, error) {
	return p.postFooFooIdRun(ctx, fooId)
}

func (p *client) PostFooBatchCreate(ctx context.Context, request []*Bar) ([]*Foo, error) {
	return p.postFooBatchCreate(ctx, request)
}

func (p *client) PostFooBatchDelete(ctx context.Context, request []Id) error {
	return p.postFooBatchDelete(ctx, request)
}
