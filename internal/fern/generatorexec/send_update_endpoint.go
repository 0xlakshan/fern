// Generated by Fern. Do not edit.

package generatorexec

import (
	context "context"
	errors "errors"
	fmt "fmt"
	core "github.com/fern-api/fern-go/internal/fern/generatorexec/core"
	io "io"
	http "net/http"
)

type sendUpdateEndpoint struct {
	url        string
	httpClient core.HTTPClient
	header     http.Header
}

func newSendUpdateEndpoint(url string, httpClient core.HTTPClient, clientOptions *core.ClientOptions) *sendUpdateEndpoint {
	return &sendUpdateEndpoint{
		url:        url,
		httpClient: httpClient,
		header:     clientOptions.ToHeader(),
	}
}

func (s *sendUpdateEndpoint) decodeError(statusCode int, body io.Reader) error {
	bytes, err := io.ReadAll(body)
	if err != nil {
		return err
	}
	return errors.New(string(bytes))
}

func (s *sendUpdateEndpoint) Call(ctx context.Context, taskId TaskId, request []*GeneratorUpdate) error {
	endpointURL := fmt.Sprintf(s.url, taskId)
	if err := core.DoRequest(
		ctx,
		s.httpClient,
		endpointURL,
		http.MethodPost,
		request,
		nil,
		s.header,
		s.decodeError,
	); err != nil {
		return err
	}
	return nil
}
