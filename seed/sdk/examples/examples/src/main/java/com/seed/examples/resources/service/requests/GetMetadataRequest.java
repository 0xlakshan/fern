/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.examples.resources.service.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.examples.core.ObjectMappers;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = GetMetadataRequest.Builder.class)
public final class GetMetadataRequest {
    private final String xApiVersion;

    private final Optional<Boolean> shallow;

    private final Optional<String> tag;

    private GetMetadataRequest(String xApiVersion, Optional<Boolean> shallow, Optional<String> tag) {
        this.xApiVersion = xApiVersion;
        this.shallow = shallow;
        this.tag = tag;
    }

    @JsonProperty("X-API-Version")
    public String getXApiVersion() {
        return xApiVersion;
    }

    @JsonProperty("shallow")
    public Optional<Boolean> getShallow() {
        return shallow;
    }

    @JsonProperty("tag")
    public Optional<String> getTag() {
        return tag;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetMetadataRequest && equalTo((GetMetadataRequest) other);
    }

    private boolean equalTo(GetMetadataRequest other) {
        return xApiVersion.equals(other.xApiVersion) && shallow.equals(other.shallow) && tag.equals(other.tag);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.xApiVersion, this.shallow, this.tag);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static XApiVersionStage builder() {
        return new Builder();
    }

    public interface XApiVersionStage {
        _FinalStage xApiVersion(String xApiVersion);

        Builder from(GetMetadataRequest other);
    }

    public interface _FinalStage {
        GetMetadataRequest build();

        _FinalStage shallow(Optional<Boolean> shallow);

        _FinalStage shallow(Boolean shallow);

        _FinalStage tag(Optional<String> tag);

        _FinalStage tag(String tag);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements XApiVersionStage, _FinalStage {
        private String xApiVersion;

        private Optional<String> tag = Optional.empty();

        private Optional<Boolean> shallow = Optional.empty();

        private Builder() {}

        @Override
        public Builder from(GetMetadataRequest other) {
            xApiVersion(other.getXApiVersion());
            shallow(other.getShallow());
            tag(other.getTag());
            return this;
        }

        @Override
        @JsonSetter("X-API-Version")
        public _FinalStage xApiVersion(String xApiVersion) {
            this.xApiVersion = xApiVersion;
            return this;
        }

        @Override
        public _FinalStage tag(String tag) {
            this.tag = Optional.of(tag);
            return this;
        }

        @Override
        @JsonSetter(value = "tag", nulls = Nulls.SKIP)
        public _FinalStage tag(Optional<String> tag) {
            this.tag = tag;
            return this;
        }

        @Override
        public _FinalStage shallow(Boolean shallow) {
            this.shallow = Optional.of(shallow);
            return this;
        }

        @Override
        @JsonSetter(value = "shallow", nulls = Nulls.SKIP)
        public _FinalStage shallow(Optional<Boolean> shallow) {
            this.shallow = shallow;
            return this;
        }

        @Override
        public GetMetadataRequest build() {
            return new GetMetadataRequest(xApiVersion, shallow, tag);
        }
    }
}
