/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api;

import com.seed.api.a.AClient;
import com.seed.api.core.ApiError;
import com.seed.api.core.ClientOptions;
import com.seed.api.core.ObjectMappers;
import com.seed.api.core.RequestOptions;
import com.seed.api.core.Suppliers;
import com.seed.api.folder.FolderClient;
import java.io.IOException;
import java.util.function.Supplier;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class Api {
    protected final ClientOptions clientOptions;

    protected final Supplier<AClient> aClient;

    protected final Supplier<FolderClient> folderClient;

    public Api(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.aClient = Suppliers.memoize(() -> new AClient(clientOptions));
        this.folderClient = Suppliers.memoize(() -> new FolderClient(clientOptions));
    }

    public void foo() {
        foo(null);
    }

    public void foo(RequestOptions requestOptions) {
        HttpUrl httpUrl = HttpUrl.parse(this.clientOptions.environment().getUrl())
                .newBuilder()
                .build();
        Request okhttpRequest = new Request.Builder()
                .url(httpUrl)
                .method("POST", RequestBody.create("", null))
                .headers(Headers.of(clientOptions.headers(requestOptions)))
                .build();
        try {
            Response response =
                    clientOptions.httpClient().newCall(okhttpRequest).execute();
            if (response.isSuccessful()) {
                return;
            }
            throw new ApiError(
                    response.code(),
                    ObjectMappers.JSON_MAPPER.readValue(response.body().string(), Object.class));
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public AClient a() {
        return this.aClient.get();
    }

    public FolderClient folder() {
        return this.folderClient.get();
    }

    public static ApiBuilder builder() {
        return new ApiBuilder();
    }
}
