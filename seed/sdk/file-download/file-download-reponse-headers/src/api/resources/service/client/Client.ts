/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core";
import * as stream from "stream";
import * as errors from "../../../../errors";

export declare namespace Service {
    interface Options {
        environment: core.Supplier<string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Service {
    constructor(protected readonly _options: Service.Options) {}

    public async downloadFile(requestOptions?: Service.RequestOptions): Promise<{
        data: stream.Readable;
        contentLengthInBytes?: number;
        contentType?: string;
    }> {
        const _response = await core.streamingFetcher({
            url: await core.Supplier.get(this._options.environment),
            method: "POST",
            headers: {
                "X-Fern-Language": "JavaScript",
                "X-Fern-SDK-Name": "",
                "X-Fern-SDK-Version": "0.0.1",
            },
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            onError: (error) => {
                throw new errors.SeedFileDownloadError({
                    message: (error as any)?.message,
                });
            },
        });
        const _contentLength = core.getHeader(_response, "Content-Length");
        return {
            data: _response.data,
            contentLengthInBytes: _contentLength != null ? Number(_contentLength) : undefined,
            contentType: core.getHeader(_response, "Content-Type"),
        };
    }
}
