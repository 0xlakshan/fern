// This file was auto-generated by Fern from our API Definition.

package dummy

import (
	context "context"
	seedgo "github.com/fern-api/seed-go"
	core "github.com/fern-api/seed-go/core"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header
}

func NewClient(opts ...core.ClientOption) *Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &Client{
		baseURL: options.BaseURL,
		caller:  core.NewCaller(options.HTTPClient),
		header:  options.ToHeader(),
	}
}

func (c *Client) GenerateStream(ctx context.Context, request *seedgo.GenerateStreamRequestzs) (*core.Stream[seedgo.StreamResponse], error) {
	baseURL := ""
	if c.baseURL != "" {
		baseURL = c.baseURL
	}
	endpointURL := baseURL + "/" + "generate-stream"

	streamer := core.NewStreamer[seedgo.StreamResponse](c.caller)
	return streamer.Stream(
		ctx,
		&core.StreamParams{
			URL:     endpointURL,
			Method:  http.MethodPost,
			Headers: c.header,
			Request: request,
		},
	)
}
