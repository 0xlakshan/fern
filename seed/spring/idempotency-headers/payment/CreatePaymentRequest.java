/**
 * This file was auto-generated by Fern from our API Definition.
 */

package payment;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(
    builder = CreatePaymentRequest.Builder.class
)
public final class CreatePaymentRequest {
  private final int amount;

  private final Currency currency;

  private CreatePaymentRequest(int amount, Currency currency) {
    this.amount = amount;
    this.currency = currency;
  }

  @JsonProperty("amount")
  public int getAmount() {
    return amount;
  }

  @JsonProperty("currency")
  public Currency getCurrency() {
    return currency;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof CreatePaymentRequest && equalTo((CreatePaymentRequest) other);
  }

  private boolean equalTo(CreatePaymentRequest other) {
    return amount == other.amount && currency.equals(other.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.amount, this.currency);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static AmountStage builder() {
    return new Builder();
  }

  public interface AmountStage {
    CurrencyStage amount(int amount);

    Builder from(CreatePaymentRequest other);
  }

  public interface CurrencyStage {
    _FinalStage currency(Currency currency);
  }

  public interface _FinalStage {
    CreatePaymentRequest build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements AmountStage, CurrencyStage, _FinalStage {
    private int amount;

    private Currency currency;

    private Builder() {
    }

    @Override
    public Builder from(CreatePaymentRequest other) {
      amount(other.getAmount());
      currency(other.getCurrency());
      return this;
    }

    @Override
    @JsonSetter("amount")
    public CurrencyStage amount(int amount) {
      this.amount = amount;
      return this;
    }

    @Override
    @JsonSetter("currency")
    public _FinalStage currency(Currency currency) {
      this.currency = currency;
      return this;
    }

    @Override
    public CreatePaymentRequest build() {
      return new CreatePaymentRequest(amount, currency);
    }
  }
}
